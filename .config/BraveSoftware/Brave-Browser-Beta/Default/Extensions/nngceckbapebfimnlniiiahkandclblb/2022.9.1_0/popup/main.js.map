{"version":3,"file":"popup/main.js","mappings":"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,sC,wGAW7C,kBACE,iDAKE,2DAAS,QAAAy/B,wBAAuB,I,gBAGhC,8CAKF,oCACF,iC,0BAVI,6DAEA,qCAIE,oE,2CA6Dd,kBACE,sCACE,8CAIE,2DAAS,QAAAJ,SAAQ,IAIjB,0CACE,4CACE,8CACA,8CACF,mCACA,4CAAM,U,iBAAyB,QACjC,iCACF,+BACF,6BACF,0B,qCAZM,+CAK2C,mCACW,oCAE9C,wC,2CAvShB,mBACE,kBACA,mDAGA,mDAGA,kBACA,mDAYA,kBACA,sCACE,wCACE,0CACE,8CAAkB,U,iBAAmB,QACrC,8CAIE,mEAAa,QAAAr/B,KAAA,OACnB,IALI,QAOF,+BACF,6BACA,wCACE,U,iBACF,QACF,2BACA,mBACA,8CA2BA,mBACA,8CAeA,mBACA,+CA6BA,mBACA,sCACE,uCACE,U,iBACF,QACA,wCACE,uBACA,0CACE,8CAAwB,U,iBAA4B,QACpD,8CAIE,0FAJF,QAOF,+BACF,6BACF,2BACA,mBACA,sCACE,oCACE,6CAGE,iGAGA,U,iBACA,wBACA,iDACF,+BACF,6BACF,2BACA,qCACE,0DAKE,kEAAgB,QAAAo+B,SAAA,GAAgB,GAAhC,CAAiC,2DACjB,QAAAoF,eAAc,IAEhC,6BACA,qBACA,wCACE,0CACE,4CACE,gDAAgC,U,iBAAiC,QACjE,gDAKE,mEAAa,QAAAxjC,KAAA,iBACrB,IANM,QAQF,iCACF,+BACA,0CACE,U,iBACF,QACF,6BACA,qBACA,kDAcA,sBACA,0CACE,4CACE,8CACE,gDACE,2DACA,2DACA,oDAKE,0FALF,QASF,oCACA,uDAgBF,kCACF,gCACA,4CACE,W,kBACF,QACF,8BACA,sBACA,0CACE,4CACE,8CACE,kDAAmB,W,kBAAoB,QACvC,qDAIE,mEAAa,QAAAA,KAAA,QACrB,IACO,QACH,kCACF,gCACA,4CACE,W,kBACF,QACF,8BACA,sBACA,0CACE,4CACE,8CACE,kDAAuB,W,kBAAwB,QAC/C,kDAIE,mEAAa,QAAAA,KAAA,YACrB,IALM,QAOF,kCACF,gCACF,8BACA,sBACA,0CACE,4CACE,8CACE,kDAAyB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AIzzF,GACZ,MACF,KAAK+yF,GAAaQ,QAEhBtpD,QAAQypD,KAAK1zF,GACb,MACF,KAAK+yF,GAAar8F,MAEhBuzC,QAAQ74C,MAAM4O,GAKpB,E,gBCtDK,MAAM2zF,GAAkB,CAC7B,SACA,UACA,YACA,QACA,UACA,UACA,SACA,OACA,WACA,WACA,WACA,UACA,UACA,SACA,WACA,UACA,WACA,WACA,WACA,WACA,UACA,UACA,WACA,SACA,SACA,UACA,YACA,YACA,UACA,WACA,WACA,WACA,UACA,WACA,SACA,OACA,QACA,WACA,UACA,OACA,UACA,UACA,SACA,SACA,WACA,YACA,SACA,WACA,WACA,WACA,UACA,OACA,UACA,YACA,WACA,WACA,UACA,YACA,OACA,SACA,WACA,YACA,YACA,YACA,YACA,SACA,QACA,YACA,WACA,SACA,UACA,SACA,SACA,WACA,QACA,SACA,YACA,YACA,YACA,YACA,YACA,OACA,UACA,SACA,SACA,QACA,YACA,SACA,QACA,UACA,QACA,WACA,UACA,YACA,QACA,YACA,YACA,SACA,WACA,YACA,UACA,QACA,OACA,OACA,OACA,MACA,OACA,YACA,QACA,YACA,QACA,UACA,UACA,YACA,QACA,QACA,YACA,WACA,SACA,QACA,QACA,WACA,WACA,UACA,WACA,SACA,OACA,QACA,QACA,QACA,YACA,QACA,WACA,UACA,WACA,WACA,OACA,WACA,SACA,SACA,WACA,QACA,YACA,QACA,WACA,YACA,YACA,WACA,YACA,YACA,SACA,YACA,YACA,SACA,UACA,UACA,WACA,OACA,QACA,QACA,QACA,UACA,WACA,UACA,WACA,QACA,SACA,WACA,QACA,YACA,UACA,QACA,QACA,SACA,WACA,SACA,YACA,SACA,UACA,WACA,YACA,UACA,YACA,UACA,SACA,UACA,UACA,UACA,SACA,SACA,WACA,OACA,YACA,UACA,QACA,SACA,SACA,SACA,UACA,UACA,YACA,YACA,UACA,SACA,UACA,YACA,YACA,WACA,QACA,YACA,QACA,QACA,WACA,YACA,WACA,WACA,UACA,WACA,UACA,YACA,UACA,YACA,WACA,WACA,WACA,SACA,UACA,YACA,WACA,SACA,WACA,WACA,YACA,WACA,YACA,WACA,YACA,YACA,YACA,YACA,SACA,UACA,QACA,QACA,UACA,SACA,UACA,SACA,WACA,WACA,UACA,SACA,WACA,QACA,SACA,UACA,YACA,SACA,UACA,YACA,YACA,WACA,WACA,YACA,UACA,WACA,QACA,YACA,YACA,UACA,QACA,YACA,YACA,YACA,YACA,WACA,WACA,UACA,UACA,QACA,QACA,WACA,QACA,OACA,WACA,YACA,YACA,WACA,OACA,QACA,WACA,WACA,QACA,QACA,YACA,UACA,WACA,QACA,SACA,UACA,SACA,UACA,UACA,UACA,SACA,UACA,OACA,QACA,QACA,SACA,UACA,UACA,QACA,SACA,UACA,SACA,YACA,WACA,QACA,MACA,SACA,YACA,SACA,YACA,UACA,QACA,QACA,OACA,QACA,QACA,SACA,YACA,SACA,WACA,SACA,UACA,WACA,UACA,UACA,YACA,YACA,YACA,SACA,WACA,QACA,OACA,WACA,OACA,SACA,YACA,UACA,SACA,SACA,UACA,YACA,WACA,YACA,YACA,SACA,QACA,SACA,WACA,YACA,YACA,WACA,UACA,YACA,WACA,UACA,UACA,WACA,QACA,WACA,YACA,SACA,YACA,SACA,SACA,WACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,SACA,SACA,WACA,SACA,UACA,WACA,QACA,WACA,UACA,OACA,QACA,QACA,SACA,QACA,QACA,SACA,UACA,SACA,QACA,OACA,OACA,SACA,WACA,SACA,SACA,WACA,YACA,YACA,WACA,SACA,SACA,YACA,WACA,WACA,UACA,YACA,WACA,WACA,YACA,UACA,UACA,WACA,YACA,WACA,WACA,YACA,WACA,WACA,YACA,WACA,WACA,YACA,WACA,YACA,SACA,WACA,WACA,YACA,WACA,QACA,WACA,YACA,SACA,QACA,UACA,QACA,UACA,SACA,WACA,QACA,SACA,UACA,SACA,SACA,YACA,UACA,QACA,UACA,WACA,QACA,SACA,WACA,SACA,UACA,YACA,UACA,QACA,WACA,SACA,SACA,SACA,WACA,QACA,WACA,WACA,SACA,SACA,UACA,WACA,WACA,SACA,YACA,UACA,SACA,WACA,SACA,UACA,SACA,UACA,QACA,WACA,UACA,WACA,SACA,UACA,SACA,OACA,YACA,UACA,YACA,SACA,WACA,YACA,UACA,WACA,YACA,WACA,OACA,YACA,SACA,QACA,QACA,QACA,SACA,SACA,QACA,OACA,QACA,OACA,YACA,WACA,YACA,UACA,UACA,SACA,SACA,UACA,UACA,UACA,QACA,OACA,QACA,UACA,YACA,YACA,QACA,YACA,YACA,QACA,WACA,YACA,SACA,UACA,SACA,QACA,QACA,UACA,QACA,QACA,WACA,QACA,QACA,UACA,UACA,WACA,SACA,OACA,WACA,QACA,WACA,UACA,WACA,OACA,OACA,WACA,WACA,UACA,OACA,SACA,UACA,QACA,SACA,YACA,QACA,QACA,UACA,SACA,QACA,QACA,WACA,UACA,WACA,WACA,OACA,SACA,UACA,SACA,SACA,UACA,UACA,YACA,OACA,SACA,SACA,QACA,OACA,MACA,UACA,OACA,UACA,SACA,UACA,WACA,QACA,WACA,WACA,WACA,QACA,UACA,SACA,SACA,QACA,OACA,YACA,YACA,OACA,YACA,SACA,QACA,SACA,UACA,WACA,UACA,QACA,QACA,QACA,SACA,UACA,WACA,YACA,OACA,YACA,WACA,SACA,QACA,OACA,SACA,WACA,SACA,SACA,WACA,SACA,WACA,YACA,YACA,SACA,SACA,QACA,SACA,UACA,OACA,SACA,SACA,WACA,YACA,UACA,WACA,SACA,SACA,WACA,UACA,UACA,QACA,QACA,QACA,QACA,UACA,UACA,SACA,YACA,OACA,QACA,QACA,UACA,UACA,YACA,UACA,UACA,YACA,YACA,UACA,UACA,YACA,YACA,YACA,UACA,WACA,SACA,SACA,YACA,SACA,SACA,WACA,QACA,QACA,UACA,WACA,YACA,SACA,WACA,WACA,SACA,WACA,QACA,QACA,WACA,QACA,YACA,SACA,WACA,SACA,YACA,SACA,SACA,SACA,WACA,WACA,YACA,YACA,WACA,WACA,UACA,QACA,SACA,UACA,SACA,SACA,UACA,UACA,QACA,OACA,QACA,YACA,SACA,OACA,UACA,YACA,YACA,WACA,WACA,UACA,UACA,UACA,WACA,WACA,WACA,QACA,QACA,SACA,SACA,SACA,UACA,YACA,WACA,QACA,OACA,SACA,OACA,SACA,UACA,OACA,WACA,OACA,SACA,UACA,SACA,YACA,QACA,UACA,QACA,SACA,QACA,SACA,SACA,QACA,QACA,WACA,UACA,OACA,UACA,OACA,WACA,WACA,UACA,YACA,WACA,UACA,YACA,OACA,UACA,UACA,UACA,YACA,QACA,SACA,WACA,SACA,WACA,UACA,WACA,SACA,QACA,SACA,SACA,UACA,SACA,QACA,OACA,SACA,WACA,WACA,SACA,UACA,SACA,SACA,SACA,QACA,YACA,SACA,UACA,SACA,UACA,UACA,WACA,OACA,YACA,UACA,UACA,SACA,YACA,UACA,UACA,UACA,YACA,UACA,YACA,UACA,UACA,QACA,UACA,SACA,YACA,SACA,UACA,WACA,WACA,YACA,YACA,YACA,WACA,SACA,YACA,QACA,SACA,UACA,UACA,WACA,UACA,YACA,WACA,YACA,QACA,YACA,YACA,UACA,UACA,UACA,SACA,YACA,QACA,SACA,WACA,SACA,UACA,YACA,YACA,QACA,UACA,UACA,UACA,OACA,OACA,SACA,SACA,SACA,WACA,WACA,WACA,WACA,UACA,WACA,WACA,WACA,WACA,YACA,UACA,YACA,UACA,WACA,SACA,UACA,WACA,WACA,UACA,YACA,WACA,UACA,SACA,SACA,SACA,UACA,YACA,SACA,QACA,UACA,YACA,SACA,SACA,YACA,QACA,UACA,YACA,UACA,WACA,WACA,UACA,SACA,SACA,QACA,SACA,YACA,WACA,WACA,SACA,SACA,SACA,WACA,WACA,YACA,YACA,YACA,UACA,WACA,WACA,QACA,WACA,QACA,QACA,UACA,YACA,UACA,YACA,WACA,SACA,SACA,UACA,QACA,QACA,YACA,WACA,UACA,QACA,UACA,YACA,YACA,WACA,UACA,WACA,UACA,UACA,QACA,UACA,UACA,WACA,QACA,UACA,SACA,WACA,WACA,WACA,UACA,WACA,SACA,WACA,UACA,QACA,QACA,SACA,SACA,OACA,YACA,UACA,QACA,YACA,SACA,QACA,QACA,UACA,QACA,WACA,SACA,UACA,QACA,QACA,YACA,YACA,YACA,WACA,YACA,YACA,QACA,QACA,QACA,OACA,WACA,SACA,WACA,WACA,QACA,WACA,WACA,SACA,YACA,UACA,QACA,UACA,WACA,SACA,OACA,SACA,UACA,WACA,SACA,SACA,QACA,OACA,SACA,QACA,QACA,QACA,QACA,QACA,WACA,QACA,SACA,WACA,SACA,WACA,WACA,YACA,SACA,UACA,UACA,WACA,UACA,SACA,SACA,OACA,QACA,QACA,OACA,QACA,WACA,SACA,SACA,QACA,YACA,QACA,WACA,UACA,UACA,WACA,UACA,WACA,UACA,QACA,QACA,QACA,UACA,SACA,WACA,OACA,OACA,QACA,QACA,QACA,UACA,QACA,SACA,YACA,WACA,QACA,SACA,UACA,SACA,UACA,WACA,QACA,SACA,WACA,OACA,SACA,QACA,UACA,QACA,QACA,UACA,WACA,UACA,UACA,WACA,QACA,SACA,UACA,WACA,YACA,QACA,WACA,SACA,SACA,YACA,SACA,UACA,QACA,YACA,UACA,UACA,WACA,YACA,YACA,OACA,WACA,SACA,UACA,SACA,QACA,UACA,MACA,WACA,SACA,UACA,SACA,YACA,YACA,YACA,WACA,YACA,WACA,WACA,OACA,OACA,OACA,OACA,WACA,WACA,UACA,WACA,SACA,YACA,YACA,UACA,SACA,YACA,WACA,WACA,WACA,SACA,WACA,OACA,OACA,OACA,UACA,QACA,QACA,SACA,QACA,WACA,UACA,UACA,WACA,UACA,YACA,YACA,SACA,YACA,UACA,YACA,YACA,YACA,YACA,YACA,YACA,UACA,UACA,SACA,UACA,SACA,YACA,WACA,WACA,YACA,UACA,YACA,WACA,WACA,YACA,WACA,YACA,UACA,UACA,UACA,WACA,UACA,YACA,UACA,QACA,YACA,UACA,WACA,WACA,SACA,WACA,YACA,YACA,UACA,YACA,YACA,UACA,OACA,UACA,WACA,YACA,YACA,WACA,YACA,YACA,WACA,YACA,UACA,WACA,UACA,WACA,WACA,WACA,YACA,YACA,YACA,YACA,WACA,WACA,UACA,YACA,UACA,WACA,YACA,YACA,YACA,UACA,UACA,YACA,YACA,YACA,WACA,YACA,YACA,YACA,UACA,WACA,YACA,UACA,YACA,WACA,UACA,YACA,YACA,WACA,UACA,UACA,UACA,UACA,WACA,UACA,YACA,UACA,UACA,YACA,OACA,SACA,SACA,UACA,SACA,UACA,SACA,OACA,QACA,OACA,WACA,YACA,UACA,SACA,SACA,SACA,YACA,YACA,WACA,WACA,YACA,QACA,WACA,UACA,WACA,YACA,SACA,UACA,WACA,UACA,YACA,YACA,UACA,SACA,SACA,WACA,YACA,SACA,SACA,YACA,OACA,UACA,SACA,QACA,QACA,QACA,YACA,YACA,WACA,YACA,UACA,SACA,UACA,WACA,QACA,UACA,WACA,UACA,SACA,WACA,OACA,WACA,YACA,WACA,WACA,SACA,WACA,UACA,WACA,YACA,YACA,SACA,QACA,YACA,QACA,UACA,UACA,QACA,QACA,QACA,UACA,WACA,WACA,WACA,WACA,SACA,SACA,UACA,YACA,QACA,UACA,UACA,YACA,SACA,WACA,YACA,SACA,WACA,WACA,WACA,WACA,WACA,SACA,QACA,QACA,SACA,QACA,QACA,WACA,UACA,WACA,YACA,UACA,WACA,UACA,WACA,OACA,UACA,QACA,QACA,QACA,UACA,SACA,WACA,UACA,UACA,UACA,WACA,UACA,YACA,SACA,WACA,UACA,QACA,QACA,QACA,QACA,OACA,QACA,SACA,UACA,UACA,QACA,QACA,UACA,UACA,YACA,UACA,YACA,UACA,QACA,YACA,SACA,UACA,WACA,WACA,YACA,UACA,WACA,YACA,UACA,UACA,WACA,QACA,OACA,SACA,UACA,UACA,YACA,OACA,UACA,UACA,WACA,SACA,SACA,WACA,WACA,YACA,WACA,UACA,YACA,WACA,UACA,YACA,UACA,QACA,SACA,UACA,UACA,UACA,SACA,OACA,SACA,SACA,SACA,SACA,YACA,UACA,QACA,QACA,QACA,UACA,SACA,UACA,SACA,SACA,YACA,QACA,QACA,QACA,OACA,SACA,UACA,YACA,UACA,YACA,WACA,YACA,UACA,MACA,QACA,SACA,UACA,UACA,WACA,SACA,YACA,YACA,MACA,MACA,WACA,SACA,QACA,WACA,SACA,QACA,QACA,WACA,QACA,UACA,YACA,SACA,WACA,QACA,SACA,SACA,WACA,YACA,QACA,WACA,WACA,YACA,UACA,WACA,WACA,UACA,OACA,OACA,YACA,OACA,YACA,OACA,WACA,SACA,WACA,WACA,UACA,OACA,SACA,WACA,UACA,WACA,WACA,UACA,UACA,UACA,UACA,WACA,SACA,YACA,WACA,SACA,UACA,YACA,QACA,OACA,YACA,SACA,WACA,QACA,UACA,WACA,SACA,QACA,SACA,SACA,QACA,QACA,YACA,QACA,WACA,SACA,WACA,YACA,WACA,UACA,SACA,YACA,YACA,UACA,YACA,UACA,YACA,WACA,OACA,WACA,UACA,SACA,YACA,YACA,YACA,QACA,WACA,SACA,WACA,YACA,SACA,SACA,OACA,OACA,SACA,SACA,WACA,SACA,WACA,SACA,UACA,SACA,YACA,YACA,YACA,WACA,UACA,YACA,WACA,WACA,WACA,UACA,SACA,WACA,SACA,WACA,UACA,YACA,WACA,YACA,YACA,QACA,WACA,UACA,UACA,SACA,SACA,OACA,WACA,YACA,WACA,SACA,YACA,QACA,WACA,QACA,WACA,YACA,SACA,WACA,WACA,WACA,YACA,YACA,YACA,WACA,YACA,WACA,UACA,QACA,SACA,WACA,SACA,YACA,YACA,WACA,SACA,YACA,WACA,SACA,WACA,YACA,YACA,WACA,SACA,QACA,SACA,QACA,UACA,SACA,UACA,UACA,OACA,YACA,YACA,WACA,YACA,SACA,UACA,YACA,WACA,SACA,SACA,SACA,WACA,YACA,YACA,UACA,UACA,QACA,WACA,SACA,SACA,WACA,QACA,UACA,YACA,UACA,YACA,YACA,WACA,WACA,YACA,YACA,UACA,WACA,WACA,UACA,UACA,UACA,UACA,YACA,WACA,WACA,SACA,YACA,YACA,WACA,YACA,YACA,SACA,WACA,YACA,WACA,UACA,QACA,UACA,WACA,UACA,UACA,YACA,WACA,SACA,UACA,YACA,UACA,WACA,WACA,YACA,WACA,YACA,YACA,WACA,WACA,WACA,YACA,YACA,UACA,OACA,WACA,SACA,YACA,QACA,OACA,SACA,UACA,YACA,WACA,YACA,WACA,WACA,YACA,YACA,MACA,WACA,YACA,WACA,OACA,SACA,OACA,WACA,QACA,SACA,SACA,UACA,SACA,QACA,UACA,SACA,YACA,QACA,QACA,SACA,SACA,UACA,UACA,UACA,SACA,SACA,UACA,WACA,YACA,YACA,WACA,YACA,WACA,YACA,WACA,WACA,WACA,SACA,WACA,WACA,UACA,YACA,WACA,UACA,UACA,YACA,WACA,WACA,WACA,YACA,WACA,UACA,UACA,YACA,YACA,WACA,OACA,YACA,UACA,OACA,UACA,YACA,YACA,WACA,WACA,YACA,SACA,UACA,WACA,UACA,WACA,SACA,YACA,YACA,WACA,WACA,YACA,YACA,YACA,WACA,UACA,YACA,WACA,UACA,WACA,UACA,YACA,UACA,WACA,WACA,UACA,WACA,UACA,WACA,UACA,WACA,WACA,WACA,WACA,QACA,QACA,QACA,YACA,UACA,WACA,WACA,WACA,WACA,SACA,WACA,YACA,YACA,WACA,WACA,WACA,YACA,QACA,SACA,SACA,OACA,WACA,WACA,QACA,QACA,QACA,QACA,OACA,SACA,YACA,SACA,QACA,UACA,SACA,WACA,WACA,WACA,WACA,UACA,WACA,UACA,QACA,QACA,SACA,WACA,YACA,WACA,UACA,UACA,WACA,WACA,WACA,WACA,UACA,QACA,OACA,YACA,SACA,SACA,OACA,SACA,WACA,SACA,OACA,OACA,QACA,OACA,OACA,WACA,YACA,YACA,WACA,YACA,WACA,UACA,UACA,YACA,WACA,YACA,QACA,UACA,UACA,OACA,UACA,WACA,YACA,YACA,WACA,YACA,YACA,YACA,SACA,SACA,WACA,SACA,SACA,QACA,OACA,UACA,QACA,QACA,QACA,UACA,WACA,YACA,WACA,WACA,SACA,WACA,SACA,SACA,WACA,UACA,UACA,UACA,QACA,QACA,QACA,YACA,UACA,WACA,UACA,UACA,UACA,QACA,QACA,WACA,SACA,OACA,MACA,SACA,YACA,UACA,WACA,UACA,WACA,WACA,QACA,OACA,OACA,SACA,SACA,MACA,OACA,SACA,WACA,OACA,UACA,WACA,WACA,MACA,OACA,SACA,YACA,YACA,UACA,UACA,WACA,SACA,SACA,OACA,OACA,UACA,OACA,QACA,QACA,QACA,UACA,UACA,WACA,UACA,YACA,UACA,WACA,UACA,WACA,WACA,OACA,QACA,UACA,UACA,UACA,SACA,UACA,QACA,UACA,UACA,WACA,WACA,WACA,UACA,UACA,UACA,YACA,YACA,UACA,YACA,SACA,SACA,UACA,QACA,UACA,SACA,WACA,SACA,YACA,YACA,SACA,WACA,UACA,QACA,SACA,SACA,OACA,OACA,QACA,QACA,QACA,YACA,OACA,SACA,UACA,YACA,UACA,WACA,YACA,UACA,YACA,YACA,OACA,WACA,SACA,OACA,UACA,SACA,WACA,YACA,WACA,MACA,YACA,UACA,YACA,SACA,YACA,SACA,SACA,WACA,WACA,YACA,UACA,YACA,SACA,QACA,YACA,UACA,SACA,QACA,YACA,UACA,SACA,YACA,WACA,WACA,WACA,UACA,YACA,YACA,WACA,SACA,MACA,WACA,WACA,YACA,QACA,UACA,SACA,MACA,UACA,WACA,MACA,YACA,QACA,YACA,WACA,YACA,QACA,UACA,QACA,QACA,UACA,SACA,UACA,YACA,YACA,QACA,WACA,UACA,SACA,SACA,WACA,SACA,YACA,QACA,UACA,YACA,WACA,OACA,QACA,WACA,UACA,WACA,UACA,UACA,WACA,WACA,YACA,WACA,YACA,WACA,WACA,WACA,WACA,UACA,UACA,YACA,QACA,MACA,SACA,YACA,SACA,YACA,YACA,WACA,UACA,YACA,SACA,SACA,YACA,YACA,WACA,UACA,UACA,WACA,WACA,YACA,QACA,SACA,UACA,UACA,YACA,YACA,UACA,YACA,WACA,YACA,YACA,WACA,YACA,WACA,SACA,WACA,WACA,UACA,WACA,SACA,UACA,WACA,WACA,YACA,UACA,SACA,UACA,YACA,YACA,YACA,UACA,WACA,YACA,WACA,YACA,YACA,WACA,WACA,SACA,SACA,SACA,UACA,UACA,SACA,SACA,YACA,WACA,YACA,WACA,SACA,UACA,SACA,SACA,YACA,SACA,SACA,WACA,UACA,WACA,UACA,YACA,WACA,WACA,WACA,UACA,WACA,QACA,OACA,SACA,OACA,WACA,YACA,YACA,WACA,WACA,YACA,WACA,WACA,UACA,QACA,SACA,WACA,UACA,UACA,YACA,SACA,YACA,YACA,WACA,SACA,SACA,UACA,YACA,SACA,SACA,UACA,QACA,QACA,WACA,YACA,YACA,WACA,WACA,WACA,SACA,YACA,YACA,WACA,UACA,QACA,UACA,YACA,YACA,SACA,WACA,WACA,YACA,YACA,WACA,UACA,UACA,WACA,UACA,QACA,YACA,SACA,YACA,WACA,UACA,QACA,WACA,YACA,YACA,UACA,UACA,OACA,YACA,YACA,YACA,WACA,WACA,QACA,WACA,UACA,OACA,QACA,YACA,SACA,QACA,UACA,UACA,WACA,YACA,YACA,YACA,SACA,WACA,YACA,WACA,UACA,UACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,SACA,YACA,YACA,YACA,YACA,QACA,OACA,YACA,SACA,UACA,SACA,QACA,WACA,OACA,SACA,YACA,WACA,WACA,SACA,UACA,YACA,YACA,YACA,YACA,YACA,QACA,SACA,WACA,YACA,SACA,SACA,WACA,UACA,YACA,WACA,UACA,UACA,UACA,YACA,WACA,WACA,YACA,SACA,WACA,UACA,YACA,YACA,WACA,YACA,SACA,YACA,WACA,WACA,UACA,YACA,YACA,SACA,YACA,UACA,YACA,YACA,QACA,SACA,WACA,WACA,YACA,WACA,WACA,WACA,YACA,UACA,SACA,WACA,SACA,YACA,UACA,UACA,SACA,YACA,UACA,UACA,OACA,SACA,UACA,SACA,OACA,QACA,UACA,OACA,WACA,SACA,SACA,WACA,UACA,UACA,YACA,QACA,UACA,OACA,UACA,YACA,YACA,UACA,UACA,WACA,SACA,UACA,WACA,SACA,YACA,YACA,UACA,WACA,WACA,MACA,QACA,UACA,SACA,SACA,OACA,OACA,SACA,SACA,WACA,WACA,WACA,WACA,WACA,QACA,QACA,UACA,SACA,UACA,WACA,YACA,WACA,SACA,SACA,QACA,SACA,SACA,WACA,UACA,YACA,QACA,QACA,QACA,QACA,UACA,SACA,WACA,WACA,YACA,UACA,UACA,QACA,WACA,QACA,UACA,SACA,WACA,SACA,SACA,SACA,UACA,OACA,SACA,QACA,WACA,SACA,WACA,WACA,UACA,UACA,YACA,QACA,WACA,QACA,UACA,WACA,WACA,YACA,SACA,UACA,UACA,WACA,MACA,OACA,UACA,UACA,WACA,WACA,YACA,YACA,QACA,UACA,QACA,QACA,YACA,UACA,WACA,WACA,OACA,UACA,YACA,YACA,YACA,WACA,WACA,SACA,QACA,UACA,WACA,SACA,WACA,UACA,YACA,YACA,WACA,UACA,WACA,WACA,WACA,YACA,YACA,WACA,OACA,UACA,SACA,QACA,QACA,SACA,SACA,QACA,QACA,OACA,QACA,QACA,QACA,WACA,OACA,SACA,UACA,QACA,WACA,UACA,UACA,QACA,SACA,UACA,WACA,OACA,MACA,MACA,OACA,QACA,OACA,WACA,SACA,WACA,SACA,WACA,SACA,OACA,OACA,OACA,UACA,WACA,WACA,YACA,SACA,WACA,WACA,WACA,UACA,WACA,UACA,WACA,UACA,WACA,YACA,WACA,UACA,WACA,WACA,WACA,SACA,SACA,UACA,WACA,WACA,MACA,QACA,WACA,WACA,UACA,YACA,WACA,YACA,WACA,QACA,QACA,UACA,UACA,YACA,SACA,UACA,QACA,WACA,WACA,WACA,UACA,UACA,UACA,WACA,WACA,UACA,WACA,SACA,YACA,WACA,YACA,WACA,UACA,WACA,YACA,WACA,UACA,SACA,WACA,SACA,YACA,WACA,QACA,UACA,UACA,WACA,SACA,SACA,QACA,SACA,WACA,YACA,YACA,WACA,QACA,SACA,UACA,QACA,UACA,YACA,SACA,OACA,QACA,YACA,UACA,WACA,WACA,YACA,SACA,QACA,QACA,SACA,WACA,YACA,WACA,QACA,YACA,SACA,MACA,QACA,MACA,YACA,UACA,QACA,OACA,YACA,WACA,UACA,SACA,SACA,UACA,YACA,SACA,YACA,WACA,OACA,SACA,QACA,SACA,SACA,WACA,UACA,MACA,SACA,UACA,SACA,SACA,UACA,SACA,UACA,SACA,UACA,SACA,MACA,WACA,YACA,SACA,UACA,WACA,QACA,OACA,OACA,SACA,OACA,QACA,OACA,SACA,MACA,SACA,UACA,WACA,WACA,QACA,UACA,YACA,SACA,QACA,YACA,WACA,YACA,UACA,YACA,WACA,WACA,SACA,YACA,YACA,YACA,WACA,YACA,UACA,YACA,UACA,UACA,UACA,QACA,QACA,YACA,SACA,UACA,YACA,QACA,OACA,WACA,YACA,WACA,SACA,WACA,SACA,SACA,SACA,QACA,UACA,SACA,WACA,QACA,QACA,SACA,QACA,UACA,UACA,UACA,QACA,YACA,SACA,YACA,UACA,SACA,WACA,YACA,QACA,UACA,QACA,WACA,UACA,WACA,UACA,SACA,UACA,UACA,UACA,UACA,SACA,UACA,SACA,UACA,WACA,WACA,SACA,YACA,YACA,UACA,WACA,QACA,QACA,QACA,UACA,WACA,UACA,OACA,SACA,YACA,UACA,SACA,OACA,OACA,WACA,OACA,UACA,QACA,WACA,WACA,YACA,OACA,UACA,QACA,UACA,OACA,OACA,OACA,QACA,WACA,YACA,QACA,SACA,OACA,SACA,OACA,SACA,WACA,OACA,UACA,SACA,SACA,SACA,OACA,OACA,OACA,WACA,YACA,WACA,YACA,SACA,SACA,WACA,UACA,YACA,WACA,WACA,UACA,WACA,QACA,WACA,WACA,UACA,UACA,UACA,WACA,UACA,SACA,UACA,QACA,WACA,QACA,QACA,UACA,YACA,QACA,QACA,YACA,UACA,UACA,YACA,WACA,SACA,YACA,SACA,YACA,YACA,UACA,QACA,OACA,UACA,WACA,WACA,YACA,SACA,QACA,UACA,WACA,OACA,YACA,OACA,QACA,YACA,WACA,WACA,QACA,UACA,YACA,QACA,YACA,QACA,SACA,WACA,OACA,UACA,OACA,WACA,SACA,QACA,QACA,SACA,WACA,SACA,QACA,SACA,UACA,QACA,QACA,SACA,UACA,QACA,OACA,SACA,WACA,WACA,UACA,UACA,YACA,UACA,WACA,SACA,QACA,YACA,WACA,WACA,QACA,UACA,YACA,QACA,OACA,WACA,QACA,OACA,UACA,UACA,YACA,UACA,QACA,SACA,WACA,OACA,OACA,QACA,QACA,UACA,OACA,SACA,MACA,UACA,WACA,YACA,WACA,UACA,WACA,SACA,SACA,UACA,UACA,MACA,UACA,QACA,OACA,UACA,OACA,SACA,SACA,YACA,SACA,UACA,SACA,UACA,YACA,UACA,WACA,WACA,YACA,WACA,WACA,YACA,YACA,WACA,SACA,UACA,WACA,UACA,WACA,YACA,YACA,YACA,UACA,UACA,WACA,WACA,UACA,WACA,YACA,WACA,UACA,UACA,YACA,YACA,YACA,WACA,WACA,YACA,YACA,WACA,WACA,UACA,WACA,SACA,YACA,SACA,QACA,YACA,YACA,UACA,WACA,UACA,YACA,QACA,SACA,WACA,WACA,YACA,WACA,WACA,WACA,YACA,UACA,WACA,YACA,SACA,WACA,WACA,WACA,YACA,WACA,QACA,UACA,WACA,YACA,YACA,YACA,UACA,UACA,UACA,QACA,UACA,OACA,SACA,QACA,UACA,YACA,QACA,SACA,YACA,WACA,UACA,WACA,YACA,OACA,UACA,SACA,QACA,QACA,SACA,WACA,SACA,WACA,SACA,OACA,WACA,WACA,YACA,YACA,YACA,SACA,SACA,YACA,WACA,UACA,WACA,WACA,WACA,YACA,YACA,WACA,WACA,YACA,UACA,WACA,YACA,YACA,UACA,WACA,OACA,OACA,QACA,UACA,YACA,UACA,QACA,UACA,YACA,QACA,SACA,SACA,SACA,UACA,UACA,WACA,WACA,UACA,YACA,QACA,WACA,QACA,SACA,SACA,YACA,QACA,WACA,SACA,UACA,UACA,UACA,UACA,QACA,YACA,WACA,WACA,UACA,WACA,SACA,SACA,WACA,OACA,MACA,OACA,OACA,OACA,QACA,SACA,WACA,SACA,QACA,YACA,WACA,UACA,SACA,YACA,WACA,YACA,WACA,WACA,SACA,SACA,YACA,YACA,SACA,WACA,SACA,OACA,SACA,UACA,WACA,WACA,SACA,SACA,SACA,UACA,SACA,YACA,UACA,QACA,OACA,UACA,OACA,SACA,YACA,MACA,SACA,UACA,WACA,YACA,WACA,YACA,YACA,YACA,SACA,WACA,WACA,WACA,YACA,YACA,YACA,YACA,YACA,YACA,MACA,UACA,QACA,OACA,OACA,MACA,WACA,WACA,WACA,UACA,YACA,YACA,WACA,WACA,WACA,SACA,QACA,OACA,QACA,WACA,SACA,SACA,YACA,WACA,WACA,QACA,YACA,WACA,UACA,WACA,UACA,YACA,WACA,UACA,YACA,WACA,WACA,WACA,YACA,WACA,YACA,YACA,WACA,WACA,WACA,SACA,SACA,YACA,UACA,WACA,YACA,YACA,WACA,SACA,UACA,YACA,YACA,WACA,UACA,YACA,YACA,QACA,WACA,YACA,WACA,SACA,WACA,YACA,YACA,WACA,UACA,YACA,UACA,WACA,YACA,WACA,UACA,YACA,YACA,YACA,UACA,YACA,SACA,WACA,SACA,SACA,MACA,OACA,SACA,OACA,QACA,MACA,OACA,YACA,WACA,YACA,YACA,WACA,WACA,UACA,WACA,WACA,YACA,YACA,UACA,QACA,UACA,YACA,UACA,OACA,YACA,SACA,QACA,MACA,MACA,SACA,SACA,YACA,UACA,WACA,YACA,SACA,YACA,WACA,MACA,UACA,UACA,SACA,UACA,UACA,WACA,QACA,OACA,QACA,UACA,UACA,OACA,UACA,YACA,OACA,OACA,YACA,UACA,QACA,SACA,SACA,MACA,QACA,SACA,QACA,SACA,WACA,OACA,UACA,UACA,MACA,SACA,YACA,SACA,UACA,OACA,UACA,WACA,WACA,YACA,QACA,OACA,MACA,SACA,WACA,YACA,SACA,UACA,WACA,YACA,WACA,QACA,YACA,WACA,YACA,OACA,SACA,WACA,UACA,QACA,YACA,QACA,UACA,UACA,OACA,SACA,QACA,OACA,WACA,WACA,OACA,SACA,UACA,SACA,UACA,WACA,SACA,QACA,OACA,UACA,YACA,UACA,SACA,WACA,WACA,QACA,WACA,UACA,SACA,QACA,QACA,SACA,WACA,OACA,MACA,OACA,SACA,OACA,WACA,WACA,SACA,OACA,OACA,WACA,WACA,YACA,WACA,OACA,SACA,SACA,WACA,SACA,WACA,UACA,UACA,UACA,OACA,UACA,UACA,YACA,WACA,SACA,UACA,UACA,OACA,SACA,QACA,OACA,UACA,WACA,OACA,QACA,WACA,QACA,QACA,QACA,SACA,UACA,QACA,OACA,UACA,UACA,WACA,YACA,WACA,SACA,SACA,QACA,UACA,WACA,SACA,UACA,SACA,OACA,OACA,QACA,SACA,WACA,WACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YACA,YACA,WACA,YACA,WACA,YACA,QACA,UACA,SACA,QACA,SACA,UACA,SACA,OACA,QACA,OACA,OACA,QACA,OACA,QACA,OACA,SACA,WACA,UACA,SACA,WACA,SACA,UACA,UACA,SACA,WACA,SACA,WACA,SACA,WACA,OACA,WACA,OACA,SACA,QACA,SACA,SACA,WACA,UACA,UACA,YACA,OACA,UACA,SACA,YACA,UACA,QACA,OACA,SACA,OACA,OACA,UACA,SACA,UACA,YACA,WACA,SACA,UACA,QACA,WACA,SACA,WACA,YACA,YACA,SACA,UACA,YACA,UACA,UACA,WACA,MACA,OACA,SACA,UACA,UACA,WACA,SACA,WACA,WACA,SACA,QACA,QACA,OACA,OACA,UACA,YACA,QACA,QACA,UACA,WACA,OACA,QACA,WACA,WACA,SACA,SACA,WACA,UACA,OACA,OACA,MACA,UACA,UACA,SACA,OACA,OACA,WACA,YACA,SACA,SACA,SACA,UACA,QACA,SACA,QACA,YACA,UACA,SACA,SACA,YACA,YACA,QACA,UACA,YACA,WACA,YACA,YACA,SACA,WACA,UACA,SACA,YACA,WACA,YACA,UACA,UACA,SACA,QACA,WACA,WACA,YACA,YACA,OACA,QACA,OACA,YACA,OACA,SACA,WACA,SACA,YACA,UACA,YACA,WACA,QACA,YACA,SACA,QACA,YACA,WACA,WACA,SACA,WACA,WACA,QACA,OACA,UACA,YACA,WACA,UACA,SACA,UACA,WACA,QACA,YACA,WACA,YACA,YACA,YACA,UACA,YACA,WACA,WACA,SACA,WACA,UACA,YACA,WACA,WACA,QACA,YACA,SACA,YACA,OACA,OACA,SACA,UACA,YACA,UACA,WACA,UACA,WACA,UACA,YACA,WACA,SACA,SACA,QACA,QACA,YACA,UACA,UACA,UACA,YACA,WACA,YACA,SACA,UACA,UACA,YACA,QACA,UACA,SACA,UACA,QACA,WACA,SACA,SACA,SACA,OACA,MACA,WACA,YACA,UACA,UACA,WACA,QACA,QACA,YACA,YACA,SACA,WACA,SACA,SACA,UACA,WACA,SACA,YACA,SACA,UACA,SACA,QACA,YACA,SACA,YACA,YACA,UACA,SACA,YACA,SACA,UACA,WACA,SACA,UACA,UACA,UACA,YACA,WACA,UACA,WACA,YACA,WACA,WACA,YACA,OACA,SACA,YACA,YACA,SACA,SACA,SACA,SACA,WACA,WACA,WACA,QACA,WACA,WACA,UACA,QACA,SACA,YACA,SACA,UACA,SACA,WACA,WACA,UACA,QACA,SACA,SACA,WACA,SACA,UACA,YACA,SACA,UACA,YACA,WACA,QACA,WACA,OACA,YACA,WACA,WACA,UACA,MACA,YACA,SACA,WACA,WACA,YACA,YACA,YACA,WACA,UACA,UACA,WACA,WACA,WACA,YACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,YACA,UACA,WACA,UACA,YACA,QACA,SACA,WACA,SACA,YACA,WACA,UACA,WACA,YACA,YACA,YACA,WACA,MACA,SACA,WACA,UACA,YACA,WACA,WACA,WACA,QACA,YACA,WACA,YACA,YACA,UACA,WACA,SACA,QACA,OACA,WACA,YACA,SACA,WACA,YACA,SACA,YACA,QACA,QACA,YACA,WACA,UACA,WACA,UACA,WACA,QACA,YACA,YACA,QACA,QACA,UACA,OACA,QACA,SACA,QACA,SACA,OACA,OACA,MACA,MACA,WACA,QACA,OACA,SACA,UACA,WACA,WACA,YACA,YACA,SACA,WACA,QACA,YACA,UACA,QACA,QACA,WACA,UACA,YACA,SACA,QACA,YACA,QACA,YACA,WACA,SACA,UACA,YACA,WACA,QACA,QACA,SACA,YACA,QACA,UACA,UACA,SACA,YACA,QACA,UACA,SACA,WACA,OACA,YACA,YACA,SACA,OACA,SACA,SACA,SACA,UACA,YACA,UACA,OACA,QACA,MACA,OACA,OACA,SACA,QACA,YACA,OACA,SACA,SACA,UACA,QACA,SACA,UACA,YACA,WACA,SACA,WACA,UACA,SACA,WACA,WACA,WACA,YACA,OACA,SACA,UACA,SACA,WACA,SACA,WACA,SACA,YACA,SACA,SACA,WACA,WACA,YACA,WACA,YACA,YACA,UACA,UACA,OACA,SACA,OACA,UACA,QACA,OACA,MACA,YACA,SACA,WACA,WACA,SACA,UACA,QACA,OACA,SACA,WACA,WACA,QACA,QACA,SACA,SACA,WACA,YACA,QACA,WACA,QACA,UACA,SACA,UACA,SACA,UACA,SACA,UACA,SACA,WACA,UACA,WACA,YACA,UACA,WACA,WACA,UACA,UACA,UACA,UACA,UACA,SACA,WACA,WACA,YACA,QACA,SACA,QACA,MACA,MACA,QACA,MACA,YACA,WACA,WACA,SACA,WACA,UACA,WACA,YACA,SACA,YACA,OACA,UACA,YACA,YACA,WACA,YACA,WACA,YACA,YACA,WACA,WACA,YACA,WACA,SACA,YACA,SACA,UACA,YACA,YACA,WACA,WACA,SACA,QACA,SACA,UACA,SACA,UACA,UACA,OACA,MACA,OACA,WACA,OACA,MACA,QACA,WACA,QACA,OACA,UACA,WACA,OACA,WACA,UACA,WACA,UACA,QACA,SACA,WACA,OACA,WACA,QACA,UACA,YACA,UACA,OACA,SACA,OACA,OACA,OACA,OACA,UACA,OACA,OACA,WACA,UACA,YACA,YACA,YACA,WACA,QACA,UACA,WACA,SACA,WACA,WACA,YACA,YACA,MACA,YACA,UACA,QACA,QACA,OACA,QACA,QACA,SACA,UACA,SACA,WACA,WACA,WACA,WACA,UACA,WACA,UACA,WACA,WACA,QACA,WACA,SACA,WACA,WACA,UACA,WACA,SACA,UACA,SACA,UACA,UACA,WACA,WACA,UACA,YACA,YACA,UACA,UACA,SACA,UACA,UACA,WACA,WACA,WACA,UACA,WACA,WACA,WACA,YACA,WACA,YACA,YACA,WACA,WACA,UACA,WACA,SACA,OACA,QACA,OACA,UACA,UACA,WACA,UACA,WACA,WACA,YACA,YACA,WACA,YACA,WACA,WACA,WACA,WACA,YACA,YACA,YACA,YACA,YACA,UACA,YACA,YACA,YACA,UACA,WACA,WACA,WACA,WACA,YACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YACA,WACA,YACA,WACA,UACA,UACA,WACA,WACA,WACA,YACA,YACA,WACA,UACA,YACA,WACA,YACA,YACA,WACA,YACA,YACA,WACA,WACA,WACA,UACA,YACA,WACA,YACA,YACA,YACA,WACA,YACA,YACA,WACA,WACA,YACA,YACA,YACA,WACA,YACA,WACA,UACA,WACA,WACA,WACA,UACA,YACA,WACA,YACA,MACA,SACA,UACA,YACA,UACA,YACA,SACA,WACA,SACA,QACA,QACA,YACA,UACA,WACA,WACA,WACA,SACA,SACA,UACA,SACA,WACA,UACA,QACA,QACA,SACA,UACA,SACA,YACA,OACA,WACA,YACA,SACA,WACA,WACA,UACA,WACA,SACA,UACA,WACA,QACA,WACA,OACA,YACA,QACA,UACA,WACA,YACA,UACA,YACA,SACA,QACA,YACA,YACA,SACA,QACA,UACA,UACA,WACA,YACA,SACA,UACA,YACA,WACA,YACA,YACA,YACA,WACA,YACA,YACA,YACA,WACA,WACA,YACA,SACA,UACA,YACA,SACA,SACA,QACA,UACA,UACA,SACA,WACA,SACA,SACA,UACA,UACA,UACA,SACA,UACA,YACA,SACA,UACA,YACA,QACA,WACA,WACA,UACA,WACA,YACA,WACA,UACA,UACA,UACA,YACA,WACA,WACA,WACA,QACA,SACA,SACA,UACA,SACA,WACA,UACA,QACA,YACA,SACA,WACA,YACA,OACA,WACA,UACA,QACA,YACA,UACA,SACA,YACA,YACA,SACA,WACA,QACA,YACA,WACA,SACA,SACA,UACA,UACA,WACA,SACA,QACA,QACA,SACA,UACA,WACA,UACA,SACA,SACA,QACA,SACA,WACA,WACA,YACA,WACA,WACA,YACA,WACA,UACA,SACA,OACA,SACA,WACA,UACA,SACA,UACA,UACA,YACA,WACA,UACA,YACA,QACA,SACA,UACA,WACA,YACA,MACA,WACA,UACA,QACA,YACA,YACA,YACA,YACA,UACA,YACA,SACA,WACA,UACA,YACA,QACA,OACA,WACA,YACA,YACA,YACA,YACA,YACA,YACA,QACA,OACA,YACA,YACA,SACA,YACA,QACA,SACA,WACA,QACA,YACA,SACA,YACA,YACA,QACA,UACA,UACA,SACA,UACA,YACA,SACA,UACA,YACA,QACA,YACA,QACA,SACA,WACA,UACA,UACA,WACA,QACA,UACA,QACA,SACA,UACA,UACA,SACA,WACA,UACA,WACA,WACA,UACA,WACA,YACA,YACA,WACA,WACA,SACA,UACA,YACA,YACA,UACA,WACA,YACA,WACA,UACA,UACA,WACA,UACA,YACA,WACA,QACA,WACA,QACA,SACA,YACA,SACA,WACA,YACA,UACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,UACA,WACA,SACA,OACA,YACA,UACA,QACA,MACA,OACA,OACA,OACA,UACA,UACA,WACA,YACA,SACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,QACA,SACA,WACA,QACA,OACA,YACA,UACA,YACA,UACA,SACA,OACA,OACA,UACA,OACA,SACA,SACA,QACA,WACA,WACA,UACA,WACA,YACA,OACA,SACA,WACA,WACA,SACA,YACA,WACA,UACA,SACA,WACA,QACA,OACA,SACA,WACA,WACA,SACA,UACA,SACA,UACA,WACA,SACA,SACA,UACA,YACA,UACA,UACA,QACA,SACA,WACA,QACA,UACA,OACA,WACA,YACA,UACA,QACA,SACA,MACA,WACA,SACA,WACA,UACA,WACA,YACA,SACA,UACA,WACA,YACA,UACA,WACA,WACA,UACA,YACA,UACA,SACA,WACA,YACA,UACA,UACA,SACA,YACA,YACA,UACA,YACA,WACA,YACA,YACA,SACA,UACA,WACA,WACA,UACA,WACA,YACA,WACA,UACA,SACA,UACA,SACA,YACA,YACA,YACA,SACA,UACA,YACA,UACA,QACA,UACA,YACA,UACA,YACA,YACA,WACA,UACA,SACA,UACA,UACA,YACA,UACA,UACA,WACA,SACA,YACA,WACA,QACA,SACA,YACA,UACA,UACA,SACA,QACA,WACA,QACA,QACA,QACA,SACA,SACA,WACA,UACA,UACA,YACA,QACA,YACA,WACA,WACA,YACA,QACA,UACA,YACA,UACA,YACA,UACA,WACA,YACA,WACA,WACA,UACA,UACA,UACA,UACA,YACA,YACA,YACA,UACA,WACA,YACA,UACA,YACA,UACA,WACA,YACA,WACA,YACA,YACA,YACA,WACA,YACA,WACA,WACA,QACA,QACA,YACA,SACA,WACA,YACA,SACA,YACA,WACA,WACA,YACA,WACA,UACA,QACA,UACA,YACA,WACA,SACA,YACA,YACA,WACA,WACA,QACA,WACA,SACA,SACA,WACA,WACA,YACA,WACA,UACA,UACA,YACA,YACA,UACA,UACA,WACA,YACA,QACA,SACA,QACA,YACA,QACA,UACA,MACA,UACA,SACA,YACA,SACA,SACA,MACA,OACA,YACA,OACA,UACA,QACA,YACA,OACA,SACA,SACA,QACA,WACA,YACA,YACA,UACA,WACA,OACA,QACA,SACA,QACA,WACA,YACA,WACA,SACA,WACA,YACA,QACA,UACA,WACA,SACA,SACA,UACA,SACA,SACA,WACA,YACA,OACA,QACA,YACA,WACA,UACA,WACA,WACA,YACA,SACA,YACA,UACA,WACA,UACA,SACA,QACA,UACA,OACA,SACA,WACA,UACA,YACA,SACA,QACA,WACA,QACA,WACA,QACA,UACA,YACA,YACA,UACA,UACA,QACA,UACA,UACA,SACA,YACA,YACA,WACA,UACA,SACA,QACA,UACA,UACA,YACA,YACA,YACA,QACA,QACA,QACA,UACA,YACA,QACA,OACA,SACA,YACA,WACA,YACA,QACA,QACA,OACA,SACA,SACA,OACA,SACA,QACA,SACA,WACA,YACA,WACA,YACA,WACA,QACA,SACA,SACA,OACA,OACA,SACA,SACA,UACA,SACA,UACA,UACA,WACA,UACA,SACA,OACA,SACA,QACA,SACA,WACA,OACA,SACA,QACA,YACA,SACA,SACA,SACA,UACA,SACA,UACA,UACA,UACA,QACA,OACA,SACA,SACA,OACA,UACA,SACA,QACA,SACA,SACA,UACA,YACA,WACA,QACA,YACA,WACA,WACA,UACA,WACA,OACA,YACA,WACA,UACA,YACA,YACA,YACA,WACA,SACA,WACA,WACA,WACA,UACA,YACA,SACA,QACA,UACA,SACA,SACA,UACA,SACA,UACA,UACA,WACA,WACA,SACA,SACA,YACA,SACA,SACA,SACA,SACA,YACA,YACA,UACA,SACA,WACA,UACA,WACA,YACA,UACA,YACA,YACA,SACA,YACA,UACA,YACA,YACA,YACA,SACA,SACA,UACA,SACA,WACA,WACA,SACA,YACA,YACA,UACA,WACA,WACA,YACA,WACA,UACA,UACA,UACA,YACA,YACA,UACA,YACA,SACA,YACA,UACA,WACA,WACA,WACA,YACA,YACA,SACA,SACA,UACA,SACA,WACA,WACA,WACA,WACA,YACA,UACA,UACA,WACA,UACA,UACA,YACA,SACA,YACA,YACA,UACA,SACA,WACA,YACA,SACA,SACA,UACA,UACA,SACA,SACA,SACA,WACA,YACA,WACA,UACA,YACA,UACA,UACA,WACA,YACA,QACA,SACA,SACA,YACA,YACA,UACA,YACA,UACA,YACA,SACA,WACA,UACA,YACA,YACA,UACA,WACA,WACA,QACA,QACA,UACA,UACA,YACA,WACA,WACA,WACA,UACA,QACA,UACA,YACA,UACA,SACA,SACA,SACA,WACA,SACA,YACA,OACA,SACA,SACA,UACA,UACA,WACA,SACA,WACA,WACA,YACA,YACA,QACA,UACA,YACA,SACA,UACA,SACA,YACA,UACA,UACA,UACA,WACA,SACA,WACA,YACA,YACA,WACA,YACA,YACA,UACA,UACA,WACA,WACA,YACA,WACA,SACA,SACA,SACA,WACA,UACA,SACA,UACA,YACA,YACA,UACA,SACA,SACA,WACA,YACA,SACA,WACA,WACA,SACA,WACA,UACA,SACA,UACA,QACA,WACA,SACA,YACA,SACA,YACA,YACA,UACA,UACA,WACA,YACA,YACA,YACA,OACA,UACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,UACA,UACA,YACA,UACA,QACA,SACA,WACA,UACA,SACA,WACA,WACA,WACA,WACA,SACA,SACA,QACA,UACA,UACA,YACA,YACA,YACA,WACA,WACA,UACA,WACA,YACA,YACA,YACA,SACA,WACA,WACA,WACA,WACA,SACA,WACA,UACA,WACA,SACA,SACA,WACA,YACA,YACA,SACA,WACA,YACA,SACA,YACA,YACA,UACA,UACA,UACA,UACA,WACA,SACA,SACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YACA,YACA,QACA,SACA,UACA,SACA,UACA,UACA,WACA,QACA,SACA,UACA,UACA,UACA,SACA,UACA,YACA,WACA,WACA,UACA,YACA,YACA,SACA,YACA,SACA,WACA,UACA,YACA,UACA,UACA,WACA,YACA,SACA,SACA,WACA,YACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UACA,QACA,SACA,UACA,OACA,SACA,SACA,WACA,UACA,UACA,WACA,SACA,OACA,SACA,UACA,OACA,UACA,QACA,QACA,UACA,SACA,OACA,OACA,QACA,UACA,OACA,UACA,WACA,WACA,UACA,SACA,WACA,UACA,OACA,SACA,OACA,UACA,UACA,QACA,QACA,YACA,WACA,YACA,YACA,UACA,WACA,SACA,UACA,QACA,UACA,OACA,QACA,WACA,SACA,WACA,SACA,SACA,WACA,YACA,UACA,WACA,YACA,WACA,QACA,QACA,QACA,OACA,OACA,SACA,SACA,OACA,SACA,UACA,UACA,WACA,WACA,WACA,YACA,UACA,YACA,UACA,UACA,QACA,SACA,QACA,SACA,SACA,UACA,SACA,UACA,OACA,SACA,SACA,MACA,SACA,OACA,SACA,WACA,UACA,QACA,YACA,UACA,SACA,UACA,QACA,OACA,SACA,UACA,QACA,OACA,OACA,OACA,MACA,UACA,WACA,YACA,SACA,YACA,SACA,YACA,UACA,WACA,QACA,UACA,SACA,YACA,YACA,SACA,WACA,UACA,OACA,OACA,UACA,QACA,OACA,QACA,OACA,QACA,SACA,WACA,SACA,SACA,QACA,SACA,QACA,OACA,WACA,SACA,UACA,YACA,YACA,OACA,SACA,WACA,WACA,WACA,YACA,SACA,UACA,WACA,UACA,YACA,UACA,SACA,WACA,UACA,UACA,YACA,UACA,YACA,YACA,WACA,QACA,WACA,YACA,OACA,QACA,UACA,YACA,QACA,UACA,YACA,UACA,OACA,YACA,QACA,UACA,WACA,QACA,YACA,YACA,UACA,WACA,WACA,YACA,QACA,QACA,SACA,UACA,QACA,UACA,SACA,QACA,YACA,MACA,UACA,SACA,UACA,WACA,QACA,UACA,WACA,UACA,WACA,OACA,UACA,UACA,WACA,QACA,YACA,SACA,WACA,YACA,SACA,QACA,UACA,YACA,WACA,QACA,YACA,SACA,WACA,YACA,SACA,WACA,YACA,WACA,UACA,UACA,YACA,QACA,QACA,WACA,QACA,QACA,UACA,QACA,SACA,YACA,YACA,SACA,YACA,SACA,UACA,QACA,WACA,SACA,YACA,UACA,WACA,WACA,SACA,WACA,WACA,WACA,YACA,YACA,QACA,UACA,UACA,SACA,WACA,SACA,WACA,YACA,SACA,SACA,UACA,YACA,WACA,WACA,UACA,UACA,WACA,QACA,QACA,WACA,YACA,SACA,UACA,WACA,YACA,YACA,SACA,UACA,SACA,YACA,SACA,UACA,WACA,WACA,QACA,SACA,WACA,WACA,WACA,SACA,WACA,UACA,UACA,UACA,SACA,WACA,YACA,YACA,WACA,OACA,UACA,WACA,WACA,YACA,YACA,UACA,WACA,YACA,SACA,UACA,OACA,SACA,WACA,YACA,YACA,YACA,YACA,WACA,QACA,YACA,SACA,SACA,SACA,WACA,YACA,SACA,SACA,YACA,UACA,WACA,QACA,UACA,UACA,SACA,WACA,UACA,UACA,SACA,WACA,QACA,YACA,YACA,UACA,UACA,WACA,SACA,QACA,SACA,UACA,YACA,UACA,SACA,QACA,QACA,WACA,UACA,YACA,UACA,QACA,QACA,UACA,UACA,QACA,UACA,WACA,QACA,SACA,QACA,UACA,QACA,YACA,UACA,UACA,UACA,YACA,QACA,SACA,OACA,QACA,QACA,QACA,QACA,UACA,SACA,WACA,SACA,SACA,UACA,WACA,YACA,SACA,UACA,SACA,UACA,QACA,UACA,YACA,UACA,QACA,OACA,QACA,YACA,QACA,QACA,WACA,UACA,WACA,WACA,QACA,WACA,YACA,WACA,UACA,UACA,YACA,YACA,UACA,YACA,SACA,YACA,SACA,QACA,QACA,UACA,WACA,WACA,SACA,WACA,UACA,UACA,QACA,UACA,YACA,YACA,WACA,QACA,SACA,WACA,WACA,YACA,WACA,SACA,SACA,SACA,SACA,SACA,UACA,WACA,YACA,SACA,QACA,SACA,WACA,UACA,UACA,YACA,OACA,QACA,OACA,MACA,UACA,WACA,UACA,SACA,SACA,SACA,OACA,UACA,WACA,WACA,SACA,SACA,UACA,OACA,YACA,QACA,OACA,OACA,SACA,YACA,SACA,YACA,SACA,WACA,SACA,UACA,YACA,SACA,UACA,SACA,WACA,WACA,UACA,SACA,UACA,MACA,QACA,SACA,SACA,SACA,UACA,WACA,YACA,UACA,UACA,QACA,UACA,WACA,YACA,UACA,UACA,OACA,SACA,SACA,WACA,SACA,UACA,YACA,WACA,WACA,UACA,SACA,SACA,SACA,OACA,QACA,QACA,QACA,SACA,UACA,UACA,WACA,UACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,SACA,YACA,UACA,WACA,WACA,QACA,UACA,WACA,WACA,UACA,QACA,YACA,UACA,OACA,UACA,UACA,WACA,YACA,SACA,QACA,OACA,UACA,QACA,WACA,YACA,UACA,WACA,QACA,UACA,OACA,OACA,QACA,QACA,QACA,SACA,QACA,YACA,SACA,SACA,UACA,QACA,SACA,YACA,UACA,WACA,YACA,WACA,WACA,QACA,WACA,YACA,SACA,OACA,OACA,SACA,WACA,SACA,SACA,UACA,WACA,SACA,OACA,YACA,UACA,SACA,OACA,OACA,QACA,QACA,MACA,QACA,UACA,YACA,UACA,WACA,UACA,QACA,WACA,QACA,YACA,QACA,QACA,QACA,UACA,QACA,OACA,SACA,YACA,YACA,UACA,QACA,UACA,SACA,UACA,SACA,SACA,WACA,YACA,SACA,WACA,QACA,UACA,UACA,OACA,QACA,QACA,SACA,QACA,QACA,SACA,WACA,QACA,QACA,UACA,WACA,SACA,UACA,SACA,QACA,UACA,UACA,QACA,QACA,WACA,YACA,YACA,UACA,YACA,WACA,WACA,YACA,YACA,YACA,WACA,UACA,WACA,WACA,YACA,WACA,QACA,OACA,QACA,UACA,SACA,WACA,QACA,YACA,YACA,WACA,YACA,UACA,WACA,UACA,WACA,SACA,YACA,YACA,WACA,YACA,SACA,QACA,YACA,UACA,WACA,YACA,UACA,WACA,QACA,OACA,SACA,YACA,SACA,SACA,QACA,SACA,QACA,QACA,UACA,SACA,UACA,UACA,WACA,UACA,WACA,QACA,SACA,WACA,YACA,UACA,YACA,WACA,YACA,UACA,WACA,SACA,WACA,WACA,SACA,WACA,WACA,WACA,UACA,WACA,UACA,UACA,WACA,SACA,SACA,YACA,SACA,SACA,UACA,QACA,WACA,SACA,QACA,QACA,QACA,WACA,SACA,SACA,WACA,YACA,UACA,UACA,WACA,SACA,UACA,SACA,QACA,SACA,SACA,SACA,QACA,QACA,QACA,SACA,YACA,YACA,SACA,SACA,SACA,SACA,SACA,OACA,OACA,OACA,UACA,WACA,WACA,QACA,SACA,WACA,SACA,WACA,WACA,YACA,SACA,WACA,YACA,YACA,WACA,UACA,YACA,QACA,WACA,WACA,SACA,SACA,SACA,YACA,UACA,YACA,YACA,SACA,QACA,UACA,QACA,QACA,UACA,WACA,WACA,YACA,UACA,WACA,YACA,YACA,YACA,WACA,WACA,UACA,UACA,QACA,QACA,QACA,SACA,WACA,YACA,SACA,UACA,WACA,WACA,YACA,UACA,QACA,WACA,UACA,YACA,UACA,WACA,SACA,WACA,UACA,WACA,UACA,YACA,UACA,UACA,WACA,QACA,QACA,SACA,YACA,SACA,UACA,SACA,UACA,YACA,UACA,QACA,YACA,WACA,WACA,YACA,QACA,QACA,QACA,YACA,WACA,YACA,YACA,UACA,OACA,SACA,UACA,OACA,SACA,UACA,YACA,YACA,WACA,YACA,UACA,OACA,QACA,UACA,UACA,YACA,SACA,WACA,YACA,QACA,YACA,YACA,UACA,WACA,UACA,WACA,WACA,WACA,SACA,WACA,SACA,UACA,YACA,OACA,SACA,QACA,QACA,QACA,QACA,QACA,YACA,YACA,YACA,UACA,QACA,QACA,SACA,QACA,QACA,YACA,YACA,WACA,UACA,UACA,WACA,YACA,WACA,UACA,YACA,YACA,QACA,QACA,QACA,WACA,UACA,WACA,YACA,WACA,WACA,YACA,YACA,WACA,WACA,YACA,WACA,UACA,QACA,QACA,SACA,SACA,SACA,WACA,YACA,QACA,SACA,UACA,SACA,WACA,SACA,SACA,SACA,SACA,WACA,SACA,WACA,SACA,SACA,WACA,YACA,WACA,YACA,SACA,YACA,UACA,WACA,QACA,SACA,QACA,UACA,UACA,UACA,WACA,SACA,QACA,UACA,UACA,SACA,QACA,UACA,WACA,SACA,UACA,YACA,QACA,QACA,UACA,UACA,WACA,QACA,SACA,WACA,SACA,UACA,YACA,UACA,WACA,SACA,QACA,YACA,YACA,YACA,UACA,WACA,WACA,WACA,YACA,UACA,WACA,SACA,WACA,UACA,YACA,WACA,YACA,YACA,WACA,SACA,UACA,WACA,YACA,YACA,YACA,UACA,YACA,YACA,UACA,UACA,WACA,YACA,YACA,UACA,WACA,SACA,WACA,WACA,UACA,SACA,SACA,YACA,UACA,YACA,OACA,UACA,SACA,SACA,OACA,WACA,YACA,UACA,SACA,YACA,WACA,QACA,UACA,QACA,WACA,WACA,WACA,SACA,UACA,UACA,UACA,SACA,OACA,SACA,WACA,YACA,SACA,YACA,YACA,YACA,WACA,WACA,WACA,WACA,YACA,YACA,SACA,WACA,SACA,UACA,YACA,UACA,YACA,SACA,WACA,UACA,YACA,YACA,SACA,UACA,WACA,UACA,UACA,UACA,UACA,WACA,UACA,YACA,YACA,WACA,SACA,WACA,UACA,YACA,WACA,QACA,UACA,UACA,WACA,YACA,YACA,OACA,YACA,UACA,YACA,OACA,WACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,SACA,UACA,UACA,YACA,YACA,UACA,WACA,WACA,WACA,UACA,WACA,QACA,QACA,SACA,SACA,UACA,UACA,QACA,SACA,QACA,QACA,QACA,WACA,WACA,YACA,WACA,UACA,UACA,WACA,UACA,WACA,WACA,YACA,YACA,QACA,SACA,UACA,UACA,QACA,WACA,SACA,SACA,YACA,UACA,YACA,UACA,SACA,WACA,QACA,OACA,UACA,WACA,UACA,UACA,WACA,UACA,YACA,MACA,UACA,OACA,SACA,SACA,WACA,OACA,QACA,SACA,WACA,QACA,SACA,OACA,SACA,UACA,UACA,UACA,WACA,UACA,WACA,WACA,UACA,UACA,OACA,YACA,SACA,SACA,UACA,QACA,SACA,SACA,WACA,OACA,SACA,QACA,YACA,UACA,QACA,WACA,SACA,WACA,SACA,QACA,SACA,QACA,OACA,OACA,UACA,YACA,OACA,QACA,QACA,WACA,WACA,UACA,UACA,YACA,QACA,SACA,WACA,UACA,UACA,YACA,WACA,WACA,QACA,UACA,QACA,QACA,SACA,UACA,WACA,WACA,YACA,YACA,UACA,WACA,SACA,QACA,QACA,QACA,WACA,SACA,SACA,WACA,YACA,SACA,SACA,SACA,WACA,SACA,YACA,SACA,WACA,YACA,YACA,UACA,WACA,OACA,QACA,WACA,WACA,OACA,YACA,UACA,QACA,QACA,QACA,SACA,WACA,UACA,OACA,QACA,UACA,UACA,YACA,YACA,WACA,UACA,OACA,SACA,OACA,OACA,QACA,SACA,UACA,YACA,UACA,SACA,WACA,SACA,SACA,WACA,SACA,WACA,OACA,UACA,OACA,SACA,SACA,SACA,UACA,YACA,SACA,SACA,SACA,QACA,UACA,QACA,WACA,UACA,QACA,UACA,YACA,UACA,UACA,WACA,YACA,QACA,UACA,SACA,WACA,WACA,YACA,YACA,YACA,YACA,YACA,WACA,UACA,YACA,UACA,UACA,WACA,QACA,QACA,SACA,WACA,WACA,OACA,YACA,WACA,YACA,UACA,QACA,SACA,OACA,UACA,UACA,YACA,SACA,SACA,QACA,WACA,SACA,QACA,WACA,YACA,WACA,UACA,YACA,UACA,UACA,WACA,WACA,WACA,UACA,YACA,SACA,WACA,WACA,UACA,QACA,SACA,YACA,WACA,UACA,YACA,UACA,WACA,WACA,UACA,OACA,SACA,WACA,UACA,UACA,UACA,WACA,WACA,SACA,WACA,UACA,UACA,YACA,SACA,WACA,QACA,SACA,QACA,QACA,UACA,QACA,SACA,YACA,UACA,WACA,WACA,YACA,QACA,MACA,QACA,WACA,UACA,UACA,UACA,MACA,UACA,QACA,SACA,WACA,QACA,SACA,UACA,WACA,WACA,YACA,OACA,SACA,UACA,SACA,SACA,OACA,QACA,OACA,MACA,QACA,QACA,QACA,WACA,SACA,YACA,SACA,QACA,QACA,UACA,YACA,OACA,WACA,QACA,QACA,QACA,YACA,UACA,UACA,WACA,SACA,SACA,UACA,SACA,QACA,OACA,QACA,WACA,YACA,QACA,YACA,WACA,SACA,YACA,SACA,YACA,YACA,WACA,UACA,YACA,YACA,YACA,YACA,YACA,UACA,UACA,UACA,YACA,WACA,SACA,SACA,WACA,WACA,YACA,YACA,UACA,WACA,YACA,UACA,YACA,WACA,WACA,YACA,WACA,WACA,WACA,UACA,WACA,WACA,YACA,UACA,YACA,YACA,UACA,UACA,SACA,YACA,YACA,UACA,QACA,SACA,UACA,SACA,YACA,WACA,WACA,YACA,WACA,WACA,WACA,SACA,YACA,YACA,WACA,UACA,UACA,UACA,UACA,YACA,UACA,YACA,WACA,QACA,YACA,UACA,YACA,SACA,YACA,YACA,WACA,WACA,YACA,YACA,WACA,WACA,YACA,WACA,YACA,YACA,UACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,WACA,YACA,YACA,YACA,YACA,WACA,WACA,YACA,YACA,YACA,YACA,YACA,YACA,WACA,UACA,SACA,YACA,UACA,YACA,WACA,UACA,WACA,UACA,SACA,WACA,SACA,YACA,UACA,WACA,YACA,WACA,YACA,WACA,UACA,YACA,SACA,YACA,YACA,YACA,SACA,WACA,UACA,YACA,UACA,WACA,WACA,YACA,YACA,UACA,WACA,YACA,SACA,YACA,WACA,WACA,YACA,WACA,WACA,WACA,WACA,SACA,UACA,WACA,YACA,YACA,WACA,YACA,UACA,WACA,YACA,UACA,YACA,WACA,YACA,WACA,UACA,YACA,SACA,SACA,UACA,WACA,UACA,UACA,YACA,YACA,QACA,YACA,YACA,YACA,YACA,YACA,QACA,WACA,YACA,SACA,WACA,OACA,YACA,WACA,WACA,UACA,SACA,YACA,YACA,UACA,UACA,UACA,WACA,WACA,YACA,UACA,SACA,YACA,YACA,YACA,YACA,UACA,WACA,WACA,QACA,YACA,WACA,WACA,WACA,YACA,YACA,UACA,WACA,WACA,YACA,UACA,SACA,YACA,WACA,WACA,WACA,WACA,YACA,YACA,YACA,YACA,UACA,WACA,UACA,YACA,UACA,WACA,YACA,UACA,YACA,WACA,UACA,YACA,YACA,WACA,YACA,SACA,WACA,SACA,YACA,WACA,UACA,WACA,WACA,YACA,WACA,YACA,YACA,YACA,YACA,WACA,SACA,YACA,WACA,UACA,WACA,UACA,YACA,YACA,SACA,SACA,YACA,YACA,YACA,WACA,SACA,YACA,YACA,WACA,SACA,YACA,YACA,UACA,SACA,YACA,SACA,WACA,WACA,SACA,SACA,WACA,UACA,WACA,YACA,YACA,UACA,WACA,WACA,YACA,WACA,WACA,SACA,WACA,YACA,SACA,YACA,YACA,WACA,WACA,WACA,YACA,YACA,YACA,WACA,YACA,WACA,WACA,SACA,WACA,WACA,SACA,WACA,WACA,YACA,WACA,WACA,YACA,YACA,WACA,YACA,YACA,WACA,YACA,UACA,YACA,YACA,WACA,WACA,WACA,SACA,UACA,WACA,YACA,UACA,UACA,YACA,WACA,UACA,WACA,WACA,SACA,QACA,QACA,UACA,WACA,WACA,YACA,SACA,YACA,YACA,YACA,YACA,UACA,YACA,SACA,UACA,WACA,UACA,UACA,WACA,SACA,UACA,WACA,WACA,YACA,WACA,YACA,WACA,WACA,YACA,UACA,WACA,YACA,SACA,WACA,YACA,UACA,QACA,YACA,SACA,WACA,YACA,SACA,UACA,YACA,YACA,YACA,SACA,YACA,WACA,UACA,UACA,YACA,YACA,QACA,SACA,UACA,WACA,YACA,SACA,UACA,UACA,WACA,SACA,SACA,SACA,WACA,YACA,SACA,OACA,QACA,UACA,WACA,UACA,SACA,SACA,UACA,SACA,UACA,WACA,UACA,UACA,WACA,WACA,UACA,SACA,UACA,SACA,WACA,SACA,SACA,UACA,QACA,SACA,WACA,UACA,SACA,SACA,YACA,UACA,SACA,QACA,UACA,OACA,YACA,OACA,QACA,QACA,UACA,UACA,UACA,SACA,SACA,QACA,UACA,SACA,SACA,WACA,WACA,WACA,YACA,UACA,YACA,UACA,QACA,SACA,SACA,YACA,QACA,UACA,SACA,SACA,WACA,UACA,YACA,WACA,WACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,WACA,WACA,SACA,WACA,OACA,QACA,SACA,YACA,SACA,WACA,SACA,WACA,UACA,SACA,YACA,WACA,WACA,YACA,UACA,QACA,QACA,YACA,WACA,UACA,UACA,SACA,QACA,UACA,SACA,YACA,WACA,UACA,OACA,SACA,OACA,UACA,OACA,WACA,YACA,SACA,QACA,OACA,WACA,UACA,QACA,WACA,SACA,UACA,WACA,YACA,WACA,UACA,UACA,YACA,WACA,UACA,UACA,YACA,WACA,SACA,SACA,QACA,QACA,UACA,WACA,QACA,OACA,YACA,UACA,WACA,UACA,UACA,SACA,WACA,UACA,QACA,QACA,WACA,WACA,UACA,WACA,YACA,UACA,YACA,QACA,WACA,WACA,UACA,WACA,QACA,UACA,OACA,WACA,SACA,UACA,UACA,QACA,SACA,UACA,QACA,QACA,SACA,YACA,MACA,QACA,SACA,QACA,QACA,QACA,SACA,QACA,OACA,SACA,OACA,UACA,SACA,SACA,QACA,OACA,UACA,SACA,UACA,SACA,WACA,YACA,YACA,WACA,YACA,UACA,SACA,SACA,YACA,UACA,UACA,WACA,YACA,UACA,OACA,UACA,QACA,QACA,WACA,SACA,OACA,WACA,SACA,OACA,QACA,QACA,WACA,QACA,YACA,SACA,QACA,WACA,UACA,QACA,WACA,UACA,WACA,SACA,MACA,OACA,SACA,QACA,SACA,QACA,QACA,YACA,UACA,OACA,OACA,YACA,WACA,UACA,SACA,WACA,WACA,WACA,WACA,SACA,WACA,SACA,YACA,UACA,SACA,YACA,OACA,OACA,QACA,UACA,OACA,OACA,UACA,SACA,WACA,SACA,OACA,QACA,WACA,SACA,OACA,SACA,OACA,OACA,WACA,QACA,UACA,SACA,SACA,WACA,SACA,MACA,OACA,YACA,YACA,YACA,YACA,YACA,UACA,OACA,OACA,SACA,OACA,QACA,OACA,OACA,UACA,UACA,YACA,QACA,YACA,YACA,QACA,QACA,QACA,MACA,UACA,QACA,SACA,WACA,UACA,WACA,SACA,UACA,UACA,UACA,UACA,QACA,UACA,UACA,YACA,UACA,WACA,UACA,YACA,UACA,OACA,QACA,QACA,MACA,UACA,UACA,OACA,OACA,OACA,WACA,WACA,SACA,WACA,QACA,UACA,OACA,MACA,YACA,UACA,QACA,MACA,SACA,QACA,QACA,OACA,SACA,SACA,OACA,QACA,MACA,UACA,QACA,MACA,WACA,OACA,YACA,QACA,YACA,UACA,UACA,QACA,OACA,MACA,SACA,SACA,OACA,SACA,YACA,YACA,UACA,Q,2SC3lPK,MAAeC,GAGpBpsG,gBAAgBiT,GACd,OAAQA,EAAKnH,MACX,IAAK,eACH,OAAO,IAAIugG,GAAyBp5F,EAAKO,KAE3C,IAAK,WACH,OAAO,IAAI84F,GAAiCr5F,EAAKO,IAAKP,EAAKskE,YAE7D,QACE,OAAO,KAEb,EAGK,MAAM80B,GACX7sG,YAAoBgU,GAAA,KAAAA,IAAAA,CAAc,CAE5BF,QAAQI,G,0CACZ,MAAM4sF,QAAiB5sF,EAAc64F,WAAW7pG,KAAK8Q,KACrD,OAAO,IAAIm0C,GAAmB24C,EAChC,G,CAEAkM,SACE,MAAO,CACL1gG,KAAM,eACN0H,IAAK9Q,KAAK8Q,IAEd,EAGK,MAAM84F,GACX9sG,YAAoBgU,EAAqB+jE,GAArB,KAAA/jE,IAAAA,EAAqB,KAAA+jE,WAAAA,CAAqB,CAExDjkE,QAAQI,G,0CACZ,MAAM+4F,QAAoB/4F,EAAcg5F,eAAehqG,KAAK60E,YACtD+oB,QAAiB5sF,EAAc6sF,eAAe,IAAIxtF,GAAUrQ,KAAK8Q,KAAMi5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,GHsOIqjI,KAAM,CACJn+D,GACAp/B,GACAtrC,GACA6T,KAGJ,CAAE5X,QAAS4X,GAAY+0H,WAAY,IAAM,IAAIvhC,IAAkB,IAC/D,CACEprG,QAASktD,GACTwc,SAAU,GACVkjE,KAAM,CAACvxH,GAA0BtZ,GAAwB,KAE3D,CACE/B,QAAS0F,GACTgkE,SAAU,GACVkjE,KAAM,CAAC,KAET,CACE5sI,QAAS8zC,GACT41B,SAAU,GACVkjE,KAAM,CAAC9yH,GAAkClC,GAAY,KAEvD,CAAE5X,QAASmmE,GAAyBuD,SAAU,GAAckjE,KAAM,CAAC,KACnE,CACE5sI,QAASqb,GACTquD,SAAU,GACVkjE,KAAM,CACJ9yH,GACA00D,GACA/oE,GACAmS,GACA,KAGJ,CACE5X,QAAS6Z,GACT6vD,SAAU,GACVkjE,KAAM,CAACvxH,GAA0BwV,GAA0B,KAE7D,CACE7wB,QAAS26B,GACT+uC,SAAU,GACVkjE,KAAM,CAACvxH,GAA0B,GAAyB1D,KAE5D,CACE3X,QAAS2X,GACT+xD,SAAU,GACVkjE,KAAM,CACJzmE,GACA1gE,GACAC,GACA+xB,GACA40G,KAGJ,CACErsI,QAAS0uE,GACThF,SAAU,GACVkjE,KAAM,CAACh1H,GAAYD,KAErB,CACE3X,QAASsgB,GACTopD,SAAU,GACVkjE,KAAM,CACJj1H,GACAk3D,GACAl8B,GACAqa,GACA3xC,GACA6xC,GACAnpD,GACA8sB,GACA2Q,GACA5pB,GACA5T,GACA,GACAitC,GACA29B,GACAh8B,GACAy5F,KAGJ,CAAErsI,QAASw5B,GAA+BkwC,SAAU,IACpD,CACE1pE,QAAS6uE,GACTnF,SAAU,GACVkjE,KAAM,CAAC,KAET,CACE5sI,QAASsb,GACTouD,SAAU,GACVkjE,KAAM,CACJ5/E,GACAra,GACAua,GACA7xC,GACA5V,GACA1B,GACAklC,GACAk9B,GACAt1C,GACA7sB,GACA,GACAF,GACAwoI,GACAD,KAGJ,CACErsI,QAAS,GACT0pE,SAAU,GACVkjE,KAAM,CACJ79D,GACAm9D,GACAD,GACAr0H,GACAk3D,GACAq9D,GACAC,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,IAC9CF,GAA4BC,eAC/B,eAGc,GAAAE,qBAAiC,CAC/C,UACA,YACA,kBACA,aACA,OACA,OAGc,GAAAC,0BAAsC,CACpD,UACA,YACA,kBACA,aACA,UAGc,GAAAC,qBAAiC,CAC/C,YACA,SACA,cACA,WACA,SACA,KACA,QACA,UACA,cACA,eACA,QACA,eACA,YACA,UAGc,GAAAC,0BAAsC,CACpD,YACA,SACA,cACA,WACA,QACA,UACA,eACA,YACA,UAGc,GAAAC,qBAAiC,CAC/C,SACA,WACA,gBACA,kBACA,QACA,UACA,cACA,cACA,WACA,aACA,SACA,QACA,UACA,QACA,UACA,kBACA,0BACA,mBAGc,GAAAC,0BAAsC,CACpD,QACA,UACA,QACA,UACA,kBACA,2BAGc,GAAAC,sBAAkC,CAChD,YACA,eACA,WACA,aACA,QACA,UACA,SACA,cACA,YACA,wBACA,mBACA,QACA,OACA,UACA,SACA,cACA,YACA,SACA,QACA,eACA,YACA,eACA,YACA,oBACA,iBACA,oBACA,iBACA,gBACA,kBACA,aACA,eACA,0BACA,wBACA,qBACA,UACA,cACA,cACA,eACA,UAGc,GAAAC,qBAAiC,CAC/C,WACA,cACA,UACA,YACA,QACA,UACA,SACA,cACA,YACA,uBACA,kBACA,QACA,OACA,UACA,SACA,cACA,YACA,SACA,QACA,UACA,YACA,gBACA,cACA,cACA,YACA,cACA,YACA,mBACA,iBACA,mBACA,iBACA,cACA,gBACA,iBACA,mBACA,yBACA,uBACA,cACA,qBACA,uBACA,gBACA,gBACA,UAGc,GAAAC,cAA0B,CACxC,MACA,MACA,OACA,SACA,SACA,WACA,WACA,MACA,MACA,OACA,MACA,OACA,UACA,YACA,gBACA,gBACA,SACA,aACA,oBACA,MACA,OAGc,GAAAC,oBAAgC,CAC9C,UACA,YACA,aACA,WACA,WAKc,GAAAC,UAAY,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAC3C,GAAAC,cAAgB,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAC/C,GAAAC,aAAe,CAAC,OAAQ,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","sources":["webpack:///webpack/runtime/chunk loaded","webpack:///../../libs/angular/src/components/toastr.component.ts","webpack:///../../libs/angular/src/pipes/credit-card-number.pipe.ts","webpack:///../../libs/common/src/abstractions/i18n.service.ts","webpack:///../../libs/angular/src/pipes/i18n.pipe.ts","webpack:///../../libs/angular/src/pipes/search.pipe.ts","webpack:///../../libs/angular/src/pipes/user-name.pipe.ts","webpack:///../../libs/angular/src/jslib.module.ts","webpack:///../../libs/common/src/enums/authenticationStatus.ts","webpack:///../../libs/common/src/abstractions/auth.service.ts","webpack:///../../libs/common/src/abstractions/messaging.service.ts","webpack:///../../libs/common/src/abstractions/keyConnector.service.ts","webpack:///../../libs/angular/src/guards/auth.guard.ts","webpack:///../../libs/angular/src/guards/lock.guard.ts","webpack:///../../libs/angular/src/guards/unauth.guard.ts","webpack:///../../libs/common/src/abstractions/platformUtils.service.ts","webpack:///../../libs/common/src/abstractions/environment.service.ts","webpack:///../../libs/angular/src/components/environment.component.ts","webpack:///../../libs/common/src/models/domain/environmentUrls.ts","webpack:///../../libs/common/src/services/environment.service.ts","webpack:///../../libs/common/src/enums/encryptionType.ts","webpack:///./src/services/browser-environment.service.ts","webpack:///../../libs/angular/src/directives/box-row.directive.ts","webpack:///../../libs/common/src/misc/utils.ts","webpack:///../../libs/common/src/models/domain/encString.ts","webpack:///../../libs/common/src/models/domain/domainBase.ts","webpack:///../../libs/common/src/models/domain/masterPasswordPolicyOptions.ts","webpack:///../../libs/angular/src/components/callout.component.html","webpack:///../../libs/angular/src/components/callout.component.ts","webpack:///../../libs/angular/src/directives/input-verbatim.directive.ts","webpack:///../../libs/angular/src/directives/stop-click.directive.ts","webpack:///./src/popup/accounts/environment.component.html","webpack:///./src/popup/accounts/environment.component.ts","webpack:///../../libs/common/src/models/request/passwordHintRequest.ts","webpack:///../../libs/common/src/abstractions/api.service.ts","webpack:///../../libs/common/src/abstractions/log.service.ts","webpack:///../../libs/angular/src/services/validation.service.ts","webpack:///../../libs/angular/src/directives/api-action.directive.ts","webpack:///../../libs/angular/src/directives/autofocus.directive.ts","webpack:///./src/popup/accounts/hint.component.ts","webpack:///../../libs/angular/src/components/hint.component.ts","webpack:///./src/popup/accounts/hint.component.html","webpack:///../../libs/common/src/abstractions/passwordGeneration.service.ts","webpack:///../../libs/common/src/abstractions/state.service.ts","webpack:///../../libs/common/src/abstractions/cryptoFunction.service.ts","webpack:///../../libs/common/src/enums/hashPurpose.ts","webpack:///../../libs/common/src/enums/keySuffixOptions.ts","webpack:///./src/popup/accounts/home.component.ts","webpack:///./src/popup/accounts/home.component.html","webpack:///../../libs/common/src/models/request/secretVerificationRequest.ts","webpack:///../../libs/common/src/abstractions/crypto.service.ts","webpack:///../../libs/common/src/abstractions/vaultTimeout.service.ts","webpack:///../../libs/angular/src/components/lock.component.ts","webpack:///./src/models/biometricErrors.ts","webpack:///../../libs/common/src/abstractions/sync.service.ts","webpack:///../../libs/angular/src/directives/a11y-title.directive.ts","webpack:///./src/browser/browserApi.ts","webpack:///./src/popup/services/popup-utils.service.ts","webpack:///./src/popup/components/private-mode-warning.component.html","webpack:///./src/popup/components/private-mode-warning.component.ts","webpack:///./src/popup/accounts/lock.component.html","webpack:///./src/popup/accounts/lock.component.ts","webpack:///../../libs/common/src/enums/authenticationType.ts","webpack:///../../libs/common/src/models/domain/logInCredentials.ts","webpack:///../../libs/common/src/misc/captcha_iframe.ts","webpack:///../../libs/common/src/misc/iframe_component.ts","webpack:///../../libs/angular/src/components/captchaProtected.component.ts","webpack:///../../libs/angular/src/components/login.component.ts","webpack:///./src/popup/accounts/login.component.html","webpack:///./src/popup/accounts/login.component.ts","webpack:///../../libs/angular/src/validators/inputsFieldMatch.validator.ts","webpack:///../../libs/common/src/enums/kdfType.ts","webpack:///../../libs/common/src/models/request/keysRequest.ts","webpack:///../../libs/common/src/models/request/registerRequest.ts","webpack:///../../libs/common/src/abstractions/formValidationErrors.service.ts","webpack:///../../libs/angular/src/components/register.component.ts","webpack:///../../libs/angular/src/shared/components/password-strength/password-strength.component.html","webpack:///../../libs/angular/src/shared/components/password-strength/password-strength.component.ts","webpack:///./src/popup/accounts/register.component.html","webpack:///./src/popup/accounts/register.component.ts","webpack:///../../libs/angular/src/components/remove-password.component.ts","webpack:///./src/popup/accounts/remove-password.component.html","webpack:///./src/popup/accounts/remove-password.component.ts","webpack:///../../libs/common/src/models/request/organizationUserResetPasswordEnrollmentRequest.ts","webpack:///../../libs/common/src/models/request/setPasswordRequest.ts","webpack:///../../libs/common/src/abstractions/policy/policy.service.abstraction.ts","webpack:///../../libs/angular/src/components/change-password.component.ts","webpack:///../../libs/common/src/abstractions/policy/policy-api.service.abstraction.ts","webpack:///../../libs/angular/src/components/set-password.component.ts","webpack:///./src/popup/accounts/set-password.component.html","webpack:///./src/popup/accounts/set-password.component.ts","webpack:///../../libs/angular/src/components/sso.component.ts","webpack:///./src/popup/accounts/sso.component.ts","webpack:///../../libs/common/src/abstractions/twoFactor.service.ts","webpack:///../../libs/angular/src/components/two-factor-options.component.ts","webpack:///./src/popup/accounts/two-factor-options.component.html","webpack:///./src/popup/accounts/two-factor-options.component.ts","webpack:///../../libs/common/src/enums/twoFactorProviderType.ts","webpack:///../../libs/common/src/misc/webauthn_iframe.ts","webpack:///../../libs/common/src/models/request/identityToken/tokenRequestTwoFactor.ts","webpack:///../../libs/common/src/models/request/twoFactorEmailRequest.ts","webpack:///../../libs/common/src/services/twoFactor.service.ts","webpack:///../../libs/common/src/abstractions/appId.service.ts","webpack:///../../libs/angular/src/components/two-factor.component.ts","webpack:///../../libs/common/src/abstractions/broadcaster.service.ts","webpack:///./src/popup/accounts/two-factor.component.html","webpack:///./src/popup/accounts/two-factor.component.ts","webpack:///../../libs/common/src/models/request/updateTempPasswordRequest.ts","webpack:///../../libs/common/src/models/request/organizationUserResetPasswordRequest.ts","webpack:///../../libs/angular/src/components/update-temp-password.component.ts","webpack:///./src/popup/accounts/update-temp-password.component.html","webpack:///./src/popup/accounts/update-temp-password.component.ts","webpack:///../../libs/common/src/abstractions/usernameGeneration.service.ts","webpack:///../../libs/angular/src/components/generator.component.ts","webpack:///../../libs/angular/src/directives/select-copy.directive.ts","webpack:///./src/popup/components/pop-out.component.html","webpack:///./src/popup/components/pop-out.component.ts","webpack:///../../libs/angular/src/pipes/color-password.pipe.ts","webpack:///./src/popup/generator/generator.component.html","webpack:///./src/popup/generator/generator.component.ts","webpack:///../../libs/common/src/enums/policyType.ts","webpack:///../../libs/common/src/enums/sendType.ts","webpack:///../../libs/angular/src/components/password-generator-history.component.ts","webpack:///./src/popup/generator/password-generator-history.component.html","webpack:///./src/popup/generator/password-generator-history.component.ts","webpack:///../../libs/common/src/models/view/sendFileView.ts","webpack:///../../libs/common/src/models/view/sendTextView.ts","webpack:///../../libs/common/src/models/view/sendView.ts","webpack:///../../libs/common/src/abstractions/send.service.ts","webpack:///../../libs/angular/src/components/send/efflux-dates.component.ts","webpack:///../../libs/angular/src/components/send/add-edit.component.ts","webpack:///./src/services/abstractions/state.service.ts","webpack:///./src/popup/send/efflux-dates.component.html","webpack:///./src/popup/send/efflux-dates.component.ts","webpack:///./src/popup/send/send-add-edit.component.html","webpack:///./src/popup/send/send-add-edit.component.ts","webpack:///../../libs/common/src/abstractions/search.service.ts","webpack:///../../libs/angular/src/components/send/send.component.ts","webpack:///../../libs/angular/src/directives/stop-prop.directive.ts","webpack:///./src/popup/components/send-list.component.html","webpack:///./src/popup/components/send-list.component.ts","webpack:///./src/popup/send/send-groupings.component.html","webpack:///./src/popup/send/send-groupings.component.ts","webpack:///./src/popup/send/send-type.component.html","webpack:///./src/popup/send/send-type.component.ts","webpack:///./src/popup/services/debounceNavigationService.ts","webpack:///./src/popup/settings/excluded-domains.component.html","webpack:///./src/popup/settings/excluded-domains.component.ts","webpack:///../../libs/common/src/enums/eventType.ts","webpack:///../../libs/common/src/abstractions/export.service.ts","webpack:///../../libs/common/src/abstractions/event.service.ts","webpack:///../../libs/common/src/abstractions/userVerification/userVerification.service.abstraction.ts","webpack:///../../libs/common/src/abstractions/fileDownload/fileDownload.service.ts","webpack:///../../libs/angular/src/components/export.component.ts","webpack:///../../libs/common/src/abstractions/organization.service.ts","webpack:///../../libs/common/src/enums/verificationType.ts","webpack:///../../libs/angular/src/components/export-scope-callout.component.html","webpack:///../../libs/angular/src/components/export-scope-callout.component.ts","webpack:///../../libs/angular/src/components/user-verification.component.html","webpack:///../../libs/angular/src/components/user-verification.component.ts","webpack:///./src/popup/components/user-verification.component.html","webpack:///./src/popup/components/user-verification.component.ts","webpack:///./src/popup/settings/export.component.html","webpack:///./src/popup/settings/export.component.ts","webpack:///../../libs/common/src/models/view/folderView.ts","webpack:///../../libs/common/src/abstractions/folder/folder.service.abstraction.ts","webpack:///../../libs/common/src/abstractions/folder/folder-api.service.abstraction.ts","webpack:///../../libs/angular/src/components/folder-add-edit.component.ts","webpack:///./src/popup/settings/folder-add-edit.component.html","webpack:///./src/popup/settings/folder-add-edit.component.ts","webpack:///../../libs/common/src/enums/themeType.ts","webpack:///../../libs/common/src/enums/uriMatchType.ts","webpack:///./src/popup/settings/folders.component.html","webpack:///./src/popup/settings/folders.component.ts","webpack:///../../libs/common/src/abstractions/totp.service.ts","webpack:///../../libs/angular/src/services/theming/theming.service.abstraction.ts","webpack:///./src/popup/settings/options.component.html","webpack:///./src/popup/settings/options.component.ts","webpack:///../../libs/angular/src/components/premium.component.ts","webpack:///./src/popup/settings/premium.component.html","webpack:///./src/popup/settings/premium.component.ts","webpack:///../../libs/angular/src/components/modal/modal.ref.ts","webpack:///../../libs/angular/src/components/modal/dynamic-modal.component.ts","webpack:///../../libs/angular/src/components/modal/modal-injector.ts","webpack:///../../libs/common/src/enums/deviceType.ts","webpack:///../../libs/angular/src/services/modal.service.ts","webpack:///../../libs/angular/src/components/set-pin.component.ts","webpack:///./src/popup/components/set-pin.component.html","webpack:///./src/popup/components/set-pin.component.ts","webpack:///../../libs/angular/src/components/settings/vault-timeout-input.component.ts","webpack:///./src/popup/settings/vault-timeout-input.component.html","webpack:///./src/popup/settings/vault-timeout-input.component.ts","webpack:///./src/popup/settings/settings.component.html","webpack:///./src/popup/settings/settings.component.ts","webpack:///../../libs/common/src/enums/cipherRepromptType.ts","webpack:///../../libs/common/src/enums/cipherType.ts","webpack:///../../libs/common/src/enums/organizationUserStatusType.ts","webpack:///../../libs/common/src/enums/secureNoteType.ts","webpack:///../../libs/common/src/enums/linkedIdType.ts","webpack:///./src/popup/settings/sync.component.ts","webpack:///./src/popup/tabs.component.html","webpack:///./src/popup/settings/sync.component.html","webpack:///./src/popup/tabs.component.ts","webpack:///../../libs/common/src/misc/linkedFieldOption.decorator.ts","webpack:///../../libs/common/src/models/view/itemView.ts","webpack:///../../libs/common/src/models/view/cardView.ts","webpack:///../../libs/common/src/models/domain/symmetricCryptoKey.ts","webpack:///../../libs/common/src/models/view/attachmentView.ts","webpack:///../../libs/common/src/models/view/fieldView.ts","webpack:///../../libs/common/src/models/view/identityView.ts","webpack:///../../libs/common/src/models/view/loginUriView.ts","webpack:///../../libs/common/src/models/view/loginView.ts","webpack:///../../libs/common/src/models/view/passwordHistoryView.ts","webpack:///../../libs/common/src/models/view/secureNoteView.ts","webpack:///../../libs/common/src/models/view/cipherView.ts","webpack:///../../libs/common/src/abstractions/cipher.service.ts","webpack:///../../libs/common/src/abstractions/audit.service.ts","webpack:///../../libs/common/src/abstractions/collection.service.ts","webpack:///../../libs/common/src/abstractions/passwordReprompt.service.ts","webpack:///../../libs/common/src/enums/fieldType.ts","webpack:///../../libs/angular/src/components/add-edit.component.ts","webpack:///../../libs/angular/src/components/add-edit-custom-fields.component.ts","webpack:///../../libs/angular/src/directives/true-false-value.directive.ts","webpack:///./src/popup/vault/add-edit-custom-fields.component.html","webpack:///./src/popup/vault/add-edit-custom-fields.component.ts","webpack:///./src/popup/vault/add-edit.component.html","webpack:///./src/popup/vault/add-edit.component.ts","webpack:///../../libs/common/src/models/domain/encArrayBuffer.ts","webpack:///../../libs/common/src/models/response/baseResponse.ts","webpack:///../../libs/common/src/models/response/errorResponse.ts","webpack:///../../libs/angular/src/components/attachments.component.ts","webpack:///./src/popup/vault/attachments.component.html","webpack:///./src/popup/vault/attachments.component.ts","webpack:///../../libs/angular/src/components/ciphers.component.ts","webpack:///../../libs/angular/src/vault/vault-filter/models/vault-filter.model.ts","webpack:///../../libs/common/src/models/domain/treeNode.ts","webpack:///../../libs/common/src/misc/serviceUtils.ts","webpack:///../../libs/angular/src/vault/vault-filter/models/dynamic-tree-node.model.ts","webpack:///../../libs/angular/src/vault/vault-filter/services/vault-filter.service.ts","webpack:///./src/services/vaultFilter.service.ts","webpack:///../../libs/angular/src/directives/fallback-src.directive.ts","webpack:///../../libs/angular/src/components/icon.component.html","webpack:///../../libs/angular/src/components/icon.component.ts","webpack:///./src/popup/components/action-buttons.component.html","webpack:///./src/popup/components/action-buttons.component.ts","webpack:///./src/popup/components/cipher-row.component.html","webpack:///./src/popup/components/cipher-row.component.ts","webpack:///../../libs/angular/src/pipes/ellipsis.pipe.ts","webpack:///./src/popup/vault/vault-select.component.html","webpack:///./src/popup/vault/vault-select.component.ts","webpack:///./src/popup/vault/ciphers.component.html","webpack:///./src/popup/vault/ciphers.component.ts","webpack:///../../libs/angular/src/components/collections.component.ts","webpack:///./src/popup/vault/collections.component.html","webpack:///./src/popup/vault/collections.component.ts","webpack:///./src/services/abstractions/autofill.service.ts","webpack:///./src/popup/vault/current-tab.component.html","webpack:///./src/popup/vault/current-tab.component.ts","webpack:///../../libs/angular/src/components/password-history.component.ts","webpack:///./src/popup/vault/password-history.component.html","webpack:///./src/popup/vault/password-history.component.ts","webpack:///../../libs/angular/src/components/share.component.ts","webpack:///./src/popup/vault/share.component.html","webpack:///./src/popup/vault/share.component.ts","webpack:///./src/popup/vault/vault-filter.component.html","webpack:///./src/popup/vault/vault-filter.component.ts","webpack:///../../libs/common/src/abstractions/token.service.ts","webpack:///../../libs/angular/src/components/view.component.ts","webpack:///../../libs/angular/src/components/view-custom-fields.component.ts","webpack:///../../libs/angular/src/pipes/color-password-count.pipe.ts","webpack:///./src/popup/vault/view-custom-fields.component.html","webpack:///./src/popup/vault/view-custom-fields.component.ts","webpack:///./src/popup/vault/view.component.html","webpack:///./src/popup/vault/view.component.ts","webpack:///./src/popup/app-routing.module.ts","webpack:///./src/popup/app-routing.animations.ts","webpack:///./src/popup/app.component.ts","webpack:///../../libs/angular/src/services/theming/themeBuilder.ts","webpack:///../../libs/common/src/enums/stateVersion.ts","webpack:///../../libs/angular/src/services/theming/theming.service.ts","webpack:///../../libs/common/src/abstractions/abstractEncrypt.service.ts","webpack:///../../libs/common/src/abstractions/account/account-api.service.abstraction.ts","webpack:///../../libs/common/src/abstractions/fileUpload.service.ts","webpack:///../../libs/common/src/abstractions/notifications.service.ts","webpack:///../../libs/common/src/abstractions/provider.service.ts","webpack:///../../libs/common/src/abstractions/settings.service.ts","webpack:///../../libs/common/src/abstractions/stateMigration.service.ts","webpack:///../../libs/common/src/abstractions/storage.service.ts","webpack:///../../libs/common/src/abstractions/userVerification/userVerification-api.service.abstraction.ts","webpack:///../../libs/common/src/factories/accountFactory.ts","webpack:///../../libs/common/src/factories/globalStateFactory.ts","webpack:///../../libs/common/src/factories/stateFactory.ts","webpack:///../../libs/common/src/models/domain/account.ts","webpack:///../../libs/common/src/models/domain/windowState.ts","webpack:///../../libs/common/src/models/domain/globalState.ts","webpack:///../../libs/common/src/enums/ssoEnums.ts","webpack:///../../libs/common/src/models/request/deviceRequest.ts","webpack:///../../libs/common/src/models/request/identityToken/tokenRequest.ts","webpack:///../../libs/common/src/models/request/identityToken/apiTokenRequest.ts","webpack:///../../libs/common/src/models/response/apiKeyResponse.ts","webpack:///../../libs/common/src/models/response/attachmentResponse.ts","webpack:///../../libs/common/src/models/api/cardApi.ts","webpack:///../../libs/common/src/models/api/fieldApi.ts","webpack:///../../libs/common/src/models/api/identityApi.ts","webpack:///../../libs/common/src/models/api/loginUriApi.ts","webpack:///../../libs/common/src/models/api/loginApi.ts","webpack:///../../libs/common/src/models/api/secureNoteApi.ts","webpack:///../../libs/common/src/models/response/passwordHistoryResponse.ts","webpack:///../../libs/common/src/models/response/cipherResponse.ts","webpack:///../../libs/common/src/models/response/attachmentUploadDataResponse.ts","webpack:///../../libs/common/src/models/response/billingResponse.ts","webpack:///../../libs/common/src/models/response/billingHistoryResponse.ts","webpack:///../../libs/common/src/models/response/billingPaymentResponse.ts","webpack:///../../libs/common/src/models/response/breachAccountResponse.ts","webpack:///../../libs/common/src/models/response/selectionReadOnlyResponse.ts","webpack:///../../libs/common/src/models/response/collectionResponse.ts","webpack:///../../libs/common/src/models/response/deviceVerificationResponse.ts","webpack:///../../libs/common/src/models/response/globalDomainResponse.ts","webpack:///../../libs/common/src/models/response/domainsResponse.ts","webpack:///../../libs/common/src/models/response/emergencyAccessResponse.ts","webpack:///../../libs/common/src/models/response/eventResponse.ts","webpack:///../../libs/common/src/models/response/groupResponse.ts","webpack:///../../libs/common/src/models/response/identityCaptchaResponse.ts","webpack:///../../libs/common/src/models/response/identityTokenResponse.ts","webpack:///../../libs/common/src/models/response/identityTwoFactorResponse.ts","webpack:///../../libs/common/src/models/response/keyConnectorUserKeyResponse.ts","webpack:///../../libs/common/src/models/response/listResponse.ts","webpack:///../../libs/common/src/models/api/ssoConfigApi.ts","webpack:///../../libs/common/src/models/response/organization/organizationSsoResponse.ts","webpack:///../../libs/common/src/models/response/organizationApiKeyInformationResponse.ts","webpack:///../../libs/common/src/models/response/organizationAutoEnrollStatusResponse.ts","webpack:///../../libs/common/src/models/response/organizationConnectionResponse.ts","webpack:///../../libs/common/src/models/response/organizationExportResponse.ts","webpack:///../../libs/common/src/models/response/keysResponse.ts","webpack:///../../libs/common/src/models/response/organizationKeysResponse.ts","webpack:///../../libs/common/src/models/response/planResponse.ts","webpack:///../../libs/common/src/models/response/organizationResponse.ts","webpack:///../../libs/common/src/models/response/organizationSponsorshipSyncStatusResponse.ts","webpack:///../../libs/common/src/models/response/subscriptionResponse.ts","webpack:///../../libs/common/src/models/response/organizationSubscriptionResponse.ts","webpack:///../../libs/common/src/models/response/organizationUserBulkPublicKeyResponse.ts","webpack:///../../libs/common/src/models/response/organizationUserBulkResponse.ts","webpack:///../../libs/common/src/models/api/permissionsApi.ts","webpack:///../../libs/common/src/models/response/organizationUserResponse.ts","webpack:///../../libs/common/src/models/response/profileOrganizationResponse.ts","webpack:///../../libs/common/src/models/response/profileProviderOrganizationResponse.ts","webpack:///../../libs/common/src/models/response/profileProviderResponse.ts","webpack:///../../libs/common/src/models/response/profileResponse.ts","webpack:///../../libs/common/src/models/response/paymentResponse.ts","webpack:///../../libs/common/src/models/response/policyResponse.ts","webpack:///../../libs/common/src/models/response/preloginResponse.ts","webpack:///../../libs/common/src/models/response/provider/providerOrganizationResponse.ts","webpack:///../../libs/common/src/models/response/provider/providerResponse.ts","webpack:///../../libs/common/src/models/response/provider/providerUserBulkPublicKeyResponse.ts","webpack:///../../libs/common/src/models/response/provider/providerUserBulkResponse.ts","webpack:///../../libs/common/src/models/response/provider/providerUserResponse.ts","webpack:///../../libs/common/src/models/api/sendFileApi.ts","webpack:///../../libs/common/src/models/api/sendTextApi.ts","webpack:///../../libs/common/src/models/response/sendAccessResponse.ts","webpack:///../../libs/common/src/models/response/sendFileDownloadDataResponse.ts","webpack:///../../libs/common/src/models/response/sendResponse.ts","webpack:///../../libs/common/src/models/response/sendFileUploadDataResponse.ts","webpack:///../../libs/common/src/models/response/ssoPreValidateResponse.ts","webpack:///../../libs/common/src/models/response/folderResponse.ts","webpack:///../../libs/common/src/models/response/syncResponse.ts","webpack:///../../libs/common/src/models/response/taxInfoResponse.ts","webpack:///../../libs/common/src/models/response/taxRateResponse.ts","webpack:///../../libs/common/src/models/response/twoFactorAuthenticatorResponse.ts","webpack:///../../libs/common/src/models/response/twoFactorDuoResponse.ts","webpack:///../../libs/common/src/models/response/twoFactorEmailResponse.ts","webpack:///../../libs/common/src/models/response/twoFactorProviderResponse.ts","webpack:///../../libs/common/src/models/response/twoFactorRescoverResponse.ts","webpack:///../../libs/common/src/models/response/twoFactorWebAuthnResponse.ts","webpack:///../../libs/common/src/models/response/twoFactorYubiKeyResponse.ts","webpack:///../../libs/common/src/models/response/userKeyResponse.ts","webpack:///../../libs/common/src/enums/htmlStorageLocation.ts","webpack:///../../libs/common/src/services/api.service.ts","webpack:///../../libs/common/src/services/appId.service.ts","webpack:///../../libs/common/src/services/audit.service.ts","webpack:///../../libs/common/src/misc/throttle.ts","webpack:///../../libs/common/src/models/domain/authResult.ts","webpack:///../../libs/common/src/misc/logInStrategies/logIn.strategy.ts","webpack:///../../libs/common/src/misc/logInStrategies/apiLogin.strategy.ts","webpack:///../../libs/common/src/models/request/identityToken/passwordTokenRequest.ts","webpack:///../../libs/common/src/misc/logInStrategies/passwordLogin.strategy.ts","webpack:///../../libs/common/src/models/request/identityToken/ssoTokenRequest.ts","webpack:///../../libs/common/src/misc/logInStrategies/ssoLogin.strategy.ts","webpack:///../../libs/common/src/models/request/preloginRequest.ts","webpack:///../../libs/common/src/services/auth.service.ts","webpack:///../../libs/common/src/misc/sequentialize.ts","webpack:///../../libs/common/src/models/data/attachmentData.ts","webpack:///../../libs/common/src/models/data/cardData.ts","webpack:///../../libs/common/src/models/data/fieldData.ts","webpack:///../../libs/common/src/models/data/identityData.ts","webpack:///../../libs/common/src/models/data/loginUriData.ts","webpack:///../../libs/common/src/models/data/loginData.ts","webpack:///../../libs/common/src/models/data/passwordHistoryData.ts","webpack:///../../libs/common/src/models/data/secureNoteData.ts","webpack:///../../libs/common/src/models/data/cipherData.ts","webpack:///../../libs/common/src/models/domain/attachment.ts","webpack:///../../libs/common/src/models/domain/card.ts","webpack:///../../libs/common/src/models/domain/field.ts","webpack:///../../libs/common/src/models/domain/identity.ts","webpack:///../../libs/common/src/models/domain/loginUri.ts","webpack:///../../libs/common/src/models/domain/login.ts","webpack:///../../libs/common/src/models/domain/password.ts","webpack:///../../libs/common/src/models/domain/secureNote.ts","webpack:///../../libs/common/src/models/domain/cipher.ts","webpack:///../../libs/common/src/models/domain/sortedCiphersCache.ts","webpack:///../../libs/common/src/models/request/cipherBulkDeleteRequest.ts","webpack:///../../libs/common/src/models/request/cipherBulkMoveRequest.ts","webpack:///../../libs/common/src/models/request/cipherBulkRestoreRequest.ts","webpack:///../../libs/common/src/models/request/attachmentRequest.ts","webpack:///../../libs/common/src/models/request/cipherRequest.ts","webpack:///../../libs/common/src/models/request/cipherWithIdRequest.ts","webpack:///../../libs/common/src/models/request/cipherBulkShareRequest.ts","webpack:///../../libs/common/src/models/request/cipherCollectionsRequest.ts","webpack:///../../libs/common/src/models/request/cipherCreateRequest.ts","webpack:///../../libs/common/src/models/request/cipherShareRequest.ts","webpack:///../../libs/common/src/services/cipher.service.ts","webpack:///../../libs/common/src/models/data/collectionData.ts","webpack:///../../libs/common/src/models/view/collectionView.ts","webpack:///../../libs/common/src/models/domain/collection.ts","webpack:///../../libs/common/src/services/collection.service.ts","webpack:///../../libs/common/src/enums/logLevelType.ts","webpack:///../../libs/common/src/services/consoleLog.service.ts","webpack:///../../libs/common/src/misc/wordlist.ts","webpack:///../../libs/common/src/models/domain/encryptedOrganizationKey.ts","webpack:///../../libs/common/src/services/crypto.service.ts","webpack:///../../libs/common/src/models/domain/encryptedObject.ts","webpack:///../../libs/common/src/services/encrypt.service.ts","webpack:///../../libs/common/src/models/data/eventData.ts","webpack:///../../libs/common/src/models/request/eventRequest.ts","webpack:///../../libs/common/src/services/event.service.ts","webpack:///../../libs/common/src/models/export/cardExport.ts","webpack:///../../libs/common/src/models/export/fieldExport.ts","webpack:///../../libs/common/src/models/export/identityExport.ts","webpack:///../../libs/common/src/models/export/loginUriExport.ts","webpack:///../../libs/common/src/models/export/loginExport.ts","webpack:///../../libs/common/src/models/export/secureNoteExport.ts","webpack:///../../libs/common/src/models/export/cipherExport.ts","webpack:///../../libs/common/src/models/export/cipherWithIdsExport.ts","webpack:///../../libs/common/src/models/export/collectionExport.ts","webpack:///../../libs/common/src/models/export/collectionWithIdExport.ts","webpack:///../../libs/common/src/models/export/eventExport.ts","webpack:///../../libs/common/src/models/domain/folder.ts","webpack:///../../libs/common/src/models/export/folderExport.ts","webpack:///../../libs/common/src/models/export/folderWithIdExport.ts","webpack:///../../libs/common/src/enums/fileUploadType.ts","webpack:///../../libs/common/src/services/export.service.ts","webpack:///../../libs/common/src/services/azureFileUpload.service.ts","webpack:///../../libs/common/src/services/bitwardenFileUpload.service.ts","webpack:///../../libs/common/src/services/fileUpload.service.ts","webpack:///../../libs/common/src/models/data/folderData.ts","webpack:///../../libs/common/src/models/request/folderRequest.ts","webpack:///../../libs/common/src/services/folder/folder-api.service.ts","webpack:///../../libs/common/src/enums/organizationUserType.ts","webpack:///../../libs/common/src/services/folder/folder.service.ts","webpack:///../../libs/common/src/models/request/account/setKeyConnectorKeyRequest.ts","webpack:///../../libs/common/src/models/request/keyConnectorUserKeyRequest.ts","webpack:///../../libs/common/src/services/keyConnector.service.ts","webpack:///../../libs/common/src/enums/notificationType.ts","webpack:///../../libs/common/src/models/response/notificationResponse.ts","webpack:///../../libs/common/src/services/notifications.service.ts","webpack:///../../libs/common/src/models/domain/organization.ts","webpack:///../../libs/common/src/services/organization.service.ts","webpack:///../../libs/common/src/models/domain/generatedPasswordHistory.ts","webpack:///../../libs/common/src/models/domain/passwordGeneratorPolicyOptions.ts","webpack:///../../libs/common/src/services/passwordGeneration.service.ts","webpack:///../../libs/common/src/models/data/policyData.ts","webpack:///../../libs/common/src/models/domain/policy.ts","webpack:///../../libs/common/src/services/policy/policy-api.service.ts","webpack:///../../libs/common/src/models/domain/resetPasswordPolicyOptions.ts","webpack:///../../libs/common/src/enums/providerUserStatusType.ts","webpack:///../../libs/common/src/enums/providerUserType.ts","webpack:///../../libs/common/src/services/policy/policy.service.ts","webpack:///../../libs/common/src/models/domain/provider.ts","webpack:///../../libs/common/src/services/provider.service.ts","webpack:///../../libs/common/src/services/search.service.ts","webpack:///../../libs/common/src/models/data/sendFileData.ts","webpack:///../../libs/common/src/models/data/sendTextData.ts","webpack:///../../libs/common/src/models/data/sendData.ts","webpack:///../../libs/common/src/models/domain/sendFile.ts","webpack:///../../libs/common/src/models/domain/sendText.ts","webpack:///../../libs/common/src/models/domain/send.ts","webpack:///../../libs/common/src/models/request/sendRequest.ts","webpack:///../../libs/common/src/services/send.service.ts","webpack:///../../libs/common/src/services/settings.service.ts","webpack:///../../libs/common/src/enums/storageLocation.ts","webpack:///../../libs/common/src/models/data/providerData.ts","webpack:///../../libs/common/src/models/domain/state.ts","webpack:///../../libs/common/src/services/state.service.ts","webpack:///../../libs/common/src/services/token.service.ts","webpack:///../../libs/common/src/services/stateMigration.service.ts","webpack:///../../libs/common/src/models/data/organizationData.ts","webpack:///../../libs/common/src/services/sync.service.ts","webpack:///../../libs/common/src/services/totp.service.ts","webpack:///../../libs/common/src/services/userVerification/userVerification-api.service.ts","webpack:///../../libs/common/src/models/request/account/verifyOTPRequest.ts","webpack:///../../libs/common/src/services/userVerification/userVerification.service.ts","webpack:///../../libs/common/src/emailForwarders/anonAddyForwarder.ts","webpack:///../../libs/common/src/emailForwarders/duckDuckGoForwarder.ts","webpack:///../../libs/common/src/emailForwarders/fastmailForwarder.ts","webpack:///../../libs/common/src/emailForwarders/firefoxRelayForwarder.ts","webpack:///../../libs/common/src/emailForwarders/forwarderOptions.ts","webpack:///../../libs/common/src/emailForwarders/simpleLoginForwarder.ts","webpack:///../../libs/common/src/services/usernameGeneration.service.ts","webpack:///../../libs/common/src/services/vaultTimeout.service.ts","webpack:///../../libs/common/src/models/domain/decryptParameters.ts","webpack:///../../libs/common/src/services/webCryptoFunction.service.ts","webpack:///../../libs/angular/src/services/broadcaster.service.ts","webpack:///../../libs/common/src/services/broadcaster.service.ts","webpack:///../../libs/angular/src/components/password-reprompt.component.ts","webpack:///../../libs/angular/src/services/passwordReprompt.service.ts","webpack:///../../libs/angular/src/services/jslib-services.module.ts","webpack:///../../libs/common/src/services/account/account-api.service.ts","webpack:///../../libs/common/src/abstractions/account/account.service.abstraction.ts","webpack:///../../libs/common/src/services/account/account.service.ts","webpack:///../../libs/common/src/services/formValidationErrors.service.ts","webpack:///../../libs/common/src/services/container.service.ts","webpack:///../../libs/common/src/services/system.service.ts","webpack:///./src/browser/safariApp.ts","webpack:///./src/models/browserComponentState.ts","webpack:///./src/models/browserGroupingsComponentState.ts","webpack:///./src/models/browserSendComponentState.ts","webpack:///./src/models/account.ts","webpack:///./src/models/autofillScript.ts","webpack:///./src/services/autofillConstants.ts","webpack:///./src/services/autofill.service.ts","webpack:///../../libs/common/src/enums/clientType.ts","webpack:///./src/services/browserCrypto.service.ts","webpack:///./src/services/browserMessaging.service.ts","webpack:///./src/services/browserMessagingPrivateModeBackground.service.ts","webpack:///./src/services/browserPlatformUtils.service.ts","webpack:///./src/services/state.service.ts","webpack:///./src/decorators/session-sync-observable/sync-item-metadata.ts","webpack:///./src/decorators/session-sync-observable/session-syncer.ts","webpack:///./src/decorators/session-sync-observable/session-sync.decorator.ts","webpack:///./src/services/folders/folder.service.ts","webpack:///./src/decorators/session-sync-observable/browser-session.decorator.ts","webpack:///./src/services/i18n.service.ts","webpack:///../../libs/common/src/services/i18n.service.ts","webpack:///./src/services/vaultTimeout.service.ts","webpack:///./src/background/commands.background.ts","webpack:///./src/background/contextMenus.background.ts","webpack:///./src/background/idle.background.ts","webpack:///./src/background/nativeMessaging.background.ts","webpack:///./src/background/models/notificationQueueMessageType.ts","webpack:///./src/background/notification.background.ts","webpack:///./src/background/runtime.background.ts","webpack:///./src/background/service_factories/factory-options.ts","webpack:///./src/background/service_factories/crypto-function-service.factory.ts","webpack:///./src/background/service_factories/log-service.factory.ts","webpack:///./src/background/service_factories/encrypt-service.factory.ts","webpack:///../../libs/common/src/services/memoryStorage.service.ts","webpack:///./src/services/abstractChromeStorageApi.service.ts","webpack:///./src/services/browserLocalStorage.service.ts","webpack:///./src/services/browserMemoryStorage.service.ts","webpack:///./src/services/localBackedSessionStorage.service.ts","webpack:///./src/decorators/dev-flag.decorator.ts","webpack:///./src/services/keyGeneration.service.ts","webpack:///./src/background/service_factories/storage-service.factory.ts","webpack:///./src/background/service_factories/key-generation-service.factory.ts","webpack:///./src/background/service_factories/state-migration-service.factory.ts","webpack:///./src/background/service_factories/state-service.factory.ts","webpack:///./src/background/tabs.background.ts","webpack:///./src/background/webRequest.background.ts","webpack:///./src/background/main.background.ts","webpack:///./src/background/service_factories/environment-service.factory.ts","webpack:///../../libs/common/src/abstractions/fileDownload/fileDownloadBuilder.ts","webpack:///./src/services/browserFileDownloadService.ts","webpack:///./src/services/browserMessagingPrivateModePopup.service.ts","webpack:///./src/popup/services/init.service.ts","webpack:///./src/popup/services/lock-guard.service.ts","webpack:///./src/popup/components/password-reprompt.component.ts","webpack:///./src/popup/components/password-reprompt.component.html","webpack:///./src/popup/services/password-reprompt.service.ts","webpack:///./src/popup/services/popup-search.service.ts","webpack:///./src/popup/services/unauth-guard.service.ts","webpack:///./src/popup/services/services.module.ts","webpack:///./src/popup/app.module.ts","webpack:///./src/popup/main.ts","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/node module decorator","webpack:///webpack/runtime/jsonp chunk loading","webpack:///webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import { animate, state, style, transition, trigger } from \"@angular/animations\";\nimport { CommonModule } from \"@angular/common\";\nimport { Component, ModuleWithProviders, NgModule } from \"@angular/core\";\nimport {\n  DefaultNoComponentGlobalConfig,\n  GlobalConfig,\n  Toast as BaseToast,\n  ToastPackage,\n  ToastrService,\n  TOAST_CONFIG,\n} from \"ngx-toastr\";\n\n@Component({\n  selector: \"[toast-component2]\",\n  template: `\n    <button\n      *ngIf=\"options.closeButton\"\n      (click)=\"remove()\"\n      type=\"button\"\n      class=\"toast-close-button\"\n      aria-label=\"Close\"\n    >\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <div class=\"icon\">\n      <i></i>\n    </div>\n    <div>\n      <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n        {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n      </div>\n      <div\n        *ngIf=\"message && options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [innerHTML]=\"message\"\n      ></div>\n      <div\n        *ngIf=\"message && !options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [attr.aria-label]=\"message\"\n      >\n        {{ message }}\n      </div>\n    </div>\n    <div *ngIf=\"options.progressBar\">\n      <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n    </div>\n  `,\n  animations: [\n    trigger(\"flyInOut\", [\n      state(\"inactive\", style({ opacity: 0 })),\n      state(\"active\", style({ opacity: 1 })),\n      state(\"removed\", style({ opacity: 0 })),\n      transition(\"inactive => active\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n      transition(\"active => removed\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n    ]),\n  ],\n  preserveWhitespaces: false,\n})\nexport class BitwardenToast extends BaseToast {\n  constructor(protected toastrService: ToastrService, public toastPackage: ToastPackage) {\n    super(toastrService, toastPackage);\n  }\n}\n\nexport const BitwardenToastGlobalConfig: GlobalConfig = {\n  ...DefaultNoComponentGlobalConfig,\n  toastComponent: BitwardenToast,\n};\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitwardenToast],\n  exports: [BitwardenToast],\n})\nexport class BitwardenToastModule {\n  static forRoot(config: Partial<GlobalConfig> = {}): ModuleWithProviders<BitwardenToastModule> {\n    return {\n      ngModule: BitwardenToastModule,\n      providers: [\n        {\n          provide: TOAST_CONFIG,\n          useValue: {\n            default: BitwardenToastGlobalConfig,\n            config: config,\n          },\n        },\n      ],\n    };\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\ninterface CardRuleEntry {\n  cardLength: number;\n  blocks: number[];\n}\n\n// See https://baymard.com/checkout-usability/credit-card-patterns for\n// all possible credit card spacing patterns. For now, we just handle\n// the below.\nconst numberFormats: Record<string, CardRuleEntry[]> = {\n  Visa: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  Mastercard: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  Maestro: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 13, blocks: [4, 4, 5] },\n    { cardLength: 15, blocks: [4, 6, 5] },\n    { cardLength: 19, blocks: [4, 4, 4, 4, 3] },\n  ],\n  Discover: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  \"Diners Club\": [{ cardLength: 14, blocks: [4, 6, 4] }],\n  JCB: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  UnionPay: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 19, blocks: [6, 13] },\n  ],\n  Amex: [{ cardLength: 15, blocks: [4, 6, 5] }],\n  Mir: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 17, blocks: [5, 4, 4, 4] },\n    { cardLength: 18, blocks: [6, 4, 4, 4] },\n    { cardLength: 19, blocks: [7, 4, 4, 4] },\n  ],\n  Other: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n};\n\n@Pipe({ name: \"creditCardNumber\" })\nexport class CreditCardNumberPipe implements PipeTransform {\n  transform(creditCardNumber: string, brand: string): string {\n    let rules = numberFormats[brand];\n\n    if (rules == null) {\n      rules = numberFormats[\"Other\"];\n    }\n\n    const cardLength = creditCardNumber.length;\n\n    let matchingRule = rules.find((r) => r.cardLength == cardLength);\n    if (matchingRule == null) {\n      matchingRule = rules[0];\n    }\n\n    const blocks = matchingRule.blocks;\n\n    const chunks: string[] = [];\n    let total = 0;\n\n    blocks.forEach((c) => {\n      chunks.push(creditCardNumber.slice(total, total + c));\n      total += c;\n    });\n\n    // Append the remaining part\n    if (cardLength > total) {\n      chunks.push(creditCardNumber.slice(total));\n    }\n\n    return chunks.join(\" \");\n  }\n}\n","import { Observable } from \"rxjs\";\n\nexport abstract class I18nService {\n  locale$: Observable<string>;\n  supportedTranslationLocales: string[];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames: Map<string, string>;\n  t: (id: string, p1?: string, p2?: string, p3?: string) => string;\n  translate: (id: string, p1?: string, p2?: string, p3?: string) => string;\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n@Pipe({\n  name: \"i18n\",\n})\nexport class I18nPipe implements PipeTransform {\n  constructor(private i18nService: I18nService) {}\n\n  transform(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.i18nService.t(id, p1, p2, p3);\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"search\",\n})\nexport class SearchPipe implements PipeTransform {\n  transform(\n    items: any[],\n    searchText: string,\n    prop1?: string,\n    prop2?: string,\n    prop3?: string\n  ): any[] {\n    if (items == null || items.length === 0) {\n      return [];\n    }\n\n    if (searchText == null || searchText.length < 2) {\n      return items;\n    }\n\n    searchText = searchText.trim().toLowerCase();\n    return items.filter((i) => {\n      if (\n        prop1 != null &&\n        i[prop1] != null &&\n        i[prop1].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      if (\n        prop2 != null &&\n        i[prop2] != null &&\n        i[prop2].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      if (\n        prop3 != null &&\n        i[prop3] != null &&\n        i[prop3].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      return false;\n    });\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\ninterface User {\n  name?: string;\n  email: string;\n}\n\n@Pipe({\n  name: \"userName\",\n})\nexport class UserNamePipe implements PipeTransform {\n  transform(user?: User): string {\n    if (user == null) {\n      return null;\n    }\n\n    return user.name == null || user.name.trim() === \"\" ? user.email : user.name;\n  }\n}\n","import { CommonModule, DatePipe } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { AvatarComponent } from \"./components/avatar.component\";\nimport { CalloutComponent } from \"./components/callout.component\";\nimport { ExportScopeCalloutComponent } from \"./components/export-scope-callout.component\";\nimport { IconComponent } from \"./components/icon.component\";\nimport { BitwardenToastModule } from \"./components/toastr.component\";\nimport { A11yInvalidDirective } from \"./directives/a11y-invalid.directive\";\nimport { A11yTitleDirective } from \"./directives/a11y-title.directive\";\nimport { ApiActionDirective } from \"./directives/api-action.directive\";\nimport { AutofocusDirective } from \"./directives/autofocus.directive\";\nimport { BoxRowDirective } from \"./directives/box-row.directive\";\nimport { FallbackSrcDirective } from \"./directives/fallback-src.directive\";\nimport { InputStripSpacesDirective } from \"./directives/input-strip-spaces.directive\";\nimport { InputVerbatimDirective } from \"./directives/input-verbatim.directive\";\nimport { NotPremiumDirective } from \"./directives/not-premium.directive\";\nimport { SelectCopyDirective } from \"./directives/select-copy.directive\";\nimport { StopClickDirective } from \"./directives/stop-click.directive\";\nimport { StopPropDirective } from \"./directives/stop-prop.directive\";\nimport { TrueFalseValueDirective } from \"./directives/true-false-value.directive\";\nimport { ColorPasswordCountPipe } from \"./pipes/color-password-count.pipe\";\nimport { ColorPasswordPipe } from \"./pipes/color-password.pipe\";\nimport { CreditCardNumberPipe } from \"./pipes/credit-card-number.pipe\";\nimport { EllipsisPipe } from \"./pipes/ellipsis.pipe\";\nimport { I18nPipe } from \"./pipes/i18n.pipe\";\nimport { SearchCiphersPipe } from \"./pipes/search-ciphers.pipe\";\nimport { SearchPipe } from \"./pipes/search.pipe\";\nimport { UserNamePipe } from \"./pipes/user-name.pipe\";\nimport { PasswordStrengthComponent } from \"./shared/components/password-strength/password-strength.component\";\n\n@NgModule({\n  imports: [\n    BitwardenToastModule.forRoot({\n      maxOpened: 5,\n      autoDismiss: true,\n      closeButton: true,\n    }),\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [\n    A11yInvalidDirective,\n    A11yTitleDirective,\n    ApiActionDirective,\n    AutofocusDirective,\n    AvatarComponent,\n    BoxRowDirective,\n    CalloutComponent,\n    ColorPasswordCountPipe,\n    ColorPasswordPipe,\n    CreditCardNumberPipe,\n    EllipsisPipe,\n    ExportScopeCalloutComponent,\n    FallbackSrcDirective,\n    I18nPipe,\n    IconComponent,\n    InputStripSpacesDirective,\n    InputVerbatimDirective,\n    NotPremiumDirective,\n    SearchCiphersPipe,\n    SearchPipe,\n    SelectCopyDirective,\n    StopClickDirective,\n    StopPropDirective,\n    TrueFalseValueDirective,\n    UserNamePipe,\n    PasswordStrengthComponent,\n  ],\n  exports: [\n    A11yInvalidDirective,\n    A11yTitleDirective,\n    ApiActionDirective,\n    AutofocusDirective,\n    AvatarComponent,\n    BitwardenToastModule,\n    BoxRowDirective,\n    CalloutComponent,\n    ColorPasswordCountPipe,\n    ColorPasswordPipe,\n    CreditCardNumberPipe,\n    EllipsisPipe,\n    ExportScopeCalloutComponent,\n    FallbackSrcDirective,\n    I18nPipe,\n    IconComponent,\n    InputStripSpacesDirective,\n    InputVerbatimDirective,\n    NotPremiumDirective,\n    SearchCiphersPipe,\n    SearchPipe,\n    SelectCopyDirective,\n    StopClickDirective,\n    StopPropDirective,\n    TrueFalseValueDirective,\n    UserNamePipe,\n    PasswordStrengthComponent,\n  ],\n  providers: [CreditCardNumberPipe, DatePipe, I18nPipe, SearchPipe, UserNamePipe],\n})\nexport class JslibModule {}\n","export enum AuthenticationStatus {\n  LoggedOut = 0,\n  Locked = 1,\n  Unlocked = 2,\n}\n","import { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { AuthResult } from \"../models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n} from \"../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TokenRequestTwoFactor } from \"../models/request/identityToken/tokenRequestTwoFactor\";\n\nexport abstract class AuthService {\n  masterPasswordHash: string;\n  email: string;\n  logIn: (\n    credentials: ApiLogInCredentials | PasswordLogInCredentials | SsoLogInCredentials\n  ) => Promise<AuthResult>;\n  logInTwoFactor: (\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ) => Promise<AuthResult>;\n  logOut: (callback: () => void) => void;\n  makePreloginKey: (masterPassword: string, email: string) => Promise<SymmetricCryptoKey>;\n  authingWithApiKey: () => boolean;\n  authingWithSso: () => boolean;\n  authingWithPassword: () => boolean;\n  getAuthStatus: (userId?: string) => Promise<AuthenticationStatus>;\n}\n","export abstract class MessagingService {\n  send: (subscriber: string, arg?: any) => void;\n}\n","import { Organization } from \"../models/domain/organization\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport abstract class KeyConnectorService {\n  getAndSetKey: (url?: string) => Promise<void>;\n  getManagingOrganization: () => Promise<Organization>;\n  getUsesKeyConnector: () => Promise<boolean>;\n  migrateUser: () => Promise<void>;\n  userNeedsMigration: () => Promise<boolean>;\n  convertNewSsoUserToKeyConnector: (\n    tokenResponse: IdentityTokenResponse,\n    orgId: string\n  ) => Promise<void>;\n  setUsesKeyConnector: (enabled: boolean) => Promise<void>;\n  setConvertAccountRequired: (status: boolean) => Promise<void>;\n  getConvertAccountRequired: () => Promise<boolean>;\n  removeConvertAccountRequired: () => Promise<void>;\n  clear: () => Promise<void>;\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private messagingService: MessagingService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      this.messagingService.send(\"authBlocked\", { url: routerState.url });\n      return false;\n    }\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      if (routerState != null) {\n        this.messagingService.send(\"lockedUrl\", { url: routerState.url });\n      }\n      return this.router.createUrlTree([\"lock\"], { queryParams: { promptBiometric: true } });\n    }\n\n    if (\n      !routerState.url.includes(\"remove-password\") &&\n      (await this.keyConnectorService.getConvertAccountRequired())\n    ) {\n      return this.router.createUrlTree([\"/remove-password\"]);\n    }\n\n    return true;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class LockGuard implements CanActivate {\n  protected homepage = \"vault\";\n  protected loginpage = \"login\";\n  constructor(private authService: AuthService, private router: Router) {}\n\n  async canActivate() {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      return true;\n    }\n\n    const redirectUrl =\n      authStatus === AuthenticationStatus.LoggedOut ? this.loginpage : this.homepage;\n\n    return this.router.createUrlTree([redirectUrl]);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class UnauthGuard implements CanActivate {\n  protected homepage = \"vault\";\n  constructor(private authService: AuthService, private router: Router) {}\n\n  async canActivate() {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      return true;\n    }\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      return this.router.createUrlTree([\"lock\"]);\n    }\n\n    return this.router.createUrlTree([this.homepage]);\n  }\n}\n","import { ClientType } from \"../enums/clientType\";\nimport { DeviceType } from \"../enums/deviceType\";\n\ninterface ToastOptions {\n  timeout?: number;\n}\n\nexport abstract class PlatformUtilsService {\n  getDevice: () => DeviceType;\n  getDeviceString: () => string;\n  getClientType: () => ClientType;\n  isFirefox: () => boolean;\n  isChrome: () => boolean;\n  isEdge: () => boolean;\n  isOpera: () => boolean;\n  isVivaldi: () => boolean;\n  isSafari: () => boolean;\n  isMacAppStore: () => boolean;\n  isViewOpen: () => Promise<boolean>;\n  launchUri: (uri: string, options?: any) => void;\n  getApplicationVersion: () => Promise<string>;\n  supportsWebAuthn: (win: Window) => boolean;\n  supportsDuo: () => boolean;\n  showToast: (\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: ToastOptions\n  ) => void;\n  showDialog: (\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml?: boolean\n  ) => Promise<boolean>;\n  isDev: () => boolean;\n  isSelfHost: () => boolean;\n  copyToClipboard: (text: string, options?: any) => void | boolean;\n  readFromClipboard: (options?: any) => Promise<string>;\n  supportsBiometric: () => Promise<boolean>;\n  authenticateBiometric: () => Promise<boolean>;\n  supportsSecureStorage: () => boolean;\n}\n","import { Observable } from \"rxjs\";\n\nexport type Urls = {\n  base?: string;\n  webVault?: string;\n  api?: string;\n  identity?: string;\n  icons?: string;\n  notifications?: string;\n  events?: string;\n  keyConnector?: string;\n  scim?: string;\n};\n\nexport type PayPalConfig = {\n  businessId?: string;\n  buttonAction?: string;\n};\n\nexport abstract class EnvironmentService {\n  urls: Observable<Urls>;\n\n  hasBaseUrl: () => boolean;\n  getNotificationsUrl: () => string;\n  getWebVaultUrl: () => string;\n  getSendUrl: () => string;\n  getIconsUrl: () => string;\n  getApiUrl: () => string;\n  getIdentityUrl: () => string;\n  getEventsUrl: () => string;\n  getKeyConnectorUrl: () => string;\n  getScimUrl: () => string;\n  setUrlsFromStorage: () => Promise<void>;\n  setUrls: (urls: Urls) => Promise<Urls>;\n  getUrls: () => Urls;\n}\n","import { Directive, EventEmitter, Output } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Directive()\nexport class EnvironmentComponent {\n  @Output() onSaved = new EventEmitter();\n\n  iconsUrl: string;\n  identityUrl: string;\n  apiUrl: string;\n  webVaultUrl: string;\n  notificationsUrl: string;\n  baseUrl: string;\n  showCustom = false;\n\n  constructor(\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected i18nService: I18nService\n  ) {\n    const urls = this.environmentService.getUrls();\n\n    this.baseUrl = urls.base || \"\";\n    this.webVaultUrl = urls.webVault || \"\";\n    this.apiUrl = urls.api || \"\";\n    this.identityUrl = urls.identity || \"\";\n    this.iconsUrl = urls.icons || \"\";\n    this.notificationsUrl = urls.notifications || \"\";\n  }\n\n  async submit() {\n    const resUrls = await this.environmentService.setUrls({\n      base: this.baseUrl,\n      api: this.apiUrl,\n      identity: this.identityUrl,\n      webVault: this.webVaultUrl,\n      icons: this.iconsUrl,\n      notifications: this.notificationsUrl,\n    });\n\n    // re-set urls since service can change them, ex: prefixing https://\n    this.baseUrl = resUrls.base;\n    this.apiUrl = resUrls.api;\n    this.identityUrl = resUrls.identity;\n    this.webVaultUrl = resUrls.webVault;\n    this.iconsUrl = resUrls.icons;\n    this.notificationsUrl = resUrls.notifications;\n\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"environmentSaved\"));\n    this.saved();\n  }\n\n  toggleCustom() {\n    this.showCustom = !this.showCustom;\n  }\n\n  protected saved() {\n    this.onSaved.emit();\n  }\n}\n","export class EnvironmentUrls {\n  base: string = null;\n  api: string = null;\n  identity: string = null;\n  icons: string = null;\n  notifications: string = null;\n  events: string = null;\n  webVault: string = null;\n  keyConnector: string = null;\n}\n","import { Observable, Subject } from \"rxjs\";\n\nimport {\n  EnvironmentService as EnvironmentServiceAbstraction,\n  Urls,\n} from \"../abstractions/environment.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\n\nexport class EnvironmentService implements EnvironmentServiceAbstraction {\n  private readonly urlsSubject = new Subject<Urls>();\n  urls: Observable<Urls> = this.urlsSubject;\n\n  protected baseUrl: string;\n  protected webVaultUrl: string;\n  protected apiUrl: string;\n  protected identityUrl: string;\n  protected iconsUrl: string;\n  protected notificationsUrl: string;\n  protected eventsUrl: string;\n  private keyConnectorUrl: string;\n  private scimUrl: string = null;\n\n  constructor(private stateService: StateService) {\n    this.stateService.activeAccount$.subscribe(async () => {\n      await this.setUrlsFromStorage();\n    });\n  }\n\n  hasBaseUrl() {\n    return this.baseUrl != null;\n  }\n\n  getNotificationsUrl() {\n    if (this.notificationsUrl != null) {\n      return this.notificationsUrl;\n    }\n\n    if (this.baseUrl != null) {\n      return this.baseUrl + \"/notifications\";\n    }\n\n    return \"https://notifications.bitwarden.com\";\n  }\n\n  getWebVaultUrl() {\n    if (this.webVaultUrl != null) {\n      return this.webVaultUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl;\n    }\n    return \"https://vault.bitwarden.com\";\n  }\n\n  getSendUrl() {\n    return this.getWebVaultUrl() === \"https://vault.bitwarden.com\"\n      ? \"https://send.bitwarden.com/#\"\n      : this.getWebVaultUrl() + \"/#/send/\";\n  }\n\n  getIconsUrl() {\n    if (this.iconsUrl != null) {\n      return this.iconsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/icons\";\n    }\n\n    return \"https://icons.bitwarden.net\";\n  }\n\n  getApiUrl() {\n    if (this.apiUrl != null) {\n      return this.apiUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/api\";\n    }\n\n    return \"https://api.bitwarden.com\";\n  }\n\n  getIdentityUrl() {\n    if (this.identityUrl != null) {\n      return this.identityUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/identity\";\n    }\n\n    return \"https://identity.bitwarden.com\";\n  }\n\n  getEventsUrl() {\n    if (this.eventsUrl != null) {\n      return this.eventsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/events\";\n    }\n\n    return \"https://events.bitwarden.com\";\n  }\n\n  getKeyConnectorUrl() {\n    return this.keyConnectorUrl;\n  }\n\n  getScimUrl() {\n    if (this.scimUrl != null) {\n      return this.scimUrl + \"/v2\";\n    }\n\n    return this.getWebVaultUrl() === \"https://vault.bitwarden.com\"\n      ? \"https://scim.bitwarden.com/v2\"\n      : this.getWebVaultUrl() + \"/scim/v2\";\n  }\n\n  async setUrlsFromStorage(): Promise<void> {\n    const urls: any = await this.stateService.getEnvironmentUrls();\n    const envUrls = new EnvironmentUrls();\n\n    this.baseUrl = envUrls.base = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = envUrls.api = urls.api;\n    this.identityUrl = envUrls.identity = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = envUrls.events = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n    // scimUrl is not saved to storage\n  }\n\n  async setUrls(urls: Urls): Promise<Urls> {\n    urls.base = this.formatUrl(urls.base);\n    urls.webVault = this.formatUrl(urls.webVault);\n    urls.api = this.formatUrl(urls.api);\n    urls.identity = this.formatUrl(urls.identity);\n    urls.icons = this.formatUrl(urls.icons);\n    urls.notifications = this.formatUrl(urls.notifications);\n    urls.events = this.formatUrl(urls.events);\n    urls.keyConnector = this.formatUrl(urls.keyConnector);\n\n    // scimUrl cannot be cleared\n    urls.scim = this.formatUrl(urls.scim) ?? this.scimUrl;\n\n    await this.stateService.setEnvironmentUrls({\n      base: urls.base,\n      api: urls.api,\n      identity: urls.identity,\n      webVault: urls.webVault,\n      icons: urls.icons,\n      notifications: urls.notifications,\n      events: urls.events,\n      keyConnector: urls.keyConnector,\n      // scimUrl is not saved to storage\n    });\n\n    this.baseUrl = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = urls.api;\n    this.identityUrl = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n    this.scimUrl = urls.scim;\n\n    this.urlsSubject.next(urls);\n\n    return urls;\n  }\n\n  getUrls() {\n    return {\n      base: this.baseUrl,\n      webVault: this.webVaultUrl,\n      api: this.apiUrl,\n      identity: this.identityUrl,\n      icons: this.iconsUrl,\n      notifications: this.notificationsUrl,\n      events: this.eventsUrl,\n      keyConnector: this.keyConnectorUrl,\n      scim: this.scimUrl,\n    };\n  }\n\n  private formatUrl(url: string): string {\n    if (url == null || url === \"\") {\n      return null;\n    }\n\n    url = url.replace(/\\/+$/g, \"\");\n    if (!url.startsWith(\"http://\") && !url.startsWith(\"https://\")) {\n      url = \"https://\" + url;\n    }\n\n    return url.trim();\n  }\n}\n","export enum EncryptionType {\n  AesCbc256_B64 = 0,\n  AesCbc128_HmacSha256_B64 = 1,\n  AesCbc256_HmacSha256_B64 = 2,\n  Rsa2048_OaepSha256_B64 = 3,\n  Rsa2048_OaepSha1_B64 = 4,\n  Rsa2048_OaepSha256_HmacSha256_B64 = 5,\n  Rsa2048_OaepSha1_HmacSha256_B64 = 6,\n}\n","import { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { EnvironmentService } from \"@bitwarden/common/services/environment.service\";\n\nimport { devFlagEnabled, devFlagValue } from \"../flags\";\nimport { GroupPolicyEnvironment } from \"../types/group-policy-environment\";\n\nexport class BrowserEnvironmentService extends EnvironmentService {\n  constructor(stateService: StateService, private logService: LogService) {\n    super(stateService);\n  }\n\n  async hasManagedEnvironment(): Promise<boolean> {\n    try {\n      return (await this.getManagedEnvironment()) != null;\n    } catch (e) {\n      this.logService.error(e);\n      return false;\n    }\n  }\n\n  async settingsHaveChanged() {\n    const env = await this.getManagedEnvironment();\n\n    return (\n      env.base != this.baseUrl ||\n      env.webVault != this.webVaultUrl ||\n      env.api != this.webVaultUrl ||\n      env.identity != this.identityUrl ||\n      env.icons != this.iconsUrl ||\n      env.notifications != this.notificationsUrl ||\n      env.events != this.eventsUrl\n    );\n  }\n\n  getManagedEnvironment(): Promise<GroupPolicyEnvironment> {\n    return devFlagEnabled(\"managedEnvironment\")\n      ? new Promise((resolve) => resolve(devFlagValue(\"managedEnvironment\")))\n      : new Promise((resolve, reject) => {\n          chrome.storage.managed.get(\"environment\", (result) => {\n            if (chrome.runtime.lastError) {\n              return reject(chrome.runtime.lastError);\n            }\n\n            resolve(result.environment);\n          });\n        });\n  }\n\n  async setUrlsToManagedEnvironment() {\n    const env = await this.getManagedEnvironment();\n    await this.setUrls({\n      base: env.base,\n      webVault: env.webVault,\n      api: env.api,\n      identity: env.identity,\n      icons: env.icons,\n      notifications: env.notifications,\n      events: env.events,\n    });\n  }\n}\n","import { Directive, ElementRef, HostListener, OnInit } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appBoxRow]\",\n})\nexport class BoxRowDirective implements OnInit {\n  el: HTMLElement = null;\n  formEls: Element[];\n\n  constructor(elRef: ElementRef) {\n    this.el = elRef.nativeElement;\n  }\n\n  ngOnInit(): void {\n    this.formEls = Array.from(\n      this.el.querySelectorAll('input:not([type=\"hidden\"]), select, textarea')\n    );\n    this.formEls.forEach((formEl) => {\n      formEl.addEventListener(\n        \"focus\",\n        () => {\n          this.el.classList.add(\"active\");\n        },\n        false\n      );\n\n      formEl.addEventListener(\n        \"blur\",\n        () => {\n          this.el.classList.remove(\"active\");\n        },\n        false\n      );\n    });\n  }\n\n  @HostListener(\"click\", [\"$event\"]) onClick(event: Event) {\n    const target = event.target as HTMLElement;\n    if (\n      target !== this.el &&\n      !target.classList.contains(\"progress\") &&\n      !target.classList.contains(\"progress-bar\")\n    ) {\n      return;\n    }\n\n    if (this.formEls.length > 0) {\n      const formEl = this.formEls[0] as HTMLElement;\n      if (formEl.tagName.toLowerCase() === \"input\") {\n        const inputEl = formEl as HTMLInputElement;\n        if (inputEl.type != null && inputEl.type.toLowerCase() === \"checkbox\") {\n          inputEl.click();\n          return;\n        }\n      }\n      formEl.focus();\n    }\n  }\n}\n","/* eslint-disable no-useless-escape */\nimport * as tldjs from \"tldjs\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\n\nimport { I18nService } from \"../abstractions/i18n.service\";\n\nconst nodeURL = typeof window === \"undefined\" ? require(\"url\") : null;\n\ndeclare global {\n  /* eslint-disable-next-line no-var */\n  var bitwardenContainerService: BitwardenContainerService;\n}\n\ninterface BitwardenContainerService {\n  getCryptoService: () => CryptoService;\n}\n\nexport class Utils {\n  static inited = false;\n  static isNode = false;\n  static isBrowser = true;\n  static isMobileBrowser = false;\n  static isAppleMobileBrowser = false;\n  static global: typeof global = null;\n  static tldEndingRegex =\n    /.*\\.(com|net|org|edu|uk|gov|ca|de|jp|fr|au|ru|ch|io|es|us|co|xyz|info|ly|mil)$/;\n  // Transpiled version of /\\p{Emoji_Presentation}/gu using https://mothereff.in/regexpu. Used for compatability in older browsers.\n  static regexpEmojiPresentation =\n    /(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])/g;\n\n  static init() {\n    if (Utils.inited) {\n      return;\n    }\n\n    Utils.inited = true;\n    Utils.isNode =\n      typeof process !== \"undefined\" &&\n      (process as any).release != null &&\n      (process as any).release.name === \"node\";\n    Utils.isBrowser = typeof window !== \"undefined\";\n\n    Utils.isMobileBrowser = Utils.isBrowser && this.isMobile(window);\n    Utils.isAppleMobileBrowser = Utils.isBrowser && this.isAppleMobile(window);\n\n    if (Utils.isNode) {\n      Utils.global = global;\n    } else if (Utils.isBrowser) {\n      Utils.global = window;\n    } else {\n      // If it's not browser or node then it must be a service worker\n      Utils.global = self;\n    }\n  }\n\n  static fromB64ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"base64\"));\n    } else {\n      const binaryString = Utils.global.atob(str);\n      const bytes = new Uint8Array(binaryString.length);\n      for (let i = 0; i < binaryString.length; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUrlB64ToArray(str: string): Uint8Array {\n    return Utils.fromB64ToArray(Utils.fromUrlB64ToB64(str));\n  }\n\n  static fromHexToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"hex\"));\n    } else {\n      const bytes = new Uint8Array(str.length / 2);\n      for (let i = 0; i < str.length; i += 2) {\n        bytes[i / 2] = parseInt(str.substr(i, 2), 16);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUtf8ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"utf8\"));\n    } else {\n      const strUtf8 = unescape(encodeURIComponent(str));\n      const arr = new Uint8Array(strUtf8.length);\n      for (let i = 0; i < strUtf8.length; i++) {\n        arr[i] = strUtf8.charCodeAt(i);\n      }\n      return arr;\n    }\n  }\n\n  static fromByteStringToArray(str: string): Uint8Array {\n    const arr = new Uint8Array(str.length);\n    for (let i = 0; i < str.length; i++) {\n      arr[i] = str.charCodeAt(i);\n    }\n    return arr;\n  }\n\n  static fromBufferToB64(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"base64\");\n    } else {\n      let binary = \"\";\n      const bytes = new Uint8Array(buffer);\n      for (let i = 0; i < bytes.byteLength; i++) {\n        binary += String.fromCharCode(bytes[i]);\n      }\n      return Utils.global.btoa(binary);\n    }\n  }\n\n  static fromBufferToUrlB64(buffer: ArrayBuffer): string {\n    return Utils.fromB64toUrlB64(Utils.fromBufferToB64(buffer));\n  }\n\n  static fromB64toUrlB64(b64Str: string) {\n    return b64Str.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n  }\n\n  static fromBufferToUtf8(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"utf8\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      const encodedString = String.fromCharCode.apply(null, bytes);\n      return decodeURIComponent(escape(encodedString));\n    }\n  }\n\n  static fromBufferToByteString(buffer: ArrayBuffer): string {\n    return String.fromCharCode.apply(null, new Uint8Array(buffer));\n  }\n\n  // ref: https://stackoverflow.com/a/40031979/1090359\n  static fromBufferToHex(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"hex\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      return Array.prototype.map\n        .call(bytes, (x: number) => (\"00\" + x.toString(16)).slice(-2))\n        .join(\"\");\n    }\n  }\n\n  static fromUrlB64ToB64(urlB64Str: string): string {\n    let output = urlB64Str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n      case 0:\n        break;\n      case 2:\n        output += \"==\";\n        break;\n      case 3:\n        output += \"=\";\n        break;\n      default:\n        throw new Error(\"Illegal base64url string!\");\n    }\n\n    return output;\n  }\n\n  static fromUrlB64ToUtf8(urlB64Str: string): string {\n    return Utils.fromB64ToUtf8(Utils.fromUrlB64ToB64(urlB64Str));\n  }\n\n  static fromUtf8ToB64(utfStr: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(utfStr, \"utf8\").toString(\"base64\");\n    } else {\n      return decodeURIComponent(escape(Utils.global.btoa(utfStr)));\n    }\n  }\n\n  static fromUtf8ToUrlB64(utfStr: string): string {\n    return Utils.fromBufferToUrlB64(Utils.fromUtf8ToArray(utfStr));\n  }\n\n  static fromB64ToUtf8(b64Str: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(b64Str, \"base64\").toString(\"utf8\");\n    } else {\n      return decodeURIComponent(escape(Utils.global.atob(b64Str)));\n    }\n  }\n\n  // ref: http://stackoverflow.com/a/2117523/1090359\n  static newGuid(): string {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\n      const r = (Math.random() * 16) | 0;\n      const v = c === \"x\" ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  }\n\n  static isGuid(id: string) {\n    return RegExp(\n      /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/,\n      \"i\"\n    ).test(id);\n  }\n\n  static getHostname(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.hostname !== \"\" ? url.hostname : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getHost(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.host !== \"\" ? url.host : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getDomain(uriString: string): string {\n    if (uriString == null) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n    if (uriString === \"\") {\n      return null;\n    }\n\n    if (uriString.startsWith(\"data:\")) {\n      return null;\n    }\n\n    let httpUrl = uriString.startsWith(\"http://\") || uriString.startsWith(\"https://\");\n    if (\n      !httpUrl &&\n      uriString.indexOf(\"://\") < 0 &&\n      Utils.tldEndingRegex.test(uriString) &&\n      uriString.indexOf(\"@\") < 0\n    ) {\n      uriString = \"http://\" + uriString;\n      httpUrl = true;\n    }\n\n    if (httpUrl) {\n      try {\n        const url = Utils.getUrlObject(uriString);\n        const validHostname = tldjs?.isValid != null ? tldjs.isValid(url.hostname) : true;\n        if (!validHostname) {\n          return null;\n        }\n\n        if (url.hostname === \"localhost\" || Utils.validIpAddress(url.hostname)) {\n          return url.hostname;\n        }\n\n        const urlDomain =\n          tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(url.hostname) : null;\n        return urlDomain != null ? urlDomain : url.hostname;\n      } catch (e) {\n        // Invalid domain, try another approach below.\n      }\n    }\n\n    try {\n      const domain = tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(uriString) : null;\n\n      if (domain != null) {\n        return domain;\n      }\n    } catch {\n      return null;\n    }\n\n    return null;\n  }\n\n  static getQueryParams(uriString: string): Map<string, string> {\n    const url = Utils.getUrl(uriString);\n    if (url == null || url.search == null || url.search === \"\") {\n      return null;\n    }\n    const map = new Map<string, string>();\n    const pairs = (url.search[0] === \"?\" ? url.search.substr(1) : url.search).split(\"&\");\n    pairs.forEach((pair) => {\n      const parts = pair.split(\"=\");\n      if (parts.length < 1) {\n        return;\n      }\n      map.set(\n        decodeURIComponent(parts[0]).toLowerCase(),\n        parts[1] == null ? \"\" : decodeURIComponent(parts[1])\n      );\n    });\n    return map;\n  }\n\n  static getSortFunction(i18nService: I18nService, prop: string) {\n    return (a: any, b: any) => {\n      if (a[prop] == null && b[prop] != null) {\n        return -1;\n      }\n      if (a[prop] != null && b[prop] == null) {\n        return 1;\n      }\n      if (a[prop] == null && b[prop] == null) {\n        return 0;\n      }\n\n      return i18nService.collator\n        ? i18nService.collator.compare(a[prop], b[prop])\n        : a[prop].localeCompare(b[prop]);\n    };\n  }\n\n  static isNullOrWhitespace(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str.trim() === \"\";\n  }\n\n  static isNullOrEmpty(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str == \"\";\n  }\n\n  static nameOf<T>(name: string & keyof T) {\n    return name;\n  }\n\n  static assign<T>(target: T, source: Partial<T>): T {\n    return Object.assign(target, source);\n  }\n\n  static iterateEnum<O extends object, K extends keyof O = keyof O>(obj: O) {\n    return (Object.keys(obj).filter((k) => Number.isNaN(+k)) as K[]).map((k) => obj[k]);\n  }\n\n  static getUrl(uriString: string): URL {\n    if (uriString == null) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n    if (uriString === \"\") {\n      return null;\n    }\n\n    let url = Utils.getUrlObject(uriString);\n    if (url == null) {\n      const hasHttpProtocol =\n        uriString.indexOf(\"http://\") === 0 || uriString.indexOf(\"https://\") === 0;\n      if (!hasHttpProtocol && uriString.indexOf(\".\") > -1) {\n        url = Utils.getUrlObject(\"http://\" + uriString);\n      }\n    }\n    return url;\n  }\n\n  static camelToPascalCase(s: string) {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  private static validIpAddress(ipString: string): boolean {\n    const ipRegex =\n      /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n    return ipRegex.test(ipString);\n  }\n\n  private static isMobile(win: Window) {\n    let mobile = false;\n    ((a) => {\n      if (\n        /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\n          a\n        ) ||\n        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n          a.substr(0, 4)\n        )\n      ) {\n        mobile = true;\n      }\n    })(win.navigator.userAgent || win.navigator.vendor || (win as any).opera);\n    return mobile || win.navigator.userAgent.match(/iPad/i) != null;\n  }\n\n  private static isAppleMobile(win: Window) {\n    return (\n      win.navigator.userAgent.match(/iPhone/i) != null ||\n      win.navigator.userAgent.match(/iPad/i) != null\n    );\n  }\n\n  private static getUrlObject(uriString: string): URL {\n    try {\n      if (nodeURL != null) {\n        return new nodeURL.URL(uriString);\n      } else if (typeof URL === \"function\") {\n        return new URL(uriString);\n      } else if (typeof window !== \"undefined\") {\n        const hasProtocol = uriString.indexOf(\"://\") > -1;\n        if (!hasProtocol && uriString.indexOf(\".\") > -1) {\n          uriString = \"http://\" + uriString;\n        } else if (!hasProtocol) {\n          return null;\n        }\n        const anchor = window.document.createElement(\"a\");\n        anchor.href = uriString;\n        return anchor as any;\n      }\n    } catch (e) {\n      // Ignore error\n    }\n\n    return null;\n  }\n}\n\nUtils.init();\n","import { Jsonify } from \"type-fest\";\n\nimport { IEncrypted } from \"@bitwarden/common/interfaces/IEncrypted\";\n\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EncryptionType } from \"../../enums/encryptionType\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncString implements IEncrypted {\n  encryptedString?: string;\n  encryptionType?: EncryptionType;\n  decryptedValue?: string;\n  data?: string;\n  iv?: string;\n  mac?: string;\n\n  constructor(\n    encryptedStringOrType: string | EncryptionType,\n    data?: string,\n    iv?: string,\n    mac?: string\n  ) {\n    if (data != null) {\n      this.initFromData(encryptedStringOrType as EncryptionType, data, iv, mac);\n    } else {\n      this.initFromEncryptedString(encryptedStringOrType as string);\n    }\n  }\n\n  async decrypt(orgId: string, key: SymmetricCryptoKey = null): Promise<string> {\n    if (this.decryptedValue != null) {\n      return this.decryptedValue;\n    }\n\n    let cryptoService: CryptoService;\n    const containerService = Utils.global.bitwardenContainerService;\n    if (containerService) {\n      cryptoService = containerService.getCryptoService();\n    } else {\n      throw new Error(\"global bitwardenContainerService not initialized.\");\n    }\n\n    try {\n      if (key == null) {\n        key = await cryptoService.getOrgKey(orgId);\n      }\n      this.decryptedValue = await cryptoService.decryptToUtf8(this, key);\n    } catch (e) {\n      this.decryptedValue = \"[error: cannot decrypt]\";\n    }\n    return this.decryptedValue;\n  }\n\n  get ivBytes(): ArrayBuffer {\n    return this.iv == null ? null : Utils.fromB64ToArray(this.iv).buffer;\n  }\n\n  get macBytes(): ArrayBuffer {\n    return this.mac == null ? null : Utils.fromB64ToArray(this.mac).buffer;\n  }\n\n  get dataBytes(): ArrayBuffer {\n    return this.data == null ? null : Utils.fromB64ToArray(this.data).buffer;\n  }\n\n  toJSON() {\n    return this.encryptedString;\n  }\n\n  static fromJSON(obj: Jsonify<EncString>): EncString {\n    return new EncString(obj);\n  }\n\n  private initFromData(encType: EncryptionType, data: string, iv: string, mac: string) {\n    if (iv != null) {\n      this.encryptedString = encType + \".\" + iv + \"|\" + data;\n    } else {\n      this.encryptedString = encType + \".\" + data;\n    }\n\n    // mac\n    if (mac != null) {\n      this.encryptedString += \"|\" + mac;\n    }\n\n    this.encryptionType = encType;\n    this.data = data;\n    this.iv = iv;\n    this.mac = mac;\n  }\n\n  private initFromEncryptedString(encryptedString: string) {\n    this.encryptedString = encryptedString as string;\n    if (!this.encryptedString) {\n      return;\n    }\n\n    const { encType, encPieces } = this.parseEncryptedString(this.encryptedString);\n    this.encryptionType = encType;\n\n    switch (encType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64:\n        if (encPieces.length !== 3) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        this.mac = encPieces[2];\n        break;\n      case EncryptionType.AesCbc256_B64:\n        if (encPieces.length !== 2) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        break;\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n        if (encPieces.length !== 1) {\n          return;\n        }\n\n        this.data = encPieces[0];\n        break;\n      default:\n        return;\n    }\n  }\n\n  private parseEncryptedString(encryptedString: string): {\n    encType: EncryptionType;\n    encPieces: string[];\n  } {\n    const headerPieces = encryptedString.split(\".\");\n    let encType: EncryptionType;\n    let encPieces: string[] = null;\n\n    if (headerPieces.length === 2) {\n      try {\n        encType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        return;\n      }\n    } else {\n      encPieces = encryptedString.split(\"|\");\n      encType =\n        encPieces.length === 3\n          ? EncryptionType.AesCbc128_HmacSha256_B64\n          : EncryptionType.AesCbc256_B64;\n    }\n\n    return {\n      encType,\n      encPieces,\n    };\n  }\n}\n","import { View } from \"../view/view\";\n\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport default class Domain {\n  protected buildDomainModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = dataObj[map[prop] || prop];\n      if (notEncList.indexOf(prop) > -1) {\n        (domain as any)[prop] = objProp ? objProp : null;\n      } else {\n        (domain as any)[prop] = objProp ? new EncString(objProp) : null;\n      }\n    }\n  }\n  protected buildDataModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncStringList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = (domain as any)[map[prop] || prop];\n      if (notEncStringList.indexOf(prop) > -1) {\n        (dataObj as any)[prop] = objProp != null ? objProp : null;\n      } else {\n        (dataObj as any)[prop] = objProp != null ? (objProp as EncString).encryptedString : null;\n      }\n    }\n  }\n\n  protected async decryptObj<T extends View>(\n    viewModel: T,\n    map: any,\n    orgId: string,\n    key: SymmetricCryptoKey = null\n  ): Promise<T> {\n    const promises = [];\n    const self: any = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp) {\n        const p = Promise.resolve()\n          .then(() => {\n            const mapProp = map[theProp] || theProp;\n            if (self[mapProp]) {\n              return self[mapProp].decrypt(orgId, key);\n            }\n            return null;\n          })\n          .then((val: any) => {\n            (viewModel as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop);\n    }\n\n    await Promise.all(promises);\n    return viewModel;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class MasterPasswordPolicyOptions extends Domain {\n  minComplexity = 0;\n  minLength = 0;\n  requireUpper = false;\n  requireLower = false;\n  requireNumbers = false;\n  requireSpecial = false;\n}\n","<div\n  #callout\n  class=\"callout callout-{{ calloutStyle }}\"\n  [ngClass]=\"{ clickable: clickable }\"\n  [attr.role]=\"useAlertRole ? 'alert' : null\"\n>\n  <h3 class=\"callout-heading\" *ngIf=\"title\">\n    <i class=\"bwi {{ icon }}\" *ngIf=\"icon\" aria-hidden=\"true\"></i>\n    {{ title }}\n  </h3>\n  <div class=\"enforced-policy-options\" *ngIf=\"enforcedPolicyOptions\">\n    {{ enforcedPolicyMessage }}\n    <ul>\n      <li *ngIf=\"enforcedPolicyOptions?.minComplexity > 0\">\n        {{ \"policyInEffectMinComplexity\" | i18n: getPasswordScoreAlertDisplay() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.minLength > 0\">\n        {{ \"policyInEffectMinLength\" | i18n: enforcedPolicyOptions?.minLength.toString() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireUpper\">\n        {{ \"policyInEffectUppercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireLower\">\n        {{ \"policyInEffectLowercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireNumbers\">\n        {{ \"policyInEffectNumbers\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireSpecial\">\n        {{ \"policyInEffectSpecial\" | i18n: \"!@#$%^&*\" }}\n      </li>\n    </ul>\n  </div>\n  <ng-content></ng-content>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\n\n@Component({\n  selector: \"app-callout\",\n  templateUrl: \"callout.component.html\",\n})\nexport class CalloutComponent implements OnInit {\n  @Input() type = \"info\";\n  @Input() icon: string;\n  @Input() title: string;\n  @Input() clickable: boolean;\n  @Input() enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  @Input() enforcedPolicyMessage: string;\n  @Input() useAlertRole = false;\n\n  calloutStyle: string;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnInit() {\n    this.calloutStyle = this.type;\n\n    if (this.enforcedPolicyMessage === undefined) {\n      this.enforcedPolicyMessage = this.i18nService.t(\"masterPasswordPolicyInEffect\");\n    }\n\n    if (this.type === \"warning\" || this.type === \"danger\") {\n      if (this.type === \"danger\") {\n        this.calloutStyle = \"danger\";\n      }\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"warning\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-exclamation-triangle\";\n      }\n    } else if (this.type === \"error\") {\n      this.calloutStyle = \"danger\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"error\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-error\";\n      }\n    } else if (this.type === \"tip\") {\n      this.calloutStyle = \"success\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"tip\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-lightbulb\";\n      }\n    }\n  }\n\n  getPasswordScoreAlertDisplay() {\n    if (this.enforcedPolicyOptions == null) {\n      return \"\";\n    }\n\n    let str: string;\n    switch (this.enforcedPolicyOptions.minComplexity) {\n      case 4:\n        str = this.i18nService.t(\"strong\");\n        break;\n      case 3:\n        str = this.i18nService.t(\"good\");\n        break;\n      default:\n        str = this.i18nService.t(\"weak\");\n        break;\n    }\n    return str + \" (\" + this.enforcedPolicyOptions.minComplexity + \")\";\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appInputVerbatim]\",\n})\nexport class InputVerbatimDirective {\n  @Input() set appInputVerbatim(condition: boolean | string) {\n    this.disableComplete = condition === \"\" || condition === true;\n  }\n\n  private disableComplete: boolean;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (this.disableComplete && !this.el.nativeElement.hasAttribute(\"autocomplete\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocomplete\", \"off\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocapitalize\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocapitalize\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocorrect\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocorrect\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"spellcheck\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"spellcheck\", \"false\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"inputmode\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"inputmode\", \"verbatim\");\n    }\n  }\n}\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopClick]\",\n})\nexport class StopClickDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.preventDefault();\n  }\n}\n","<form #form (ngSubmit)=\"submit()\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" routerLink=\"/home\">{{ \"close\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"appName\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <app-callout\n      type=\"info\"\n      title=\"{{ 'settingsEdited' | i18n }}\"\n      *ngIf=\"showEditedManagedSettings\"\n    >\n      <a href=\"#\" appStopClick (click)=\"resetEnvironment()\">\n        {{ \"environmentEditedClick\" | i18n }}\n      </a>\n      {{ \"environmentEditedReset\" | i18n }}\n    </app-callout>\n\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"selfHostedEnvironment\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"baseUrl\">{{ \"baseUrl\" | i18n }}</label>\n          <input\n            id=\"baseUrl\"\n            type=\"text\"\n            name=\"BaseUrl\"\n            [(ngModel)]=\"baseUrl\"\n            placeholder=\"ex. https://bitwarden.company.com\"\n            appInputVerbatim\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"selfHostedEnvironmentFooter\" | i18n }}\n      </div>\n    </div>\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"customEnvironment\" | i18n }}\n      </h2>\n      <div class=\"box-content\" [hidden]=\"!showCustom\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"webVaultUrl\">{{ \"webVaultUrl\" | i18n }}</label>\n          <input\n            id=\"webVaultUrl\"\n            type=\"text\"\n            name=\"WebVaultUrl\"\n            [(ngModel)]=\"webVaultUrl\"\n            inputmode=\"url\"\n            appInputVerbatim\n          />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"apiUrl\">{{ \"apiUrl\" | i18n }}</label>\n          <input\n            id=\"apiUrl\"\n            type=\"text\"\n            name=\"ApiUrl\"\n            [(ngModel)]=\"apiUrl\"\n            inputmode=\"url\"\n            appInputVerbatim\n          />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"identityUrl\">{{ \"identityUrl\" | i18n }}</label>\n          <input\n            id=\"identityUrl\"\n            type=\"text\"\n            name=\"IdentityUrl\"\n            [(ngModel)]=\"identityUrl\"\n            inputmode=\"url\"\n            appInputVerbatim\n          />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"notificationsUrl\">{{ \"notificationsUrl\" | i18n }}</label>\n          <input\n            id=\"notificationsUrl\"\n            type=\"text\"\n            name=\"NotificationsUrl\"\n            inputmode=\"url\"\n            [(ngModel)]=\"notificationsUrl\"\n            appInputVerbatim\n          />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"iconsUrl\">{{ \"iconsUrl\" | i18n }}</label>\n          <input\n            id=\"iconsUrl\"\n            type=\"text\"\n            name=\"IconsUrl\"\n            [(ngModel)]=\"iconsUrl\"\n            inputmode=\"url\"\n            appInputVerbatim\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\" [hidden]=\"!showCustom\">\n        {{ \"customEnvironmentFooter\" | i18n }}\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { EnvironmentComponent as BaseEnvironmentComponent } from \"@bitwarden/angular/components/environment.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\nimport { BrowserEnvironmentService } from \"../../services/browser-environment.service\";\n\n@Component({\n  selector: \"app-environment\",\n  templateUrl: \"environment.component.html\",\n})\nexport class EnvironmentComponent extends BaseEnvironmentComponent implements OnInit {\n  showEditedManagedSettings = false;\n\n  constructor(\n    platformUtilsService: PlatformUtilsService,\n    public environmentService: BrowserEnvironmentService,\n    i18nService: I18nService,\n    private router: Router\n  ) {\n    super(platformUtilsService, environmentService, i18nService);\n    this.showCustom = true;\n  }\n\n  async ngOnInit() {\n    this.showEditedManagedSettings = await this.environmentService.settingsHaveChanged();\n  }\n\n  async resetEnvironment() {\n    const urls = await this.environmentService.getManagedEnvironment();\n\n    this.baseUrl = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = urls.api;\n    this.iconsUrl = urls.icons;\n    this.identityUrl = urls.identity;\n    this.notificationsUrl = urls.notifications;\n    this.iconsUrl = urls.icons;\n  }\n\n  saved() {\n    super.saved();\n    this.router.navigate([\"\"]);\n  }\n}\n","export class PasswordHintRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","import { OrganizationApiKeyType } from \"../enums/organizationApiKeyType\";\nimport { OrganizationConnectionType } from \"../enums/organizationConnectionType\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { BitPayInvoiceRequest } from \"../models/request/bitPayInvoiceRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipherBulkRestoreRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CollectionRequest } from \"../models/request/collectionRequest\";\nimport { DeleteRecoverRequest } from \"../models/request/deleteRecoverRequest\";\nimport { DeviceVerificationRequest } from \"../models/request/deviceVerificationRequest\";\nimport { EmailRequest } from \"../models/request/emailRequest\";\nimport { EmailTokenRequest } from \"../models/request/emailTokenRequest\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergencyAccessAcceptRequest\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergencyAccessConfirmRequest\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergencyAccessInviteRequest\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergencyAccessPasswordRequest\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergencyAccessUpdateRequest\";\nimport { EventRequest } from \"../models/request/eventRequest\";\nimport { GroupRequest } from \"../models/request/groupRequest\";\nimport { IapCheckRequest } from \"../models/request/iapCheckRequest\";\nimport { ApiTokenRequest } from \"../models/request/identityToken/apiTokenRequest\";\nimport { PasswordTokenRequest } from \"../models/request/identityToken/passwordTokenRequest\";\nimport { SsoTokenRequest } from \"../models/request/identityToken/ssoTokenRequest\";\nimport { ImportCiphersRequest } from \"../models/request/importCiphersRequest\";\nimport { ImportDirectoryRequest } from \"../models/request/importDirectoryRequest\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/importOrganizationCiphersRequest\";\nimport { KdfRequest } from \"../models/request/kdfRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organizationSponsorshipCreateRequest\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organizationSponsorshipRedeemRequest\";\nimport { OrganizationSsoRequest } from \"../models/request/organization/organizationSsoRequest\";\nimport { OrganizationApiKeyRequest } from \"../models/request/organizationApiKeyRequest\";\nimport { OrganizationConnectionRequest } from \"../models/request/organizationConnectionRequest\";\nimport { OrganizationCreateRequest } from \"../models/request/organizationCreateRequest\";\nimport { OrganizationImportRequest } from \"../models/request/organizationImportRequest\";\nimport { OrganizationKeysRequest } from \"../models/request/organizationKeysRequest\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../models/request/organizationSubscriptionUpdateRequest\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../models/request/organizationTaxInfoUpdateRequest\";\nimport { OrganizationUpdateRequest } from \"../models/request/organizationUpdateRequest\";\nimport { OrganizationUpgradeRequest } from \"../models/request/organizationUpgradeRequest\";\nimport { OrganizationUserAcceptRequest } from \"../models/request/organizationUserAcceptRequest\";\nimport { OrganizationUserBulkConfirmRequest } from \"../models/request/organizationUserBulkConfirmRequest\";\nimport { OrganizationUserBulkRequest } from \"../models/request/organizationUserBulkRequest\";\nimport { OrganizationUserConfirmRequest } from \"../models/request/organizationUserConfirmRequest\";\nimport { OrganizationUserInviteRequest } from \"../models/request/organizationUserInviteRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"../models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { OrganizationUserResetPasswordRequest } from \"../models/request/organizationUserResetPasswordRequest\";\nimport { OrganizationUserUpdateGroupsRequest } from \"../models/request/organizationUserUpdateGroupsRequest\";\nimport { OrganizationUserUpdateRequest } from \"../models/request/organizationUserUpdateRequest\";\nimport { PasswordHintRequest } from \"../models/request/passwordHintRequest\";\nimport { PasswordRequest } from \"../models/request/passwordRequest\";\nimport { PaymentRequest } from \"../models/request/paymentRequest\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/providerAddOrganizationRequest\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/providerOrganizationCreateRequest\";\nimport { ProviderSetupRequest } from \"../models/request/provider/providerSetupRequest\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/providerUpdateRequest\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/providerUserAcceptRequest\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/providerUserBulkConfirmRequest\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/providerUserBulkRequest\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/providerUserConfirmRequest\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/providerUserInviteRequest\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/providerUserUpdateRequest\";\nimport { RegisterRequest } from \"../models/request/registerRequest\";\nimport { SeatRequest } from \"../models/request/seatRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selectionReadOnlyRequest\";\nimport { SendAccessRequest } from \"../models/request/sendAccessRequest\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { SetPasswordRequest } from \"../models/request/setPasswordRequest\";\nimport { StorageRequest } from \"../models/request/storageRequest\";\nimport { TaxInfoUpdateRequest } from \"../models/request/taxInfoUpdateRequest\";\nimport { TwoFactorEmailRequest } from \"../models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviderRequest } from \"../models/request/twoFactorProviderRequest\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/twoFactorRecoveryRequest\";\nimport { UpdateDomainsRequest } from \"../models/request/updateDomainsRequest\";\nimport { UpdateKeyRequest } from \"../models/request/updateKeyRequest\";\nimport { UpdateProfileRequest } from \"../models/request/updateProfileRequest\";\nimport { UpdateTempPasswordRequest } from \"../models/request/updateTempPasswordRequest\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/updateTwoFactorAuthenticatorRequest\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/updateTwoFactorDuoRequest\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/updateTwoFactorEmailRequest\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/updateTwoFactorWebAuthnDeleteRequest\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/updateTwoFactorWebAuthnRequest\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/updateTwoFactorYubioOtpRequest\";\nimport { VerifyBankRequest } from \"../models/request/verifyBankRequest\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verifyDeleteRecoverRequest\";\nimport { VerifyEmailRequest } from \"../models/request/verifyEmailRequest\";\nimport { ApiKeyResponse } from \"../models/response/apiKeyResponse\";\nimport { AttachmentResponse } from \"../models/response/attachmentResponse\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { BillingHistoryResponse } from \"../models/response/billingHistoryResponse\";\nimport { BillingPaymentResponse } from \"../models/response/billingPaymentResponse\";\nimport { BillingResponse } from \"../models/response/billingResponse\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport {\n  CollectionGroupDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collectionResponse\";\nimport { DeviceVerificationResponse } from \"../models/response/deviceVerificationResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergencyAccessResponse\";\nimport { EventResponse } from \"../models/response/eventResponse\";\nimport { GroupDetailsResponse, GroupResponse } from \"../models/response/groupResponse\";\nimport { IdentityCaptchaResponse } from \"../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/keyConnectorUserKeyResponse\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { OrganizationSsoResponse } from \"../models/response/organization/organizationSsoResponse\";\nimport { OrganizationApiKeyInformationResponse } from \"../models/response/organizationApiKeyInformationResponse\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../models/response/organizationAutoEnrollStatusResponse\";\nimport {\n  OrganizationConnectionConfigApis,\n  OrganizationConnectionResponse,\n} from \"../models/response/organizationConnectionResponse\";\nimport { OrganizationExportResponse } from \"../models/response/organizationExportResponse\";\nimport { OrganizationKeysResponse } from \"../models/response/organizationKeysResponse\";\nimport { OrganizationResponse } from \"../models/response/organizationResponse\";\nimport { OrganizationSponsorshipSyncStatusResponse } from \"../models/response/organizationSponsorshipSyncStatusResponse\";\nimport { OrganizationSubscriptionResponse } from \"../models/response/organizationSubscriptionResponse\";\nimport { OrganizationUserBulkPublicKeyResponse } from \"../models/response/organizationUserBulkPublicKeyResponse\";\nimport { OrganizationUserBulkResponse } from \"../models/response/organizationUserBulkResponse\";\nimport {\n  OrganizationUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n  OrganizationUserUserDetailsResponse,\n} from \"../models/response/organizationUserResponse\";\nimport { PaymentResponse } from \"../models/response/paymentResponse\";\nimport { PlanResponse } from \"../models/response/planResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { PreloginResponse } from \"../models/response/preloginResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/providerOrganizationResponse\";\nimport { ProviderResponse } from \"../models/response/provider/providerResponse\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/providerUserBulkPublicKeyResponse\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/providerUserBulkResponse\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/providerUserResponse\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selectionReadOnlyResponse\";\nimport { SendAccessResponse } from \"../models/response/sendAccessResponse\";\nimport { SendFileDownloadDataResponse } from \"../models/response/sendFileDownloadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SsoPreValidateResponse } from \"../models/response/ssoPreValidateResponse\";\nimport { SubscriptionResponse } from \"../models/response/subscriptionResponse\";\nimport { SyncResponse } from \"../models/response/syncResponse\";\nimport { TaxInfoResponse } from \"../models/response/taxInfoResponse\";\nimport { TaxRateResponse } from \"../models/response/taxRateResponse\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/twoFactorAuthenticatorResponse\";\nimport { TwoFactorDuoResponse } from \"../models/response/twoFactorDuoResponse\";\nimport { TwoFactorEmailResponse } from \"../models/response/twoFactorEmailResponse\";\nimport { TwoFactorProviderResponse } from \"../models/response/twoFactorProviderResponse\";\nimport { TwoFactorRecoverResponse } from \"../models/response/twoFactorRescoverResponse\";\nimport {\n  ChallengeResponse,\n  TwoFactorWebAuthnResponse,\n} from \"../models/response/twoFactorWebAuthnResponse\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/twoFactorYubiKeyResponse\";\nimport { UserKeyResponse } from \"../models/response/userKeyResponse\";\nimport { SendAccessView } from \"../models/view/sendAccessView\";\n\nexport abstract class ApiService {\n  send: (\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n    path: string,\n    body: any,\n    authed: boolean,\n    hasResponse: boolean,\n    apiUrl?: string,\n    alterHeaders?: (headers: Headers) => void\n  ) => Promise<any>;\n\n  postIdentityToken: (\n    request: PasswordTokenRequest | SsoTokenRequest | ApiTokenRequest\n  ) => Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse>;\n  refreshIdentityToken: () => Promise<any>;\n\n  getProfile: () => Promise<ProfileResponse>;\n  getUserSubscription: () => Promise<SubscriptionResponse>;\n  getTaxInfo: () => Promise<TaxInfoResponse>;\n  putProfile: (request: UpdateProfileRequest) => Promise<ProfileResponse>;\n  putTaxInfo: (request: TaxInfoUpdateRequest) => Promise<any>;\n  postPrelogin: (request: PreloginRequest) => Promise<PreloginResponse>;\n  postEmailToken: (request: EmailTokenRequest) => Promise<any>;\n  postEmail: (request: EmailRequest) => Promise<any>;\n  postPassword: (request: PasswordRequest) => Promise<any>;\n  setPassword: (request: SetPasswordRequest) => Promise<any>;\n  postSetKeyConnectorKey: (request: SetKeyConnectorKeyRequest) => Promise<any>;\n  postSecurityStamp: (request: SecretVerificationRequest) => Promise<any>;\n  getAccountRevisionDate: () => Promise<number>;\n  postPasswordHint: (request: PasswordHintRequest) => Promise<any>;\n  postRegister: (request: RegisterRequest) => Promise<any>;\n  postPremium: (data: FormData) => Promise<PaymentResponse>;\n  postIapCheck: (request: IapCheckRequest) => Promise<any>;\n  postReinstatePremium: () => Promise<any>;\n  postCancelPremium: () => Promise<any>;\n  postAccountStorage: (request: StorageRequest) => Promise<PaymentResponse>;\n  postAccountPayment: (request: PaymentRequest) => Promise<any>;\n  postAccountLicense: (data: FormData) => Promise<any>;\n  postAccountKey: (request: UpdateKeyRequest) => Promise<any>;\n  postAccountKeys: (request: KeysRequest) => Promise<any>;\n  postAccountVerifyEmail: () => Promise<any>;\n  postAccountVerifyEmailToken: (request: VerifyEmailRequest) => Promise<any>;\n  postAccountVerifyPassword: (request: SecretVerificationRequest) => Promise<any>;\n  postAccountRecoverDelete: (request: DeleteRecoverRequest) => Promise<any>;\n  postAccountRecoverDeleteToken: (request: VerifyDeleteRecoverRequest) => Promise<any>;\n  postAccountKdf: (request: KdfRequest) => Promise<any>;\n  postUserApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  postUserRotateApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  putUpdateTempPassword: (request: UpdateTempPasswordRequest) => Promise<any>;\n  postConvertToKeyConnector: () => Promise<void>;\n\n  getUserBillingHistory: () => Promise<BillingHistoryResponse>;\n  getUserBillingPayment: () => Promise<BillingPaymentResponse>;\n\n  getSend: (id: string) => Promise<SendResponse>;\n  postSendAccess: (\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendAccessResponse>;\n  getSends: () => Promise<ListResponse<SendResponse>>;\n  postSend: (request: SendRequest) => Promise<SendResponse>;\n  postFileTypeSend: (request: SendRequest) => Promise<SendFileUploadDataResponse>;\n  postSendFile: (sendId: string, fileId: string, data: FormData) => Promise<any>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postSendFileLegacy: (data: FormData) => Promise<SendResponse>;\n  putSend: (id: string, request: SendRequest) => Promise<SendResponse>;\n  putSendRemovePassword: (id: string) => Promise<SendResponse>;\n  deleteSend: (id: string) => Promise<any>;\n  getSendFileDownloadData: (\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendFileDownloadDataResponse>;\n  renewSendFileUploadUrl: (sendId: string, fileId: string) => Promise<SendFileUploadDataResponse>;\n\n  getCipher: (id: string) => Promise<CipherResponse>;\n  getFullCipherDetails: (id: string) => Promise<CipherResponse>;\n  getCipherAdmin: (id: string) => Promise<CipherResponse>;\n  getAttachmentData: (\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ) => Promise<AttachmentResponse>;\n  getCiphersOrganization: (organizationId: string) => Promise<ListResponse<CipherResponse>>;\n  postCipher: (request: CipherRequest) => Promise<CipherResponse>;\n  postCipherCreate: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  postCipherAdmin: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  putCipher: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  putCipherAdmin: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  deleteCipher: (id: string) => Promise<any>;\n  deleteCipherAdmin: (id: string) => Promise<any>;\n  deleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  deleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putMoveCiphers: (request: CipherBulkMoveRequest) => Promise<any>;\n  putShareCipher: (id: string, request: CipherShareRequest) => Promise<CipherResponse>;\n  putShareCiphers: (request: CipherBulkShareRequest) => Promise<any>;\n  putCipherCollections: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  putCipherCollectionsAdmin: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  postPurgeCiphers: (request: SecretVerificationRequest, organizationId?: string) => Promise<any>;\n  postImportCiphers: (request: ImportCiphersRequest) => Promise<any>;\n  postImportOrganizationCiphers: (\n    organizationId: string,\n    request: ImportOrganizationCiphersRequest\n  ) => Promise<any>;\n  putDeleteCipher: (id: string) => Promise<any>;\n  putDeleteCipherAdmin: (id: string) => Promise<any>;\n  putDeleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putDeleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putRestoreCipher: (id: string) => Promise<CipherResponse>;\n  putRestoreCipherAdmin: (id: string) => Promise<CipherResponse>;\n  putRestoreManyCiphers: (\n    request: CipherBulkRestoreRequest\n  ) => Promise<ListResponse<CipherResponse>>;\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentAdminLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  postCipherAttachment: (\n    id: string,\n    request: AttachmentRequest\n  ) => Promise<AttachmentUploadDataResponse>;\n  deleteCipherAttachment: (id: string, attachmentId: string) => Promise<any>;\n  deleteCipherAttachmentAdmin: (id: string, attachmentId: string) => Promise<any>;\n  postShareCipherAttachment: (\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ) => Promise<any>;\n  renewAttachmentUploadUrl: (\n    id: string,\n    attachmentId: string\n  ) => Promise<AttachmentUploadDataResponse>;\n  postAttachmentFile: (id: string, attachmentId: string, data: FormData) => Promise<any>;\n\n  getCollectionDetails: (\n    organizationId: string,\n    id: string\n  ) => Promise<CollectionGroupDetailsResponse>;\n  getUserCollections: () => Promise<ListResponse<CollectionResponse>>;\n  getCollections: (organizationId: string) => Promise<ListResponse<CollectionResponse>>;\n  getCollectionUsers: (organizationId: string, id: string) => Promise<SelectionReadOnlyResponse[]>;\n  postCollection: (\n    organizationId: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  putCollectionUsers: (\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ) => Promise<any>;\n  putCollection: (\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  deleteCollection: (organizationId: string, id: string) => Promise<any>;\n  deleteCollectionUser: (\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ) => Promise<any>;\n\n  getGroupDetails: (organizationId: string, id: string) => Promise<GroupDetailsResponse>;\n  getGroups: (organizationId: string) => Promise<ListResponse<GroupResponse>>;\n  getGroupUsers: (organizationId: string, id: string) => Promise<string[]>;\n  postGroup: (organizationId: string, request: GroupRequest) => Promise<GroupResponse>;\n  putGroup: (organizationId: string, id: string, request: GroupRequest) => Promise<GroupResponse>;\n  putGroupUsers: (organizationId: string, id: string, request: string[]) => Promise<any>;\n  deleteGroup: (organizationId: string, id: string) => Promise<any>;\n  deleteGroupUser: (organizationId: string, id: string, organizationUserId: string) => Promise<any>;\n\n  getOrganizationUser: (\n    organizationId: string,\n    id: string\n  ) => Promise<OrganizationUserDetailsResponse>;\n  getOrganizationUserGroups: (organizationId: string, id: string) => Promise<string[]>;\n  getOrganizationUsers: (\n    organizationId: string\n  ) => Promise<ListResponse<OrganizationUserUserDetailsResponse>>;\n  getOrganizationUserResetPasswordDetails: (\n    organizationId: string,\n    id: string\n  ) => Promise<OrganizationUserResetPasswordDetailsReponse>;\n  postOrganizationUserInvite: (\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ) => Promise<any>;\n  postOrganizationUserReinvite: (organizationId: string, id: string) => Promise<any>;\n  postManyOrganizationUserReinvite: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n  postOrganizationUserAccept: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ) => Promise<any>;\n  postOrganizationUserConfirm: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ) => Promise<any>;\n  postOrganizationUsersPublicKey: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>>;\n  postOrganizationUserBulkConfirm: (\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  putOrganizationUser: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ) => Promise<any>;\n  putOrganizationUserGroups: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateGroupsRequest\n  ) => Promise<any>;\n  putOrganizationUserResetPasswordEnrollment: (\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ) => Promise<any>;\n  putOrganizationUserResetPassword: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ) => Promise<any>;\n  deleteOrganizationUser: (organizationId: string, id: string) => Promise<any>;\n  deleteManyOrganizationUsers: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n  revokeOrganizationUser: (organizationId: string, id: string) => Promise<any>;\n  revokeManyOrganizationUsers: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n  restoreOrganizationUser: (organizationId: string, id: string) => Promise<any>;\n  restoreManyOrganizationUsers: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  getSync: () => Promise<SyncResponse>;\n  postImportDirectory: (organizationId: string, request: ImportDirectoryRequest) => Promise<any>;\n  postPublicImportDirectory: (request: OrganizationImportRequest) => Promise<any>;\n\n  getSettingsDomains: () => Promise<DomainsResponse>;\n  putSettingsDomains: (request: UpdateDomainsRequest) => Promise<DomainsResponse>;\n\n  getTwoFactorProviders: () => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorOrganizationProviders: (\n    organizationId: string\n  ) => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorAuthenticator: (\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  getTwoFactorEmail: (request: SecretVerificationRequest) => Promise<TwoFactorEmailResponse>;\n  getTwoFactorDuo: (request: SecretVerificationRequest) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorYubiKey: (request: SecretVerificationRequest) => Promise<TwoFactorYubiKeyResponse>;\n  getTwoFactorWebAuthn: (request: SecretVerificationRequest) => Promise<TwoFactorWebAuthnResponse>;\n  getTwoFactorWebAuthnChallenge: (request: SecretVerificationRequest) => Promise<ChallengeResponse>;\n  getTwoFactorRecover: (request: SecretVerificationRequest) => Promise<TwoFactorRecoverResponse>;\n  putTwoFactorAuthenticator: (\n    request: UpdateTwoFactorAuthenticatorRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  putTwoFactorEmail: (request: UpdateTwoFactorEmailRequest) => Promise<TwoFactorEmailResponse>;\n  putTwoFactorDuo: (request: UpdateTwoFactorDuoRequest) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorYubiKey: (\n    request: UpdateTwoFactorYubioOtpRequest\n  ) => Promise<TwoFactorYubiKeyResponse>;\n  putTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  deleteTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  putTwoFactorDisable: (request: TwoFactorProviderRequest) => Promise<TwoFactorProviderResponse>;\n  putTwoFactorOrganizationDisable: (\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ) => Promise<TwoFactorProviderResponse>;\n  postTwoFactorRecover: (request: TwoFactorRecoveryRequest) => Promise<any>;\n  postTwoFactorEmailSetup: (request: TwoFactorEmailRequest) => Promise<any>;\n  postTwoFactorEmail: (request: TwoFactorEmailRequest) => Promise<any>;\n  getDeviceVerificationSettings: () => Promise<DeviceVerificationResponse>;\n  putDeviceVerificationSettings: (\n    request: DeviceVerificationRequest\n  ) => Promise<DeviceVerificationResponse>;\n\n  getEmergencyAccessTrusted: () => Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>>;\n  getEmergencyAccessGranted: () => Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>>;\n  getEmergencyAccess: (id: string) => Promise<EmergencyAccessGranteeDetailsResponse>;\n  getEmergencyGrantorPolicies: (id: string) => Promise<ListResponse<PolicyResponse>>;\n  putEmergencyAccess: (id: string, request: EmergencyAccessUpdateRequest) => Promise<any>;\n  deleteEmergencyAccess: (id: string) => Promise<any>;\n  postEmergencyAccessInvite: (request: EmergencyAccessInviteRequest) => Promise<any>;\n  postEmergencyAccessReinvite: (id: string) => Promise<any>;\n  postEmergencyAccessAccept: (id: string, request: EmergencyAccessAcceptRequest) => Promise<any>;\n  postEmergencyAccessConfirm: (id: string, request: EmergencyAccessConfirmRequest) => Promise<any>;\n  postEmergencyAccessInitiate: (id: string) => Promise<any>;\n  postEmergencyAccessApprove: (id: string) => Promise<any>;\n  postEmergencyAccessReject: (id: string) => Promise<any>;\n  postEmergencyAccessTakeover: (id: string) => Promise<EmergencyAccessTakeoverResponse>;\n  postEmergencyAccessPassword: (\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ) => Promise<any>;\n  postEmergencyAccessView: (id: string) => Promise<EmergencyAccessViewResponse>;\n\n  getOrganization: (id: string) => Promise<OrganizationResponse>;\n  getOrganizationBilling: (id: string) => Promise<BillingResponse>;\n  getOrganizationSubscription: (id: string) => Promise<OrganizationSubscriptionResponse>;\n  getCloudCommunicationsEnabled: () => Promise<boolean>;\n  abstract getOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    id: string,\n    type: OrganizationConnectionType,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  abstract createOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  abstract updateOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig },\n    organizationConnectionId: string\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  deleteOrganizationConnection: (id: string) => Promise<void>;\n  getOrganizationLicense: (id: string, installationId: string) => Promise<any>;\n  getOrganizationTaxInfo: (id: string) => Promise<TaxInfoResponse>;\n  getOrganizationAutoEnrollStatus: (\n    identifier: string\n  ) => Promise<OrganizationAutoEnrollStatusResponse>;\n  getOrganizationSso: (id: string) => Promise<OrganizationSsoResponse>;\n  postOrganization: (request: OrganizationCreateRequest) => Promise<OrganizationResponse>;\n  putOrganization: (\n    id: string,\n    request: OrganizationUpdateRequest\n  ) => Promise<OrganizationResponse>;\n  putOrganizationTaxInfo: (id: string, request: OrganizationTaxInfoUpdateRequest) => Promise<any>;\n  postLeaveOrganization: (id: string) => Promise<any>;\n  postOrganizationLicense: (data: FormData) => Promise<OrganizationResponse>;\n  postOrganizationLicenseUpdate: (id: string, data: FormData) => Promise<any>;\n  postOrganizationApiKey: (\n    id: string,\n    request: OrganizationApiKeyRequest\n  ) => Promise<ApiKeyResponse>;\n  getOrganizationApiKeyInformation: (\n    id: string,\n    type?: OrganizationApiKeyType\n  ) => Promise<ListResponse<OrganizationApiKeyInformationResponse>>;\n  postOrganizationRotateApiKey: (\n    id: string,\n    request: OrganizationApiKeyRequest\n  ) => Promise<ApiKeyResponse>;\n  postOrganizationSso: (\n    id: string,\n    request: OrganizationSsoRequest\n  ) => Promise<OrganizationSsoResponse>;\n  postOrganizationUpgrade: (\n    id: string,\n    request: OrganizationUpgradeRequest\n  ) => Promise<PaymentResponse>;\n  postOrganizationUpdateSubscription: (\n    id: string,\n    request: OrganizationSubscriptionUpdateRequest\n  ) => Promise<void>;\n  postOrganizationSeat: (id: string, request: SeatRequest) => Promise<PaymentResponse>;\n  postOrganizationStorage: (id: string, request: StorageRequest) => Promise<any>;\n  postOrganizationPayment: (id: string, request: PaymentRequest) => Promise<any>;\n  postOrganizationVerifyBank: (id: string, request: VerifyBankRequest) => Promise<any>;\n  postOrganizationCancel: (id: string) => Promise<any>;\n  postOrganizationReinstate: (id: string) => Promise<any>;\n  deleteOrganization: (id: string, request: SecretVerificationRequest) => Promise<any>;\n  getPlans: () => Promise<ListResponse<PlanResponse>>;\n  getTaxRates: () => Promise<ListResponse<TaxRateResponse>>;\n  getOrganizationKeys: (id: string) => Promise<OrganizationKeysResponse>;\n  postOrganizationKeys: (\n    id: string,\n    request: OrganizationKeysRequest\n  ) => Promise<OrganizationKeysResponse>;\n\n  postProviderSetup: (id: string, request: ProviderSetupRequest) => Promise<ProviderResponse>;\n  getProvider: (id: string) => Promise<ProviderResponse>;\n  putProvider: (id: string, request: ProviderUpdateRequest) => Promise<ProviderResponse>;\n\n  getProviderUsers: (providerId: string) => Promise<ListResponse<ProviderUserUserDetailsResponse>>;\n  getProviderUser: (providerId: string, id: string) => Promise<ProviderUserResponse>;\n  postProviderUserInvite: (providerId: string, request: ProviderUserInviteRequest) => Promise<any>;\n  postProviderUserReinvite: (providerId: string, id: string) => Promise<any>;\n  postManyProviderUserReinvite: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  postProviderUserAccept: (\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ) => Promise<any>;\n  postProviderUserConfirm: (\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ) => Promise<any>;\n  postProviderUsersPublicKey: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkPublicKeyResponse>>;\n  postProviderUserBulkConfirm: (\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  putProviderUser: (\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ) => Promise<any>;\n  deleteProviderUser: (organizationId: string, id: string) => Promise<any>;\n  deleteManyProviderUsers: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  getProviderClients: (\n    providerId: string\n  ) => Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>>;\n  postProviderAddOrganization: (\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ) => Promise<any>;\n  postProviderCreateOrganization: (\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ) => Promise<ProviderOrganizationResponse>;\n  deleteProviderOrganization: (providerId: string, organizationId: string) => Promise<any>;\n\n  getEvents: (start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n  getEventsCipher: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganization: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganizationUser: (\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProvider: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProviderUser: (\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  postEventsCollect: (request: EventRequest[]) => Promise<any>;\n\n  deleteSsoUser: (organizationId: string) => Promise<any>;\n  getSsoUserIdentifier: () => Promise<string>;\n\n  getUserPublicKey: (id: string) => Promise<UserKeyResponse>;\n\n  getHibpBreach: (username: string) => Promise<BreachAccountResponse[]>;\n\n  postBitPayInvoice: (request: BitPayInvoiceRequest) => Promise<string>;\n  postSetupPayment: () => Promise<string>;\n\n  getActiveBearerToken: () => Promise<string>;\n  fetch: (request: Request) => Promise<Response>;\n  nativeFetch: (request: Request) => Promise<Response>;\n\n  preValidateSso: (identifier: string) => Promise<SsoPreValidateResponse>;\n\n  postCreateSponsorship: (\n    sponsorshipOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ) => Promise<void>;\n  getSponsorshipSyncStatus: (\n    sponsoredOrgId: string\n  ) => Promise<OrganizationSponsorshipSyncStatusResponse>;\n  deleteRevokeSponsorship: (sponsoringOrganizationId: string) => Promise<void>;\n  deleteRemoveSponsorship: (sponsoringOrgId: string) => Promise<void>;\n  postPreValidateSponsorshipToken: (sponsorshipToken: string) => Promise<boolean>;\n  postRedeemSponsorship: (\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ) => Promise<void>;\n  postResendSponsorshipOffer: (sponsoringOrgId: string) => Promise<void>;\n\n  getUserKeyFromKeyConnector: (keyConnectorUrl: string) => Promise<KeyConnectorUserKeyResponse>;\n  postUserKeyToKeyConnector: (\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ) => Promise<void>;\n  getKeyConnectorAlive: (keyConnectorUrl: string) => Promise<void>;\n  getOrganizationExport: (organizationId: string) => Promise<OrganizationExportResponse>;\n}\n","import { LogLevelType } from \"../enums/logLevelType\";\n\nexport abstract class LogService {\n  debug: (message: string) => void;\n  info: (message: string) => void;\n  warning: (message: string) => void;\n  error: (message: string) => void;\n  write: (level: LogLevelType, message: string) => void;\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/errorResponse\";\n\n@Injectable()\nexport class ValidationService {\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  showError(data: any): string[] {\n    const defaultErrorMessage = this.i18nService.t(\"unexpectedError\");\n    let errors: string[] = [];\n\n    if (data != null && typeof data === \"string\") {\n      errors.push(data);\n    } else if (data == null || typeof data !== \"object\") {\n      errors.push(defaultErrorMessage);\n    } else if (data.validationErrors != null) {\n      errors = errors.concat((data as ErrorResponse).getAllMessages());\n    } else {\n      errors.push(data.message ? data.message : defaultErrorMessage);\n    }\n\n    if (errors.length === 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors[0]);\n    } else if (errors.length > 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors, {\n        timeout: 5000 * errors.length,\n      });\n    }\n\n    return errors;\n  }\n}\n","import { Directive, ElementRef, Input, OnChanges } from \"@angular/core\";\n\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/errorResponse\";\n\nimport { ValidationService } from \"../services/validation.service\";\n\n/**\n * Provides error handling, in particular for any error returned by the server in an api call.\n * Attach it to a <form> element and provide the name of the class property that will hold the api call promise.\n * e.g. <form [appApiAction]=\"this.formPromise\">\n * Any errors/rejections that occur will be intercepted and displayed as error toasts.\n */\n@Directive({\n  selector: \"[appApiAction]\",\n})\nexport class ApiActionDirective implements OnChanges {\n  @Input() appApiAction: Promise<any>;\n\n  constructor(\n    private el: ElementRef,\n    private validationService: ValidationService,\n    private logService: LogService\n  ) {}\n\n  ngOnChanges(changes: any) {\n    if (this.appApiAction == null || this.appApiAction.then == null) {\n      return;\n    }\n\n    this.el.nativeElement.loading = true;\n\n    this.appApiAction.then(\n      (response: any) => {\n        this.el.nativeElement.loading = false;\n      },\n      (e: any) => {\n        this.el.nativeElement.loading = false;\n\n        if ((e as ErrorResponse).captchaRequired) {\n          this.logService.error(\"Captcha required error response: \" + e.getSingleMessage());\n          return;\n        }\n        this.logService?.error(`Received API exception: ${e}`);\n        this.validationService.showError(e);\n      }\n    );\n  }\n}\n","import { Directive, ElementRef, Input, NgZone } from \"@angular/core\";\nimport { take } from \"rxjs/operators\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Directive({\n  selector: \"[appAutofocus]\",\n})\nexport class AutofocusDirective {\n  @Input() set appAutofocus(condition: boolean | string) {\n    this.autofocus = condition === \"\" || condition === true;\n  }\n\n  private autofocus: boolean;\n\n  constructor(private el: ElementRef, private ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (!Utils.isMobileBrowser && this.autofocus) {\n      if (this.ngZone.isStable) {\n        this.el.nativeElement.focus();\n      } else {\n        this.ngZone.onStable.pipe(take(1)).subscribe(() => this.el.nativeElement.focus());\n      }\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { HintComponent as BaseHintComponent } from \"@bitwarden/angular/components/hint.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-hint\",\n  templateUrl: \"hint.component.html\",\n})\nexport class HintComponent extends BaseHintComponent {\n  constructor(\n    router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    apiService: ApiService,\n    logService: LogService\n  ) {\n    super(router, i18nService, apiService, platformUtilsService, logService);\n  }\n}\n","import { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PasswordHintRequest } from \"@bitwarden/common/models/request/passwordHintRequest\";\n\nexport class HintComponent {\n  email = \"\";\n  formPromise: Promise<any>;\n\n  protected successRoute = \"login\";\n  protected onSuccessfulSubmit: () => void;\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    if (this.email == null || this.email === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"emailRequired\")\n      );\n      return;\n    }\n    if (this.email.indexOf(\"@\") === -1) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.apiService.postPasswordHint(new PasswordHintRequest(this.email));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"masterPassSent\"));\n      if (this.onSuccessfulSubmit != null) {\n        this.onSuccessfulSubmit();\n      } else if (this.router != null) {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" routerLink=\"/login\">{{ \"cancel\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"passwordHint\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n          <input\n            id=\"email\"\n            type=\"text\"\n            name=\"Email\"\n            [(ngModel)]=\"email\"\n            required\n            appAutofocus\n            inputmode=\"email\"\n            appInputVerbatim=\"false\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"enterEmailToGetHint\" | i18n }}\n      </div>\n    </div>\n  </main>\n</form>\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/passwordGeneratorPolicyOptions\";\n\nexport abstract class PasswordGenerationService {\n  generatePassword: (options: any) => Promise<string>;\n  generatePassphrase: (options: any) => Promise<string>;\n  getOptions: () => Promise<[any, PasswordGeneratorPolicyOptions]>;\n  enforcePasswordGeneratorPoliciesOnOptions: (\n    options: any\n  ) => Promise<[any, PasswordGeneratorPolicyOptions]>;\n  getPasswordGeneratorPolicyOptions: () => Promise<PasswordGeneratorPolicyOptions>;\n  saveOptions: (options: any) => Promise<any>;\n  getHistory: () => Promise<GeneratedPasswordHistory[]>;\n  addHistory: (password: string) => Promise<any>;\n  clear: (userId?: string) => Promise<any>;\n  passwordStrength: (password: string, userInputs?: string[]) => zxcvbn.ZXCVBNResult;\n  normalizeOptions: (options: any, enforcedPolicyOptions: PasswordGeneratorPolicyOptions) => void;\n}\n","import { BehaviorSubject, Observable } from \"rxjs\";\n\nimport { KdfType } from \"../enums/kdfType\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encryptedOrganizationKeyData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { Account } from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/encString\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { Policy } from \"../models/domain/policy\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { WindowState } from \"../models/domain/windowState\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class StateService<T extends Account = Account> {\n  accounts: BehaviorSubject<{ [userId: string]: T }>;\n  activeAccount$: Observable<string>;\n  activeAccountUnlocked$: Observable<boolean>;\n\n  addAccount: (account: T) => Promise<void>;\n  setActiveUser: (userId: string) => Promise<void>;\n  clean: (options?: StorageOptions) => Promise<void>;\n  init: () => Promise<void>;\n\n  getAccessToken: (options?: StorageOptions) => Promise<string>;\n  setAccessToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getAddEditCipherInfo: (options?: StorageOptions) => Promise<any>;\n  setAddEditCipherInfo: (value: any, options?: StorageOptions) => Promise<void>;\n  getAlwaysShowDock: (options?: StorageOptions) => Promise<boolean>;\n  setAlwaysShowDock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientId: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientId: (value: string, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientSecret: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientSecret: (value: string, options?: StorageOptions) => Promise<void>;\n  getAutoConfirmFingerPrints: (options?: StorageOptions) => Promise<boolean>;\n  setAutoConfirmFingerprints: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getAutoFillOnPageLoadDefault: (options?: StorageOptions) => Promise<boolean>;\n  setAutoFillOnPageLoadDefault: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricAwaitingAcceptance: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricAwaitingAcceptance: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricFingerprintValidated: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricFingerprintValidated: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricText: (options?: StorageOptions) => Promise<string>;\n  setBiometricText: (value: string, options?: StorageOptions) => Promise<void>;\n  getBiometricUnlock: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricUnlock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCanAccessPremium: (options?: StorageOptions) => Promise<boolean>;\n  getHasPremiumPersonally: (options?: StorageOptions) => Promise<boolean>;\n  setHasPremiumPersonally: (value: boolean, options?: StorageOptions) => Promise<void>;\n  setHasPremiumFromOrganization: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getHasPremiumFromOrganization: (options?: StorageOptions) => Promise<boolean>;\n  getClearClipboard: (options?: StorageOptions) => Promise<number>;\n  setClearClipboard: (value: number, options?: StorageOptions) => Promise<void>;\n  getCollapsedGroupings: (options?: StorageOptions) => Promise<string[]>;\n  setCollapsedGroupings: (value: string[], options?: StorageOptions) => Promise<void>;\n  getConvertAccountToKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setConvertAccountToKeyConnector: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setCryptoMasterKey: (value: SymmetricCryptoKey, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyAuto: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyAuto: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyB64: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyB64: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<string>;\n  hasCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setCryptoMasterKeyBiometric: (value: string, options?: StorageOptions) => Promise<void>;\n  getDecodedToken: (options?: StorageOptions) => Promise<any>;\n  setDecodedToken: (value: any, options?: StorageOptions) => Promise<void>;\n  getDecryptedCiphers: (options?: StorageOptions) => Promise<CipherView[]>;\n  setDecryptedCiphers: (value: CipherView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCollections: (options?: StorageOptions) => Promise<CollectionView[]>;\n  setDecryptedCollections: (value: CollectionView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setDecryptedCryptoSymmetricKey: (\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedOrganizationKeys: (\n    options?: StorageOptions\n  ) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedOrganizationKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setDecryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPinProtected: (options?: StorageOptions) => Promise<EncString>;\n  setDecryptedPinProtected: (value: EncString, options?: StorageOptions) => Promise<void>;\n  getDecryptedPolicies: (options?: StorageOptions) => Promise<Policy[]>;\n  setDecryptedPolicies: (value: Policy[], options?: StorageOptions) => Promise<void>;\n  getDecryptedPrivateKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setDecryptedPrivateKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getDecryptedProviderKeys: (options?: StorageOptions) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedProviderKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedSends: (options?: StorageOptions) => Promise<SendView[]>;\n  setDecryptedSends: (value: SendView[], options?: StorageOptions) => Promise<void>;\n  getDefaultUriMatch: (options?: StorageOptions) => Promise<UriMatchType>;\n  setDefaultUriMatch: (value: UriMatchType, options?: StorageOptions) => Promise<void>;\n  getDisableAddLoginNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAddLoginNotification: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoBiometricsPrompt: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoBiometricsPrompt: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoTotpCopy: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoTotpCopy: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableBadgeCounter: (options?: StorageOptions) => Promise<boolean>;\n  setDisableBadgeCounter: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableChangedPasswordNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableChangedPasswordNotification: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDisableContextMenuItem: (options?: StorageOptions) => Promise<boolean>;\n  setDisableContextMenuItem: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableFavicon: (options?: StorageOptions) => Promise<boolean>;\n  setDisableFavicon: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableGa: (options?: StorageOptions) => Promise<boolean>;\n  setDisableGa: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowCardsCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowCardsCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowIdentitiesCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowIdentitiesCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEmail: (options?: StorageOptions) => Promise<string>;\n  setEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getEmailVerified: (options?: StorageOptions) => Promise<boolean>;\n  setEmailVerified: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAlwaysOnTop: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAlwaysOnTop: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAutoFillOnPageLoad: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAutoFillOnPageLoad: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBiometric: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegration: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegration: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegrationFingerprint: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegrationFingerprint: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEnableCloseToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableCloseToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableFullWidth: (options?: StorageOptions) => Promise<boolean>;\n  setEnableFullWidth: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableGravitars: (options?: StorageOptions) => Promise<boolean>;\n  setEnableGravitars: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableMinimizeToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableMinimizeToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableStartToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableStartToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEncryptedCiphers: (options?: StorageOptions) => Promise<{ [id: string]: CipherData }>;\n  setEncryptedCiphers: (\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCollections: (options?: StorageOptions) => Promise<{ [id: string]: CollectionData }>;\n  setEncryptedCollections: (\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedCryptoSymmetricKey: (value: string, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use FolderService\n   */\n  getEncryptedFolders: (options?: StorageOptions) => Promise<{ [id: string]: FolderData }>;\n  /**\n   * @deprecated Do not call this directly, use FolderService\n   */\n  setEncryptedFolders: (\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedOrganizationKeys: (\n    options?: StorageOptions\n  ) => Promise<{ [orgId: string]: EncryptedOrganizationKeyData }>;\n  setEncryptedOrganizationKeys: (\n    value: { [orgId: string]: EncryptedOrganizationKeyData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setEncryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPinProtected: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPinProtected: (value: string, options?: StorageOptions) => Promise<void>;\n  getEncryptedPolicies: (options?: StorageOptions) => Promise<{ [id: string]: PolicyData }>;\n  setEncryptedPolicies: (\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPrivateKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPrivateKey: (value: string, options?: StorageOptions) => Promise<void>;\n  getEncryptedProviderKeys: (options?: StorageOptions) => Promise<any>;\n  setEncryptedProviderKeys: (value: any, options?: StorageOptions) => Promise<void>;\n  getEncryptedSends: (options?: StorageOptions) => Promise<{ [id: string]: SendData }>;\n  setEncryptedSends: (value: { [id: string]: SendData }, options?: StorageOptions) => Promise<void>;\n  getEntityId: (options?: StorageOptions) => Promise<string>;\n  setEntityId: (value: string, options?: StorageOptions) => Promise<void>;\n  getEntityType: (options?: StorageOptions) => Promise<any>;\n  setEntityType: (value: string, options?: StorageOptions) => Promise<void>;\n  getEnvironmentUrls: (options?: StorageOptions) => Promise<EnvironmentUrls>;\n  setEnvironmentUrls: (value: EnvironmentUrls, options?: StorageOptions) => Promise<void>;\n  getEquivalentDomains: (options?: StorageOptions) => Promise<any>;\n  setEquivalentDomains: (value: string, options?: StorageOptions) => Promise<void>;\n  getEventCollection: (options?: StorageOptions) => Promise<EventData[]>;\n  setEventCollection: (value: EventData[], options?: StorageOptions) => Promise<void>;\n  getEverBeenUnlocked: (options?: StorageOptions) => Promise<boolean>;\n  setEverBeenUnlocked: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getForcePasswordReset: (options?: StorageOptions) => Promise<boolean>;\n  setForcePasswordReset: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getInstalledVersion: (options?: StorageOptions) => Promise<string>;\n  setInstalledVersion: (value: string, options?: StorageOptions) => Promise<void>;\n  getIsAuthenticated: (options?: StorageOptions) => Promise<boolean>;\n  getKdfIterations: (options?: StorageOptions) => Promise<number>;\n  setKdfIterations: (value: number, options?: StorageOptions) => Promise<void>;\n  getKdfType: (options?: StorageOptions) => Promise<KdfType>;\n  setKdfType: (value: KdfType, options?: StorageOptions) => Promise<void>;\n  getKeyHash: (options?: StorageOptions) => Promise<string>;\n  setKeyHash: (value: string, options?: StorageOptions) => Promise<void>;\n  getLastActive: (options?: StorageOptions) => Promise<number>;\n  setLastActive: (value: number, options?: StorageOptions) => Promise<void>;\n  getLastSync: (options?: StorageOptions) => Promise<string>;\n  setLastSync: (value: string, options?: StorageOptions) => Promise<void>;\n  getLocalData: (options?: StorageOptions) => Promise<any>;\n  setLocalData: (value: string, options?: StorageOptions) => Promise<void>;\n  getLocale: (options?: StorageOptions) => Promise<string>;\n  setLocale: (value: string, options?: StorageOptions) => Promise<void>;\n  getMainWindowSize: (options?: StorageOptions) => Promise<number>;\n  setMainWindowSize: (value: number, options?: StorageOptions) => Promise<void>;\n  getMinimizeOnCopyToClipboard: (options?: StorageOptions) => Promise<boolean>;\n  setMinimizeOnCopyToClipboard: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNeverDomains: (options?: StorageOptions) => Promise<{ [id: string]: any }>;\n  setNeverDomains: (value: { [id: string]: any }, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometrics: (options?: StorageOptions) => Promise<boolean>;\n  setNoAutoPromptBiometrics: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometricsText: (options?: StorageOptions) => Promise<string>;\n  setNoAutoPromptBiometricsText: (value: string, options?: StorageOptions) => Promise<void>;\n  getOpenAtLogin: (options?: StorageOptions) => Promise<boolean>;\n  setOpenAtLogin: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getOrganizationInvitation: (options?: StorageOptions) => Promise<any>;\n  setOrganizationInvitation: (value: any, options?: StorageOptions) => Promise<void>;\n  getOrganizations: (options?: StorageOptions) => Promise<{ [id: string]: OrganizationData }>;\n  setOrganizations: (\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getPasswordGenerationOptions: (options?: StorageOptions) => Promise<any>;\n  setPasswordGenerationOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getUsernameGenerationOptions: (options?: StorageOptions) => Promise<any>;\n  setUsernameGenerationOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getGeneratorOptions: (options?: StorageOptions) => Promise<any>;\n  setGeneratorOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getProtectedPin: (options?: StorageOptions) => Promise<string>;\n  setProtectedPin: (value: string, options?: StorageOptions) => Promise<void>;\n  getProviders: (options?: StorageOptions) => Promise<{ [id: string]: ProviderData }>;\n  setProviders: (value: { [id: string]: ProviderData }, options?: StorageOptions) => Promise<void>;\n  getPublicKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setPublicKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getRefreshToken: (options?: StorageOptions) => Promise<string>;\n  setRefreshToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getRememberedEmail: (options?: StorageOptions) => Promise<string>;\n  setRememberedEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getSecurityStamp: (options?: StorageOptions) => Promise<string>;\n  setSecurityStamp: (value: string, options?: StorageOptions) => Promise<void>;\n  getSettings: (options?: StorageOptions) => Promise<any>;\n  setSettings: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoCodeVerifier: (options?: StorageOptions) => Promise<string>;\n  setSsoCodeVerifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoOrgIdentifier: (options?: StorageOptions) => Promise<string>;\n  setSsoOrganizationIdentifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoState: (options?: StorageOptions) => Promise<string>;\n  setSsoState: (value: string, options?: StorageOptions) => Promise<void>;\n  getTheme: (options?: StorageOptions) => Promise<ThemeType>;\n  setTheme: (value: ThemeType, options?: StorageOptions) => Promise<void>;\n  getTwoFactorToken: (options?: StorageOptions) => Promise<string>;\n  setTwoFactorToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getUserId: (options?: StorageOptions) => Promise<string>;\n  getUsesKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setUsesKeyConnector: (vaule: boolean, options?: StorageOptions) => Promise<void>;\n  getVaultTimeout: (options?: StorageOptions) => Promise<number>;\n  setVaultTimeout: (value: number, options?: StorageOptions) => Promise<void>;\n  getVaultTimeoutAction: (options?: StorageOptions) => Promise<string>;\n  setVaultTimeoutAction: (value: string, options?: StorageOptions) => Promise<void>;\n  getStateVersion: () => Promise<number>;\n  setStateVersion: (value: number) => Promise<void>;\n  getWindow: () => Promise<WindowState>;\n  setWindow: (value: WindowState) => Promise<void>;\n}\n","import { DecryptParameters } from \"../models/domain/decryptParameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nexport abstract class CryptoFunctionService {\n  pbkdf2: (\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ) => Promise<ArrayBuffer>;\n  hkdf: (\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hkdfExpand: (\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hash: (\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ) => Promise<ArrayBuffer>;\n  hmac: (\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  compare: (a: ArrayBuffer, b: ArrayBuffer) => Promise<boolean>;\n  hmacFast: (\n    value: ArrayBuffer | string,\n    key: ArrayBuffer | string,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer | string>;\n  compareFast: (a: ArrayBuffer | string, b: ArrayBuffer | string) => Promise<boolean>;\n  aesEncrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  aesDecryptFastParameters: (\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ) => DecryptParameters<ArrayBuffer | string>;\n  aesDecryptFast: (parameters: DecryptParameters<ArrayBuffer | string>) => Promise<string>;\n  aesDecrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaEncrypt: (\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaDecrypt: (\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaExtractPublicKey: (privateKey: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaGenerateKeyPair: (length: 1024 | 2048 | 4096) => Promise<[ArrayBuffer, ArrayBuffer]>;\n  randomBytes: (length: number) => Promise<ArrayBuffer>;\n}\n","export enum HashPurpose {\n  ServerAuthorization = 1,\n  LocalAuthorization = 2,\n}\n","export enum KeySuffixOptions {\n  Auto = \"auto\",\n  Biometric = \"biometric\",\n}\n","import { Component } from \"@angular/core\";\n\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"app-home\",\n  templateUrl: \"home.component.html\",\n})\nexport class HomeComponent {\n  constructor(\n    protected platformUtilsService: PlatformUtilsService,\n    private passwordGenerationService: PasswordGenerationService,\n    private stateService: StateService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private environmentService: EnvironmentService\n  ) {}\n\n  async launchSsoBrowser() {\n    // Generate necessary sso params\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n\n    const state =\n      (await this.passwordGenerationService.generatePassword(passwordOptions)) +\n      \":clientId=browser\";\n    const codeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const codeVerifierHash = await this.cryptoFunctionService.hash(codeVerifier, \"sha256\");\n    const codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n\n    await this.stateService.setSsoCodeVerifier(codeVerifier);\n    await this.stateService.setSsoState(state);\n\n    let url = this.environmentService.getWebVaultUrl();\n    if (url == null) {\n      url = \"https://vault.bitwarden.com\";\n    }\n\n    const redirectUri = url + \"/sso-connector.html\";\n\n    // Launch browser\n    this.platformUtilsService.launchUri(\n      url +\n        \"/#/sso?clientId=browser\" +\n        \"&redirectUri=\" +\n        encodeURIComponent(redirectUri) +\n        \"&state=\" +\n        state +\n        \"&codeChallenge=\" +\n        codeChallenge\n    );\n  }\n}\n","<div class=\"center-content\">\n  <div class=\"content\">\n    <div class=\"logo-image\"></div>\n    <p class=\"lead text-center\">{{ \"loginOrCreateNewAccount\" | i18n }}</p>\n    <button type=\"button\" class=\"btn primary block\" routerLink=\"/login\">\n      <b>{{ \"login\" | i18n }}</b>\n    </button>\n    <button type=\"button\" (click)=\"launchSsoBrowser()\" class=\"btn block\">\n      <i class=\"bwi bwi-bank\" aria-hidden=\"true\"></i> {{ \"enterpriseSingleSignOn\" | i18n }}\n    </button>\n    <button type=\"button\" class=\"btn block\" routerLink=\"/register\">\n      {{ \"createAccount\" | i18n }}\n    </button>\n  </div>\n</div>\n<button type=\"button\" routerLink=\"/environment\" class=\"settings-icon\">\n  <i class=\"bwi bwi-cog-f bwi-lg\" aria-hidden=\"true\"></i><span>&nbsp;{{ \"settings\" | i18n }}</span>\n</button>\n","export class SecretVerificationRequest {\n  masterPasswordHash: string;\n  otp: string;\n}\n","import { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { ProfileOrganizationResponse } from \"../models/response/profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"../models/response/profileProviderResponse\";\n\nexport abstract class CryptoService {\n  setKey: (key: SymmetricCryptoKey) => Promise<any>;\n  setKeyHash: (keyHash: string) => Promise<void>;\n  setEncKey: (encKey: string) => Promise<void>;\n  setEncPrivateKey: (encPrivateKey: string) => Promise<void>;\n  setOrgKeys: (\n    orgs: ProfileOrganizationResponse[],\n    providerOrgs: ProfileProviderOrganizationResponse[]\n  ) => Promise<void>;\n  setProviderKeys: (orgs: ProfileProviderResponse[]) => Promise<void>;\n  getKey: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyFromStorage: (keySuffix: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyHash: () => Promise<string>;\n  compareAndUpdateKeyHash: (masterPassword: string, key: SymmetricCryptoKey) => Promise<boolean>;\n  getEncKey: (key?: SymmetricCryptoKey) => Promise<SymmetricCryptoKey>;\n  getPublicKey: () => Promise<ArrayBuffer>;\n  getPrivateKey: () => Promise<ArrayBuffer>;\n  getFingerprint: (userId: string, publicKey?: ArrayBuffer) => Promise<string[]>;\n  getOrgKeys: () => Promise<Map<string, SymmetricCryptoKey>>;\n  getOrgKey: (orgId: string) => Promise<SymmetricCryptoKey>;\n  getProviderKey: (providerId: string) => Promise<SymmetricCryptoKey>;\n  getKeyForUserEncryption: (key?: SymmetricCryptoKey) => Promise<SymmetricCryptoKey>;\n  hasKey: () => Promise<boolean>;\n  hasKeyInMemory: (userId?: string) => Promise<boolean>;\n  hasKeyStored: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<boolean>;\n  hasEncKey: () => Promise<boolean>;\n  clearKey: (clearSecretStorage?: boolean, userId?: string) => Promise<any>;\n  clearKeyHash: () => Promise<any>;\n  clearEncKey: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearKeyPair: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearOrgKeys: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearProviderKeys: (memoryOnly?: boolean) => Promise<any>;\n  clearPinProtectedKey: () => Promise<any>;\n  clearKeys: (userId?: string) => Promise<any>;\n  toggleKey: () => Promise<any>;\n  makeKey: (\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ) => Promise<SymmetricCryptoKey>;\n  makeKeyFromPin: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    protectedKeyCs?: EncString\n  ) => Promise<SymmetricCryptoKey>;\n  makeShareKey: () => Promise<[EncString, SymmetricCryptoKey]>;\n  makeKeyPair: (key?: SymmetricCryptoKey) => Promise<[string, EncString]>;\n  makePinKey: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ) => Promise<SymmetricCryptoKey>;\n  makeSendKey: (keyMaterial: ArrayBuffer) => Promise<SymmetricCryptoKey>;\n  hashPassword: (\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ) => Promise<string>;\n  makeEncKey: (key: SymmetricCryptoKey) => Promise<[SymmetricCryptoKey, EncString]>;\n  remakeEncKey: (\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ) => Promise<[SymmetricCryptoKey, EncString]>;\n  encrypt: (plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncString>;\n  encryptToBytes: (plainValue: ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncArrayBuffer>;\n  rsaEncrypt: (data: ArrayBuffer, publicKey?: ArrayBuffer) => Promise<EncString>;\n  rsaDecrypt: (encValue: string, privateKeyValue?: ArrayBuffer) => Promise<ArrayBuffer>;\n  decryptToBytes: (encString: EncString, key?: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  decryptToUtf8: (encString: EncString, key?: SymmetricCryptoKey) => Promise<string>;\n  decryptFromBytes: (encBuffer: EncArrayBuffer, key: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  randomNumber: (min: number, max: number) => Promise<number>;\n  validateKey: (key: SymmetricCryptoKey) => Promise<boolean>;\n}\n","export abstract class VaultTimeoutService {\n  checkVaultTimeout: () => Promise<void>;\n  lock: (allowSoftLock?: boolean, userId?: string) => Promise<void>;\n  logOut: (userId?: string) => Promise<void>;\n  setVaultTimeoutOptions: (vaultTimeout: number, vaultTimeoutAction: string) => Promise<void>;\n  getVaultTimeout: () => Promise<number>;\n  isPinLockSet: () => Promise<[boolean, boolean]>;\n  isBiometricLockSet: () => Promise<boolean>;\n  clear: (userId?: string) => Promise<any>;\n}\n","import { Directive, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Subscription } from \"rxjs\";\nimport { take } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout.service\";\nimport { HashPurpose } from \"@bitwarden/common/enums/hashPurpose\";\nimport { KeySuffixOptions } from \"@bitwarden/common/enums/keySuffixOptions\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secretVerificationRequest\";\n\n@Directive()\nexport class LockComponent implements OnInit, OnDestroy {\n  masterPassword = \"\";\n  pin = \"\";\n  showPassword = false;\n  email: string;\n  pinLock = false;\n  webVaultHostname = \"\";\n  formPromise: Promise<any>;\n  supportsBiometric: boolean;\n  biometricLock: boolean;\n  biometricText: string;\n  hideInput: boolean;\n\n  protected successRoute = \"vault\";\n  protected onSuccessfulSubmit: () => Promise<void>;\n\n  private invalidPinAttempts = 0;\n  private pinSet: [boolean, boolean];\n\n  private activeAccountSubscription: Subscription;\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected cryptoService: CryptoService,\n    protected vaultTimeoutService: VaultTimeoutService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected apiService: ApiService,\n    protected logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    protected ngZone: NgZone\n  ) {}\n\n  async ngOnInit() {\n    this.activeAccountSubscription = this.stateService.activeAccount$.subscribe(async () => {\n      await this.load();\n    });\n  }\n\n  ngOnDestroy() {\n    this.activeAccountSubscription.unsubscribe();\n  }\n\n  async submit() {\n    if (this.pinLock) {\n      return await this.handlePinRequiredUnlock();\n    }\n\n    await this.handleMasterPasswordRequiredUnlock();\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  async unlockBiometric(): Promise<boolean> {\n    if (!this.biometricLock) {\n      return;\n    }\n\n    const success = (await this.cryptoService.getKey(KeySuffixOptions.Biometric)) != null;\n\n    if (success) {\n      await this.doContinue();\n    }\n\n    return success;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    const input = document.getElementById(this.pinLock ? \"pin\" : \"masterPassword\");\n    if (this.ngZone.isStable) {\n      input.focus();\n    } else {\n      this.ngZone.onStable.pipe(take(1)).subscribe(() => input.focus());\n    }\n  }\n\n  private async handlePinRequiredUnlock() {\n    if (this.pin == null || this.pin === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"pinRequired\")\n      );\n      return;\n    }\n\n    return await this.doUnlockWithPin();\n  }\n\n  private async doUnlockWithPin() {\n    let failed = true;\n    try {\n      const kdf = await this.stateService.getKdfType();\n      const kdfIterations = await this.stateService.getKdfIterations();\n      if (this.pinSet[0]) {\n        const key = await this.cryptoService.makeKeyFromPin(\n          this.pin,\n          this.email,\n          kdf,\n          kdfIterations,\n          await this.stateService.getDecryptedPinProtected()\n        );\n        const encKey = await this.cryptoService.getEncKey(key);\n        const protectedPin = await this.stateService.getProtectedPin();\n        const decPin = await this.cryptoService.decryptToUtf8(new EncString(protectedPin), encKey);\n        failed = decPin !== this.pin;\n        if (!failed) {\n          await this.setKeyAndContinue(key);\n        }\n      } else {\n        const key = await this.cryptoService.makeKeyFromPin(\n          this.pin,\n          this.email,\n          kdf,\n          kdfIterations\n        );\n        failed = false;\n        await this.setKeyAndContinue(key);\n      }\n    } catch {\n      failed = true;\n    }\n\n    if (failed) {\n      this.invalidPinAttempts++;\n      if (this.invalidPinAttempts >= 5) {\n        this.messagingService.send(\"logout\");\n        return;\n      }\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidPin\")\n      );\n    }\n  }\n\n  private async handleMasterPasswordRequiredUnlock() {\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return;\n    }\n    await this.doUnlockWithMasterPassword();\n  }\n\n  private async doUnlockWithMasterPassword() {\n    const kdf = await this.stateService.getKdfType();\n    const kdfIterations = await this.stateService.getKdfIterations();\n\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      this.email,\n      kdf,\n      kdfIterations\n    );\n    const storedKeyHash = await this.cryptoService.getKeyHash();\n\n    let passwordValid = false;\n\n    if (storedKeyHash != null) {\n      passwordValid = await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, key);\n    } else {\n      const request = new SecretVerificationRequest();\n      const serverKeyHash = await this.cryptoService.hashPassword(\n        this.masterPassword,\n        key,\n        HashPurpose.ServerAuthorization\n      );\n      request.masterPasswordHash = serverKeyHash;\n      try {\n        this.formPromise = this.apiService.postAccountVerifyPassword(request);\n        await this.formPromise;\n        passwordValid = true;\n        const localKeyHash = await this.cryptoService.hashPassword(\n          this.masterPassword,\n          key,\n          HashPurpose.LocalAuthorization\n        );\n        await this.cryptoService.setKeyHash(localKeyHash);\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    if (!passwordValid) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidMasterPassword\")\n      );\n      return;\n    }\n\n    if (this.pinSet[0]) {\n      const protectedPin = await this.stateService.getProtectedPin();\n      const encKey = await this.cryptoService.getEncKey(key);\n      const decPin = await this.cryptoService.decryptToUtf8(new EncString(protectedPin), encKey);\n      const pinKey = await this.cryptoService.makePinKey(decPin, this.email, kdf, kdfIterations);\n      await this.stateService.setDecryptedPinProtected(\n        await this.cryptoService.encrypt(key.key, pinKey)\n      );\n    }\n    await this.setKeyAndContinue(key);\n  }\n  private async setKeyAndContinue(key: SymmetricCryptoKey) {\n    await this.cryptoService.setKey(key);\n    await this.doContinue();\n  }\n\n  private async doContinue() {\n    await this.stateService.setEverBeenUnlocked(true);\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    this.messagingService.send(\"unlocked\");\n    if (this.onSuccessfulSubmit != null) {\n      await this.onSuccessfulSubmit();\n    } else if (this.router != null) {\n      this.router.navigate([this.successRoute]);\n    }\n  }\n\n  private async load() {\n    this.pinSet = await this.vaultTimeoutService.isPinLockSet();\n    this.pinLock =\n      (this.pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) ||\n      this.pinSet[1];\n    this.supportsBiometric = await this.platformUtilsService.supportsBiometric();\n    this.biometricLock =\n      (await this.vaultTimeoutService.isBiometricLockSet()) &&\n      ((await this.cryptoService.hasKeyStored(KeySuffixOptions.Biometric)) ||\n        !this.platformUtilsService.supportsSecureStorage());\n    this.biometricText = await this.stateService.getBiometricText();\n    this.email = await this.stateService.getEmail();\n    const usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.hideInput = usesKeyConnector && !this.pinLock;\n\n    // Users with key connector and without biometric or pin has no MP to unlock using\n    if (usesKeyConnector && !(this.biometricLock || this.pinLock)) {\n      await this.vaultTimeoutService.logOut();\n    }\n\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n    const vaultUrl =\n      webVaultUrl === \"https://vault.bitwarden.com\" ? \"https://bitwarden.com\" : webVaultUrl;\n    this.webVaultHostname = Utils.getHostname(vaultUrl);\n  }\n}\n","type BiometricError = {\n  title: string;\n  description: string;\n};\n\nexport type BiometricErrorTypes = \"startDesktop\" | \"desktopIntegrationDisabled\";\n\nexport const BiometricErrors: Record<BiometricErrorTypes, BiometricError> = {\n  startDesktop: {\n    title: \"startDesktopTitle\",\n    description: \"startDesktopDesc\",\n  },\n  desktopIntegrationDisabled: {\n    title: \"desktopIntegrationDisabledTitle\",\n    description: \"desktopIntegrationDisabledDesc\",\n  },\n};\n","import {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notificationResponse\";\n\nexport abstract class SyncService {\n  syncInProgress: boolean;\n\n  getLastSync: () => Promise<Date>;\n  setLastSync: (date: Date, userId?: string) => Promise<any>;\n  fullSync: (forceSync: boolean, allowThrowOnError?: boolean) => Promise<boolean>;\n  syncUpsertFolder: (notification: SyncFolderNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteFolder: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertCipher: (notification: SyncCipherNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteCipher: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertSend: (notification: SyncSendNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteSend: (notification: SyncSendNotification) => Promise<boolean>;\n}\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appA11yTitle]\",\n})\nexport class A11yTitleDirective {\n  @Input() set appA11yTitle(title: string) {\n    this.title = title;\n  }\n\n  private title: string;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (!this.el.nativeElement.hasAttribute(\"title\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"title\", this.title);\n    }\n    if (!this.el.nativeElement.hasAttribute(\"aria-label\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"aria-label\", this.title);\n    }\n  }\n}\n","export class BrowserApi {\n  static isWebExtensionsApi: boolean = typeof browser !== \"undefined\";\n  static isSafariApi: boolean =\n    navigator.userAgent.indexOf(\" Safari/\") !== -1 &&\n    navigator.userAgent.indexOf(\" Chrome/\") === -1 &&\n    navigator.userAgent.indexOf(\" Chromium/\") === -1;\n  static isChromeApi: boolean = !BrowserApi.isSafariApi && typeof chrome !== \"undefined\";\n  static isFirefoxOnAndroid: boolean =\n    navigator.userAgent.indexOf(\"Firefox/\") !== -1 && navigator.userAgent.indexOf(\"Android\") !== -1;\n\n  static async getTabFromCurrentWindowId(): Promise<chrome.tabs.Tab> | null {\n    return await BrowserApi.tabsQueryFirst({\n      active: true,\n      windowId: chrome.windows.WINDOW_ID_CURRENT,\n    });\n  }\n\n  static async getTabFromCurrentWindow(): Promise<chrome.tabs.Tab> | null {\n    return await BrowserApi.tabsQueryFirst({\n      active: true,\n      currentWindow: true,\n    });\n  }\n\n  static async getActiveTabs(): Promise<chrome.tabs.Tab[]> {\n    return await BrowserApi.tabsQuery({\n      active: true,\n    });\n  }\n\n  static async tabsQuery(options: chrome.tabs.QueryInfo): Promise<chrome.tabs.Tab[]> {\n    return new Promise((resolve) => {\n      chrome.tabs.query(options, (tabs: any[]) => {\n        resolve(tabs);\n      });\n    });\n  }\n\n  static async tabsQueryFirst(options: chrome.tabs.QueryInfo): Promise<chrome.tabs.Tab> | null {\n    const tabs = await BrowserApi.tabsQuery(options);\n    if (tabs.length > 0) {\n      return tabs[0];\n    }\n\n    return null;\n  }\n\n  static tabSendMessageData(\n    tab: chrome.tabs.Tab,\n    command: string,\n    data: any = null\n  ): Promise<any[]> {\n    const obj: any = {\n      command: command,\n    };\n\n    if (data != null) {\n      obj.data = data;\n    }\n\n    return BrowserApi.tabSendMessage(tab, obj);\n  }\n\n  static async tabSendMessage(\n    tab: chrome.tabs.Tab,\n    obj: any,\n    options: chrome.tabs.MessageSendOptions = null\n  ): Promise<any> {\n    if (!tab || !tab.id) {\n      return;\n    }\n\n    return new Promise<void>((resolve) => {\n      chrome.tabs.sendMessage(tab.id, obj, options, () => {\n        if (chrome.runtime.lastError) {\n          // Some error happened\n        }\n        resolve();\n      });\n    });\n  }\n\n  static async getPrivateModeWindows(): Promise<browser.windows.Window[]> {\n    return (await browser.windows.getAll()).filter((win) => win.incognito);\n  }\n\n  static async onWindowCreated(callback: (win: chrome.windows.Window) => any) {\n    return chrome.windows.onCreated.addListener(callback);\n  }\n\n  static getBackgroundPage(): any {\n    return chrome.extension.getBackgroundPage();\n  }\n\n  static getApplicationVersion(): string {\n    return chrome.runtime.getManifest().version;\n  }\n\n  static async isPopupOpen(): Promise<boolean> {\n    return Promise.resolve(chrome.extension.getViews({ type: \"popup\" }).length > 0);\n  }\n\n  static createNewTab(url: string, extensionPage = false, active = true) {\n    chrome.tabs.create({ url: url, active: active });\n  }\n\n  static messageListener(\n    name: string,\n    callback: (message: any, sender: chrome.runtime.MessageSender, response: any) => void\n  ) {\n    chrome.runtime.onMessage.addListener(\n      (msg: any, sender: chrome.runtime.MessageSender, response: any) => {\n        callback(msg, sender, response);\n      }\n    );\n  }\n\n  static sendMessage(subscriber: string, arg: any = {}) {\n    const message = Object.assign({}, { command: subscriber }, arg);\n    return chrome.runtime.sendMessage(message);\n  }\n\n  static async closeLoginTab() {\n    const tabs = await BrowserApi.tabsQuery({\n      active: true,\n      title: \"Bitwarden\",\n      windowType: \"normal\",\n      currentWindow: true,\n    });\n\n    if (tabs.length === 0) {\n      return;\n    }\n\n    const tabToClose = tabs[tabs.length - 1].id;\n    chrome.tabs.remove(tabToClose);\n  }\n\n  static async focusSpecifiedTab(tabId: number) {\n    chrome.tabs.update(tabId, { active: true, highlighted: true });\n  }\n\n  static closePopup(win: Window) {\n    if (BrowserApi.isWebExtensionsApi && BrowserApi.isFirefoxOnAndroid) {\n      // Reactivating the active tab dismisses the popup tab. The promise final\n      // condition is only called if the popup wasn't already dismissed (future proofing).\n      // ref: https://bugzilla.mozilla.org/show_bug.cgi?id=1433604\n      browser.tabs.update({ active: true }).finally(win.close);\n    } else {\n      win.close();\n    }\n  }\n\n  static gaFilter() {\n    return process.env.ENV !== \"production\";\n  }\n\n  static getUILanguage(win: Window) {\n    return chrome.i18n.getUILanguage();\n  }\n\n  static reloadExtension(win: Window) {\n    if (win != null) {\n      return (win.location as any).reload(true);\n    } else {\n      return chrome.runtime.reload();\n    }\n  }\n\n  static reloadOpenWindows() {\n    const views = chrome.extension.getViews() as Window[];\n    views\n      .filter((w) => w.location.href != null)\n      .forEach((w) => {\n        w.location.reload();\n      });\n  }\n\n  static connectNative(application: string): browser.runtime.Port | chrome.runtime.Port {\n    if (BrowserApi.isWebExtensionsApi) {\n      return browser.runtime.connectNative(application);\n    } else if (BrowserApi.isChromeApi) {\n      return chrome.runtime.connectNative(application);\n    }\n  }\n\n  static requestPermission(permission: any) {\n    if (BrowserApi.isWebExtensionsApi) {\n      return browser.permissions.request(permission);\n    }\n    return new Promise((resolve, reject) => {\n      chrome.permissions.request(permission, resolve);\n    });\n  }\n\n  static getPlatformInfo(): Promise<browser.runtime.PlatformInfo | chrome.runtime.PlatformInfo> {\n    if (BrowserApi.isWebExtensionsApi) {\n      return browser.runtime.getPlatformInfo();\n    }\n    return new Promise((resolve) => {\n      chrome.runtime.getPlatformInfo(resolve);\n    });\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\n\n@Injectable()\nexport class PopupUtilsService {\n  constructor(private privateMode: boolean = false) {}\n\n  inSidebar(win: Window): boolean {\n    return win.location.search !== \"\" && win.location.search.indexOf(\"uilocation=sidebar\") > -1;\n  }\n\n  inTab(win: Window): boolean {\n    return win.location.search !== \"\" && win.location.search.indexOf(\"uilocation=tab\") > -1;\n  }\n\n  inPopout(win: Window): boolean {\n    return win.location.search !== \"\" && win.location.search.indexOf(\"uilocation=popout\") > -1;\n  }\n\n  inPopup(win: Window): boolean {\n    return (\n      win.location.search === \"\" ||\n      win.location.search.indexOf(\"uilocation=\") === -1 ||\n      win.location.search.indexOf(\"uilocation=popup\") > -1\n    );\n  }\n\n  inPrivateMode(): boolean {\n    return this.privateMode;\n  }\n\n  getContentScrollY(win: Window, scrollingContainer = \"main\"): number {\n    const content = win.document.getElementsByTagName(scrollingContainer)[0];\n    return content.scrollTop;\n  }\n\n  setContentScrollY(win: Window, scrollY: number, scrollingContainer = \"main\"): void {\n    if (scrollY != null) {\n      const content = win.document.getElementsByTagName(scrollingContainer)[0];\n      content.scrollTop = scrollY;\n    }\n  }\n\n  popOut(win: Window, href: string = null): void {\n    if (href === null) {\n      href = win.location.href;\n    }\n\n    if (typeof chrome !== \"undefined\" && chrome.windows && chrome.windows.create) {\n      if (href.indexOf(\"?uilocation=\") > -1) {\n        href = href\n          .replace(\"uilocation=popup\", \"uilocation=popout\")\n          .replace(\"uilocation=tab\", \"uilocation=popout\")\n          .replace(\"uilocation=sidebar\", \"uilocation=popout\");\n      } else {\n        const hrefParts = href.split(\"#\");\n        href =\n          hrefParts[0] + \"?uilocation=popout\" + (hrefParts.length > 0 ? \"#\" + hrefParts[1] : \"\");\n      }\n\n      const bodyRect = document.querySelector(\"body\").getBoundingClientRect();\n      chrome.windows.create({\n        url: href,\n        type: \"popup\",\n        width: Math.round(bodyRect.width ? bodyRect.width + 60 : 375),\n        height: Math.round(bodyRect.height || 600),\n      });\n\n      if (this.inPopup(win)) {\n        BrowserApi.closePopup(win);\n      }\n    } else if (typeof chrome !== \"undefined\" && chrome.tabs && chrome.tabs.create) {\n      href = href\n        .replace(\"uilocation=popup\", \"uilocation=tab\")\n        .replace(\"uilocation=popout\", \"uilocation=tab\")\n        .replace(\"uilocation=sidebar\", \"uilocation=tab\");\n      chrome.tabs.create({\n        url: href,\n      });\n    }\n  }\n}\n","<app-callout type=\"warning\" *ngIf=\"showWarning\">\n  {{ \"privateModeWarning\" | i18n }}\n  <a href=\"https://bitwarden.com/help/article/private-mode/\" target=\"_blank\" rel=\"noopener\">{{\n    \"learnMore\" | i18n\n  }}</a>\n</app-callout>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\n@Component({\n  selector: \"app-private-mode-warning\",\n  templateUrl: \"private-mode-warning.component.html\",\n})\nexport class PrivateModeWarningComponent implements OnInit {\n  showWarning = false;\n\n  constructor(private popupUtilsService: PopupUtilsService) {}\n\n  ngOnInit() {\n    this.showWarning = this.popupUtilsService.inPrivateMode();\n  }\n}\n","<form (ngSubmit)=\"submit()\">\n  <header>\n    <div class=\"left\"></div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"verifyIdentity\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" *ngIf=\"!hideInput\">{{ \"unlock\" | i18n }}</button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-flex\" appBoxRow *ngIf=\"!hideInput\">\n          <div class=\"row-main\" *ngIf=\"pinLock\">\n            <label for=\"pin\">{{ \"pin\" | i18n }}</label>\n            <input\n              id=\"pin\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"PIN\"\n              class=\"monospaced\"\n              [(ngModel)]=\"pin\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"row-main\" *ngIf=\"!pinLock\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <input\n              id=\"masterPassword\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"MasterPassword\"\n              class=\"monospaced\"\n              [(ngModel)]=\"masterPassword\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        <p>{{ \"yourVaultIsLocked\" | i18n }}</p>\n        {{ \"loggedInAsOn\" | i18n: email:webVaultHostname }}\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"biometricLock\">\n      <div class=\"box-footer\">\n        <button\n          type=\"button\"\n          class=\"btn primary block\"\n          (click)=\"unlockBiometric()\"\n          appStopClick\n          [disabled]=\"pendingBiometric\"\n        >\n          {{ \"unlockWithBiometrics\" | i18n }}\n        </button>\n      </div>\n    </div>\n    <p class=\"text-center\">\n      <button type=\"button\" appStopClick (click)=\"logOut()\">{{ \"logOut\" | i18n }}</button>\n    </p>\n    <app-private-mode-warning></app-private-mode-warning>\n    <app-callout *ngIf=\"biometricError\" type=\"error\">{{ biometricError }}</app-callout>\n    <p class=\"text-center text-muted\" *ngIf=\"pendingBiometric\">\n      <i class=\"bwi bwi-spinner bwi-spin\" aria-hidden=\"true\"></i> {{ \"awaitDesktop\" | i18n }}\n    </p>\n  </main>\n</form>\n","import { Component, NgZone } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { LockComponent as BaseLockComponent } from \"@bitwarden/angular/components/lock.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\nimport { BiometricErrors, BiometricErrorTypes } from \"../../models/biometricErrors\";\n\n@Component({\n  selector: \"app-lock\",\n  templateUrl: \"lock.component.html\",\n})\nexport class LockComponent extends BaseLockComponent {\n  private isInitialLockScreen: boolean;\n\n  biometricError: string;\n  pendingBiometric = false;\n  authenicatedUrl = \"/tabs/current\";\n  unAuthenicatedUrl = \"/update-temp-password\";\n\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    cryptoService: CryptoService,\n    vaultTimeoutService: VaultTimeoutService,\n    environmentService: EnvironmentService,\n    stateService: StateService,\n    apiService: ApiService,\n    logService: LogService,\n    keyConnectorService: KeyConnectorService,\n    ngZone: NgZone,\n    private authService: AuthService,\n    private syncService: SyncService\n  ) {\n    super(\n      router,\n      i18nService,\n      platformUtilsService,\n      messagingService,\n      cryptoService,\n      vaultTimeoutService,\n      environmentService,\n      stateService,\n      apiService,\n      logService,\n      keyConnectorService,\n      ngZone\n    );\n\n    this.isInitialLockScreen = (window as any).previousPopupUrl == null;\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    await this.syncService.fullSync(true);\n\n    const forcePasswordReset = await this.stateService.getForcePasswordReset();\n    this.successRoute = forcePasswordReset === true ? this.unAuthenicatedUrl : this.authenicatedUrl;\n\n    const disableAutoBiometricsPrompt =\n      (await this.stateService.getDisableAutoBiometricsPrompt()) ?? true;\n\n    window.setTimeout(async () => {\n      document.getElementById(this.pinLock ? \"pin\" : \"masterPassword\").focus();\n      if (\n        this.biometricLock &&\n        !disableAutoBiometricsPrompt &&\n        this.isInitialLockScreen &&\n        (await this.authService.getAuthStatus()) === AuthenticationStatus.Locked\n      ) {\n        await this.unlockBiometric();\n      }\n    }, 100);\n  }\n\n  async unlockBiometric(): Promise<boolean> {\n    if (!this.biometricLock) {\n      return;\n    }\n\n    this.pendingBiometric = true;\n    this.biometricError = null;\n\n    let success;\n    try {\n      success = await super.unlockBiometric();\n    } catch (e) {\n      const error = BiometricErrors[e as BiometricErrorTypes];\n\n      if (error == null) {\n        this.logService.error(\"Unknown error: \" + e);\n      }\n\n      this.biometricError = this.i18nService.t(error.description);\n    }\n    this.pendingBiometric = false;\n\n    return success;\n  }\n}\n","export enum AuthenticationType {\n  Password = 0,\n  Sso = 1,\n  Api = 2,\n}\n","import { AuthenticationType } from \"../../enums/authenticationType\";\nimport { TokenRequestTwoFactor } from \"../request/identityToken/tokenRequestTwoFactor\";\n\nexport class PasswordLogInCredentials {\n  readonly type = AuthenticationType.Password;\n\n  constructor(\n    public email: string,\n    public masterPassword: string,\n    public captchaToken?: string,\n    public twoFactor?: TokenRequestTwoFactor\n  ) {}\n}\n\nexport class SsoLogInCredentials {\n  readonly type = AuthenticationType.Sso;\n\n  constructor(\n    public code: string,\n    public codeVerifier: string,\n    public redirectUrl: string,\n    public orgId: string,\n    public twoFactor?: TokenRequestTwoFactor\n  ) {}\n}\n\nexport class ApiLogInCredentials {\n  readonly type = AuthenticationType.Api;\n\n  constructor(public clientId: string, public clientSecret: string) {}\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\n\nimport { IFrameComponent } from \"./iframe_component\";\n\nexport class CaptchaIFrame extends IFrameComponent {\n  constructor(\n    win: Window,\n    webVaultUrl: string,\n    private i18nService: I18nService,\n    successCallback: (message: string) => any,\n    errorCallback: (message: string) => any,\n    infoCallback: (message: string) => any\n  ) {\n    super(\n      win,\n      webVaultUrl,\n      \"captcha-connector.html\",\n      \"hcaptcha_iframe\",\n      successCallback,\n      errorCallback,\n      (message: string) => {\n        const parsedMessage = JSON.parse(message);\n        if (typeof parsedMessage !== \"string\") {\n          this.iframe.height = parsedMessage.height.toString();\n          this.iframe.width = parsedMessage.width.toString();\n        } else {\n          infoCallback(parsedMessage);\n        }\n      }\n    );\n  }\n\n  init(siteKey: string): void {\n    super.initComponent(\n      this.createParams({ siteKey: siteKey, locale: this.i18nService.translationLocale }, 1)\n    );\n  }\n}\n","export abstract class IFrameComponent {\n  iframe: HTMLIFrameElement;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    protected webVaultUrl: string,\n    private path: string,\n    private iframeId: string,\n    public successCallback?: (message: string) => any,\n    public errorCallback?: (message: string) => any,\n    public infoCallback?: (message: string) => any\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  protected createParams(data: any, version: number) {\n    return new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      v: version.toString(),\n    });\n  }\n\n  protected initComponent(params: URLSearchParams): void {\n    this.connectorLink.href = `${this.webVaultUrl}/${this.path}?${params}`;\n    this.iframe = this.win.document.getElementById(this.iframeId) as HTMLIFrameElement;\n    this.iframe.src = this.connectorLink.href;\n\n    this.win.addEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","import { Directive, Input } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CaptchaIFrame } from \"@bitwarden/common/misc/captcha_iframe\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Directive()\nexport abstract class CaptchaProtectedComponent {\n  @Input() captchaSiteKey: string = null;\n  captchaToken: string = null;\n  captcha: CaptchaIFrame;\n\n  constructor(\n    protected environmentService: EnvironmentService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async setupCaptcha() {\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n\n    this.captcha = new CaptchaIFrame(\n      window,\n      webVaultUrl,\n      this.i18nService,\n      (token: string) => {\n        this.captchaToken = token;\n      },\n      (error: string) => {\n        this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n      },\n      (info: string) => {\n        this.platformUtilsService.showToast(\"info\", this.i18nService.t(\"info\"), info);\n      }\n    );\n  }\n\n  showCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  protected handleCaptchaRequired(response: { captchaSiteKey: string }): boolean {\n    if (Utils.isNullOrWhitespace(response.captchaSiteKey)) {\n      return false;\n    }\n\n    this.captchaSiteKey = response.captchaSiteKey;\n    this.captcha.init(response.captchaSiteKey);\n    return true;\n  }\n}\n","import { Directive, Input, NgZone, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { take } from \"rxjs/operators\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { AuthResult } from \"@bitwarden/common/models/domain/authResult\";\nimport { PasswordLogInCredentials } from \"@bitwarden/common/models/domain/logInCredentials\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class LoginComponent extends CaptchaProtectedComponent implements OnInit {\n  @Input() email = \"\";\n  @Input() rememberEmail = true;\n\n  masterPassword = \"\";\n  showPassword = false;\n  formPromise: Promise<AuthResult>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"vault\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  protected alwaysRememberEmail = false;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    protected stateService: StateService,\n    environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected logService: LogService,\n    protected ngZone: NgZone\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n  }\n\n  get selfHostedDomain() {\n    return this.environmentService.hasBaseUrl() ? this.environmentService.getWebVaultUrl() : null;\n  }\n\n  async ngOnInit() {\n    if (this.email == null || this.email === \"\") {\n      this.email = await this.stateService.getRememberedEmail();\n      if (this.email == null) {\n        this.email = \"\";\n      }\n    }\n    if (!this.alwaysRememberEmail) {\n      this.rememberEmail = (await this.stateService.getRememberedEmail()) != null;\n    }\n    if (Utils.isBrowser && !Utils.isNode) {\n      this.focusInput();\n    }\n  }\n\n  async submit() {\n    await this.setupCaptcha();\n\n    if (this.email == null || this.email === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"emailRequired\")\n      );\n      return;\n    }\n    if (this.email.indexOf(\"@\") === -1) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return;\n    }\n\n    try {\n      const credentials = new PasswordLogInCredentials(\n        this.email,\n        this.masterPassword,\n        this.captchaToken,\n        null\n      );\n      this.formPromise = this.authService.logIn(credentials);\n      const response = await this.formPromise;\n      if (this.rememberEmail || this.alwaysRememberEmail) {\n        await this.stateService.setRememberedEmail(this.email);\n      } else {\n        await this.stateService.setRememberedEmail(null);\n      }\n      if (this.handleCaptchaRequired(response)) {\n        return;\n      } else if (response.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute]);\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    if (this.ngZone.isStable) {\n      document.getElementById(\"masterPassword\").focus();\n    } else {\n      this.ngZone.onStable\n        .pipe(take(1))\n        .subscribe(() => document.getElementById(\"masterPassword\").focus());\n    }\n  }\n\n  async launchSsoBrowser(clientId: string, ssoRedirectUri: string) {\n    // Generate necessary sso params\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n    const state = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const ssoCodeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const codeVerifierHash = await this.cryptoFunctionService.hash(ssoCodeVerifier, \"sha256\");\n    const codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n\n    // Save sso params\n    await this.stateService.setSsoState(state);\n    await this.stateService.setSsoCodeVerifier(ssoCodeVerifier);\n\n    // Build URI\n    const webUrl = this.environmentService.getWebVaultUrl();\n\n    // Launch browser\n    this.platformUtilsService.launchUri(\n      webUrl +\n        \"/#/sso?clientId=\" +\n        clientId +\n        \"&redirectUri=\" +\n        encodeURIComponent(ssoRedirectUri) +\n        \"&state=\" +\n        state +\n        \"&codeChallenge=\" +\n        codeChallenge\n    );\n  }\n\n  protected focusInput() {\n    document\n      .getElementById(this.email == null || this.email === \"\" ? \"email\" : \"masterPassword\")\n      .focus();\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" routerLink=\"/home\">{{ \"cancel\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"appName\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"login\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n          <input\n            id=\"email\"\n            type=\"text\"\n            name=\"Email\"\n            [(ngModel)]=\"email\"\n            required\n            inputmode=\"email\"\n            appInputVerbatim=\"false\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n          <div class=\"row-main\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <input\n              id=\"masterPassword\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"MasterPassword\"\n              class=\"monospaced\"\n              [(ngModel)]=\"masterPassword\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"box-content-row\" [hidden]=\"!showCaptcha()\">\n          <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n        </div>\n      </div>\n    </div>\n    <p class=\"text-center text-muted\" *ngIf=\"selfHostedDomain\">\n      {{ \"loggingInTo\" | i18n: selfHostedDomain }}\n    </p>\n    <p class=\"text-center\">\n      <button type=\"button\" routerLink=\"/hint\">{{ \"getMasterPasswordHint\" | i18n }}</button>\n    </p>\n    <app-private-mode-warning></app-private-mode-warning>\n  </main>\n</form>\n","import { Component, NgZone } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { LoginComponent as BaseLoginComponent } from \"@bitwarden/angular/components/login.component\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"login.component.html\",\n})\nexport class LoginComponent extends BaseLoginComponent {\n  protected alwaysRememberEmail = true;\n\n  constructor(\n    authService: AuthService,\n    router: Router,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected stateService: StateService,\n    protected environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    syncService: SyncService,\n    logService: LogService,\n    ngZone: NgZone\n  ) {\n    super(\n      authService,\n      router,\n      platformUtilsService,\n      i18nService,\n      stateService,\n      environmentService,\n      passwordGenerationService,\n      cryptoFunctionService,\n      logService,\n      ngZone\n    );\n    super.onSuccessfulLogin = async () => {\n      await syncService.fullSync(true);\n    };\n    super.successRoute = \"/tabs/vault\";\n  }\n\n  settings() {\n    this.router.navigate([\"environment\"]);\n  }\n}\n","import { AbstractControl, UntypedFormGroup, ValidatorFn } from \"@angular/forms\";\n\nimport { FormGroupControls } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\n\nexport class InputsFieldMatch {\n  //check to ensure two fields do not have the same value\n  static validateInputsDoesntMatch(matchTo: string, errorMessage: string): ValidatorFn {\n    return (control: AbstractControl) => {\n      if (control.parent && control.parent.controls) {\n        return control?.value === (control?.parent?.controls as FormGroupControls)[matchTo].value\n          ? {\n              inputsMatchError: {\n                message: errorMessage,\n              },\n            }\n          : null;\n      }\n\n      return null;\n    };\n  }\n\n  //check to ensure two fields have the same value\n  static validateInputsMatch(matchTo: string, errorMessage: string): ValidatorFn {\n    return (control: AbstractControl) => {\n      if (control.parent && control.parent.controls) {\n        return control?.value === (control?.parent?.controls as FormGroupControls)[matchTo].value\n          ? null\n          : {\n              inputsDoesntMatchError: {\n                message: errorMessage,\n              },\n            };\n      }\n\n      return null;\n    };\n  }\n\n  //checks the formGroup if two fields have the same value and validation is controlled from either field\n  static validateFormInputsMatch(field: string, fieldMatchTo: string, errorMessage: string) {\n    return (formGroup: UntypedFormGroup) => {\n      const fieldCtrl = formGroup.controls[field];\n      const fieldMatchToCtrl = formGroup.controls[fieldMatchTo];\n\n      if (fieldCtrl.value !== fieldMatchToCtrl.value) {\n        fieldMatchToCtrl.setErrors({\n          inputsDoesntMatchError: {\n            message: errorMessage,\n          },\n        });\n      } else {\n        fieldMatchToCtrl.setErrors(null);\n      }\n    };\n  }\n}\n","export enum KdfType {\n  PBKDF2_SHA256 = 0,\n}\n\nexport const DEFAULT_KDF_TYPE = KdfType.PBKDF2_SHA256;\nexport const DEFAULT_KDF_ITERATIONS = 100000;\nexport const SEND_KDF_ITERATIONS = 100000;\n","export class KeysRequest {\n  publicKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(publicKey: string, encryptedPrivateKey: string) {\n    this.publicKey = publicKey;\n    this.encryptedPrivateKey = encryptedPrivateKey;\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { CaptchaProtectedRequest } from \"./captchaProtectedRequest\";\nimport { KeysRequest } from \"./keysRequest\";\nimport { ReferenceEventRequest } from \"./referenceEventRequest\";\n\nexport class RegisterRequest implements CaptchaProtectedRequest {\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  token: string;\n  organizationUserId: string;\n\n  constructor(\n    public email: string,\n    public name: string,\n    public masterPasswordHash: string,\n    masterPasswordHint: string,\n    public key: string,\n    public kdf: KdfType,\n    public kdfIterations: number,\n    public referenceData: ReferenceEventRequest,\n    public captchaResponse: string\n  ) {\n    this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n  }\n}\n","import { AbstractControl } from \"@angular/forms\";\nexport interface AllValidationErrors {\n  controlName: string;\n  errorName: string;\n}\n\nexport interface FormGroupControls {\n  [key: string]: AbstractControl;\n}\n\nexport abstract class FormValidationErrorsService {\n  getFormValidationErrors: (controls: FormGroupControls) => AllValidationErrors[];\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { AbstractControl, UntypedFormBuilder, ValidatorFn, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { InputsFieldMatch } from \"@bitwarden/angular/validators/inputsFieldMatch.validator\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport {\n  AllValidationErrors,\n  FormValidationErrorsService,\n} from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { DEFAULT_KDF_ITERATIONS, DEFAULT_KDF_TYPE } from \"@bitwarden/common/enums/kdfType\";\nimport { PasswordLogInCredentials } from \"@bitwarden/common/models/domain/logInCredentials\";\nimport { KeysRequest } from \"@bitwarden/common/models/request/keysRequest\";\nimport { ReferenceEventRequest } from \"@bitwarden/common/models/request/referenceEventRequest\";\nimport { RegisterRequest } from \"@bitwarden/common/models/request/registerRequest\";\n\nimport { PasswordColorText } from \"../shared/components/password-strength/password-strength.component\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class RegisterComponent extends CaptchaProtectedComponent implements OnInit {\n  @Input() isInTrialFlow = false;\n  @Output() createdAccount = new EventEmitter<string>();\n\n  showPassword = false;\n  formPromise: Promise<any>;\n  referenceData: ReferenceEventRequest;\n  showTerms = true;\n  showErrorSummary = false;\n  passwordStrengthResult: any;\n  color: string;\n  text: string;\n\n  formGroup = this.formBuilder.group(\n    {\n      email: [\"\", [Validators.required, Validators.email]],\n      name: [\"\"],\n      masterPassword: [\"\", [Validators.required, Validators.minLength(8)]],\n      confirmMasterPassword: [\"\", [Validators.required, Validators.minLength(8)]],\n      hint: [\n        null,\n        [\n          InputsFieldMatch.validateInputsDoesntMatch(\n            \"masterPassword\",\n            this.i18nService.t(\"hintEqualsPassword\")\n          ),\n        ],\n      ],\n      acceptPolicies: [false, [this.acceptPoliciesValidation()]],\n    },\n    {\n      validator: InputsFieldMatch.validateFormInputsMatch(\n        \"masterPassword\",\n        \"confirmMasterPassword\",\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      ),\n    }\n  );\n\n  protected successRoute = \"login\";\n\n  constructor(\n    protected formValidationErrorService: FormValidationErrorsService,\n    protected formBuilder: UntypedFormBuilder,\n    protected authService: AuthService,\n    protected router: Router,\n    i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    protected passwordGenerationService: PasswordGenerationService,\n    environmentService: EnvironmentService,\n    protected logService: LogService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.showTerms = !platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.setupCaptcha();\n  }\n\n  async submit(showToast = true) {\n    let email = this.formGroup.get(\"email\")?.value;\n    let name = this.formGroup.get(\"name\")?.value;\n    const masterPassword = this.formGroup.get(\"masterPassword\")?.value;\n    const hint = this.formGroup.get(\"hint\")?.value;\n\n    this.formGroup.markAllAsTouched();\n    this.showErrorSummary = true;\n\n    if (this.formGroup.get(\"acceptPolicies\").hasError(\"required\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"acceptPoliciesRequired\")\n      );\n      return;\n    }\n\n    //web\n    if (this.formGroup.invalid && !showToast) {\n      return;\n    }\n\n    //desktop, browser\n    if (this.formGroup.invalid && showToast) {\n      const errorText = this.getErrorToastMessage();\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errorText);\n      return;\n    }\n\n    if (this.passwordStrengthResult != null && this.passwordStrengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return;\n      }\n    }\n\n    name = name === \"\" ? null : name;\n    email = email.trim().toLowerCase();\n    const kdf = DEFAULT_KDF_TYPE;\n    const kdfIterations = DEFAULT_KDF_ITERATIONS;\n    const key = await this.cryptoService.makeKey(masterPassword, email, kdf, kdfIterations);\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const hashedPassword = await this.cryptoService.hashPassword(masterPassword, key);\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new RegisterRequest(\n      email,\n      name,\n      hashedPassword,\n      hint,\n      encKey[1].encryptedString,\n      kdf,\n      kdfIterations,\n      this.referenceData,\n      this.captchaToken\n    );\n    request.keys = new KeysRequest(keys[0], keys[1].encryptedString);\n    const orgInvite = await this.stateService.getOrganizationInvitation();\n    if (orgInvite != null && orgInvite.token != null && orgInvite.organizationUserId != null) {\n      request.token = orgInvite.token;\n      request.organizationUserId = orgInvite.organizationUserId;\n    }\n\n    try {\n      this.formPromise = this.apiService.postRegister(request);\n      try {\n        await this.formPromise;\n      } catch (e) {\n        if (this.handleCaptchaRequired(e)) {\n          return;\n        } else {\n          throw e;\n        }\n      }\n\n      if (this.isInTrialFlow) {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"trialAccountCreated\")\n        );\n        //login user here\n        const credentials = new PasswordLogInCredentials(\n          email,\n          masterPassword,\n          this.captchaToken,\n          null\n        );\n        await this.authService.logIn(credentials);\n\n        this.createdAccount.emit(this.formGroup.get(\"email\")?.value);\n      } else {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"newAccountCreated\")\n        );\n        this.router.navigate([this.successRoute], { queryParams: { email: email } });\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  getStrengthResult(result: any) {\n    this.passwordStrengthResult = result;\n  }\n\n  getPasswordScoreText(event: PasswordColorText) {\n    this.color = event.color;\n    this.text = event.text;\n  }\n\n  private getErrorToastMessage() {\n    const error: AllValidationErrors = this.formValidationErrorService\n      .getFormValidationErrors(this.formGroup.controls)\n      .shift();\n\n    if (error) {\n      switch (error.errorName) {\n        case \"email\":\n          return this.i18nService.t(\"invalidEmail\");\n        case \"inputsDoesntMatchError\":\n          return this.i18nService.t(\"masterPassDoesntMatch\");\n        case \"inputsMatchError\":\n          return this.i18nService.t(\"hintEqualsPassword\");\n        default:\n          return this.i18nService.t(this.errorTag(error));\n      }\n    }\n\n    return;\n  }\n\n  private errorTag(error: AllValidationErrors): string {\n    const name = error.errorName.charAt(0).toUpperCase() + error.errorName.slice(1);\n    return `${error.controlName}${name}`;\n  }\n\n  //validation would be ignored on selfhosted\n  private acceptPoliciesValidation(): ValidatorFn {\n    return (control: AbstractControl) => {\n      const ctrlValue = control.value;\n\n      return !ctrlValue && this.showTerms ? { required: true } : null;\n    };\n  }\n}\n","<div class=\"progress\">\n  <div\n    class=\"progress-bar {{ color }}\"\n    role=\"progressbar\"\n    [ngStyle]=\"{ width: scoreWidth + '%' }\"\n    attr.aria-valuenow=\"{{ scoreWidth }}\"\n    aria-valuemin=\"0\"\n    aria-valuemax=\"100\"\n  >\n    <ng-container *ngIf=\"showText && text\">\n      {{ text }}\n    </ng-container>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnChanges, Output } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\n\nexport interface PasswordColorText {\n  color: string;\n  text: string;\n}\n\n@Component({\n  selector: \"app-password-strength\",\n  templateUrl: \"password-strength.component.html\",\n})\nexport class PasswordStrengthComponent implements OnChanges {\n  @Input() showText = false;\n  @Input() email: string;\n  @Input() name: string;\n  @Input() set password(value: string) {\n    this.updatePasswordStrength(value);\n  }\n  @Output() passwordStrengthResult = new EventEmitter<any>();\n  @Output() passwordScoreColor = new EventEmitter<PasswordColorText>();\n\n  masterPasswordScore: number;\n  scoreWidth = 0;\n  color = \"bg-danger\";\n  text: string;\n\n  private masterPasswordStrengthTimeout: any;\n\n  //used by desktop and browser to display strength text color\n  get masterPasswordScoreColor() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return \"success\";\n      case 3:\n        return \"primary\";\n      case 2:\n        return \"warning\";\n      default:\n        return \"danger\";\n    }\n  }\n\n  //used by desktop and browser to display strength text\n  get masterPasswordScoreText() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return this.i18nService.t(\"strong\");\n      case 3:\n        return this.i18nService.t(\"good\");\n      case 2:\n        return this.i18nService.t(\"weak\");\n      default:\n        return this.masterPasswordScore != null ? this.i18nService.t(\"weak\") : null;\n    }\n  }\n\n  constructor(\n    private i18nService: I18nService,\n    private passwordGenerationService: PasswordGenerationService\n  ) {}\n\n  ngOnChanges(): void {\n    this.masterPasswordStrengthTimeout = setTimeout(() => {\n      this.scoreWidth = this.masterPasswordScore == null ? 0 : (this.masterPasswordScore + 1) * 20;\n\n      switch (this.masterPasswordScore) {\n        case 4:\n          this.color = \"bg-success\";\n          this.text = this.i18nService.t(\"strong\");\n          break;\n        case 3:\n          this.color = \"bg-primary\";\n          this.text = this.i18nService.t(\"good\");\n          break;\n        case 2:\n          this.color = \"bg-warning\";\n          this.text = this.i18nService.t(\"weak\");\n          break;\n        default:\n          this.color = \"bg-danger\";\n          this.text = this.masterPasswordScore != null ? this.i18nService.t(\"weak\") : null;\n          break;\n      }\n\n      this.setPasswordScoreText(this.color, this.text);\n    }, 300);\n  }\n\n  updatePasswordStrength(password: string) {\n    const masterPassword = password;\n\n    if (this.masterPasswordStrengthTimeout != null) {\n      clearTimeout(this.masterPasswordStrengthTimeout);\n    }\n\n    const strengthResult = this.passwordGenerationService.passwordStrength(\n      masterPassword,\n      this.getPasswordStrengthUserInput()\n    );\n    this.passwordStrengthResult.emit(strengthResult);\n    this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n  }\n\n  getPasswordStrengthUserInput() {\n    let userInput: string[] = [];\n    const email = this.email;\n    const name = this.name;\n    const atPosition = email?.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    if (name != null && name !== \"\") {\n      userInput = userInput.concat(name.trim().toLowerCase().split(\" \"));\n    }\n    return userInput;\n  }\n\n  setPasswordScoreText(color: string, text: string) {\n    color = color.slice(3);\n    this.passwordScoreColor.emit({ color: color, text: text });\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" [formGroup]=\"formGroup\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" routerLink=\"/home\">{{ \"cancel\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"createAccount\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n          <input id=\"email\" type=\"email\" formControlName=\"email\" appInputVerbatim=\"false\" />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <div class=\"box-content-row-flex\">\n            <div class=\"row-main\">\n              <label for=\"masterPassword\">\n                {{ \"masterPass\" | i18n }}\n                <strong class=\"sub-label text-{{ color }}\" *ngIf=\"text\">\n                  {{ text }}\n                </strong>\n              </label>\n              <input\n                id=\"masterPassword\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                class=\"monospaced\"\n                formControlName=\"masterPassword\"\n                appInputVerbatim\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword()\"\n                [attr.aria-pressed]=\"showPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <app-password-strength\n            [password]=\"formGroup.get('masterPassword')?.value\"\n            [email]=\"formGroup.get('email')?.value\"\n            [name]=\"formGroup.get('name')?.value\"\n            (passwordStrengthResult)=\"getStrengthResult($event)\"\n            (passwordScoreColor)=\"getPasswordScoreText($event)\"\n          >\n          </app-password-strength>\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"masterPassDesc\" | i18n }}\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n          <div class=\"row-main\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <input\n              id=\"masterPasswordRetype\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              class=\"monospaced\"\n              formControlName=\"confirmMasterPassword\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n              ></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n          <input id=\"hint\" type=\"text\" formControlName=\"hint\" />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"masterPassHintDesc\" | i18n }}\n      </div>\n    </div>\n    <div [hidden]=\"!showCaptcha()\"><iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe></div>\n    <div class=\"box last\" *ngIf=\"showTerms\">\n      <div class=\"box-content\">\n        <div\n          class=\"box-content-row box-content-row-checkbox box-content-row-checkbox-left box-content-row-word-break\"\n          appBoxRow\n        >\n          <input type=\"checkbox\" id=\"acceptPolicies\" formControlName=\"acceptPolicies\" />\n          <label for=\"acceptPolicies\">\n            {{ \"acceptPolicies\" | i18n }}<br />\n            <a href=\"https://bitwarden.com/terms/\" target=\"_blank\" rel=\"noopener\">{{\n              \"termsOfService\" | i18n\n            }}</a\n            >,\n            <a href=\"https://bitwarden.com/privacy/\" target=\"_blank\" rel=\"noopener\">{{\n              \"privacyPolicy\" | i18n\n            }}</a>\n          </label>\n        </div>\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { RegisterComponent as BaseRegisterComponent } from \"@bitwarden/angular/components/register.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-register\",\n  templateUrl: \"register.component.html\",\n})\nexport class RegisterComponent extends BaseRegisterComponent {\n  color: string;\n  text: string;\n\n  constructor(\n    formValidationErrorService: FormValidationErrorsService,\n    formBuilder: UntypedFormBuilder,\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    environmentService: EnvironmentService,\n    logService: LogService\n  ) {\n    super(\n      formValidationErrorService,\n      formBuilder,\n      authService,\n      router,\n      i18nService,\n      cryptoService,\n      apiService,\n      stateService,\n      platformUtilsService,\n      passwordGenerationService,\n      environmentService,\n      logService\n    );\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Directive()\nexport class RemovePasswordComponent implements OnInit {\n  actionPromise: Promise<any>;\n  continuing = false;\n  leaving = false;\n\n  loading = true;\n  organization: Organization;\n  email: string;\n\n  constructor(\n    private router: Router,\n    private stateService: StateService,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  async ngOnInit() {\n    this.organization = await this.keyConnectorService.getManagingOrganization();\n    this.email = await this.stateService.getEmail();\n    await this.syncService.fullSync(false);\n    this.loading = false;\n  }\n\n  async convert() {\n    this.continuing = true;\n    this.actionPromise = this.keyConnectorService.migrateUser();\n\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedMasterPassword\")\n      );\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n    }\n  }\n\n  async leave() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"leaveOrganizationConfirmation\"),\n      this.organization.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.leaving = true;\n      this.actionPromise = this.apiService.postLeaveOrganization(this.organization.id).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"leftOrganization\"));\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e);\n    }\n  }\n}\n","<header>\n  <div class=\"left\"></div>\n  <div class=\"center\">\n    <span class=\"title\">{{ \"removeMasterPassword\" | i18n }}</span>\n  </div>\n  <div class=\"right\"></div>\n</header>\n\n<main tabindex=\"-1\">\n  <div class=\"box\">\n    <div class=\"box-content\">\n      <div class=\"box-content-row\" appBoxRow>\n        <p>{{ \"convertOrganizationEncryptionDesc\" | i18n: organization.name }}</p>\n      </div>\n      <div class=\"box-content-row\">\n        <button\n          type=\"button\"\n          class=\"btn block primary\"\n          (click)=\"convert()\"\n          [disabled]=\"actionPromise\"\n        >\n          <i\n            class=\"bwi bwi-spinner bwi-spin\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n            *ngIf=\"continuing\"\n          ></i>\n          {{ \"removeMasterPassword\" | i18n }}\n        </button>\n      </div>\n      <div class=\"box-content-row\">\n        <button\n          type=\"button\"\n          class=\"btn btn-outline-secondary block\"\n          (click)=\"leave()\"\n          [disabled]=\"actionPromise\"\n        >\n          <i\n            class=\"bwi bwi-spinner bwi-spin\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n            *ngIf=\"leaving\"\n          ></i>\n          {{ \"leaveOrganization\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</main>\n","import { Component } from \"@angular/core\";\n\nimport { RemovePasswordComponent as BaseRemovePasswordComponent } from \"@bitwarden/angular/components/remove-password.component\";\n\n@Component({\n  selector: \"app-remove-password\",\n  templateUrl: \"remove-password.component.html\",\n})\nexport class RemovePasswordComponent extends BaseRemovePasswordComponent {}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class OrganizationUserResetPasswordEnrollmentRequest extends SecretVerificationRequest {\n  resetPasswordKey: string;\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { KeysRequest } from \"./keysRequest\";\n\nexport class SetPasswordRequest {\n  masterPasswordHash: string;\n  key: string;\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    masterPasswordHash: string,\n    key: string,\n    masterPasswordHint: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.masterPasswordHash = masterPasswordHash;\n    this.key = key;\n    this.masterPasswordHint = masterPasswordHint;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../../models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"../../models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"../../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../../models/domain/resetPasswordPolicyOptions\";\nimport { ListResponse } from \"../../models/response/listResponse\";\nimport { PolicyResponse } from \"../../models/response/policyResponse\";\n\nexport abstract class PolicyService {\n  getAll: (type?: PolicyType, userId?: string) => Promise<Policy[]>;\n\n  getMasterPasswordPolicyOptions: (policies?: Policy[]) => Promise<MasterPasswordPolicyOptions>;\n  evaluateMasterPassword: (\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions?: MasterPasswordPolicyOptions\n  ) => boolean;\n  getResetPasswordPolicyOptions: (\n    policies: Policy[],\n    orgId: string\n  ) => [ResetPasswordPolicyOptions, boolean];\n  mapPoliciesFromToken: (policiesResponse: ListResponse<PolicyResponse>) => Policy[];\n  policyAppliesToUser: (\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) => Promise<boolean>;\n}\n\nexport abstract class InternalPolicyService extends PolicyService {\n  upsert: (policy: PolicyData) => Promise<any>;\n  replace: (policies: { [id: string]: PolicyData }) => Promise<any>;\n  clear: (userId?: string) => Promise<any>;\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { KdfType } from \"@bitwarden/common/enums/kdfType\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\n\nimport { PasswordColorText } from \"../shared/components/password-strength/password-strength.component\";\n\n@Directive()\nexport class ChangePasswordComponent implements OnInit {\n  masterPassword: string;\n  masterPasswordRetype: string;\n  formPromise: Promise<any>;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  passwordStrengthResult: any;\n  color: string;\n  text: string;\n\n  protected email: string;\n  protected kdf: KdfType;\n  protected kdfIterations: number;\n\n  constructor(\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected messagingService: MessagingService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected policyService: PolicyService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.email = await this.stateService.getEmail();\n    this.enforcedPolicyOptions ??= await this.policyService.getMasterPasswordPolicyOptions();\n  }\n\n  async submit() {\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    const email = await this.stateService.getEmail();\n    if (this.kdf == null) {\n      this.kdf = await this.stateService.getKdfType();\n    }\n    if (this.kdfIterations == null) {\n      this.kdfIterations = await this.stateService.getKdfIterations();\n    }\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      email.trim().toLowerCase(),\n      this.kdf,\n      this.kdfIterations\n    );\n    const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n    let encKey: [SymmetricCryptoKey, EncString] = null;\n    const existingEncKey = await this.cryptoService.getEncKey();\n    if (existingEncKey == null) {\n      encKey = await this.cryptoService.makeEncKey(key);\n    } else {\n      encKey = await this.cryptoService.remakeEncKey(key);\n    }\n\n    await this.performSubmitActions(masterPasswordHash, key, encKey);\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    // Override in sub-class\n    // Can be used for additional validation and/or other processes the should occur before changing passwords\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    // Override in sub-class\n  }\n\n  async strongPassword(): Promise<boolean> {\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return false;\n    }\n    if (this.masterPassword.length < 8) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassLength\")\n      );\n      return false;\n    }\n    if (this.masterPassword !== this.masterPasswordRetype) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      );\n      return false;\n    }\n\n    const strengthResult = this.passwordStrengthResult;\n\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        strengthResult.score,\n        this.masterPassword,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return false;\n    }\n\n    if (strengthResult != null && strengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  getStrengthResult(result: any) {\n    this.passwordStrengthResult = result;\n  }\n\n  getPasswordScoreText(event: PasswordColorText) {\n    this.color = event.color;\n    this.text = event.text;\n  }\n}\n","import { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policyRequest\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policyResponse\";\n\nexport class PolicyApiServiceAbstraction {\n  getPolicy: (organizationId: string, type: PolicyType) => Promise<PolicyResponse>;\n  getPolicies: (organizationId: string) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByToken: (\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByInvitedUser: (\n    organizationId: string,\n    userId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  getPolicyForOrganization: (policyType: PolicyType, organizationId: string) => Promise<Policy>;\n  getMasterPasswordPoliciesForInvitedUsers: (orgId: string) => Promise<MasterPasswordPolicyOptions>;\n  putPolicy: (organizationId: string, type: PolicyType, request: PolicyRequest) => Promise<any>;\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { HashPurpose } from \"@bitwarden/common/enums/hashPurpose\";\nimport { DEFAULT_KDF_ITERATIONS, DEFAULT_KDF_TYPE } from \"@bitwarden/common/enums/kdfType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { KeysRequest } from \"@bitwarden/common/models/request/keysRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { SetPasswordRequest } from \"@bitwarden/common/models/request/setPasswordRequest\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class SetPasswordComponent extends BaseChangePasswordComponent {\n  syncLoading = true;\n  showPassword = false;\n  hint = \"\";\n  identifier: string = null;\n  orgId: string;\n  resetPasswordAutoEnroll = false;\n\n  onSuccessfulChangePassword: () => Promise<any>;\n  successRoute = \"vault\";\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    policyService: PolicyService,\n    protected router: Router,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private route: ActivatedRoute,\n    stateService: StateService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    this.syncLoading = false;\n\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    // Automatic Enrollment Detection\n    if (this.identifier != null) {\n      try {\n        const response = await this.apiService.getOrganizationAutoEnrollStatus(this.identifier);\n        this.orgId = response.id;\n        this.resetPasswordAutoEnroll = response.resetPasswordEnabled;\n        this.enforcedPolicyOptions =\n          await this.policyApiService.getMasterPasswordPoliciesForInvitedUsers(this.orgId);\n      } catch {\n        this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      }\n    }\n\n    super.ngOnInit();\n  }\n\n  async setupSubmitActions() {\n    this.kdf = DEFAULT_KDF_TYPE;\n    this.kdfIterations = DEFAULT_KDF_ITERATIONS;\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new SetPasswordRequest(\n      masterPasswordHash,\n      encKey[1].encryptedString,\n      this.hint,\n      this.kdf,\n      this.kdfIterations,\n      this.identifier,\n      new KeysRequest(keys[0], keys[1].encryptedString)\n    );\n    try {\n      if (this.resetPasswordAutoEnroll) {\n        this.formPromise = this.apiService\n          .setPassword(request)\n          .then(async () => {\n            await this.onSetPasswordSuccess(key, encKey, keys);\n            return this.apiService.getOrganizationKeys(this.orgId);\n          })\n          .then(async (response) => {\n            if (response == null) {\n              throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n            }\n            const userId = await this.stateService.getUserId();\n            const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n            // RSA Encrypt user's encKey.key with organization public key\n            const userEncKey = await this.cryptoService.getEncKey();\n            const encryptedKey = await this.cryptoService.rsaEncrypt(\n              userEncKey.key,\n              publicKey.buffer\n            );\n\n            const resetRequest = new OrganizationUserResetPasswordEnrollmentRequest();\n            resetRequest.masterPasswordHash = masterPasswordHash;\n            resetRequest.resetPasswordKey = encryptedKey.encryptedString;\n\n            return this.apiService.putOrganizationUserResetPasswordEnrollment(\n              this.orgId,\n              userId,\n              resetRequest\n            );\n          });\n      } else {\n        this.formPromise = this.apiService.setPassword(request).then(async () => {\n          await this.onSetPasswordSuccess(key, encKey, keys);\n        });\n      }\n\n      await this.formPromise;\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  private async onSetPasswordSuccess(\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString],\n    keys: [string, EncString]\n  ) {\n    await this.stateService.setKdfType(this.kdf);\n    await this.stateService.setKdfIterations(this.kdfIterations);\n    await this.cryptoService.setKey(key);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n    await this.cryptoService.setEncPrivateKey(keys[1].encryptedString);\n\n    const localKeyHash = await this.cryptoService.hashPassword(\n      this.masterPassword,\n      key,\n      HashPurpose.LocalAuthorization\n    );\n    await this.cryptoService.setKeyHash(localKeyHash);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" routerLink=\"/home\">{{ \"cancel\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"setMasterPassword\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"full-loading-spinner\" *ngIf=\"syncLoading\">\n      <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" aria-hidden=\"true\"></i>\n    </div>\n    <div *ngIf=\"!syncLoading\">\n      <div class=\"box\">\n        <app-callout type=\"tip\">{{ \"ssoCompleteRegistration\" | i18n }}</app-callout>\n        <app-callout\n          type=\"warning\"\n          title=\"{{ 'resetPasswordPolicyAutoEnroll' | i18n }}\"\n          *ngIf=\"resetPasswordAutoEnroll\"\n        >\n          {{ \"resetPasswordAutoEnrollInviteWarning\" | i18n }}\n        </app-callout>\n        <app-callout\n          type=\"info\"\n          [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n          *ngIf=\"enforcedPolicyOptions\"\n        >\n        </app-callout>\n      </div>\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <div class=\"box-content-row-flex\">\n              <div class=\"row-main\">\n                <label for=\"masterPassword\"\n                  >{{ \"masterPass\" | i18n }}\n                  <strong\n                    class=\"sub-label text-{{ passwordStrengthComponent?.masterPasswordScoreColor }}\"\n                    *ngIf=\"passwordStrengthComponent?.masterPasswordScoreText\"\n                  >\n                    {{ passwordStrengthComponent?.masterPasswordScoreText }}\n                  </strong>\n                </label>\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPassword\"\n                  class=\"monospaced\"\n                  [(ngModel)]=\"masterPassword\"\n                  required\n                  appInputVerbatim\n                />\n              </div>\n              <div class=\"action-buttons\">\n                <button\n                  type=\"button\"\n                  class=\"row-btn\"\n                  appStopClick\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(false)\"\n                  [attr.aria-pressed]=\"showPassword\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n              </div>\n            </div>\n\n            <app-password-strength\n              [password]=\"masterPassword\"\n              [email]=\"email\"\n              (passwordStrengthResult)=\"getStrengthResult($event)\"\n              (passwordScoreColor)=\"getPasswordScoreText($event)\"\n            >\n            </app-password-strength>\n          </div>\n        </div>\n        <div class=\"box-footer\">\n          {{ \"masterPassDesc\" | i18n }}\n        </div>\n      </div>\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <div class=\"box-content-row-flex\">\n              <div class=\"row-main\">\n                <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n                <input\n                  id=\"masterPasswordRetype\"\n                  type=\"password\"\n                  name=\"MasterPasswordRetype\"\n                  class=\"monospaced\"\n                  [(ngModel)]=\"masterPasswordRetype\"\n                  required\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                />\n              </div>\n              <div class=\"action-buttons\">\n                <button\n                  type=\"button\"\n                  class=\"row-btn\"\n                  appStopClick\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(true)\"\n                  [attr.aria-pressed]=\"showPassword\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"box last\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n            <input id=\"hint\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n          </div>\n        </div>\n        <div class=\"box-footer\">\n          {{ \"masterPassHintDesc\" | i18n }}\n        </div>\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { SetPasswordComponent as BaseSetPasswordComponent } from \"@bitwarden/angular/components/set-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\n\n@Component({\n  selector: \"app-set-password\",\n  templateUrl: \"set-password.component.html\",\n})\nexport class SetPasswordComponent extends BaseSetPasswordComponent {\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyApiService: PolicyApiServiceAbstraction,\n    policyService: PolicyService,\n    router: Router,\n    syncService: SyncService,\n    route: ActivatedRoute\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyApiService,\n      policyService,\n      router,\n      apiService,\n      syncService,\n      route,\n      stateService\n    );\n  }\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { AuthResult } from \"@bitwarden/common/models/domain/authResult\";\nimport { SsoLogInCredentials } from \"@bitwarden/common/models/domain/logInCredentials\";\nimport { SsoPreValidateResponse } from \"@bitwarden/common/models/response/ssoPreValidateResponse\";\n\n@Directive()\nexport class SsoComponent {\n  identifier: string;\n  loggingIn = false;\n\n  formPromise: Promise<AuthResult>;\n  initiateSsoFormPromise: Promise<SsoPreValidateResponse>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginChangePasswordNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"lock\";\n  protected changePasswordRoute = \"set-password\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  protected clientId: string;\n  protected redirectUri: string;\n  protected state: string;\n  protected codeChallenge: string;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected route: ActivatedRoute,\n    protected stateService: StateService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.code != null && qParams.state != null) {\n        const codeVerifier = await this.stateService.getSsoCodeVerifier();\n        const state = await this.stateService.getSsoState();\n        await this.stateService.setSsoCodeVerifier(null);\n        await this.stateService.setSsoState(null);\n        if (\n          qParams.code != null &&\n          codeVerifier != null &&\n          state != null &&\n          this.checkState(state, qParams.state)\n        ) {\n          await this.logIn(\n            qParams.code,\n            codeVerifier,\n            this.getOrgIdentifierFromState(qParams.state)\n          );\n        }\n      } else if (\n        qParams.clientId != null &&\n        qParams.redirectUri != null &&\n        qParams.state != null &&\n        qParams.codeChallenge != null\n      ) {\n        this.redirectUri = qParams.redirectUri;\n        this.state = qParams.state;\n        this.codeChallenge = qParams.codeChallenge;\n        this.clientId = qParams.clientId;\n      }\n    });\n  }\n\n  async submit(returnUri?: string, includeUserIdentifier?: boolean) {\n    if (this.identifier == null || this.identifier === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"ssoValidationFailed\"),\n        this.i18nService.t(\"ssoIdentifierRequired\")\n      );\n      return;\n    }\n\n    this.initiateSsoFormPromise = this.apiService.preValidateSso(this.identifier);\n    const response = await this.initiateSsoFormPromise;\n\n    const authorizeUrl = await this.buildAuthorizeUrl(\n      returnUri,\n      includeUserIdentifier,\n      response.token\n    );\n    this.platformUtilsService.launchUri(authorizeUrl, { sameWindow: true });\n  }\n\n  protected async buildAuthorizeUrl(\n    returnUri?: string,\n    includeUserIdentifier?: boolean,\n    token?: string\n  ): Promise<string> {\n    let codeChallenge = this.codeChallenge;\n    let state = this.state;\n\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n\n    if (codeChallenge == null) {\n      const codeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n      const codeVerifierHash = await this.cryptoFunctionService.hash(codeVerifier, \"sha256\");\n      codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n      await this.stateService.setSsoCodeVerifier(codeVerifier);\n    }\n\n    if (state == null) {\n      state = await this.passwordGenerationService.generatePassword(passwordOptions);\n      if (returnUri) {\n        state += `_returnUri='${returnUri}'`;\n      }\n    }\n\n    // Add Organization Identifier to state\n    state += `_identifier=${this.identifier}`;\n\n    // Save state (regardless of new or existing)\n    await this.stateService.setSsoState(state);\n\n    let authorizeUrl =\n      this.environmentService.getIdentityUrl() +\n      \"/connect/authorize?\" +\n      \"client_id=\" +\n      this.clientId +\n      \"&redirect_uri=\" +\n      encodeURIComponent(this.redirectUri) +\n      \"&\" +\n      \"response_type=code&scope=api offline_access&\" +\n      \"state=\" +\n      state +\n      \"&code_challenge=\" +\n      codeChallenge +\n      \"&\" +\n      \"code_challenge_method=S256&response_mode=query&\" +\n      \"domain_hint=\" +\n      encodeURIComponent(this.identifier) +\n      \"&ssoToken=\" +\n      encodeURIComponent(token);\n\n    if (includeUserIdentifier) {\n      const userIdentifier = await this.apiService.getSsoUserIdentifier();\n      authorizeUrl += `&user_identifier=${encodeURIComponent(userIdentifier)}`;\n    }\n\n    return authorizeUrl;\n  }\n\n  private async logIn(code: string, codeVerifier: string, orgIdFromState: string) {\n    this.loggingIn = true;\n    try {\n      const credentials = new SsoLogInCredentials(\n        code,\n        codeVerifier,\n        this.redirectUri,\n        orgIdFromState\n      );\n      this.formPromise = this.authService.logIn(credentials);\n      const response = await this.formPromise;\n      if (response.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n              sso: \"true\",\n            },\n          });\n        }\n      } else if (response.resetMasterPassword) {\n        if (this.onSuccessfulLoginChangePasswordNavigate != null) {\n          this.onSuccessfulLoginChangePasswordNavigate();\n        } else {\n          this.router.navigate([this.changePasswordRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n            },\n          });\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n\n      // TODO: Key Connector Service should pass this error message to the logout callback instead of displaying here\n      if (e.message === \"Key Connector error\") {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"ssoKeyConnectorError\")\n        );\n      }\n    }\n    this.loggingIn = false;\n  }\n\n  private getOrgIdentifierFromState(state: string): string {\n    if (state === null || state === undefined) {\n      return null;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    return stateSplit.length > 1 ? stateSplit[1] : null;\n  }\n\n  private checkState(state: string, checkState: string): boolean {\n    if (state === null || state === undefined) {\n      return false;\n    }\n    if (checkState === null || checkState === undefined) {\n      return false;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    const checkStateSplit = checkState.split(\"_identifier=\");\n    return stateSplit[0] === checkStateSplit[0];\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { SsoComponent as BaseSsoComponent } from \"@bitwarden/angular/components/sso.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\n\n@Component({\n  selector: \"app-sso\",\n  templateUrl: \"sso.component.html\",\n})\nexport class SsoComponent extends BaseSsoComponent {\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    cryptoFunctionService: CryptoFunctionService,\n    passwordGenerationService: PasswordGenerationService,\n    syncService: SyncService,\n    environmentService: EnvironmentService,\n    logService: LogService,\n    private vaultTimeoutService: VaultTimeoutService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      route,\n      stateService,\n      platformUtilsService,\n      apiService,\n      cryptoFunctionService,\n      environmentService,\n      passwordGenerationService,\n      logService\n    );\n\n    const url = this.environmentService.getWebVaultUrl();\n\n    this.redirectUri = url + \"/sso-connector.html\";\n    this.clientId = \"browser\";\n\n    super.onSuccessfulLogin = async () => {\n      await syncService.fullSync(true);\n\n      // If the vault is unlocked then this will clear keys from memory, which we don't want to do\n      if ((await this.authService.getAuthStatus()) !== AuthenticationStatus.Unlocked) {\n        BrowserApi.reloadOpenWindows();\n      }\n\n      const thisWindow = window.open(\"\", \"_self\");\n      thisWindow.close();\n    };\n  }\n}\n","import { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\n\nexport interface TwoFactorProviderDetails {\n  type: TwoFactorProviderType;\n  name: string;\n  description: string;\n  priority: number;\n  sort: number;\n  premium: boolean;\n}\n\nexport abstract class TwoFactorService {\n  init: () => void;\n  getSupportedProviders: (win: Window) => TwoFactorProviderDetails[];\n  getDefaultProvider: (webAuthnSupported: boolean) => TwoFactorProviderType;\n  setSelectedProvider: (type: TwoFactorProviderType) => void;\n  clearSelectedProvider: () => void;\n\n  setProviders: (response: IdentityTwoFactorResponse) => void;\n  clearProviders: () => void;\n  getProviders: () => Map<TwoFactorProviderType, { [key: string]: string }>;\n}\n","import { Directive, EventEmitter, OnInit, Output } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\n\n@Directive()\nexport class TwoFactorOptionsComponent implements OnInit {\n  @Output() onProviderSelected = new EventEmitter<TwoFactorProviderType>();\n  @Output() onRecoverSelected = new EventEmitter();\n\n  providers: any[] = [];\n\n  constructor(\n    protected twoFactorService: TwoFactorService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window\n  ) {}\n\n  ngOnInit() {\n    this.providers = this.twoFactorService.getSupportedProviders(this.win);\n  }\n\n  choose(p: any) {\n    this.onProviderSelected.emit(p.type);\n  }\n\n  recover() {\n    this.platformUtilsService.launchUri(\"https://bitwarden.com/help/lost-two-step-device/\");\n    this.onRecoverSelected.emit();\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" routerLink=\"/2fa\">{{ \"close\" | i18n }}</button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"twoStepOptions\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"box\">\n    <div class=\"box-content\">\n      <button\n        type=\"button\"\n        appStopClick\n        *ngFor=\"let p of providers\"\n        class=\"box-content-row\"\n        (click)=\"choose(p)\"\n      >\n        <span class=\"text\">{{ p.name }}</span>\n        <span class=\"detail\">{{ p.description }}</span>\n      </button>\n      <button type=\"button\" appStopClick class=\"box-content-row\" (click)=\"recover()\">\n        <span class=\"text\">{{ \"recoveryCodeTitle\" | i18n }}</span>\n        <span class=\"detail\">{{ \"recoveryCodeDesc\" | i18n }}</span>\n      </button>\n    </div>\n  </div>\n</main>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { TwoFactorOptionsComponent as BaseTwoFactorOptionsComponent } from \"@bitwarden/angular/components/two-factor-options.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\n\n@Component({\n  selector: \"app-two-factor-options\",\n  templateUrl: \"two-factor-options.component.html\",\n})\nexport class TwoFactorOptionsComponent extends BaseTwoFactorOptionsComponent {\n  constructor(\n    twoFactorService: TwoFactorService,\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService\n  ) {\n    super(twoFactorService, router, i18nService, platformUtilsService, window);\n  }\n\n  choose(p: any) {\n    super.choose(p);\n    this.twoFactorService.setSelectedProvider(p.type);\n    this.router.navigate([\"2fa\"]);\n  }\n}\n","export enum TwoFactorProviderType {\n  Authenticator = 0,\n  Email = 1,\n  Duo = 2,\n  Yubikey = 3,\n  U2f = 4,\n  Remember = 5,\n  OrganizationDuo = 6,\n  WebAuthn = 7,\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\n\nexport class WebAuthnIFrame {\n  private iframe: HTMLIFrameElement = null;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    private webVaultUrl: string,\n    private webAuthnNewTab: boolean,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private successCallback: Function, // eslint-disable-line\n    private errorCallback: Function, // eslint-disable-line\n    private infoCallback: Function // eslint-disable-line\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  init(data: any): void {\n    const params = new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      btnText: encodeURIComponent(this.i18nService.t(\"webAuthnAuthenticate\")),\n      v: \"1\",\n    });\n\n    if (this.webAuthnNewTab) {\n      // Firefox fallback which opens the webauthn page in a new tab\n      params.append(\"locale\", this.i18nService.translationLocale);\n      this.platformUtilsService.launchUri(\n        `${this.webVaultUrl}/webauthn-fallback-connector.html?${params}`\n      );\n    } else {\n      this.connectorLink.href = `${this.webVaultUrl}/webauthn-connector.html?${params}`;\n      this.iframe = this.win.document.getElementById(\"webauthn_iframe\") as HTMLIFrameElement;\n      this.iframe.allow = \"publickey-credentials-get \" + new URL(this.webVaultUrl).origin;\n      this.iframe.src = this.connectorLink.href;\n\n      this.win.addEventListener(\"message\", this.parseFunction, false);\n    }\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","import { TwoFactorProviderType } from \"../../../enums/twoFactorProviderType\";\n\nexport class TokenRequestTwoFactor {\n  constructor(\n    public provider: TwoFactorProviderType = null,\n    public token: string = null,\n    public remember: boolean = false\n  ) {}\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class TwoFactorEmailRequest extends SecretVerificationRequest {\n  email: string;\n  deviceIdentifier: string;\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport {\n  TwoFactorProviderDetails,\n  TwoFactorService as TwoFactorServiceAbstraction,\n} from \"../abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\n\nexport const TwoFactorProviders: Partial<Record<TwoFactorProviderType, TwoFactorProviderDetails>> =\n  {\n    [TwoFactorProviderType.Authenticator]: {\n      type: TwoFactorProviderType.Authenticator,\n      name: null as string,\n      description: null as string,\n      priority: 1,\n      sort: 1,\n      premium: false,\n    },\n    [TwoFactorProviderType.Yubikey]: {\n      type: TwoFactorProviderType.Yubikey,\n      name: null as string,\n      description: null as string,\n      priority: 3,\n      sort: 2,\n      premium: true,\n    },\n    [TwoFactorProviderType.Duo]: {\n      type: TwoFactorProviderType.Duo,\n      name: \"Duo\",\n      description: null as string,\n      priority: 2,\n      sort: 3,\n      premium: true,\n    },\n    [TwoFactorProviderType.OrganizationDuo]: {\n      type: TwoFactorProviderType.OrganizationDuo,\n      name: \"Duo (Organization)\",\n      description: null as string,\n      priority: 10,\n      sort: 4,\n      premium: false,\n    },\n    [TwoFactorProviderType.Email]: {\n      type: TwoFactorProviderType.Email,\n      name: null as string,\n      description: null as string,\n      priority: 0,\n      sort: 6,\n      premium: false,\n    },\n    [TwoFactorProviderType.WebAuthn]: {\n      type: TwoFactorProviderType.WebAuthn,\n      name: null as string,\n      description: null as string,\n      priority: 4,\n      sort: 5,\n      premium: true,\n    },\n  };\n\nexport class TwoFactorService implements TwoFactorServiceAbstraction {\n  private twoFactorProvidersData: Map<TwoFactorProviderType, { [key: string]: string }>;\n  private selectedTwoFactorProviderType: TwoFactorProviderType = null;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  init() {\n    TwoFactorProviders[TwoFactorProviderType.Email].name = this.i18nService.t(\"emailTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Email].description = this.i18nService.t(\"emailDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].name =\n      this.i18nService.t(\"authenticatorAppTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].description =\n      this.i18nService.t(\"authenticatorAppDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Duo].description = this.i18nService.t(\"duoDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].name =\n      \"Duo (\" + this.i18nService.t(\"organization\") + \")\";\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].description =\n      this.i18nService.t(\"duoOrganizationDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].name = this.i18nService.t(\"webAuthnTitle\");\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].description =\n      this.i18nService.t(\"webAuthnDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].name = this.i18nService.t(\"yubiKeyTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].description =\n      this.i18nService.t(\"yubiKeyDesc\");\n  }\n\n  getSupportedProviders(win: Window): TwoFactorProviderDetails[] {\n    const providers: any[] = [];\n    if (this.twoFactorProvidersData == null) {\n      return providers;\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.OrganizationDuo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.OrganizationDuo]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Authenticator)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Authenticator]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Yubikey)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Yubikey]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.Duo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Duo]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.WebAuthn) &&\n      this.platformUtilsService.supportsWebAuthn(win)\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.WebAuthn]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Email)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Email]);\n    }\n\n    return providers;\n  }\n\n  getDefaultProvider(webAuthnSupported: boolean): TwoFactorProviderType {\n    if (this.twoFactorProvidersData == null) {\n      return null;\n    }\n\n    if (\n      this.selectedTwoFactorProviderType != null &&\n      this.twoFactorProvidersData.has(this.selectedTwoFactorProviderType)\n    ) {\n      return this.selectedTwoFactorProviderType;\n    }\n\n    let providerType: TwoFactorProviderType = null;\n    let providerPriority = -1;\n    this.twoFactorProvidersData.forEach((_value, type) => {\n      const provider = (TwoFactorProviders as any)[type];\n      if (provider != null && provider.priority > providerPriority) {\n        if (type === TwoFactorProviderType.WebAuthn && !webAuthnSupported) {\n          return;\n        }\n\n        providerType = type;\n        providerPriority = provider.priority;\n      }\n    });\n\n    return providerType;\n  }\n\n  setSelectedProvider(type: TwoFactorProviderType) {\n    this.selectedTwoFactorProviderType = type;\n  }\n\n  clearSelectedProvider() {\n    this.selectedTwoFactorProviderType = null;\n  }\n\n  setProviders(response: IdentityTwoFactorResponse) {\n    this.twoFactorProvidersData = response.twoFactorProviders2;\n  }\n\n  clearProviders() {\n    this.twoFactorProvidersData = null;\n  }\n\n  getProviders() {\n    return this.twoFactorProvidersData;\n  }\n}\n","export abstract class AppIdService {\n  getAppId: () => Promise<string>;\n  getAnonymousAppId: () => Promise<string>;\n}\n","import { Directive, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport * as DuoWebSDK from \"duo_web_sdk\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { WebAuthnIFrame } from \"@bitwarden/common/misc/webauthn_iframe\";\nimport { AuthResult } from \"@bitwarden/common/models/domain/authResult\";\nimport { TokenRequestTwoFactor } from \"@bitwarden/common/models/request/identityToken/tokenRequestTwoFactor\";\nimport { TwoFactorEmailRequest } from \"@bitwarden/common/models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviders } from \"@bitwarden/common/services/twoFactor.service\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class TwoFactorComponent extends CaptchaProtectedComponent implements OnInit, OnDestroy {\n  token = \"\";\n  remember = false;\n  webAuthnReady = false;\n  webAuthnNewTab = false;\n  providers = TwoFactorProviders;\n  providerType = TwoFactorProviderType;\n  selectedProviderType: TwoFactorProviderType = TwoFactorProviderType.Authenticator;\n  webAuthnSupported = false;\n  webAuthn: WebAuthnIFrame = null;\n  title = \"\";\n  twoFactorEmail: string = null;\n  formPromise: Promise<any>;\n  emailPromise: Promise<any>;\n  identifier: string = null;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n\n  get webAuthnAllow(): string {\n    return `publickey-credentials-get ${this.environmentService.getWebVaultUrl()}`;\n  }\n\n  protected loginRoute = \"login\";\n  protected successRoute = \"vault\";\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected route: ActivatedRoute,\n    protected logService: LogService,\n    protected twoFactorService: TwoFactorService,\n    protected appIdService: AppIdService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.webAuthnSupported = this.platformUtilsService.supportsWebAuthn(win);\n  }\n\n  async ngOnInit() {\n    if (!this.authing || this.twoFactorService.getProviders() == null) {\n      this.router.navigate([this.loginRoute]);\n      return;\n    }\n\n    this.route.queryParams.pipe(first()).subscribe((qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    if (this.needsLock) {\n      this.successRoute = \"lock\";\n    }\n\n    if (this.win != null && this.webAuthnSupported) {\n      const webVaultUrl = this.environmentService.getWebVaultUrl();\n      this.webAuthn = new WebAuthnIFrame(\n        this.win,\n        webVaultUrl,\n        this.webAuthnNewTab,\n        this.platformUtilsService,\n        this.i18nService,\n        (token: string) => {\n          this.token = token;\n          this.submit();\n        },\n        (error: string) => {\n          this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n        },\n        (info: string) => {\n          if (info === \"ready\") {\n            this.webAuthnReady = true;\n          }\n        }\n      );\n    }\n\n    this.selectedProviderType = this.twoFactorService.getDefaultProvider(this.webAuthnSupported);\n    await this.init();\n  }\n\n  ngOnDestroy(): void {\n    this.cleanupWebAuthn();\n    this.webAuthn = null;\n  }\n\n  async init() {\n    if (this.selectedProviderType == null) {\n      this.title = this.i18nService.t(\"loginUnavailable\");\n      return;\n    }\n\n    this.cleanupWebAuthn();\n    this.title = (TwoFactorProviders as any)[this.selectedProviderType].name;\n    const providerData = this.twoFactorService.getProviders().get(this.selectedProviderType);\n    switch (this.selectedProviderType) {\n      case TwoFactorProviderType.WebAuthn:\n        if (!this.webAuthnNewTab) {\n          setTimeout(() => {\n            this.authWebAuthn();\n          }, 500);\n        }\n        break;\n      case TwoFactorProviderType.Duo:\n      case TwoFactorProviderType.OrganizationDuo:\n        setTimeout(() => {\n          DuoWebSDK.init({\n            iframe: undefined,\n            host: providerData.Host,\n            sig_request: providerData.Signature,\n            submit_callback: async (f: HTMLFormElement) => {\n              const sig = f.querySelector('input[name=\"sig_response\"]') as HTMLInputElement;\n              if (sig != null) {\n                this.token = sig.value;\n                await this.submit();\n              }\n            },\n          });\n        }, 0);\n        break;\n      case TwoFactorProviderType.Email:\n        this.twoFactorEmail = providerData.Email;\n        if (this.twoFactorService.getProviders().size > 1) {\n          await this.sendEmail(false);\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  async submit() {\n    await this.setupCaptcha();\n\n    if (this.token == null || this.token === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"verificationCodeRequired\")\n      );\n      return;\n    }\n\n    if (this.selectedProviderType === TwoFactorProviderType.WebAuthn) {\n      if (this.webAuthn != null) {\n        this.webAuthn.stop();\n      } else {\n        return;\n      }\n    } else if (\n      this.selectedProviderType === TwoFactorProviderType.Email ||\n      this.selectedProviderType === TwoFactorProviderType.Authenticator\n    ) {\n      this.token = this.token.replace(\" \", \"\").trim();\n    }\n\n    try {\n      await this.doSubmit();\n    } catch {\n      if (this.selectedProviderType === TwoFactorProviderType.WebAuthn && this.webAuthn != null) {\n        this.webAuthn.start();\n      }\n    }\n  }\n\n  async doSubmit() {\n    this.formPromise = this.authService.logInTwoFactor(\n      new TokenRequestTwoFactor(this.selectedProviderType, this.token, this.remember),\n      this.captchaToken\n    );\n    const response: AuthResult = await this.formPromise;\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    if (this.handleCaptchaRequired(response)) {\n      return;\n    }\n    if (this.onSuccessfulLogin != null) {\n      this.onSuccessfulLogin();\n    }\n    if (response.resetMasterPassword) {\n      this.successRoute = \"set-password\";\n    }\n    if (response.forcePasswordReset) {\n      this.successRoute = \"update-temp-password\";\n    }\n    if (this.onSuccessfulLoginNavigate != null) {\n      this.onSuccessfulLoginNavigate();\n    } else {\n      this.router.navigate([this.successRoute], {\n        queryParams: {\n          identifier: this.identifier,\n        },\n      });\n    }\n  }\n\n  async sendEmail(doToast: boolean) {\n    if (this.selectedProviderType !== TwoFactorProviderType.Email) {\n      return;\n    }\n\n    if (this.emailPromise != null) {\n      return;\n    }\n\n    try {\n      const request = new TwoFactorEmailRequest();\n      request.email = this.authService.email;\n      request.masterPasswordHash = this.authService.masterPasswordHash;\n      request.deviceIdentifier = await this.appIdService.getAppId();\n      this.emailPromise = this.apiService.postTwoFactorEmail(request);\n      await this.emailPromise;\n      if (doToast) {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"verificationCodeEmailSent\", this.twoFactorEmail)\n        );\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.emailPromise = null;\n  }\n\n  authWebAuthn() {\n    const providerData = this.twoFactorService.getProviders().get(this.selectedProviderType);\n\n    if (!this.webAuthnSupported || this.webAuthn == null) {\n      return;\n    }\n\n    this.webAuthn.init(providerData);\n  }\n\n  private cleanupWebAuthn() {\n    if (this.webAuthn != null) {\n      this.webAuthn.stop();\n      this.webAuthn.cleanup();\n    }\n  }\n\n  get authing(): boolean {\n    return (\n      this.authService.authingWithPassword() ||\n      this.authService.authingWithSso() ||\n      this.authService.authingWithApiKey()\n    );\n  }\n\n  get needsLock(): boolean {\n    return this.authService.authingWithSso() || this.authService.authingWithApiKey();\n  }\n}\n","export abstract class BroadcasterService {\n  send: (message: any, id?: string) => void;\n  subscribe: (id: string, messageCallback: (message: any) => any) => void;\n  unsubscribe: (id: string) => void;\n}\n","<form id=\"two-factor-page\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" routerLink=\"/login\">{{ \"back\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ title }}</span>\n    </h1>\n    <div class=\"right\">\n      <button\n        type=\"submit\"\n        [disabled]=\"form.loading\"\n        *ngIf=\"\n          selectedProviderType != null &&\n          selectedProviderType !== providerType.Duo &&\n          selectedProviderType !== providerType.OrganizationDuo &&\n          (selectedProviderType !== providerType.WebAuthn || form.loading)\n        \"\n      >\n        <span [hidden]=\"form.loading\">{{ \"continue\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <ng-container\n      *ngIf=\"\n        selectedProviderType === providerType.Authenticator ||\n        selectedProviderType === providerType.Email\n      \"\n    >\n      <div class=\"content text-center\">\n        <span *ngIf=\"selectedProviderType === providerType.Authenticator\">\n          {{ \"enterVerificationCodeApp\" | i18n }}\n        </span>\n        <span *ngIf=\"selectedProviderType === providerType.Email\">\n          {{ \"enterVerificationCodeEmail\" | i18n: twoFactorEmail }}\n        </span>\n      </div>\n      <div class=\"box first\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"code\">{{ \"verificationCode\" | i18n }}</label>\n            <input\n              id=\"code\"\n              type=\"text\"\n              name=\"Code\"\n              [(ngModel)]=\"token\"\n              required\n              appAutofocus\n              inputmode=\"tel\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"remember\">{{ \"rememberMe\" | i18n }}</label>\n            <input id=\"remember\" type=\"checkbox\" name=\"Remember\" [(ngModel)]=\"remember\" />\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"selectedProviderType === providerType.Yubikey\">\n      <div class=\"content text-center\">\n        <p class=\"text-center\">{{ \"insertYubiKey\" | i18n }}</p>\n        <img src=\"../images/yubikey.jpg\" class=\"img-rounded img-responsive\" alt=\"\" />\n      </div>\n      <div class=\"box first\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"code\" class=\"sr-only\">{{ \"verificationCode\" | i18n }}</label>\n            <input\n              id=\"code\"\n              type=\"password\"\n              name=\"Code\"\n              [(ngModel)]=\"token\"\n              required\n              appAutofocus\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"remember\">{{ \"rememberMe\" | i18n }}</label>\n            <input id=\"remember\" type=\"checkbox\" name=\"Remember\" [(ngModel)]=\"remember\" />\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"selectedProviderType === providerType.WebAuthn && !webAuthnNewTab\">\n      <div id=\"web-authn-frame\"><iframe id=\"webauthn_iframe\" [allow]=\"webAuthnAllow\"></iframe></div>\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"remember\">{{ \"rememberMe\" | i18n }}</label>\n            <input id=\"remember\" type=\"checkbox\" name=\"Remember\" [(ngModel)]=\"remember\" />\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"selectedProviderType === providerType.WebAuthn && webAuthnNewTab\">\n      <div class=\"content text-center\" *ngIf=\"webAuthnNewTab\">\n        <p class=\"text-center\">{{ \"webAuthnNewTab\" | i18n }}</p>\n        <button type=\"button\" class=\"btn primary block\" (click)=\"authWebAuthn()\" appStopClick>\n          {{ \"webAuthnNewTabOpen\" | i18n }}\n        </button>\n      </div>\n    </ng-container>\n    <ng-container\n      *ngIf=\"\n        selectedProviderType === providerType.Duo ||\n        selectedProviderType === providerType.OrganizationDuo\n      \"\n    >\n      <div id=\"duo-frame\"><iframe id=\"duo_iframe\"></iframe></div>\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"remember\">{{ \"rememberMe\" | i18n }}</label>\n            <input id=\"remember\" type=\"checkbox\" name=\"Remember\" [(ngModel)]=\"remember\" />\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <div class=\"box-content-row\" [hidden]=\"!showCaptcha()\">\n      <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n    </div>\n    <div class=\"content\" *ngIf=\"selectedProviderType == null\">\n      <p class=\"text-center\">{{ \"noTwoStepProviders\" | i18n }}</p>\n      <p class=\"text-center\">{{ \"noTwoStepProviders2\" | i18n }}</p>\n    </div>\n    <div class=\"content no-vpad\" *ngIf=\"selectedProviderType != null\">\n      <p class=\"text-center\">\n        <button type=\"button\" appStopClick (click)=\"anotherMethod()\">\n          {{ \"useAnotherTwoStepMethod\" | i18n }}\n        </button>\n      </p>\n      <p *ngIf=\"selectedProviderType === providerType.Email\" class=\"text-center\">\n        <button type=\"button\" appStopClick (click)=\"sendEmail(true)\" [appApiAction]=\"emailPromise\">\n          {{ \"sendVerificationCodeEmailAgain\" | i18n }}\n        </button>\n      </p>\n    </div>\n  </main>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { TwoFactorComponent as BaseTwoFactorComponent } from \"@bitwarden/angular/components/two-factor.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst BroadcasterSubscriptionId = \"TwoFactorComponent\";\n\n@Component({\n  selector: \"app-two-factor\",\n  templateUrl: \"two-factor.component.html\",\n})\nexport class TwoFactorComponent extends BaseTwoFactorComponent {\n  showNewWindowMessage = false;\n\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    apiService: ApiService,\n    platformUtilsService: PlatformUtilsService,\n    private syncService: SyncService,\n    environmentService: EnvironmentService,\n    private broadcasterService: BroadcasterService,\n    private popupUtilsService: PopupUtilsService,\n    stateService: StateService,\n    route: ActivatedRoute,\n    private messagingService: MessagingService,\n    logService: LogService,\n    twoFactorService: TwoFactorService,\n    appIdService: AppIdService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      apiService,\n      platformUtilsService,\n      window,\n      environmentService,\n      stateService,\n      route,\n      logService,\n      twoFactorService,\n      appIdService\n    );\n    super.onSuccessfulLogin = () => {\n      return syncService.fullSync(true);\n    };\n    super.successRoute = \"/tabs/vault\";\n    this.webAuthnNewTab =\n      this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari();\n  }\n\n  async ngOnInit() {\n    if (this.route.snapshot.paramMap.has(\"webAuthnResponse\")) {\n      // WebAuthn fallback response\n      this.selectedProviderType = TwoFactorProviderType.WebAuthn;\n      this.token = this.route.snapshot.paramMap.get(\"webAuthnResponse\");\n      super.onSuccessfulLogin = async () => {\n        this.syncService.fullSync(true);\n        this.messagingService.send(\"reloadPopup\");\n        window.close();\n      };\n      this.remember = this.route.snapshot.paramMap.get(\"remember\") === \"true\";\n      await this.doSubmit();\n      return;\n    }\n\n    await super.ngOnInit();\n    if (this.selectedProviderType == null) {\n      return;\n    }\n\n    // WebAuthn prompt appears inside the popup on linux, and requires a larger popup width\n    // than usual to avoid cutting off the dialog.\n    if (this.selectedProviderType === TwoFactorProviderType.WebAuthn && (await this.isLinux())) {\n      document.body.classList.add(\"linux-webauthn\");\n    }\n\n    if (\n      this.selectedProviderType === TwoFactorProviderType.Email &&\n      this.popupUtilsService.inPopup(window)\n    ) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"popup2faCloseMessage\"),\n        null,\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (confirmed) {\n        this.popupUtilsService.popOut(window);\n      }\n    }\n\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.sso === \"true\") {\n        super.onSuccessfulLogin = () => {\n          BrowserApi.reloadOpenWindows();\n          const thisWindow = window.open(\"\", \"_self\");\n          thisWindow.close();\n          return this.syncService.fullSync(true);\n        };\n      }\n    });\n  }\n\n  async ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n\n    if (this.selectedProviderType === TwoFactorProviderType.WebAuthn && (await this.isLinux())) {\n      document.body.classList.remove(\"linux-webauthn\");\n    }\n    super.ngOnDestroy();\n  }\n\n  anotherMethod() {\n    this.router.navigate([\"2fa-options\"]);\n  }\n\n  async isLinux() {\n    return (await BrowserApi.getPlatformInfo()).os === \"linux\";\n  }\n}\n","import { OrganizationUserResetPasswordRequest } from \"./organizationUserResetPasswordRequest\";\n\nexport class UpdateTempPasswordRequest extends OrganizationUserResetPasswordRequest {\n  masterPasswordHint: string;\n}\n","export class OrganizationUserResetPasswordRequest {\n  newMasterPasswordHash: string;\n  key: string;\n}\n","import { Directive } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\nimport { UpdateTempPasswordRequest } from \"@bitwarden/common/models/request/updateTempPasswordRequest\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class UpdateTempPasswordComponent extends BaseChangePasswordComponent {\n  hint: string;\n  key: string;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  showPassword = false;\n\n  onSuccessfulChangePassword: () => Promise<any>;\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    private apiService: ApiService,\n    stateService: StateService,\n    private syncService: SyncService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    super.ngOnInit();\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions();\n    this.email = await this.stateService.getEmail();\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfIterations = await this.stateService.getKdfIterations();\n    return true;\n  }\n\n  async submit() {\n    // Validation\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    try {\n      // Create new key and hash new password\n      const newKey = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.email.trim().toLowerCase(),\n        this.kdf,\n        this.kdfIterations\n      );\n      const newPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, newKey);\n\n      // Grab user's current enc key\n      const userEncKey = await this.cryptoService.getEncKey();\n\n      // Create new encKey for the User\n      const newEncKey = await this.cryptoService.remakeEncKey(newKey, userEncKey);\n\n      await this.performSubmitActions(newPasswordHash, newKey, newEncKey);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    try {\n      // Create request\n      const request = new UpdateTempPasswordRequest();\n      request.key = encKey[1].encryptedString;\n      request.newMasterPasswordHash = masterPasswordHash;\n      request.masterPasswordHint = this.hint;\n\n      // Update user's password\n      this.formPromise = this.apiService.putUpdateTempPassword(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"updatedMasterPassword\")\n      );\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.messagingService.send(\"logout\");\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <a (click)=\"logOut()\">{{ \"logOut\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"updateMasterPassword\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <app-callout type=\"warning\" title=\"{{ 'updateMasterPassword' | i18n }}\">\n      {{ \"updateMasterPasswordWarning\" | i18n }}\n    </app-callout>\n    <app-callout\n      type=\"info\"\n      [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n      *ngIf=\"enforcedPolicyOptions\"\n    >\n    </app-callout>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <div class=\"box-content-row-flex\">\n            <div class=\"row-main\">\n              <label for=\"masterPassword\">\n                {{ \"masterPass\" | i18n }}\n                <strong class=\"sub-label text-{{ color }}\" *ngIf=\"text\">\n                  {{ text }}\n                </strong>\n              </label>\n              <input\n                id=\"masterPassword\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPassword\"\n                class=\"monospaced\"\n                [(ngModel)]=\"masterPassword\"\n                required\n                appInputVerbatim\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword(false)\"\n                [attr.aria-pressed]=\"showPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <app-password-strength\n            [password]=\"masterPassword\"\n            [email]=\"email\"\n            (passwordStrengthResult)=\"getStrengthResult($event)\"\n            (passwordScoreColor)=\"getPasswordScoreText($event)\"\n          >\n          </app-password-strength>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n          <div class=\"row-main\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <input\n              id=\"masterPasswordRetype\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"MasterPasswordRetype\"\n              class=\"monospaced\"\n              [(ngModel)]=\"masterPasswordRetype\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword(true)\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n              ></i>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n          <input id=\"hint\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"masterPassHintDesc\" | i18n }}\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component } from \"@angular/core\";\n\nimport { UpdateTempPasswordComponent as BaseUpdateTempPasswordComponent } from \"@bitwarden/angular/components/update-temp-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\n\n@Component({\n  selector: \"app-update-temp-password\",\n  templateUrl: \"update-temp-password.component.html\",\n})\nexport class UpdateTempPasswordComponent extends BaseUpdateTempPasswordComponent {\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    messagingService: MessagingService,\n    apiService: ApiService,\n    syncService: SyncService,\n    logService: LogService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      passwordGenerationService,\n      policyService,\n      cryptoService,\n      messagingService,\n      apiService,\n      stateService,\n      syncService,\n      logService\n    );\n  }\n}\n","export abstract class UsernameGenerationService {\n  generateUsername: (options: any) => Promise<string>;\n  generateWord: (options: any) => Promise<string>;\n  generateSubaddress: (options: any) => Promise<string>;\n  generateCatchall: (options: any) => Promise<string>;\n  generateForwarded: (options: any) => Promise<string>;\n  getOptions: () => Promise<any>;\n  saveOptions: (options: any) => Promise<void>;\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\nimport { PasswordGeneratorPolicyOptions } from \"@bitwarden/common/models/domain/passwordGeneratorPolicyOptions\";\n\n@Directive()\nexport class GeneratorComponent implements OnInit {\n  @Input() comingFromAddEdit = false;\n  @Input() type: string;\n  @Output() onSelected = new EventEmitter<string>();\n\n  usernameGeneratingPromise: Promise<string>;\n  typeOptions: any[];\n  passTypeOptions: any[];\n  usernameTypeOptions: any[];\n  subaddressOptions: any[];\n  catchallOptions: any[];\n  forwardOptions: any[];\n  usernameOptions: any = {};\n  passwordOptions: any = {};\n  username = \"-\";\n  password = \"-\";\n  showOptions = false;\n  avoidAmbiguous = false;\n  enforcedPasswordPolicyOptions: PasswordGeneratorPolicyOptions;\n  usernameWebsite: string = null;\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationService,\n    protected usernameGenerationService: UsernameGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected stateService: StateService,\n    protected i18nService: I18nService,\n    protected logService: LogService,\n    protected route: ActivatedRoute,\n    private win: Window\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"username\"), value: \"username\" },\n    ];\n    this.passTypeOptions = [\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"passphrase\"), value: \"passphrase\" },\n    ];\n    this.usernameTypeOptions = [\n      {\n        name: i18nService.t(\"plusAddressedEmail\"),\n        value: \"subaddress\",\n        desc: i18nService.t(\"plusAddressedEmailDesc\"),\n      },\n      {\n        name: i18nService.t(\"catchallEmail\"),\n        value: \"catchall\",\n        desc: i18nService.t(\"catchallEmailDesc\"),\n      },\n      {\n        name: i18nService.t(\"forwardedEmail\"),\n        value: \"forwarded\",\n        desc: i18nService.t(\"forwardedEmailDesc\"),\n      },\n      { name: i18nService.t(\"randomWord\"), value: \"word\" },\n    ];\n    this.subaddressOptions = [{ name: i18nService.t(\"random\"), value: \"random\" }];\n    this.catchallOptions = [{ name: i18nService.t(\"random\"), value: \"random\" }];\n    this.forwardOptions = [\n      { name: \"SimpleLogin\", value: \"simplelogin\" },\n      { name: \"AnonAddy\", value: \"anonaddy\" },\n      { name: \"Firefox Relay\", value: \"firefoxrelay\" },\n      { name: \"Fastmail\", value: \"fastmail\" },\n      //{ name: \"DuckDuckGo\", value: \"duckduckgo\" },\n    ];\n  }\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      const passwordOptionsResponse = await this.passwordGenerationService.getOptions();\n      this.passwordOptions = passwordOptionsResponse[0];\n      this.enforcedPasswordPolicyOptions = passwordOptionsResponse[1];\n      this.avoidAmbiguous = !this.passwordOptions.ambiguous;\n      this.passwordOptions.type =\n        this.passwordOptions.type === \"passphrase\" ? \"passphrase\" : \"password\";\n\n      this.usernameOptions = await this.usernameGenerationService.getOptions();\n      if (this.usernameOptions.type == null) {\n        this.usernameOptions.type = \"word\";\n      }\n      if (\n        this.usernameOptions.subaddressEmail == null ||\n        this.usernameOptions.subaddressEmail === \"\"\n      ) {\n        this.usernameOptions.subaddressEmail = await this.stateService.getEmail();\n      }\n      if (this.usernameWebsite == null) {\n        this.usernameOptions.subaddressType = this.usernameOptions.catchallType = \"random\";\n      } else {\n        this.usernameOptions.website = this.usernameWebsite;\n        const websiteOption = { name: this.i18nService.t(\"websiteName\"), value: \"website-name\" };\n        this.subaddressOptions.push(websiteOption);\n        this.catchallOptions.push(websiteOption);\n      }\n\n      if (this.type !== \"username\" && this.type !== \"password\") {\n        if (qParams.type === \"username\" || qParams.type === \"password\") {\n          this.type = qParams.type;\n        } else {\n          const generatorOptions = await this.stateService.getGeneratorOptions();\n          this.type = generatorOptions?.type ?? \"password\";\n        }\n      }\n      if (this.regenerateWithoutButtonPress()) {\n        await this.regenerate();\n      }\n    });\n  }\n\n  async typeChanged() {\n    await this.stateService.setGeneratorOptions({ type: this.type });\n    if (this.regenerateWithoutButtonPress()) {\n      await this.regenerate();\n    }\n  }\n\n  async regenerate() {\n    if (this.type === \"password\") {\n      await this.regeneratePassword();\n    } else if (this.type === \"username\") {\n      await this.regenerateUsername();\n    }\n  }\n\n  async sliderChanged() {\n    this.savePasswordOptions(false);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  async sliderInput() {\n    this.normalizePasswordOptions();\n    this.password = await this.passwordGenerationService.generatePassword(this.passwordOptions);\n  }\n\n  async savePasswordOptions(regenerate = true) {\n    this.normalizePasswordOptions();\n    await this.passwordGenerationService.saveOptions(this.passwordOptions);\n\n    if (regenerate && this.regenerateWithoutButtonPress()) {\n      await this.regeneratePassword();\n    }\n  }\n\n  async saveUsernameOptions(regenerate = true) {\n    await this.usernameGenerationService.saveOptions(this.usernameOptions);\n    if (this.usernameOptions.type === \"forwarded\") {\n      this.username = \"-\";\n    }\n    if (regenerate && this.regenerateWithoutButtonPress()) {\n      await this.regenerateUsername();\n    }\n  }\n\n  async regeneratePassword() {\n    this.password = await this.passwordGenerationService.generatePassword(this.passwordOptions);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  regenerateUsername() {\n    return this.generateUsername();\n  }\n\n  async generateUsername() {\n    try {\n      this.usernameGeneratingPromise = this.usernameGenerationService.generateUsername(\n        this.usernameOptions\n      );\n      this.username = await this.usernameGeneratingPromise;\n      if (this.username === \"\" || this.username === null) {\n        this.username = \"-\";\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  copy() {\n    const password = this.type === \"password\";\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(\n      password ? this.password : this.username,\n      copyOptions\n    );\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(password ? \"password\" : \"username\"))\n    );\n  }\n\n  select() {\n    this.onSelected.emit(this.type === \"password\" ? this.password : this.username);\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  regenerateWithoutButtonPress() {\n    return this.type !== \"username\" || this.usernameOptions.type !== \"forwarded\";\n  }\n\n  private normalizePasswordOptions() {\n    // Application level normalize options depedent on class variables\n    this.passwordOptions.ambiguous = !this.avoidAmbiguous;\n\n    if (\n      !this.passwordOptions.uppercase &&\n      !this.passwordOptions.lowercase &&\n      !this.passwordOptions.number &&\n      !this.passwordOptions.special\n    ) {\n      this.passwordOptions.lowercase = true;\n      if (this.win != null) {\n        const lowercase = this.win.document.querySelector(\"#lowercase\") as HTMLInputElement;\n        if (lowercase) {\n          lowercase.checked = true;\n        }\n      }\n    }\n\n    this.passwordGenerationService.normalizeOptions(\n      this.passwordOptions,\n      this.enforcedPasswordPolicyOptions\n    );\n  }\n}\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Directive({\n  selector: \"[appSelectCopy]\",\n})\nexport class SelectCopyDirective {\n  constructor(private el: ElementRef, private platformUtilsService: PlatformUtilsService) {}\n\n  @HostListener(\"copy\") onCopy() {\n    if (window == null) {\n      return;\n    }\n    let copyText = \"\";\n    const selection = window.getSelection();\n    for (let i = 0; i < selection.rangeCount; i++) {\n      const range = selection.getRangeAt(i);\n      const text = range.toString();\n\n      // The selection should only contain one line of text. In some cases however, the\n      // selection contains newlines and space characters from the indentation of following\n      // sibling nodes. To avoid copying passwords containing trailing newlines and spaces\n      // that aren't part of the password, the selection has to be trimmed.\n      let stringEndPos = text.length;\n      const newLinePos = text.search(/(?:\\r\\n|\\r|\\n)/);\n      if (newLinePos > -1) {\n        const otherPart = text.substr(newLinePos).trim();\n        if (otherPart === \"\") {\n          stringEndPos = newLinePos;\n        }\n      }\n      copyText += text.substring(0, stringEndPos);\n    }\n    this.platformUtilsService.copyToClipboard(copyText, { window: window });\n  }\n}\n","<ng-container *ngIf=\"show\">\n  <button type=\"button\" (click)=\"expand()\" appA11yTitle=\"{{ 'popOutNewWindow' | i18n }}\">\n    <i class=\"bwi bwi-external-link bwi-rotate-270 bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n  </button>\n</ng-container>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\n@Component({\n  selector: \"app-pop-out\",\n  templateUrl: \"pop-out.component.html\",\n})\nexport class PopOutComponent implements OnInit {\n  @Input() show = true;\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private popupUtilsService: PopupUtilsService\n  ) {}\n\n  ngOnInit() {\n    if (this.show) {\n      if (\n        (this.popupUtilsService.inSidebar(window) && this.platformUtilsService.isFirefox()) ||\n        this.popupUtilsService.inPopout(window)\n      ) {\n        this.show = false;\n      }\n    }\n  }\n\n  expand() {\n    this.popupUtilsService.popOut(window);\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n/*\n An updated pipe that sanitizes HTML, highlights numbers and special characters (in different colors each)\n and handles Unicode / Emoji characters correctly.\n*/\n@Pipe({ name: \"colorPassword\" })\nexport class ColorPasswordPipe implements PipeTransform {\n  transform(password: string) {\n    const template = (character: string, type: string) =>\n      `<span class=\"password-${type}\">${character}</span>`;\n    const colorizedPassword = this.generateTemplate(password, template);\n    return colorizedPassword;\n  }\n\n  protected generateTemplate(\n    password: string,\n    templateGenerator: (chararacter: string, type: string, index?: number) => string\n  ) {\n    // Convert to an array to handle cases that stings have special characters, ie: emoji.\n    const passwordArray = Array.from(password);\n    let colorizedPassword = \"\";\n    for (let i = 0; i < passwordArray.length; i++) {\n      let character = passwordArray[i];\n      let isSpecial = false;\n      // Sanitize HTML first.\n      switch (character) {\n        case \"&\":\n          character = \"&amp;\";\n          isSpecial = true;\n          break;\n        case \"<\":\n          character = \"&lt;\";\n          isSpecial = true;\n          break;\n        case \">\":\n          character = \"&gt;\";\n          isSpecial = true;\n          break;\n        case \" \":\n          character = \"&nbsp;\";\n          isSpecial = true;\n          break;\n        default:\n          break;\n      }\n      let type = \"letter\";\n      if (character.match(Utils.regexpEmojiPresentation)) {\n        type = \"emoji\";\n      } else if (isSpecial || character.match(/[^\\w ]/)) {\n        type = \"special\";\n      } else if (character.match(/\\d/)) {\n        type = \"number\";\n      }\n      colorizedPassword += templateGenerator(character, type, i);\n    }\n    return colorizedPassword;\n  }\n}\n","<header>\n  <div class=\"left\">\n    <app-pop-out [show]=\"!comingFromAddEdit\"></app-pop-out>\n    <button type=\"button\" (click)=\"close()\" *ngIf=\"comingFromAddEdit\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"generator\" | i18n }}</span>\n  </h1>\n  <div class=\"right\">\n    <button type=\"button\" (click)=\"select()\" *ngIf=\"comingFromAddEdit\">\n      {{ \"select\" | i18n }}\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\">\n  <app-callout type=\"info\" *ngIf=\"enforcedPasswordPolicyOptions?.inEffect() && type === 'password'\">\n    {{ \"passwordGeneratorPolicyInEffect\" | i18n }}\n  </app-callout>\n  <div class=\"generated-block\" *ngIf=\"type === 'password'\">\n    <div class=\"generated-wrapper\" [innerHTML]=\"password | colorPassword\" appSelectCopy></div>\n    <div class=\"action-buttons\">\n      <button\n        type=\"button\"\n        class=\"row-btn\"\n        appStopClick\n        appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n        (click)=\"copy()\"\n      >\n        <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        appStopClick\n        appA11yTitle=\"{{ 'regeneratePassword' | i18n }}\"\n        (click)=\"regenerate()\"\n      >\n        <i class=\"bwi bwi-lg bwi-generate\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"generated-block\" *ngIf=\"type === 'username'\">\n    <div class=\"generated-wrapper\" [innerHTML]=\"username | colorPassword\" appSelectCopy></div>\n    <div class=\"action-buttons\" #form [appApiAction]=\"usernameGeneratingPromise\">\n      <button\n        type=\"button\"\n        class=\"row-btn\"\n        appStopClick\n        appA11yTitle=\"{{ 'copyUsername' | i18n }}\"\n        (click)=\"copy()\"\n      >\n        <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        appStopClick\n        appA11yTitle=\"{{ 'regenerateUsername' | i18n }}\"\n        (click)=\"regenerate()\"\n        [disabled]=\"form.loading\"\n      >\n        <i\n          class=\"bwi bwi-lg bwi-generate\"\n          [ngClass]=\"form.loading ? 'bwi-spin' : ''\"\n          aria-hidden=\"true\"\n        ></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box\">\n    <div class=\"box-content\">\n      <div class=\"box-content-row\" role=\"radiogroup\" aria-labelledby=\"typeHeading\">\n        <label id=\"typeHeading\" class=\"radio-header\">{{\n          \"whatWouldYouLikeToGenerate\" | i18n\n        }}</label>\n        <div class=\"radio-group text-default\" appBoxRow *ngFor=\"let o of typeOptions\">\n          <input\n            type=\"radio\"\n            [(ngModel)]=\"type\"\n            name=\"Type\"\n            id=\"type_{{ o.value }}\"\n            [value]=\"o.value\"\n            (change)=\"typeChanged()\"\n            [checked]=\"type === o.value\"\n            [disabled]=\"comingFromAddEdit && type !== o.value\"\n          />\n          <label for=\"type_{{ o.value }}\">\n            {{ o.name }}\n          </label>\n        </div>\n      </div>\n    </div>\n  </div>\n  <ng-container *ngIf=\"type === 'password'\">\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"options\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" role=\"radiogroup\" aria-labelledby=\"passwordTypeHeading\">\n          <label id=\"passwordTypeHeading\" class=\"radio-header\">{{ \"passwordType\" | i18n }}</label>\n          <div class=\"radio-group text-default\" appBoxRow *ngFor=\"let o of passTypeOptions\">\n            <input\n              type=\"radio\"\n              [(ngModel)]=\"passwordOptions.type\"\n              name=\"PasswordType\"\n              id=\"passwordtype_{{ o.value }}\"\n              [value]=\"o.value\"\n              (change)=\"savePasswordOptions()\"\n              [checked]=\"passwordOptions.type === o.value\"\n            />\n            <label for=\"passwordtype_{{ o.value }}\">\n              {{ o.name }}\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"passwordOptions.type === 'passphrase'\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-input\" appBoxRow>\n          <label for=\"num-words\">{{ \"numWords\" | i18n }}</label>\n          <input\n            id=\"num-words\"\n            type=\"number\"\n            min=\"3\"\n            max=\"20\"\n            (change)=\"savePasswordOptions()\"\n            [(ngModel)]=\"passwordOptions.numWords\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-input\" appBoxRow>\n          <label for=\"word-separator\">{{ \"wordSeparator\" | i18n }}</label>\n          <input\n            id=\"word-separator\"\n            type=\"text\"\n            maxlength=\"1\"\n            (input)=\"savePasswordOptions()\"\n            [(ngModel)]=\"passwordOptions.wordSeparator\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"capitalize\">{{ \"capitalize\" | i18n }}</label>\n          <input\n            id=\"capitalize\"\n            type=\"checkbox\"\n            (change)=\"savePasswordOptions()\"\n            [(ngModel)]=\"passwordOptions.capitalize\"\n            [disabled]=\"enforcedPasswordPolicyOptions?.capitalize\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"include-number\">{{ \"includeNumber\" | i18n }}</label>\n          <input\n            id=\"include-number\"\n            type=\"checkbox\"\n            (change)=\"savePasswordOptions()\"\n            [(ngModel)]=\"passwordOptions.includeNumber\"\n            [disabled]=\"enforcedPasswordPolicyOptions?.includeNumber\"\n          />\n        </div>\n      </div>\n    </div>\n    <ng-container *ngIf=\"passwordOptions.type === 'password'\">\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-slider\" appBoxRow>\n            <label for=\"length\">{{ \"length\" | i18n }}</label>\n            <input\n              id=\"length\"\n              type=\"number\"\n              min=\"5\"\n              max=\"128\"\n              [(ngModel)]=\"passwordOptions.length\"\n              (change)=\"savePasswordOptions()\"\n            />\n            <input\n              id=\"lengthRange\"\n              type=\"range\"\n              min=\"5\"\n              max=\"128\"\n              step=\"1\"\n              [(ngModel)]=\"passwordOptions.length\"\n              (change)=\"sliderChanged()\"\n              (input)=\"sliderInput()\"\n              attr.aria-label=\"{{ 'length' | i18n }}\"\n              tabindex=\"-1\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"uppercase\">A-Z</label>\n            <input\n              id=\"uppercase\"\n              type=\"checkbox\"\n              (change)=\"savePasswordOptions()\"\n              attr.aria-label=\"{{ 'uppercase' | i18n }}\"\n              [disabled]=\"enforcedPasswordPolicyOptions.useUppercase\"\n              [(ngModel)]=\"passwordOptions.uppercase\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"lowercase\">a-z</label>\n            <input\n              id=\"lowercase\"\n              type=\"checkbox\"\n              (change)=\"savePasswordOptions()\"\n              attr.aria-label=\"{{ 'lowercase' | i18n }}\"\n              [disabled]=\"enforcedPasswordPolicyOptions.useLowercase\"\n              [(ngModel)]=\"passwordOptions.lowercase\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"numbers\">0-9</label>\n            <input\n              id=\"numbers\"\n              type=\"checkbox\"\n              (change)=\"savePasswordOptions()\"\n              attr.aria-label=\"{{ 'numbers' | i18n }}\"\n              [disabled]=\"enforcedPasswordPolicyOptions.useNumbers\"\n              [(ngModel)]=\"passwordOptions.number\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"special\">!@#$%^&*</label>\n            <input\n              id=\"special\"\n              type=\"checkbox\"\n              (change)=\"savePasswordOptions()\"\n              attr.aria-label=\"{{ 'specialCharacters' | i18n }}\"\n              [disabled]=\"enforcedPasswordPolicyOptions.useSpecial\"\n              [(ngModel)]=\"passwordOptions.special\"\n            />\n          </div>\n        </div>\n      </div>\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-input\" appBoxRow>\n            <label for=\"min-number\">{{ \"minNumbers\" | i18n }}</label>\n            <input\n              id=\"min-number\"\n              type=\"number\"\n              min=\"0\"\n              max=\"9\"\n              (change)=\"savePasswordOptions()\"\n              [(ngModel)]=\"passwordOptions.minNumber\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-input\" appBoxRow>\n            <label for=\"min-special\">{{ \"minSpecial\" | i18n }}</label>\n            <input\n              id=\"min-special\"\n              type=\"number\"\n              min=\"0\"\n              max=\"9\"\n              (change)=\"savePasswordOptions()\"\n              [(ngModel)]=\"passwordOptions.minSpecial\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"ambiguous\">{{ \"avoidAmbChar\" | i18n }}</label>\n            <input\n              id=\"ambiguous\"\n              type=\"checkbox\"\n              (change)=\"savePasswordOptions()\"\n              [(ngModel)]=\"avoidAmbiguous\"\n            />\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <div class=\"box list\">\n      <div class=\"box-content single-line\">\n        <a class=\"box-content-row box-content-row-flex\" routerLink=\"/generator-history\">\n          <div class=\"row-main\">{{ \"passwordHistory\" | i18n }}</div>\n          <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n        </a>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"type === 'username'\">\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"options\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" role=\"radiogroup\" aria-labelledby=\"usernameTypeHeading\">\n          <label id=\"usernameTypeHeading\" class=\"radio-header\">\n            {{ \"usernameType\" | i18n }}\n            <a\n              href=\"https://bitwarden.com/help/generator/#username-types\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </label>\n          <div\n            class=\"radio-group align-start text-default\"\n            appBoxRow\n            *ngFor=\"let o of usernameTypeOptions\"\n          >\n            <input\n              type=\"radio\"\n              [(ngModel)]=\"usernameOptions.type\"\n              name=\"UsernameType\"\n              id=\"type_{{ o.value }}\"\n              [value]=\"o.value\"\n              (change)=\"saveUsernameOptions()\"\n              [checked]=\"usernameOptions.type === o.value\"\n            />\n            <label for=\"type_{{ o.value }}\">\n              {{ o.name }}\n              <div class=\"small text-muted\" *ngIf=\"o.desc\">{{ o.desc }}</div>\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"usernameOptions.type === 'forwarded'\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" role=\"radiogroup\" aria-labelledby=\"forwardTypeHeading\">\n          <label id=\"forwardTypeHeading\" class=\"radio-header\">{{ \"service\" | i18n }}</label>\n          <div class=\"radio-group text-default\" appBoxRow *ngFor=\"let o of forwardOptions\">\n            <input\n              type=\"radio\"\n              [(ngModel)]=\"usernameOptions.forwardedService\"\n              name=\"ForwardType\"\n              id=\"forwardtype_{{ o.value }}\"\n              [value]=\"o.value\"\n              (change)=\"saveUsernameOptions()\"\n              [checked]=\"usernameOptions.forwardedService === o.value\"\n            />\n            <label for=\"forwardtype_{{ o.value }}\">\n              {{ o.name }}\n            </label>\n          </div>\n        </div>\n        <ng-container *ngIf=\"usernameOptions.forwardedService === 'simplelogin'\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"simplelogin-apikey\">{{ \"apiKey\" | i18n }}</label>\n            <input\n              id=\"simplelogin-apikey\"\n              type=\"password\"\n              name=\"SimpleLoginApiKey\"\n              [(ngModel)]=\"usernameOptions.forwardedSimpleLoginApiKey\"\n              (blur)=\"saveUsernameOptions()\"\n            />\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"usernameOptions.forwardedService === 'duckduckgo'\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"duckduckgo-apikey\">{{ \"apiKey\" | i18n }}</label>\n            <input\n              id=\"duckduckgo-apikey\"\n              type=\"password\"\n              name=\"DuckDudkGoApiKey\"\n              [(ngModel)]=\"usernameOptions.forwardedDuckDuckGoToken\"\n              (blur)=\"saveUsernameOptions()\"\n            />\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"usernameOptions.forwardedService === 'anonaddy'\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"anonaddy-accessToken\">{{ \"apiAccessToken\" | i18n }}</label>\n            <input\n              id=\"anonaddy-accessToken\"\n              type=\"password\"\n              name=\"AnonAddyAccessToken\"\n              [(ngModel)]=\"usernameOptions.forwardedAnonAddyApiToken\"\n              (blur)=\"saveUsernameOptions()\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"anonaddy-domain\">{{ \"domainName\" | i18n }}</label>\n            <input\n              id=\"anonaddy-domain\"\n              type=\"text\"\n              name=\"AnonAddyDomain\"\n              [(ngModel)]=\"usernameOptions.forwardedAnonAddyDomain\"\n              (blur)=\"saveUsernameOptions()\"\n            />\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"usernameOptions.forwardedService === 'firefoxrelay'\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"firefox-apikey\">{{ \"apiAccessToken\" | i18n }}</label>\n            <input\n              id=\"firefox-apikey\"\n              type=\"password\"\n              name=\"FirefoxApiKey\"\n              [(ngModel)]=\"usernameOptions.forwardedFirefoxApiToken\"\n              (blur)=\"saveUsernameOptions()\"\n            />\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"usernameOptions.forwardedService === 'fastmail'\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"fastmail-apiToken\">{{ \"apiAccessToken\" | i18n }}</label>\n            <input\n              id=\"fastmail-apiToken\"\n              type=\"password\"\n              name=\"FastmailApiToken\"\n              [(ngModel)]=\"usernameOptions.forwardedFastmailApiToken\"\n              (blur)=\"saveUsernameOptions()\"\n            />\n          </div>\n        </ng-container>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"usernameOptions.type === 'subaddress'\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"subaddress-email\">{{ \"emailAddress\" | i18n }}</label>\n          <input\n            id=\"subaddress-email\"\n            type=\"text\"\n            name=\"SubaddressEmail\"\n            [(ngModel)]=\"usernameOptions.subaddressEmail\"\n            (blur)=\"saveUsernameOptions()\"\n          />\n        </div>\n        <div\n          class=\"box-content-row\"\n          role=\"radiogroup\"\n          aria-labelledby=\"subaddressTypeHeading\"\n          *ngIf=\"subaddressOptions.length > 1\"\n        >\n          <label id=\"subaddressTypeHeading\" class=\"radio-header\">{{ \"type\" | i18n }}</label>\n          <div class=\"radio-group text-default\" appBoxRow *ngFor=\"let o of subaddressOptions\">\n            <input\n              type=\"radio\"\n              [(ngModel)]=\"usernameOptions.subaddressType\"\n              name=\"SubaddressType\"\n              id=\"subaddresstype_{{ o.value }}\"\n              [value]=\"o.value\"\n              (change)=\"saveUsernameOptions()\"\n              [checked]=\"usernameOptions.subaddressType === o.value\"\n            />\n            <label for=\"subaddresstype_{{ o.value }}\">\n              {{ o.name }}\n            </label>\n          </div>\n        </div>\n        <div class=\"box-content-row\" appBoxRow *ngIf=\"usernameWebsite\">\n          <label for=\"subaddress-website\">{{ \"website\" | i18n }}</label>\n          <input\n            id=\"subaddress-website\"\n            type=\"text\"\n            name=\"SubaddressWebsite\"\n            [value]=\"usernameOptions.website\"\n            disabled\n            readonly\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"usernameOptions.type === 'catchall'\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"catchall-domain\">{{ \"domainName\" | i18n }}</label>\n          <input\n            id=\"catchall-domain\"\n            type=\"text\"\n            name=\"CatchallDomain\"\n            [(ngModel)]=\"usernameOptions.catchallDomain\"\n            (blur)=\"saveUsernameOptions()\"\n          />\n        </div>\n        <div\n          class=\"box-content-row\"\n          role=\"radiogroup\"\n          aria-labelledby=\"catchallTypeHeading\"\n          *ngIf=\"catchallOptions.length > 1\"\n        >\n          <label id=\"catchallTypeHeading\" class=\"radio-header\">{{ \"type\" | i18n }}</label>\n          <div class=\"radio-group text-default\" appBoxRow *ngFor=\"let o of catchallOptions\">\n            <input\n              type=\"radio\"\n              [(ngModel)]=\"usernameOptions.catchallType\"\n              name=\"CatchallType\"\n              id=\"catchalltype_{{ o.value }}\"\n              [value]=\"o.value\"\n              (change)=\"saveUsernameOptions()\"\n              [checked]=\"usernameOptions.catchallType === o.value\"\n            />\n            <label for=\"catchalltype_{{ o.value }}\">\n              {{ o.name }}\n            </label>\n          </div>\n        </div>\n        <div class=\"box-content-row\" appBoxRow *ngIf=\"usernameWebsite\">\n          <label for=\"catchall-website\">{{ \"website\" | i18n }}</label>\n          <input\n            id=\"catchall-website\"\n            type=\"text\"\n            name=\"CatchallWebsite\"\n            [value]=\"usernameOptions.website\"\n            disabled\n            readonly\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"usernameOptions.type === 'word'\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"capitalize\">{{ \"capitalize\" | i18n }}</label>\n          <input\n            id=\"capitalize\"\n            type=\"checkbox\"\n            (change)=\"saveUsernameOptions()\"\n            [(ngModel)]=\"usernameOptions.wordCapitalize\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"include-number\">{{ \"includeNumber\" | i18n }}</label>\n          <input\n            id=\"include-number\"\n            type=\"checkbox\"\n            (change)=\"saveUsernameOptions()\"\n            [(ngModel)]=\"usernameOptions.wordIncludeNumber\"\n          />\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</main>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { GeneratorComponent as BaseGeneratorComponent } from \"@bitwarden/angular/components/generator.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n@Component({\n  selector: \"app-generator\",\n  templateUrl: \"generator.component.html\",\n})\nexport class GeneratorComponent extends BaseGeneratorComponent {\n  private addEditCipherInfo: any;\n  private cipherState: CipherView;\n\n  constructor(\n    passwordGenerationService: PasswordGenerationService,\n    usernameGenerationService: UsernameGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    stateService: StateService,\n    route: ActivatedRoute,\n    logService: LogService,\n    private location: Location\n  ) {\n    super(\n      passwordGenerationService,\n      usernameGenerationService,\n      platformUtilsService,\n      stateService,\n      i18nService,\n      logService,\n      route,\n      window\n    );\n  }\n\n  async ngOnInit() {\n    this.addEditCipherInfo = await this.stateService.getAddEditCipherInfo();\n    if (this.addEditCipherInfo != null) {\n      this.cipherState = this.addEditCipherInfo.cipher;\n    }\n    this.comingFromAddEdit = this.cipherState != null;\n    if (this.cipherState?.login?.hasUris) {\n      this.usernameWebsite = this.cipherState.login.uris[0].hostname;\n    }\n    await super.ngOnInit();\n  }\n\n  select() {\n    super.select();\n    if (this.type === \"password\") {\n      this.cipherState.login.password = this.password;\n    } else if (this.type === \"username\") {\n      this.cipherState.login.username = this.username;\n    }\n    this.addEditCipherInfo.cipher = this.cipherState;\n    this.stateService.setAddEditCipherInfo(this.addEditCipherInfo);\n    this.close();\n  }\n\n  close() {\n    this.location.back();\n  }\n}\n","export enum PolicyType {\n  TwoFactorAuthentication = 0, // Requires users to have 2fa enabled\n  MasterPassword = 1, // Sets minimum requirements for master password complexity\n  PasswordGenerator = 2, // Sets minimum requirements/default type for generated passwords/passphrases\n  SingleOrg = 3, // Allows users to only be apart of one organization\n  RequireSso = 4, // Requires users to authenticate with SSO\n  PersonalOwnership = 5, // Disables personal vault ownership for adding/cloning items\n  DisableSend = 6, // Disables the ability to create and edit Bitwarden Sends\n  SendOptions = 7, // Sets restrictions or defaults for Bitwarden Sends\n  ResetPassword = 8, // Allows orgs to use reset password : also can enable auto-enrollment during invite flow\n  MaximumVaultTimeout = 9, // Sets the maximum allowed vault timeout\n  DisablePersonalVaultExport = 10, // Disable personal vault export\n}\n","export enum SendType {\n  Text = 0,\n  File = 1,\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { GeneratedPasswordHistory } from \"@bitwarden/common/models/domain/generatedPasswordHistory\";\n\n@Directive()\nexport class PasswordGeneratorHistoryComponent implements OnInit {\n  history: GeneratedPasswordHistory[] = [];\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    private win: Window\n  ) {}\n\n  async ngOnInit() {\n    this.history = await this.passwordGenerationService.getHistory();\n  }\n\n  clear() {\n    this.history = [];\n    this.passwordGenerationService.clear();\n  }\n\n  copy(password: string) {\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(password, copyOptions);\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" type=\"button\" (click)=\"close()\">\n      <span class=\"header-icon\" aria-hidden=\"true\"><i class=\"bwi bwi-angle-left\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"passwordHistory\" | i18n }}</span>\n  </h1>\n  <div class=\"right\">\n    <button type=\"button\" type=\"button\" (click)=\"clear()\">\n      {{ \"clear\" | i18n }}\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"box list full-list\" *ngIf=\"history && history.length\">\n    <div class=\"box-content\">\n      <div class=\"box-content-row box-content-row-flex\" *ngFor=\"let h of history\">\n        <div class=\"row-main\">\n          <div class=\"row-main-content\">\n            <div\n              class=\"monospaced password-wrapper\"\n              appSelectCopy\n              [innerHTML]=\"h.password | colorPassword\"\n            ></div>\n            <span class=\"detail\">{{ h.date | date: \"medium\" }}</span>\n          </div>\n        </div>\n        <div class=\"action-buttons\">\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n            (click)=\"copy(h.password)\"\n          >\n            <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"no-items\" *ngIf=\"!history || !history.length\">\n    <p>{{ \"noPasswordsInList\" | i18n }}</p>\n  </div>\n</main>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\n\nimport { PasswordGeneratorHistoryComponent as BasePasswordGeneratorHistoryComponent } from \"@bitwarden/angular/components/password-generator-history.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-password-generator-history\",\n  templateUrl: \"password-generator-history.component.html\",\n})\nexport class PasswordGeneratorHistoryComponent extends BasePasswordGeneratorHistoryComponent {\n  constructor(\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    private location: Location\n  ) {\n    super(passwordGenerationService, platformUtilsService, i18nService, window);\n  }\n\n  close() {\n    this.location.back();\n  }\n}\n","import { SendFile } from \"../domain/sendFile\";\n\nimport { View } from \"./view\";\n\nexport class SendFileView implements View {\n  id: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n\n  constructor(f?: SendFile) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.size = f.size;\n    this.sizeName = f.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n}\n","import { SendText } from \"../domain/sendText\";\n\nimport { View } from \"./view\";\n\nexport class SendTextView implements View {\n  text: string = null;\n  hidden: boolean;\n\n  constructor(t?: SendText) {\n    if (!t) {\n      return;\n    }\n\n    this.hidden = t.hidden;\n  }\n\n  get maskedText(): string {\n    return this.text != null ? \"••••••••\" : null;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { Send } from \"../domain/send\";\nimport { SymmetricCryptoKey } from \"../domain/symmetricCryptoKey\";\n\nimport { SendFileView } from \"./sendFileView\";\nimport { SendTextView } from \"./sendTextView\";\nimport { View } from \"./view\";\n\nexport class SendView implements View {\n  id: string = null;\n  accessId: string = null;\n  name: string = null;\n  notes: string = null;\n  key: ArrayBuffer;\n  cryptoKey: SymmetricCryptoKey;\n  type: SendType = null;\n  text = new SendTextView();\n  file = new SendFileView();\n  maxAccessCount?: number = null;\n  accessCount = 0;\n  revisionDate: Date = null;\n  deletionDate: Date = null;\n  expirationDate: Date = null;\n  password: string = null;\n  disabled = false;\n  hideEmail = false;\n\n  constructor(s?: Send) {\n    if (!s) {\n      return;\n    }\n\n    this.id = s.id;\n    this.accessId = s.accessId;\n    this.type = s.type;\n    this.maxAccessCount = s.maxAccessCount;\n    this.accessCount = s.accessCount;\n    this.revisionDate = s.revisionDate;\n    this.deletionDate = s.deletionDate;\n    this.expirationDate = s.expirationDate;\n    this.disabled = s.disabled;\n    this.password = s.password;\n    this.hideEmail = s.hideEmail;\n  }\n\n  get urlB64Key(): string {\n    return Utils.fromBufferToUrlB64(this.key);\n  }\n\n  get maxAccessCountReached(): boolean {\n    if (this.maxAccessCount == null) {\n      return false;\n    }\n    return this.accessCount >= this.maxAccessCount;\n  }\n\n  get expired(): boolean {\n    if (this.expirationDate == null) {\n      return false;\n    }\n    return this.expirationDate <= new Date();\n  }\n\n  get pendingDelete(): boolean {\n    return this.deletionDate <= new Date();\n  }\n}\n","import { SendData } from \"../models/data/sendData\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { Send } from \"../models/domain/send\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class SendService {\n  clearCache: () => Promise<void>;\n  encrypt: (\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ) => Promise<[Send, EncArrayBuffer]>;\n  get: (id: string) => Promise<Send>;\n  getAll: () => Promise<Send[]>;\n  getAllDecrypted: () => Promise<SendView[]>;\n  saveWithServer: (sendData: [Send, EncArrayBuffer]) => Promise<any>;\n  upsert: (send: SendData | SendData[]) => Promise<any>;\n  replace: (sends: { [id: string]: SendData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  removePasswordWithServer: (id: string) => Promise<any>;\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { UntypedFormControl, UntypedFormGroup } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n// Different BrowserPath = different controls.\nenum BrowserPath {\n  // Native datetime-locale.\n  // We are happy.\n  Default = \"default\",\n\n  // Native date and time inputs, but no datetime-locale.\n  // We use individual date and time inputs and create a datetime programatically on submit.\n  Firefox = \"firefox\",\n\n  // No native date, time, or datetime-locale inputs.\n  // We use a polyfill for dates and a dropdown for times.\n  Safari = \"safari\",\n}\n\nenum DateField {\n  DeletionDate = \"deletion\",\n  ExpriationDate = \"expiration\",\n}\n\n// Value = hours\nenum DatePreset {\n  OneHour = 1,\n  OneDay = 24,\n  TwoDays = 48,\n  ThreeDays = 72,\n  SevenDays = 168,\n  ThirtyDays = 720,\n  Custom = 0,\n  Never = null,\n}\n\n// TimeOption is used for the dropdown implementation of custom times\n// twelveHour = displayed time; twentyFourHour = time used in logic\ninterface TimeOption {\n  twelveHour: string;\n  twentyFourHour: string;\n}\n\n@Directive()\nexport class EffluxDatesComponent implements OnInit {\n  @Input() readonly initialDeletionDate: Date;\n  @Input() readonly initialExpirationDate: Date;\n  @Input() readonly editMode: boolean;\n  @Input() readonly disabled: boolean;\n\n  @Output() datesChanged = new EventEmitter<{ deletionDate: string; expirationDate: string }>();\n\n  get browserPath(): BrowserPath {\n    if (this.platformUtilsService.isFirefox()) {\n      return BrowserPath.Firefox;\n    } else if (this.platformUtilsService.isSafari()) {\n      return BrowserPath.Safari;\n    }\n    return BrowserPath.Default;\n  }\n\n  datesForm = new UntypedFormGroup({\n    selectedDeletionDatePreset: new UntypedFormControl(),\n    selectedExpirationDatePreset: new UntypedFormControl(),\n    defaultDeletionDateTime: new UntypedFormControl(),\n    defaultExpirationDateTime: new UntypedFormControl(),\n    fallbackDeletionDate: new UntypedFormControl(),\n    fallbackDeletionTime: new UntypedFormControl(),\n    fallbackExpirationDate: new UntypedFormControl(),\n    fallbackExpirationTime: new UntypedFormControl(),\n  });\n\n  deletionDatePresets: any[] = [\n    { name: this.i18nService.t(\"oneHour\"), value: DatePreset.OneHour },\n    { name: this.i18nService.t(\"oneDay\"), value: DatePreset.OneDay },\n    { name: this.i18nService.t(\"days\", \"2\"), value: DatePreset.TwoDays },\n    { name: this.i18nService.t(\"days\", \"3\"), value: DatePreset.ThreeDays },\n    { name: this.i18nService.t(\"days\", \"7\"), value: DatePreset.SevenDays },\n    { name: this.i18nService.t(\"days\", \"30\"), value: DatePreset.ThirtyDays },\n    { name: this.i18nService.t(\"custom\"), value: DatePreset.Custom },\n  ];\n\n  expirationDatePresets: any[] = [\n    { name: this.i18nService.t(\"never\"), value: DatePreset.Never },\n  ].concat([...this.deletionDatePresets]);\n\n  get selectedDeletionDatePreset(): UntypedFormControl {\n    return this.datesForm.get(\"selectedDeletionDatePreset\") as UntypedFormControl;\n  }\n\n  get selectedExpirationDatePreset(): UntypedFormControl {\n    return this.datesForm.get(\"selectedExpirationDatePreset\") as UntypedFormControl;\n  }\n\n  get defaultDeletionDateTime(): UntypedFormControl {\n    return this.datesForm.get(\"defaultDeletionDateTime\") as UntypedFormControl;\n  }\n\n  get defaultExpirationDateTime(): UntypedFormControl {\n    return this.datesForm.get(\"defaultExpirationDateTime\") as UntypedFormControl;\n  }\n\n  get fallbackDeletionDate(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackDeletionDate\") as UntypedFormControl;\n  }\n\n  get fallbackDeletionTime(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackDeletionTime\") as UntypedFormControl;\n  }\n\n  get fallbackExpirationDate(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackExpirationDate\") as UntypedFormControl;\n  }\n\n  get fallbackExpirationTime(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackExpirationTime\") as UntypedFormControl;\n  }\n\n  // Should be able to call these at any time and compute a submitable value\n  get formattedDeletionDate(): string {\n    switch (this.selectedDeletionDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n        return this.formattedDeletionDate;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            return this.fallbackDeletionDate.value + \"T\" + this.fallbackDeletionTime.value;\n          default:\n            return this.defaultDeletionDateTime.value;\n        }\n      default: {\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedDeletionDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n      }\n    }\n  }\n\n  get formattedExpirationDate(): string {\n    switch (this.selectedExpirationDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        return null;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            if (\n              (!this.fallbackExpirationDate.value || !this.fallbackExpirationTime.value) &&\n              this.editMode\n            ) {\n              return null;\n            }\n            return this.fallbackExpirationDate.value + \"T\" + this.fallbackExpirationTime.value;\n          default:\n            if (!this.defaultExpirationDateTime.value) {\n              return null;\n            }\n            return this.defaultExpirationDateTime.value;\n        }\n      default: {\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedExpirationDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n      }\n    }\n  }\n  //\n\n  get safariDeletionTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.DeletionDate);\n  }\n\n  get safariExpirationTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.ExpriationDate);\n  }\n\n  private get nextWeek(): Date {\n    const nextWeek = new Date();\n    nextWeek.setDate(nextWeek.getDate() + 7);\n    return nextWeek;\n  }\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {}\n\n  ngOnInit(): void {\n    this.setInitialFormValues();\n    this.emitDates();\n    this.datesForm.valueChanges.subscribe(() => {\n      this.emitDates();\n    });\n  }\n\n  onDeletionDatePresetSelect(value: DatePreset) {\n    this.selectedDeletionDatePreset.setValue(value);\n  }\n\n  clearExpiration() {\n    switch (this.browserPath) {\n      case BrowserPath.Safari:\n      case BrowserPath.Firefox:\n        this.fallbackExpirationDate.setValue(null);\n        this.fallbackExpirationTime.setValue(null);\n        break;\n      case BrowserPath.Default:\n        this.defaultExpirationDateTime.setValue(null);\n        break;\n    }\n  }\n\n  protected emitDates() {\n    this.datesChanged.emit({\n      deletionDate: this.formattedDeletionDate,\n      expirationDate: this.formattedExpirationDate,\n    });\n  }\n\n  protected setInitialFormValues() {\n    if (this.editMode) {\n      this.selectedDeletionDatePreset.setValue(DatePreset.Custom);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Custom);\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n        case BrowserPath.Firefox:\n          this.fallbackDeletionDate.setValue(this.initialDeletionDate.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(this.initialDeletionDate.toTimeString().slice(0, 5));\n          if (this.initialExpirationDate != null) {\n            this.fallbackExpirationDate.setValue(\n              this.initialExpirationDate.toISOString().slice(0, 10)\n            );\n            this.fallbackExpirationTime.setValue(\n              this.initialExpirationDate.toTimeString().slice(0, 5)\n            );\n          }\n          break;\n        case BrowserPath.Default:\n          if (this.initialExpirationDate) {\n            this.defaultExpirationDateTime.setValue(\n              this.datePipe.transform(new Date(this.initialExpirationDate), \"yyyy-MM-ddTHH:mm\")\n            );\n          }\n          this.defaultDeletionDateTime.setValue(\n            this.datePipe.transform(new Date(this.initialDeletionDate), \"yyyy-MM-ddTHH:mm\")\n          );\n          break;\n      }\n    } else {\n      this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Never);\n\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n          this.fallbackDeletionDate.setValue(this.nextWeek.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(\n            this.safariTimePresetOptions(DateField.DeletionDate)[1].twentyFourHour\n          );\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  protected safariTimePresetOptions(field: DateField): TimeOption[] {\n    // init individual arrays for major sort groups\n    const noon: TimeOption[] = [];\n    const midnight: TimeOption[] = [];\n    const ams: TimeOption[] = [];\n    const pms: TimeOption[] = [];\n\n    // determine minute skip (5 min, 10 min, 15 min, etc.)\n    const minuteIncrementer = 15;\n\n    // loop through each hour on a 12 hour system\n    for (let h = 1; h <= 12; h++) {\n      // loop through each minute in the hour using the skip to incriment\n      for (let m = 0; m < 60; m += minuteIncrementer) {\n        // init the final strings that will be added to the lists\n        let hour = h.toString();\n        let minutes = m.toString();\n\n        // add prepending 0s to single digit hours/minutes\n        if (h < 10) {\n          hour = \"0\" + hour;\n        }\n        if (m < 10) {\n          minutes = \"0\" + minutes;\n        }\n\n        // build time strings and push to relevant sort groups\n        if (h === 12) {\n          const midnightOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `00:${minutes}`,\n          };\n          midnight.push(midnightOption);\n\n          const noonOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          noon.push(noonOption);\n        } else {\n          const amOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          ams.push(amOption);\n\n          const pmOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${h + 12}:${minutes}`,\n          };\n          pms.push(pmOption);\n        }\n      }\n    }\n\n    // bring all the arrays together in the right order\n    const validTimes = [...midnight, ...ams, ...noon, ...pms];\n\n    // determine if an unsupported value already exists on the send & add that to the top of the option list\n    // example: if the Send was created with a different client\n    if (field === DateField.ExpriationDate && this.initialExpirationDate != null && this.editMode) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialExpirationDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialExpirationDate, \"HH:mm\"),\n      };\n      return [previousValue, { twelveHour: null, twentyFourHour: null }, ...validTimes];\n    } else if (\n      field === DateField.DeletionDate &&\n      this.initialDeletionDate != null &&\n      this.editMode\n    ) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialDeletionDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialDeletionDate, \"HH:mm\"),\n      };\n      return [previousValue, ...validTimes];\n    } else {\n      return [{ twelveHour: null, twentyFourHour: null }, ...validTimes];\n    }\n  }\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { EncArrayBuffer } from \"@bitwarden/common/models/domain/encArrayBuffer\";\nimport { Send } from \"@bitwarden/common/models/domain/send\";\nimport { SendFileView } from \"@bitwarden/common/models/view/sendFileView\";\nimport { SendTextView } from \"@bitwarden/common/models/view/sendTextView\";\nimport { SendView } from \"@bitwarden/common/models/view/sendView\";\n\n@Directive()\nexport class AddEditComponent implements OnInit {\n  @Input() sendId: string;\n  @Input() type: SendType;\n\n  @Output() onSavedSend = new EventEmitter<SendView>();\n  @Output() onDeletedSend = new EventEmitter<SendView>();\n  @Output() onCancelled = new EventEmitter<SendView>();\n\n  copyLink = false;\n  disableSend = false;\n  disableHideEmail = false;\n  send: SendView;\n  deletionDate: string;\n  expirationDate: string;\n  hasPassword: boolean;\n  password: string;\n  showPassword = false;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  sendType = SendType;\n  typeOptions: any[];\n  canAccessPremium = true;\n  emailVerified = true;\n  alertShown = false;\n  showOptions = false;\n\n  private sendLinkBaseUrl: string;\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected datePipe: DatePipe,\n    protected sendService: SendService,\n    protected messagingService: MessagingService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected stateService: StateService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"sendTypeFile\"), value: SendType.File },\n      { name: i18nService.t(\"sendTypeText\"), value: SendType.Text },\n    ];\n    this.sendLinkBaseUrl = this.environmentService.getSendUrl();\n  }\n\n  get link(): string {\n    if (this.send.id != null && this.send.accessId != null) {\n      return this.sendLinkBaseUrl + this.send.accessId + \"/\" + this.send.urlB64Key;\n    }\n    return null;\n  }\n\n  get isSafari() {\n    return this.platformUtilsService.isSafari();\n  }\n\n  get isDateTimeLocalSupported(): boolean {\n    return !(this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari());\n  }\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  get editMode(): boolean {\n    return this.sendId != null;\n  }\n\n  get title(): string {\n    return this.i18nService.t(this.editMode ? \"editSend\" : \"createSend\");\n  }\n\n  setDates(event: { deletionDate: string; expirationDate: string }) {\n    this.deletionDate = event.deletionDate;\n    this.expirationDate = event.expirationDate;\n  }\n\n  async load() {\n    this.disableSend = await this.policyService.policyAppliesToUser(PolicyType.DisableSend);\n    this.disableHideEmail = await this.policyService.policyAppliesToUser(\n      PolicyType.SendOptions,\n      (p) => p.data.disableHideEmail\n    );\n\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.emailVerified = await this.stateService.getEmailVerified();\n    if (!this.canAccessPremium || !this.emailVerified) {\n      this.type = SendType.Text;\n    }\n\n    if (this.send == null) {\n      if (this.editMode) {\n        const send = await this.loadSend();\n        this.send = await send.decrypt();\n      } else {\n        this.send = new SendView();\n        this.send.type = this.type == null ? SendType.File : this.type;\n        this.send.file = new SendFileView();\n        this.send.text = new SendTextView();\n        this.send.deletionDate = new Date();\n        this.send.deletionDate.setDate(this.send.deletionDate.getDate() + 7);\n      }\n    }\n\n    this.hasPassword = this.send.password != null && this.send.password.trim() !== \"\";\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.disableSend) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"sendDisabledWarning\")\n      );\n      return false;\n    }\n\n    if (this.send.name == null || this.send.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    let file: File = null;\n    if (this.send.type === SendType.File && !this.editMode) {\n      const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n      const files = fileEl.files;\n      if (files == null || files.length === 0) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"selectFile\")\n        );\n        return;\n      }\n\n      file = files[0];\n      if (files[0].size > 524288000) {\n        // 500 MB\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"maxFileSize\")\n        );\n        return;\n      }\n    }\n\n    if (this.password != null && this.password.trim() === \"\") {\n      this.password = null;\n    }\n\n    this.formPromise = this.encryptSend(file).then(async (encSend) => {\n      const uploadPromise = this.sendService.saveWithServer(encSend);\n      await uploadPromise;\n      if (this.send.id == null) {\n        this.send.id = encSend[0].id;\n      }\n      if (this.send.accessId == null) {\n        this.send.accessId = encSend[0].accessId;\n      }\n      this.onSavedSend.emit(this.send);\n      if (this.copyLink && this.link != null) {\n        const copySuccess = await this.copyLinkToClipboard(this.link);\n        if (copySuccess ?? true) {\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\")\n          );\n        } else {\n          await this.platformUtilsService.showDialog(\n            this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\"),\n            null,\n            this.i18nService.t(\"ok\"),\n            null,\n            \"success\",\n            null\n          );\n          await this.copyLinkToClipboard(this.link);\n        }\n      }\n    });\n    try {\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  async copyLinkToClipboard(link: string): Promise<void | boolean> {\n    return Promise.resolve(this.platformUtilsService.copyToClipboard(link));\n  }\n\n  async delete(): Promise<boolean> {\n    if (this.deletePromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.sendService.deleteWithServer(this.send.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n      await this.load();\n      this.onDeletedSend.emit(this.send);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  typeChanged() {\n    if (this.send.type === SendType.File && !this.alertShown) {\n      if (!this.canAccessPremium) {\n        this.alertShown = true;\n        this.messagingService.send(\"premiumRequired\");\n      } else if (!this.emailVerified) {\n        this.alertShown = true;\n        this.messagingService.send(\"emailVerificationRequired\");\n      }\n    }\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  protected async loadSend(): Promise<Send> {\n    return this.sendService.get(this.sendId);\n  }\n\n  protected async encryptSend(file: File): Promise<[Send, EncArrayBuffer]> {\n    const sendData = await this.sendService.encrypt(this.send, file, this.password, null);\n\n    // Parse dates\n    try {\n      sendData[0].deletionDate = this.deletionDate == null ? null : new Date(this.deletionDate);\n    } catch {\n      sendData[0].deletionDate = null;\n    }\n    try {\n      sendData[0].expirationDate =\n        this.expirationDate == null ? null : new Date(this.expirationDate);\n    } catch {\n      sendData[0].expirationDate = null;\n    }\n\n    return sendData;\n  }\n\n  protected togglePasswordVisible() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"password\").focus();\n  }\n}\n","import { StateService as BaseStateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { StorageOptions } from \"@bitwarden/common/models/domain/storageOptions\";\n\nimport { Account } from \"src/models/account\";\nimport { BrowserComponentState } from \"src/models/browserComponentState\";\nimport { BrowserGroupingsComponentState } from \"src/models/browserGroupingsComponentState\";\nimport { BrowserSendComponentState } from \"src/models/browserSendComponentState\";\n\nexport abstract class StateService extends BaseStateServiceAbstraction<Account> {\n  abstract getFromSessionMemory<T>(key: string): Promise<T>;\n  abstract setInSessionMemory(key: string, value: any): Promise<void>;\n  getBrowserGroupingComponentState: (\n    options?: StorageOptions\n  ) => Promise<BrowserGroupingsComponentState>;\n  setBrowserGroupingComponentState: (\n    value: BrowserGroupingsComponentState,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getBrowserCipherComponentState: (options?: StorageOptions) => Promise<BrowserComponentState>;\n  setBrowserCipherComponentState: (\n    value: BrowserComponentState,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getBrowserSendComponentState: (options?: StorageOptions) => Promise<BrowserSendComponentState>;\n  setBrowserSendComponentState: (\n    value: BrowserSendComponentState,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getBrowserSendTypeComponentState: (options?: StorageOptions) => Promise<BrowserComponentState>;\n  setBrowserSendTypeComponentState: (\n    value: BrowserComponentState,\n    options?: StorageOptions\n  ) => Promise<void>;\n}\n","<ng-container [formGroup]=\"datesForm\">\n  <div class=\"box\">\n    <div class=\"box-content\">\n      <ng-container *ngIf=\"!editMode\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"deletionDate\">{{ \"deletionDate\" | i18n }}</label>\n          <select\n            id=\"deletionDate\"\n            name=\"DeletionDateSelect\"\n            formControlName=\"selectedDeletionDatePreset\"\n            required\n          >\n            <option *ngFor=\"let o of deletionDatePresets\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n        <div class=\"box-content-row\" appBoxRow *ngIf=\"selectedDeletionDatePreset.value === 0\">\n          <ng-container *ngTemplateOutlet=\"deletionDateCustom\"></ng-container>\n        </div>\n      </ng-container>\n      <div class=\"box-content-row\" appBoxRow *ngIf=\"editMode\">\n        <label for=\"deletionDate\">{{ \"deletionDate\" | i18n }}</label>\n        <ng-container *ngTemplateOutlet=\"deletionDateCustom\"></ng-container>\n      </div>\n    </div>\n    <div class=\"box-footer\">\n      {{ \"deletionDateDesc\" | i18n }}\n      <ng-container\n        *ngIf=\"\n          !inPopout &&\n          browserPath == 'firefox' &&\n          (editMode || (selectedDeletionDatePreset.value === 0 && !editMode))\n        \"\n      >\n        <br />{{ \"sendFirefoxCustomDatePopoutMessage1\" | i18n }}\n        <a (click)=\"popOutWindow.emit()\">{{ \"sendFirefoxCustomDatePopoutMessage2\" | i18n }}</a>\n        {{ \"sendFirefoxCustomDatePopoutMessage3\" | i18n }}\n      </ng-container>\n    </div>\n  </div>\n  <div class=\"box\">\n    <div class=\"box-content\">\n      <ng-container *ngIf=\"!editMode\">\n        <div class=\"box-content-row\" *ngIf=\"!editMode\" appBoxRow>\n          <label for=\"editExpirationDate\">{{ \"expirationDate\" | i18n }}</label>\n          <select\n            id=\"expirationDate\"\n            name=\"ExpirationDateSelect\"\n            formControlName=\"selectedExpirationDatePreset\"\n            required\n          >\n            <option *ngFor=\"let o of expirationDatePresets\" [ngValue]=\"o.value\">\n              {{ o.name }}\n            </option>\n          </select>\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"selectedExpirationDatePreset.value === 0\" appBoxRow>\n          <ng-container *ngTemplateOutlet=\"expirationDateCustom\"></ng-container>\n        </div>\n      </ng-container>\n      <div class=\"box-content-row\" *ngIf=\"editMode\" appBoxRow>\n        <div class=\"flex-label\">\n          <label>{{ \"expirationDate\" | i18n }}</label>\n          <button type=\"button\" *ngIf=\"!disabled\" appStopClick (click)=\"clearExpiration()\">\n            {{ \"clear\" | i18n }}\n          </button>\n        </div>\n        <ng-container *ngTemplateOutlet=\"expirationDateCustom\"></ng-container>\n      </div>\n    </div>\n    <div class=\"box-footer\">\n      {{ \"expirationDateDesc\" | i18n }}\n      <ng-container\n        *ngIf=\"\n          !inPopout &&\n          browserPath == 'firefox' &&\n          (editMode || (selectedExpirationDatePreset.value === 0 && !editMode))\n        \"\n      >\n        <br />{{ \"sendFirefoxCustomDatePopoutMessage1\" | i18n }}\n        <a (click)=\"popOutWindow.emit()\">{{ \"sendFirefoxCustomDatePopoutMessage2\" | i18n }}</a>\n        {{ \"sendFirefoxCustomDatePopoutMessage3\" | i18n }}\n      </ng-container>\n    </div>\n  </div>\n  <ng-template #deletionDateCustom>\n    <ng-container [ngSwitch]=\"browserPath\">\n      <ng-container *ngSwitchCase=\"'firefox'\">\n        <div class=\"flex flex-grow\">\n          <input\n            id=\"deletionDateCustomFallback\"\n            type=\"date\"\n            name=\"DeletionDateFallback\"\n            formControlName=\"fallbackDeletionDate\"\n            required\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <input\n            id=\"deletionTimeCustomFallback\"\n            type=\"time\"\n            name=\"DeletionTimeDate\"\n            formControlName=\"fallbackDeletionTime\"\n            required\n            placeholder=\"HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </div>\n      </ng-container>\n      <ng-container *ngSwitchCase=\"'safari'\">\n        <div class=\"flex flex-grow\">\n          <input\n            id=\"deletionDateCustomFallback\"\n            type=\"date\"\n            name=\"DeletionDateFallback\"\n            formControlName=\"fallbackDeletionDate\"\n            required\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <select\n            id=\"deletionTimeCustomFallback\"\n            formControlName=\"fallbackDeletionTime\"\n            name=\"SafariDeletionTime\"\n          >\n            <option *ngFor=\"let o of safariDeletionTimePresetOptions\" [ngValue]=\"o.twentyFourHour\">\n              {{ o.twelveHour }}\n            </option>\n          </select>\n        </div>\n      </ng-container>\n      <ng-container *ngSwitchDefault>\n        <input\n          id=\"deletionDateCustom\"\n          type=\"datetime-local\"\n          name=\"DeletionDate\"\n          formControlName=\"defaultDeletionDateTime\"\n          required\n          placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n        />\n      </ng-container>\n    </ng-container>\n  </ng-template>\n  <ng-template #expirationDateCustom>\n    <ng-container [ngSwitch]=\"browserPath\">\n      <ng-container *ngSwitchCase=\"'firefox'\">\n        <div class=\"flex flex-grow\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <input\n            id=\"expirationTimeCustomFallback\"\n            type=\"time\"\n            name=\"ExpirationTimeFallback\"\n            formControlName=\"fallbackExpirationTime\"\n            [required]=\"!editMode\"\n            placeholder=\"HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </div>\n      </ng-container>\n      <ng-container *ngSwitchCase=\"'safari'\">\n        <div class=\"flex flex-grow\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <select\n            id=\"expirationTimeCustomFallback\"\n            formControlName=\"fallbackExpirationTime\"\n            name=\"SafariExpirationTime\"\n          >\n            <option\n              *ngFor=\"let o of safariExpirationTimePresetOptions\"\n              [ngValue]=\"o.twentyFourHour\"\n            >\n              {{ o.twelveHour }}\n            </option>\n          </select>\n        </div>\n      </ng-container>\n      <ng-container *ngSwitchDefault>\n        <input\n          id=\"expirationDateCustom\"\n          type=\"datetime-local\"\n          name=\"ExpirationDate\"\n          formControlName=\"defaultExpirationDateTime\"\n          required\n          placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n          [readOnly]=\"disabled\"\n        />\n      </ng-container>\n    </ng-container>\n  </ng-template>\n</ng-container>\n","import { DatePipe } from \"@angular/common\";\nimport { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { ControlContainer, NgForm } from \"@angular/forms\";\n\nimport { EffluxDatesComponent as BaseEffluxDatesComponent } from \"@bitwarden/angular/components/send/efflux-dates.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-send-efflux-dates\",\n  templateUrl: \"efflux-dates.component.html\",\n  viewProviders: [{ provide: ControlContainer, useExisting: NgForm }],\n})\nexport class EffluxDatesComponent extends BaseEffluxDatesComponent {\n  @Input() readonly inPopout: boolean;\n  @Output() popOutWindow = new EventEmitter();\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {\n    super(i18nService, platformUtilsService, datePipe);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" (click)=\"cancel()\">{{ \"cancel\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ title }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" [disabled]=\"form.loading || disableSend\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\" *ngIf=\"send\">\n    <!-- Policy Banner -->\n    <app-callout type=\"warning\" title=\"{{ 'sendDisabled' | i18n }}\" *ngIf=\"disableSend\">\n      {{ \"sendDisabledWarning\" | i18n }}\n    </app-callout>\n    <app-callout type=\"info\" *ngIf=\"disableHideEmail && !disableSend\">\n      {{ \"sendOptionsPolicyInEffect\" | i18n }}\n    </app-callout>\n    <!-- File Warning -->\n    <app-callout\n      type=\"warning\"\n      icon=\"bwi-external-link bwi-rotate-270 bwi-fw\"\n      [clickable]=\"true\"\n      title=\"{{ 'sendFileCalloutHeader' | i18n }}\"\n      *ngIf=\"showFilePopoutMessage && send.type === sendType.File && !disableSend\"\n      (click)=\"popOutWindow()\"\n    >\n      <div *ngIf=\"showChromiumFileWarning\">{{ \"sendLinuxChromiumFileWarning\" | i18n }}</div>\n      <div *ngIf=\"showFirefoxFileWarning\">{{ \"sendFirefoxFileWarning\" | i18n }}</div>\n      <div *ngIf=\"showSafariFileWarning\">{{ \"sendSafariFileWarning\" | i18n }}</div>\n    </app-callout>\n    <!-- Name -->\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input\n            id=\"name\"\n            type=\"text\"\n            name=\"Name\"\n            [(ngModel)]=\"send.name\"\n            [readonly]=\"disableSend\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"sendNameDesc\" | i18n }}\n      </div>\n    </div>\n    <!-- Type Options -->\n    <div class=\"box\" *ngIf=\"!editMode\">\n      <div class=\"box-content no-hover\">\n        <div class=\"box-content-row\">\n          <label for=\"sendTypeOptions\">{{ \"sendTypeHeader\" | i18n }}</label>\n          <div\n            class=\"radio-group text-default\"\n            appBoxRow\n            name=\"SendTypeOptions\"\n            *ngFor=\"let o of typeOptions\"\n          >\n            <input\n              type=\"radio\"\n              [(ngModel)]=\"send.type\"\n              name=\"Type_{{ o.value }}\"\n              id=\"type_{{ o.value }}\"\n              [value]=\"o.value\"\n              (change)=\"typeChanged()\"\n              [checked]=\"send.type === o.value\"\n              [readonly]=\"disableSend\"\n            />\n            <label for=\"type_{{ o.value }}\">\n              {{ o.name }}\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- File -->\n    <div class=\"box\" *ngIf=\"send.type === sendType.File && (editMode || showFileSelector)\">\n      <div class=\"box-content no-hover\">\n        <div class=\"box-content-row\" *ngIf=\"editMode\">\n          <label for=\"file\">{{ \"file\" | i18n }}</label>\n          <div class=\"row-main\">{{ send.file.fileName }} ({{ send.file.sizeName }})</div>\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"showFileSelector\">\n          <label for=\"file\">{{ \"file\" | i18n }}</label>\n          <input type=\"file\" id=\"file\" name=\"file\" required [readonly]=\"disableSend\" />\n        </div>\n      </div>\n      <div class=\"box-footer\" *ngIf=\"showFileSelector\">\n        {{ \"sendFileDesc\" | i18n }} {{ \"maxFileSize\" | i18n }}\n      </div>\n    </div>\n    <!-- Text -->\n    <div class=\"box\" *ngIf=\"send.type === sendType.Text\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"text\">{{ \"sendTypeText\" | i18n }}</label>\n          <textarea\n            id=\"text\"\n            name=\"Text\"\n            rows=\"6\"\n            [(ngModel)]=\"send.text.text\"\n            [readonly]=\"disableSend\"\n          ></textarea>\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"sendTextDesc\" | i18n }}\n      </div>\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"hideText\">{{ \"sendHideText\" | i18n }}</label>\n          <input\n            id=\"hideText\"\n            type=\"checkbox\"\n            name=\"HideText\"\n            [(ngModel)]=\"send.text.hidden\"\n            [disabled]=\"disableSend\"\n          />\n        </div>\n      </div>\n    </div>\n    <!-- Share -->\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"share\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <!-- Copy Link on Save -->\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"copyOnSave\">{{ \"sendShareDesc\" | i18n }}</label>\n          <input\n            id=\"copyOnSave\"\n            type=\"checkbox\"\n            name=\"CopyOnSave\"\n            [(ngModel)]=\"copyLink\"\n            [disabled]=\"disableSend\"\n          />\n        </div>\n      </div>\n    </div>\n    <!-- Options -->\n    <div class=\"box\">\n      <h2>\n        <button\n          type=\"button\"\n          class=\"box-header-expandable\"\n          (click)=\"showOptions = !showOptions\"\n          [attr.aria-expanded]=\"showOptions\"\n        >\n          {{ \"options\" | i18n }}\n          <i *ngIf=\"!showOptions\" class=\"bwi bwi-angle-down bwi-sm icon\" aria-hidden=\"true\"></i>\n          <i *ngIf=\"showOptions\" class=\"bwi bwi-chevron-up bwi-sm icon\" aria-hidden=\"true\"></i>\n        </button>\n      </h2>\n    </div>\n    <div [hidden]=\"!showOptions\">\n      <app-send-efflux-dates\n        [initialDeletionDate]=\"send.deletionDate\"\n        [initialExpirationDate]=\"send.expirationDate\"\n        [editMode]=\"editMode\"\n        [disabled]=\"disableSend\"\n        (datesChanged)=\"setDates($event)\"\n        (popOutWindow)=\"popOutWindow()\"\n      >\n      </app-send-efflux-dates>\n      <!-- Maximum Access Count -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"maximumAccessCount\">{{ \"maximumAccessCount\" | i18n }}</label>\n            <input\n              id=\"maximumAccessCount\"\n              min=\"1\"\n              type=\"number\"\n              name=\"MaximumAccessCount\"\n              [(ngModel)]=\"send.maxAccessCount\"\n              [readonly]=\"disableSend\"\n            />\n          </div>\n        </div>\n        <div class=\"box-footer\">\n          {{ \"maximumAccessCountDesc\" | i18n }}\n        </div>\n      </div>\n      <!-- Current Access Count -->\n      <div class=\"box\" *ngIf=\"editMode\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"currentAccessCount\">{{ \"currentAccessCount\" | i18n }}</label>\n            <input\n              id=\"currentAccessCount\"\n              readonly\n              type=\"text\"\n              name=\"CurrentAccessCount\"\n              [(ngModel)]=\"send.accessCount\"\n            />\n          </div>\n        </div>\n      </div>\n      <!-- Password -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n            <div class=\"row-main\">\n              <label for=\"password\" *ngIf=\"hasPassword\">{{ \"newPassword\" | i18n }}</label>\n              <label for=\"password\" *ngIf=\"!hasPassword\">{{ \"password\" | i18n }}</label>\n              <input\n                id=\"password\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"Password\"\n                class=\"monospaced\"\n                [(ngModel)]=\"password\"\n                appInputVerbatim\n                [readonly]=\"disableSend\"\n              />\n            </div>\n            <div class=\"action-buttons\" *ngIf=\"!disableSend\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePasswordVisible()\"\n                [attr.aria-pressed]=\"showPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  aria-hidden=\"true\"\n                ></i>\n              </button>\n            </div>\n          </div>\n        </div>\n        <div class=\"box-footer\">\n          {{ \"sendPasswordDesc\" | i18n }}\n        </div>\n      </div>\n      <!-- Notes -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n            <textarea\n              id=\"notes\"\n              name=\"Notes\"\n              rows=\"6\"\n              [(ngModel)]=\"send.notes\"\n              [readonly]=\"disableSend\"\n            ></textarea>\n          </div>\n        </div>\n        <div class=\"box-footer\">\n          {{ \"sendNotesDesc\" | i18n }}\n        </div>\n      </div>\n      <!-- Hide Email -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"hideEmail\">{{ \"hideEmail\" | i18n }}</label>\n            <input\n              id=\"hideEmail\"\n              type=\"checkbox\"\n              name=\"HideEmail\"\n              [(ngModel)]=\"send.hideEmail\"\n              [disabled]=\"(disableHideEmail && !send.hideEmail) || disableSend\"\n            />\n          </div>\n        </div>\n      </div>\n      <!-- Disable Send -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"disableSend\">{{ \"sendDisableDesc\" | i18n }}</label>\n            <input\n              id=\"disableSend\"\n              type=\"checkbox\"\n              name=\"DisableSend\"\n              [(ngModel)]=\"send.disabled\"\n              [disabled]=\"disableSend\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- Delete -->\n    <div class=\"box list\" *ngIf=\"editMode\">\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"delete()\"\n          [appApiAction]=\"deletePromise\"\n          #deleteBtn\n        >\n          <div class=\"row-main text-danger\">\n            <div class=\"icon text-danger\" aria-hidden=\"true\">\n              <i class=\"bwi bwi-trash bwi-lg bwi-fw\" [hidden]=\"deleteBtn.loading\"></i>\n              <i class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\" [hidden]=\"!deleteBtn.loading\"></i>\n            </div>\n            <span>{{ \"deleteSend\" | i18n }}</span>\n          </div>\n        </button>\n      </div>\n    </div>\n  </main>\n</form>\n","import { DatePipe, Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"@bitwarden/angular/components/send/add-edit.component\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\n\nimport { StateService } from \"../../services/abstractions/state.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\n@Component({\n  selector: \"app-send-add-edit\",\n  templateUrl: \"send-add-edit.component.html\",\n})\nexport class SendAddEditComponent extends BaseAddEditComponent {\n  // Options header\n  showOptions = false;\n  // File visibility\n  isFirefox = false;\n  inPopout = false;\n  inSidebar = false;\n  isLinux = false;\n  isUnsupportedMac = false;\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    stateService: StateService,\n    messagingService: MessagingService,\n    policyService: PolicyService,\n    environmentService: EnvironmentService,\n    datePipe: DatePipe,\n    sendService: SendService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private popupUtilsService: PopupUtilsService,\n    logService: LogService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      datePipe,\n      sendService,\n      messagingService,\n      policyService,\n      logService,\n      stateService\n    );\n  }\n\n  get showFileSelector(): boolean {\n    return !(this.editMode || this.showFilePopoutMessage);\n  }\n\n  get showFilePopoutMessage(): boolean {\n    return (\n      !this.editMode &&\n      (this.showFirefoxFileWarning || this.showSafariFileWarning || this.showChromiumFileWarning)\n    );\n  }\n\n  get showFirefoxFileWarning(): boolean {\n    return this.isFirefox && !(this.inSidebar || this.inPopout);\n  }\n\n  get showSafariFileWarning(): boolean {\n    return this.isSafari && !this.inPopout;\n  }\n\n  // Only show this for Chromium based browsers in Linux and Mac > Big Sur\n  get showChromiumFileWarning(): boolean {\n    return (\n      (this.isLinux || this.isUnsupportedMac) &&\n      !this.isFirefox &&\n      !(this.inSidebar || this.inPopout)\n    );\n  }\n\n  popOutWindow() {\n    this.popupUtilsService.popOut(window);\n  }\n\n  async ngOnInit() {\n    // File visilibity\n    this.isFirefox = this.platformUtilsService.isFirefox();\n    this.inPopout = this.popupUtilsService.inPopout(window);\n    this.inSidebar = this.popupUtilsService.inSidebar(window);\n    this.isLinux = window?.navigator?.userAgent.indexOf(\"Linux\") !== -1;\n    this.isUnsupportedMac =\n      this.platformUtilsService.isChrome() && window?.navigator?.appVersion.includes(\"Mac OS X 11\");\n\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.sendId) {\n        this.sendId = params.sendId;\n      }\n      if (params.type) {\n        const type = parseInt(params.type, null);\n        this.type = type;\n      }\n      await this.load();\n    });\n\n    window.setTimeout(() => {\n      if (!this.editMode) {\n        document.getElementById(\"name\").focus();\n      }\n    }, 200);\n  }\n\n  async submit(): Promise<boolean> {\n    if (await super.submit()) {\n      this.cancel();\n      return true;\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    if (await super.delete()) {\n      this.cancel();\n      return true;\n    }\n\n    return false;\n  }\n\n  cancel() {\n    // If true, the window was pop'd out on the add-send page. location.back will not work\n    if ((window as any).previousPopupUrl.startsWith(\"/add-send\")) {\n      this.router.navigate([\"tabs/send\"]);\n    } else {\n      this.location.back();\n    }\n  }\n}\n","import { CipherView } from \"../models/view/cipherView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class SearchService {\n  indexedEntityId?: string = null;\n  clearIndex: () => void;\n  isSearchable: (query: string) => boolean;\n  indexCiphers: (indexedEntityGuid?: string, ciphersToIndex?: CipherView[]) => Promise<void>;\n  searchCiphers: (\n    query: string,\n    filter?: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[],\n    ciphers?: CipherView[]\n  ) => Promise<CipherView[]>;\n  searchCiphersBasic: (ciphers: CipherView[], query: string, deleted?: boolean) => CipherView[];\n  searchSends: (sends: SendView[], query: string) => SendView[];\n}\n","import { Directive, NgZone, OnInit } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { SendView } from \"@bitwarden/common/models/view/sendView\";\n\n@Directive()\nexport class SendComponent implements OnInit {\n  disableSend = false;\n  sendType = SendType;\n  loaded = false;\n  loading = true;\n  refreshing = false;\n  expired = false;\n  type: SendType = null;\n  sends: SendView[] = [];\n  filteredSends: SendView[] = [];\n  searchText: string;\n  selectedType: SendType;\n  selectedAll: boolean;\n  searchPlaceholder: string;\n  filter: (cipher: SendView) => boolean;\n  searchPending = false;\n  hasSearched = false; // search() function called - returns true if text qualifies for search\n\n  actionPromise: any;\n  onSuccessfulRemovePassword: () => Promise<any>;\n  onSuccessfulDelete: () => Promise<any>;\n  onSuccessfulLoad: () => Promise<any>;\n\n  private searchTimeout: any;\n\n  constructor(\n    protected sendService: SendService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected ngZone: NgZone,\n    protected searchService: SearchService,\n    protected policyService: PolicyService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.disableSend = await this.policyService.policyAppliesToUser(PolicyType.DisableSend);\n  }\n\n  async load(filter: (send: SendView) => boolean = null) {\n    this.loading = true;\n    const sends = await this.sendService.getAllDecrypted();\n    this.sends = sends;\n    if (this.onSuccessfulLoad != null) {\n      await this.onSuccessfulLoad();\n    } else {\n      // Default action\n      this.selectAll();\n    }\n    this.loading = false;\n    this.loaded = true;\n  }\n\n  async reload(filter: (send: SendView) => boolean = null) {\n    this.loaded = false;\n    this.sends = [];\n    await this.load(filter);\n  }\n\n  async refresh() {\n    try {\n      this.refreshing = true;\n      await this.reload(this.filter);\n    } finally {\n      this.refreshing = false;\n    }\n  }\n\n  async applyFilter(filter: (send: SendView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  async removePassword(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null || s.password == null) {\n      return;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removePasswordConfirmation\"),\n      this.i18nService.t(\"removePassword\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.removePasswordWithServer(s.id);\n      await this.actionPromise;\n      if (this.onSuccessfulRemovePassword != null) {\n        this.onSuccessfulRemovePassword();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"removedPassword\"));\n        await this.load();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async delete(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.deleteWithServer(s.id);\n      await this.actionPromise;\n\n      if (this.onSuccessfulDelete != null) {\n        this.onSuccessfulDelete();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n        await this.refresh();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n    return true;\n  }\n\n  copy(s: SendView) {\n    const sendLinkBaseUrl = this.environmentService.getSendUrl();\n    const link = sendLinkBaseUrl + s.accessId + \"/\" + s.urlB64Key;\n    this.platformUtilsService.copyToClipboard(link);\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"sendLink\"))\n    );\n  }\n\n  searchTextChanged() {\n    this.search(200);\n  }\n\n  selectAll() {\n    this.clearSelections();\n    this.selectedAll = true;\n    this.applyFilter(null);\n  }\n\n  selectType(type: SendType) {\n    this.clearSelections();\n    this.selectedType = type;\n    this.applyFilter((s) => s.type === type);\n  }\n\n  clearSelections() {\n    this.selectedAll = false;\n    this.selectedType = null;\n  }\n\n  private applyTextSearch() {\n    if (this.searchText != null) {\n      this.filteredSends = this.searchService.searchSends(this.filteredSends, this.searchText);\n    }\n  }\n}\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopProp]\",\n})\nexport class StopPropDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.stopPropagation();\n  }\n}\n","<div\n  role=\"group\"\n  *ngFor=\"let s of sends\"\n  appA11yTitle=\"{{ s.name }}\"\n  class=\"box-content-row box-content-row-flex\"\n>\n  <button\n    type=\"button\"\n    class=\"row-main\"\n    (click)=\"selectSend(s)\"\n    appStopClick\n    title=\"{{ title }} - {{ s.name }}\"\n  >\n    <div class=\"app-vault-icon\">\n      <div class=\"icon\" aria-hidden=\"true\">\n        <i class=\"bwi bwi-fw bwi-lg bwi-file-text\" *ngIf=\"s.type === sendType.Text\"></i>\n        <i class=\"bwi bwi-fw bwi-lg bwi-file\" *ngIf=\"s.type === sendType.File\"></i>\n      </div>\n    </div>\n    <div class=\"row-main-content\">\n      <span class=\"text\">\n        {{ s.name }}\n        <ng-container *ngIf=\"s.disabled\">\n          <i\n            class=\"bwi bwi-exclamation-triangle text-muted\"\n            title=\"{{ 'disabled' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"disabled\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"s.password\">\n          <i\n            class=\"bwi bwi-key text-muted\"\n            title=\"{{ 'passwordProtected' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"passwordProtected\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"s.maxAccessCountReached\">\n          <i\n            class=\"bwi bwi-ban text-muted\"\n            title=\"{{ 'maxAccessCountReached' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"maxAccessCountReached\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"s.expired\">\n          <i class=\"bwi bwi-clock text-muted\" title=\"{{ 'expired' | i18n }}\" aria-hidden=\"true\"></i>\n          <span class=\"sr-only\">{{ \"expired\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"s.pendingDelete\">\n          <i\n            class=\"bwi bwi-trash text-muted\"\n            title=\"{{ 'pendingDeletion' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"pendingDeletion\" | i18n }}</span>\n        </ng-container>\n      </span>\n      <span class=\"detail\">{{ s.deletionDate | date: \"medium\" }}</span>\n    </div>\n  </button>\n  <div class=\"action-buttons\">\n    <button\n      type=\"button\"\n      class=\"row-btn\"\n      appStopClick\n      appStopProp\n      appA11yTitle=\"{{ 'copySendLink' | i18n }}\"\n      (click)=\"copySendLink(s)\"\n    >\n      <i class=\"bwi bwi-lg bwi-files\" aria-hidden=\"true\"></i>\n    </button>\n    <button\n      type=\"button\"\n      class=\"row-btn\"\n      [ngClass]=\"{ disabled: disabledByPolicy }\"\n      [attr.disabled]=\"disabledByPolicy ? '' : null\"\n      appStopClick\n      appStopProp\n      appA11yTitle=\"{{ 'removePassword' | i18n }}\"\n      (click)=\"removePassword(s)\"\n      *ngIf=\"s.password\"\n    >\n      <i class=\"bwi bwi-lg bwi-undo\" aria-hidden=\"true\"></i>\n    </button>\n    <button\n      type=\"button\"\n      class=\"row-btn\"\n      appStopClick\n      appStopProp\n      appA11yTitle=\"{{ 'delete' | i18n }}\"\n      (click)=\"delete(s)\"\n    >\n      <i class=\"bwi bwi-lg bwi-trash\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { SendView } from \"@bitwarden/common/models/view/sendView\";\n\n@Component({\n  selector: \"app-send-list\",\n  templateUrl: \"send-list.component.html\",\n})\nexport class SendListComponent {\n  @Input() sends: SendView[];\n  @Input() title: string;\n  @Input() disabledByPolicy = false;\n  @Output() onSelected = new EventEmitter<SendView>();\n  @Output() onCopySendLink = new EventEmitter<SendView>();\n  @Output() onRemovePassword = new EventEmitter<SendView>();\n  @Output() onDeleteSend = new EventEmitter<SendView>();\n\n  sendType = SendType;\n\n  selectSend(s: SendView) {\n    this.onSelected.emit(s);\n  }\n\n  copySendLink(s: SendView) {\n    this.onCopySendLink.emit(s);\n  }\n\n  removePassword(s: SendView) {\n    this.onRemovePassword.emit(s);\n  }\n\n  delete(s: SendView) {\n    this.onDeleteSend.emit(s);\n  }\n}\n","<header>\n  <div class=\"left\" *ngIf=\"showLeftHeader\">\n    <app-pop-out></app-pop-out>\n  </div>\n  <h1 class=\"sr-only\">{{ \"send\" | i18n }}</h1>\n  <div class=\"search\">\n    <input\n      type=\"search\"\n      placeholder=\"{{ 'searchSends' | i18n }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"search(200)\"\n      autocomplete=\"off\"\n      appAutofocus\n    />\n    <i class=\"bwi bwi-search\"></i>\n  </div>\n  <div class=\"right\">\n    <button\n      type=\"button\"\n      (click)=\"addSend()\"\n      appA11yTitle=\"{{ 'addSend' | i18n }}\"\n      [disabled]=\"disableSend\"\n    >\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\" [ngClass]=\"{ flex: disableSend, 'tab-page': disableSend }\">\n  <app-callout type=\"warning\" title=\"{{ 'sendDisabled' | i18n }}\" *ngIf=\"disableSend\">\n    {{ \"sendDisabledWarning\" | i18n }}\n  </app-callout>\n  <div class=\"no-items\" *ngIf=\"(!sends || !sends.length) && !showSearching()\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" *ngIf=\"!loaded\"></i>\n    <ng-container *ngIf=\"loaded\">\n      <img class=\"no-items-image\" aria-hidden=\"true\" />\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n      <button\n        type=\"button\"\n        (click)=\"addSend()\"\n        class=\"btn block primary link\"\n        [disabled]=\"disableSend\"\n      >\n        {{ \"addSend\" | i18n }}\n      </button>\n    </ng-container>\n  </div>\n  <ng-container *ngIf=\"sends && sends.length && !showSearching()\">\n    <div class=\"box list\">\n      <h2 class=\"box-header\">\n        {{ \"types\" | i18n }}\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"selectType(sendType.Text)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-file-text\"></i></div>\n            <span class=\"text\">{{ \"sendTypeText\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(sendType.Text) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"selectType(sendType.File)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-file\"></i></div>\n            <span class=\"text\">{{ \"sendTypeFile\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(sendType.File) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\">\n      <h2 class=\"box-header\">\n        {{ \"allSends\" | i18n }}\n        <div class=\"flex-right\">{{ sends.length }}</div>\n      </h2>\n      <div class=\"box-content\">\n        <app-send-list\n          [sends]=\"sends\"\n          title=\"{{ 'editItem' | i18n }}\"\n          [disabledByPolicy]=\"disableSend\"\n          (onSelected)=\"selectSend($event)\"\n          (onCopySendLink)=\"copy($event)\"\n          (onRemovePassword)=\"removePassword($event)\"\n          (onDeleteSend)=\"delete($event)\"\n        ></app-send-list>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"showSearching()\">\n    <div class=\"no-items\" *ngIf=\"!filteredSends || !filteredSends.length\">\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n    </div>\n    <div class=\"box list full-list\" *ngIf=\"filteredSends && filteredSends.length > 0\">\n      <div class=\"box-content\">\n        <app-send-list\n          [sends]=\"filteredSends\"\n          title=\"{{ 'editItem' | i18n }}\"\n          [disabledByPolicy]=\"disableSend\"\n          (onSelected)=\"selectSend($event)\"\n          (onCopySendLink)=\"copy($event)\"\n          (onRemovePassword)=\"removePassword($event)\"\n          (onDeleteSend)=\"delete($event)\"\n        >\n        </app-send-list>\n      </div>\n    </div>\n  </ng-container>\n</main>\n","import { ChangeDetectorRef, Component, NgZone } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { SendComponent as BaseSendComponent } from \"@bitwarden/angular/components/send/send.component\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { SendView } from \"@bitwarden/common/models/view/sendView\";\n\nimport { BrowserSendComponentState } from \"../../models/browserSendComponentState\";\nimport { StateService } from \"../../services/abstractions/state.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst ComponentId = \"SendComponent\";\n\n@Component({\n  selector: \"app-send-groupings\",\n  templateUrl: \"send-groupings.component.html\",\n})\nexport class SendGroupingsComponent extends BaseSendComponent {\n  // Header\n  showLeftHeader = true;\n  // Send Type Calculations\n  typeCounts = new Map<SendType, number>();\n  // State Handling\n  state: BrowserSendComponentState;\n  private loadedTimeout: number;\n\n  constructor(\n    sendService: SendService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    ngZone: NgZone,\n    policyService: PolicyService,\n    searchService: SearchService,\n    private popupUtils: PopupUtilsService,\n    private stateService: StateService,\n    private router: Router,\n    private syncService: SyncService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private broadcasterService: BroadcasterService,\n    logService: LogService\n  ) {\n    super(\n      sendService,\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      ngZone,\n      searchService,\n      policyService,\n      logService\n    );\n    super.onSuccessfulLoad = async () => {\n      this.calculateTypeCounts();\n      this.selectAll();\n    };\n  }\n\n  async ngOnInit() {\n    // Determine Header details\n    this.showLeftHeader = !(\n      this.popupUtils.inSidebar(window) && this.platformUtilsService.isFirefox()\n    );\n    // Clear state of Send Type Component\n    await this.stateService.setBrowserSendTypeComponentState(null);\n    // Let super class finish\n    await super.ngOnInit();\n    // Handle State Restore if necessary\n    const restoredScopeState = await this.restoreState();\n    if (this.state?.searchText != null) {\n      this.searchText = this.state.searchText;\n    }\n\n    if (!this.syncService.syncInProgress) {\n      this.load();\n    } else {\n      this.loadedTimeout = window.setTimeout(() => {\n        if (!this.loaded) {\n          this.load();\n        }\n      }, 5000);\n    }\n\n    if (!this.syncService.syncInProgress || restoredScopeState) {\n      window.setTimeout(() => this.popupUtils.setContentScrollY(window, this.state?.scrollY), 0);\n    }\n\n    // Load all sends if sync completed in background\n    this.broadcasterService.subscribe(ComponentId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            window.setTimeout(() => {\n              this.load();\n            }, 500);\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    // Remove timeout\n    if (this.loadedTimeout != null) {\n      window.clearTimeout(this.loadedTimeout);\n    }\n    // Save state\n    this.saveState();\n    // Unsubscribe\n    this.broadcasterService.unsubscribe(ComponentId);\n  }\n\n  async selectType(type: SendType) {\n    this.router.navigate([\"/send-type\"], { queryParams: { type: type } });\n  }\n\n  async selectSend(s: SendView) {\n    this.router.navigate([\"/edit-send\"], { queryParams: { sendId: s.id } });\n  }\n\n  async addSend() {\n    if (this.disableSend) {\n      return;\n    }\n    this.router.navigate([\"/add-send\"]);\n  }\n\n  async removePassword(s: SendView): Promise<boolean> {\n    if (this.disableSend) {\n      return;\n    }\n    super.removePassword(s);\n  }\n\n  showSearching() {\n    return (\n      this.hasSearched || (!this.searchPending && this.searchService.isSearchable(this.searchText))\n    );\n  }\n\n  private calculateTypeCounts() {\n    // Create type counts\n    const typeCounts = new Map<SendType, number>();\n    this.sends.forEach((s) => {\n      if (typeCounts.has(s.type)) {\n        typeCounts.set(s.type, typeCounts.get(s.type) + 1);\n      } else {\n        typeCounts.set(s.type, 1);\n      }\n    });\n    this.typeCounts = typeCounts;\n  }\n\n  private async saveState() {\n    this.state = {\n      scrollY: this.popupUtils.getContentScrollY(window),\n      searchText: this.searchText,\n      sends: this.sends,\n      typeCounts: this.typeCounts,\n    };\n    await this.stateService.setBrowserSendComponentState(this.state);\n  }\n\n  private async restoreState(): Promise<boolean> {\n    this.state = await this.stateService.getBrowserSendComponentState();\n    if (this.state == null) {\n      return false;\n    }\n\n    if (this.state.sends != null) {\n      this.sends = this.state.sends;\n    }\n    if (this.state.typeCounts != null) {\n      this.typeCounts = this.state.typeCounts;\n    }\n\n    return true;\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" (click)=\"back()\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </button>\n  </div>\n  <h1 class=\"sr-only\">{{ \"send\" | i18n }}</h1>\n  <div class=\"search\">\n    <input\n      type=\"search\"\n      placeholder=\"{{ 'searchType' | i18n }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"search(200)\"\n      autocomplete=\"off\"\n      appAutofocus\n    />\n    <i class=\"bwi bwi-search\"></i>\n  </div>\n  <div class=\"right\">\n    <button\n      type=\"button\"\n      (click)=\"addSend()\"\n      appA11yTitle=\"{{ 'addSend' | i18n }}\"\n      [disabled]=\"disableSend\"\n    >\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\" [ngClass]=\"{ flex: disableSend }\">\n  <app-callout type=\"warning\" title=\"{{ 'sendDisabled' | i18n }}\" *ngIf=\"disableSend\">\n    {{ \"sendDisabledWarning\" | i18n }}\n  </app-callout>\n  <div class=\"no-items\" *ngIf=\"!filteredSends.length\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" *ngIf=\"!loaded\" aria-hidden=\"true\"></i>\n    <ng-container *ngIf=\"loaded\">\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n      <button\n        type=\"button\"\n        (click)=\"addSend()\"\n        class=\"btn block primary link\"\n        [disabled]=\"disableSend\"\n      >\n        {{ \"addSend\" | i18n }}\n      </button>\n    </ng-container>\n  </div>\n  <div class=\"box list only-list\" *ngIf=\"filteredSends.length\">\n    <h2 class=\"box-header\">\n      {{ groupingTitle }}\n      <span class=\"flex-right\">{{ filteredSends.length }}</span>\n    </h2>\n    <div class=\"box-content\">\n      <app-send-list\n        [sends]=\"filteredSends\"\n        title=\"{{ 'editItem' | i18n }}\"\n        [disabledByPolicy]=\"disableSend\"\n        (onSelected)=\"selectSend($event)\"\n        (onCopySendLink)=\"copy($event)\"\n        (onRemovePassword)=\"removePassword($event)\"\n        (onDeleteSend)=\"delete($event)\"\n      >\n      </app-send-list>\n    </div>\n  </div>\n</main>\n","import { Location } from \"@angular/common\";\nimport { ChangeDetectorRef, Component, NgZone } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SendComponent as BaseSendComponent } from \"@bitwarden/angular/components/send/send.component\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { SendView } from \"@bitwarden/common/models/view/sendView\";\n\nimport { BrowserComponentState } from \"../../models/browserComponentState\";\nimport { StateService } from \"../../services/abstractions/state.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst ComponentId = \"SendTypeComponent\";\n\n@Component({\n  selector: \"app-send-type\",\n  templateUrl: \"send-type.component.html\",\n})\nexport class SendTypeComponent extends BaseSendComponent {\n  groupingTitle: string;\n  // State Handling\n  state: BrowserComponentState;\n  private refreshTimeout: number;\n  private applySavedState = true;\n\n  constructor(\n    sendService: SendService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    ngZone: NgZone,\n    policyService: PolicyService,\n    searchService: SearchService,\n    private popupUtils: PopupUtilsService,\n    private stateService: StateService,\n    private route: ActivatedRoute,\n    private location: Location,\n    private changeDetectorRef: ChangeDetectorRef,\n    private broadcasterService: BroadcasterService,\n    private router: Router,\n    logService: LogService\n  ) {\n    super(\n      sendService,\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      ngZone,\n      searchService,\n      policyService,\n      logService\n    );\n    super.onSuccessfulLoad = async () => {\n      this.selectType(this.type);\n    };\n    this.applySavedState =\n      (window as any).previousPopupUrl != null &&\n      !(window as any).previousPopupUrl.startsWith(\"/send-type\");\n  }\n\n  async ngOnInit() {\n    // Let super class finish\n    await super.ngOnInit();\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (this.applySavedState) {\n        this.state = await this.stateService.getBrowserSendTypeComponentState();\n        if (this.state?.searchText != null) {\n          this.searchText = this.state.searchText;\n        }\n      }\n\n      if (params.type != null) {\n        this.type = parseInt(params.type, null);\n        switch (this.type) {\n          case SendType.Text:\n            this.groupingTitle = this.i18nService.t(\"sendTypeText\");\n            break;\n          case SendType.File:\n            this.groupingTitle = this.i18nService.t(\"sendTypeFile\");\n            break;\n          default:\n            break;\n        }\n        await this.load((s) => s.type === this.type);\n      }\n\n      // Restore state and remove reference\n      if (this.applySavedState && this.state != null) {\n        window.setTimeout(() => this.popupUtils.setContentScrollY(window, this.state?.scrollY), 0);\n      }\n      this.stateService.setBrowserSendTypeComponentState(null);\n    });\n\n    // Refresh Send list if sync completed in background\n    this.broadcasterService.subscribe(ComponentId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (message.successfully) {\n              this.refreshTimeout = window.setTimeout(() => {\n                this.refresh();\n              }, 500);\n            }\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    // Remove timeout\n    if (this.refreshTimeout != null) {\n      window.clearTimeout(this.refreshTimeout);\n    }\n    // Save state\n    this.saveState();\n    // Unsubscribe\n    this.broadcasterService.unsubscribe(ComponentId);\n  }\n\n  async selectSend(s: SendView) {\n    this.router.navigate([\"/edit-send\"], { queryParams: { sendId: s.id } });\n  }\n\n  async addSend() {\n    if (this.disableSend) {\n      return;\n    }\n    this.router.navigate([\"/add-send\"], { queryParams: { type: this.type } });\n  }\n\n  async removePassword(s: SendView): Promise<boolean> {\n    if (this.disableSend) {\n      return;\n    }\n    super.removePassword(s);\n  }\n\n  back() {\n    (window as any).routeDirection = \"b\";\n    this.location.back();\n  }\n\n  private async saveState() {\n    this.state = {\n      scrollY: this.popupUtils.getContentScrollY(window),\n      searchText: this.searchText,\n    };\n    await this.stateService.setBrowserSendTypeComponentState(this.state);\n  }\n}\n","import { Injectable, OnDestroy } from \"@angular/core\";\nimport { CanActivate, NavigationEnd, NavigationStart, Router } from \"@angular/router\";\nimport { Subscription } from \"rxjs\";\nimport { filter, pairwise } from \"rxjs/operators\";\n\n@Injectable()\nexport class DebounceNavigationService implements CanActivate, OnDestroy {\n  navigationStartSub: Subscription;\n  navigationSuccessSub: Subscription;\n\n  private lastNavigation: NavigationStart;\n  private thisNavigation: NavigationStart;\n  private lastNavigationSuccessId: number;\n\n  constructor(private router: Router) {\n    this.navigationStartSub = this.router.events\n      .pipe(\n        filter((event) => event instanceof NavigationStart),\n        pairwise()\n      )\n      .subscribe(\n        (events: [NavigationStart, NavigationStart]) =>\n          ([this.lastNavigation, this.thisNavigation] = events)\n      );\n\n    this.navigationSuccessSub = this.router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe((event: NavigationEnd) => (this.lastNavigationSuccessId = event.id));\n  }\n\n  async canActivate() {\n    return !(\n      this.thisNavigation?.navigationTrigger === \"hashchange\" &&\n      this.lastNavigation.navigationTrigger === \"popstate\" &&\n      this.lastNavigationSuccessId === this.lastNavigation.id &&\n      this.lastNavigation.url === this.thisNavigation?.url\n    );\n  }\n\n  ngOnDestroy() {\n    if (this.navigationStartSub != null) {\n      this.navigationStartSub.unsubscribe();\n    }\n\n    if (this.navigationSuccessSub != null) {\n      this.navigationSuccessSub.unsubscribe();\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" routerLink=\"/tabs/settings\">\n        <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n        <span>{{ \"back\" | i18n }}</span>\n      </button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"excludedDomains\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\">{{ \"save\" | i18n }}</button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <ng-container *ngIf=\"excludedDomains\">\n          <div\n            class=\"box-content-row box-content-row-multi\"\n            appBoxRow\n            *ngFor=\"let domain of excludedDomains; let i = index; trackBy: trackByFunction\"\n          >\n            <button\n              type=\"button\"\n              appStopClick\n              (click)=\"removeUri(i)\"\n              appA11yTitle=\"{{ 'remove' | i18n }}\"\n            >\n              <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"row-main\">\n              <label for=\"excludedDomain{{ i }}\">{{ \"uriPosition\" | i18n: i + 1 }}</label>\n              <input\n                id=\"excludedDomain{{ i }}\"\n                name=\"excludedDomain{{ i }}\"\n                type=\"text\"\n                [(ngModel)]=\"domain.uri\"\n                placeholder=\"{{ 'ex' | i18n }} https://google.com\"\n                inputmode=\"url\"\n                appInputVerbatim\n              />\n              <label for=\"currentUris{{ i }}\" class=\"sr-only\">\n                {{ \"currentUri\" | i18n }} {{ i + 1 }}\n              </label>\n              <select\n                *ngIf=\"currentUris && currentUris.length\"\n                id=\"currentUris{{ i }}\"\n                name=\"currentUris{{ i }}\"\n                [(ngModel)]=\"domain.uri\"\n                [hidden]=\"!domain.showCurrentUris\"\n              >\n                <option [ngValue]=\"null\">-- {{ \"select\" | i18n }} --</option>\n                <option *ngFor=\"let u of currentUris\" [ngValue]=\"u\">{{ u }}</option>\n              </select>\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                *ngIf=\"currentUris && currentUris.length\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'toggleCurrentUris' | i18n }}\"\n                (click)=\"toggleUriInput(domain)\"\n                [attr.aria-pressed]=\"domain.showCurrentUris === true\"\n              >\n                <i aria-hidden=\"true\" class=\"bwi bwi-lg bwi-list\"></i>\n              </button>\n            </div>\n          </div>\n        </ng-container>\n        <button\n          type=\"button\"\n          appStopClick\n          (click)=\"addUri()\"\n          class=\"box-content-row box-content-row-newmulti\"\n        >\n          <i class=\"bwi bwi-plus-circle bwi-fw bwi-lg\" aria-hidden=\"true\"></i> {{ \"newUri\" | i18n }}\n        </button>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"excludedDomainsDesc\" | i18n }}\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\n\ninterface ExcludedDomain {\n  uri: string;\n  showCurrentUris: boolean;\n}\n\nconst BroadcasterSubscriptionId = \"excludedDomains\";\n\n@Component({\n  selector: \"app-excluded-domains\",\n  templateUrl: \"excluded-domains.component.html\",\n})\nexport class ExcludedDomainsComponent implements OnInit, OnDestroy {\n  excludedDomains: ExcludedDomain[] = [];\n  existingExcludedDomains: ExcludedDomain[] = [];\n  currentUris: string[];\n  loadCurrentUrisTimeout: number;\n\n  constructor(\n    private stateService: StateService,\n    private i18nService: I18nService,\n    private router: Router,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async ngOnInit() {\n    const savedDomains = await this.stateService.getNeverDomains();\n    if (savedDomains) {\n      for (const uri of Object.keys(savedDomains)) {\n        this.excludedDomains.push({ uri: uri, showCurrentUris: false });\n        this.existingExcludedDomains.push({ uri: uri, showCurrentUris: false });\n      }\n    }\n\n    await this.loadCurrentUris();\n\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"tabChanged\":\n          case \"windowChanged\":\n            if (this.loadCurrentUrisTimeout != null) {\n              window.clearTimeout(this.loadCurrentUrisTimeout);\n            }\n            this.loadCurrentUrisTimeout = window.setTimeout(\n              async () => await this.loadCurrentUris(),\n              500\n            );\n            break;\n          default:\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async addUri() {\n    this.excludedDomains.push({ uri: \"\", showCurrentUris: false });\n  }\n\n  async removeUri(i: number) {\n    this.excludedDomains.splice(i, 1);\n  }\n\n  async submit() {\n    const savedDomains: { [name: string]: null } = {};\n    const newExcludedDomains = this.getNewlyAddedDomians(this.excludedDomains);\n    for (const domain of this.excludedDomains) {\n      const resp = newExcludedDomains.filter((e) => e.uri === domain.uri);\n      if (resp.length === 0) {\n        savedDomains[domain.uri] = null;\n      } else {\n        if (domain.uri && domain.uri !== \"\") {\n          const validDomain = Utils.getHostname(domain.uri);\n          if (!validDomain) {\n            this.platformUtilsService.showToast(\n              \"error\",\n              null,\n              this.i18nService.t(\"excludedDomainsInvalidDomain\", domain.uri)\n            );\n            return;\n          }\n          savedDomains[validDomain] = null;\n        }\n      }\n    }\n\n    await this.stateService.setNeverDomains(savedDomains);\n    this.router.navigate([\"/tabs/settings\"]);\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  getNewlyAddedDomians(domain: ExcludedDomain[]): ExcludedDomain[] {\n    const result = this.excludedDomains.filter(\n      (newDomain) =>\n        !this.existingExcludedDomains.some((oldDomain) => newDomain.uri === oldDomain.uri)\n    );\n    return result;\n  }\n\n  toggleUriInput(domain: ExcludedDomain) {\n    domain.showCurrentUris = !domain.showCurrentUris;\n  }\n\n  async loadCurrentUris() {\n    const tabs = await BrowserApi.tabsQuery({ windowType: \"normal\" });\n    if (tabs) {\n      const uriSet = new Set(tabs.map((tab) => Utils.getHostname(tab.url)));\n      uriSet.delete(null);\n      this.currentUris = Array.from(uriSet);\n    }\n  }\n}\n","export enum EventType {\n  User_LoggedIn = 1000,\n  User_ChangedPassword = 1001,\n  User_Updated2fa = 1002,\n  User_Disabled2fa = 1003,\n  User_Recovered2fa = 1004,\n  User_FailedLogIn = 1005,\n  User_FailedLogIn2fa = 1006,\n  User_ClientExportedVault = 1007,\n  User_UpdatedTempPassword = 1008,\n  User_MigratedKeyToKeyConnector = 1009,\n\n  Cipher_Created = 1100,\n  Cipher_Updated = 1101,\n  Cipher_Deleted = 1102,\n  Cipher_AttachmentCreated = 1103,\n  Cipher_AttachmentDeleted = 1104,\n  Cipher_Shared = 1105,\n  Cipher_UpdatedCollections = 1106,\n  Cipher_ClientViewed = 1107,\n  Cipher_ClientToggledPasswordVisible = 1108,\n  Cipher_ClientToggledHiddenFieldVisible = 1109,\n  Cipher_ClientToggledCardCodeVisible = 1110,\n  Cipher_ClientCopiedPassword = 1111,\n  Cipher_ClientCopiedHiddenField = 1112,\n  Cipher_ClientCopiedCardCode = 1113,\n  Cipher_ClientAutofilled = 1114,\n  Cipher_SoftDeleted = 1115,\n  Cipher_Restored = 1116,\n  Cipher_ClientToggledCardNumberVisible = 1117,\n\n  Collection_Created = 1300,\n  Collection_Updated = 1301,\n  Collection_Deleted = 1302,\n\n  Group_Created = 1400,\n  Group_Updated = 1401,\n  Group_Deleted = 1402,\n\n  OrganizationUser_Invited = 1500,\n  OrganizationUser_Confirmed = 1501,\n  OrganizationUser_Updated = 1502,\n  OrganizationUser_Removed = 1503,\n  OrganizationUser_UpdatedGroups = 1504,\n  OrganizationUser_UnlinkedSso = 1505,\n  OrganizationUser_ResetPassword_Enroll = 1506,\n  OrganizationUser_ResetPassword_Withdraw = 1507,\n  OrganizationUser_AdminResetPassword = 1508,\n  OrganizationUser_ResetSsoLink = 1509,\n  OrganizationUser_FirstSsoLogin = 1510,\n  OrganizationUser_Revoked = 1511,\n  OrganizationUser_Restored = 1512,\n\n  Organization_Updated = 1600,\n  Organization_PurgedVault = 1601,\n  Organization_ClientExportedVault = 1602,\n  Organization_VaultAccessed = 1603,\n  Organization_EnabledSso = 1604,\n  Organization_DisabledSso = 1605,\n  Organization_EnabledKeyConnector = 1606,\n  Organization_DisabledKeyConnector = 1607,\n  Organization_SponsorshipsSynced = 1608,\n\n  Policy_Updated = 1700,\n\n  ProviderUser_Invited = 1800,\n  ProviderUser_Confirmed = 1801,\n  ProviderUser_Updated = 1802,\n  ProviderUser_Removed = 1803,\n\n  ProviderOrganization_Created = 1900,\n  ProviderOrganization_Added = 1901,\n  ProviderOrganization_Removed = 1902,\n  ProviderOrganization_VaultAccessed = 1903,\n}\n","import { EventView } from \"../models/view/eventView\";\n\nexport type ExportFormat = \"csv\" | \"json\" | \"encrypted_json\";\n\nexport abstract class ExportService {\n  getExport: (format?: ExportFormat, organizationId?: string) => Promise<string>;\n  getPasswordProtectedExport: (password: string, organizationId?: string) => Promise<string>;\n  getOrganizationExport: (organizationId: string, format?: ExportFormat) => Promise<string>;\n  getEventExport: (events: EventView[]) => Promise<string>;\n  getFileName: (prefix?: string, extension?: string) => string;\n}\n","import { EventType } from \"../enums/eventType\";\n\nexport abstract class EventService {\n  collect: (\n    eventType: EventType,\n    cipherId?: string,\n    uploadImmediately?: boolean,\n    organizationId?: string\n  ) => Promise<any>;\n  uploadEvents: (userId?: string) => Promise<any>;\n  clearEvents: (userId?: string) => Promise<any>;\n}\n","import { SecretVerificationRequest } from \"../../models/request/secretVerificationRequest\";\nimport { Verification } from \"../../types/verification\";\n\nexport abstract class UserVerificationService {\n  buildRequest: <T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) => Promise<T>;\n  verifyUser: (verification: Verification) => Promise<boolean>;\n  requestOTP: () => Promise<void>;\n}\n","import { FileDownloadRequest } from \"./fileDownloadRequest\";\n\nexport abstract class FileDownloadService {\n  download: (request: FileDownloadRequest) => void;\n}\n","import { Directive, EventEmitter, OnInit, Output } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { ExportService } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\n@Directive()\nexport class ExportComponent implements OnInit {\n  @Output() onSaved = new EventEmitter();\n\n  formPromise: Promise<string>;\n  disabledByPolicy = false;\n\n  exportForm = this.formBuilder.group({\n    format: [\"json\"],\n    secret: [\"\"],\n  });\n\n  formatOptions = [\n    { name: \".json\", value: \"json\" },\n    { name: \".csv\", value: \"csv\" },\n    { name: \".json (Encrypted)\", value: \"encrypted_json\" },\n  ];\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected exportService: ExportService,\n    protected eventService: EventService,\n    private policyService: PolicyService,\n    protected win: Window,\n    private logService: LogService,\n    private userVerificationService: UserVerificationService,\n    private formBuilder: UntypedFormBuilder,\n    protected fileDownloadService: FileDownloadService\n  ) {}\n\n  async ngOnInit() {\n    await this.checkExportDisabled();\n  }\n\n  async checkExportDisabled() {\n    this.disabledByPolicy = await this.policyService.policyAppliesToUser(\n      PolicyType.DisablePersonalVaultExport\n    );\n    if (this.disabledByPolicy) {\n      this.exportForm.disable();\n    }\n  }\n\n  get encryptedFormat() {\n    return this.format === \"encrypted_json\";\n  }\n\n  async submit() {\n    if (this.disabledByPolicy) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"personalVaultExportPolicyInEffect\")\n      );\n      return;\n    }\n\n    const acceptedWarning = await this.warningDialog();\n    if (!acceptedWarning) {\n      return;\n    }\n\n    const secret = this.exportForm.get(\"secret\").value;\n    try {\n      await this.userVerificationService.verifyUser(secret);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n      return;\n    }\n\n    try {\n      this.formPromise = this.getExportData();\n      const data = await this.formPromise;\n      this.downloadFile(data);\n      this.saved();\n      await this.collectEvent();\n      this.exportForm.get(\"secret\").setValue(\"\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async warningDialog() {\n    if (this.encryptedFormat) {\n      return await this.platformUtilsService.showDialog(\n        \"<p>\" +\n          this.i18nService.t(\"encExportKeyWarningDesc\") +\n          \"<p>\" +\n          this.i18nService.t(\"encExportAccountWarningDesc\"),\n        this.i18nService.t(\"confirmVaultExport\"),\n        this.i18nService.t(\"exportVault\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\",\n        true\n      );\n    } else {\n      return await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"exportWarningDesc\"),\n        this.i18nService.t(\"confirmVaultExport\"),\n        this.i18nService.t(\"exportVault\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n    }\n  }\n\n  protected saved() {\n    this.onSaved.emit();\n  }\n\n  protected getExportData() {\n    return this.exportService.getExport(this.format);\n  }\n\n  protected getFileName(prefix?: string) {\n    let extension = this.format;\n    if (this.format === \"encrypted_json\") {\n      if (prefix == null) {\n        prefix = \"encrypted\";\n      } else {\n        prefix = \"encrypted_\" + prefix;\n      }\n      extension = \"json\";\n    }\n    return this.exportService.getFileName(prefix, extension);\n  }\n\n  protected async collectEvent(): Promise<void> {\n    await this.eventService.collect(EventType.User_ClientExportedVault);\n  }\n\n  get format() {\n    return this.exportForm.get(\"format\").value;\n  }\n\n  private downloadFile(csv: string): void {\n    const fileName = this.getFileName();\n    this.fileDownloadService.download({\n      fileName: fileName,\n      blobData: csv,\n      blobOptions: { type: \"text/plain\" },\n    });\n  }\n}\n","import { OrganizationData } from \"../models/data/organizationData\";\nimport { Organization } from \"../models/domain/organization\";\n\nexport abstract class OrganizationService {\n  get: (id: string) => Promise<Organization>;\n  getByIdentifier: (identifier: string) => Promise<Organization>;\n  getAll: (userId?: string) => Promise<Organization[]>;\n  save: (orgs: { [id: string]: OrganizationData }) => Promise<any>;\n  canManageSponsorships: () => Promise<boolean>;\n  hasOrganizations: (userId?: string) => Promise<boolean>;\n}\n","export enum VerificationType {\n  MasterPassword = 0,\n  OTP = 1,\n}\n","<ng-container *ngIf=\"show\">\n  <app-callout type=\"info\" title=\"{{ scopeConfig.title | i18n }}\">\n    {{ scopeConfig.description | i18n: scopeConfig.scopeIdentifier }}\n  </app-callout>\n</ng-container>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-export-scope-callout\",\n  templateUrl: \"export-scope-callout.component.html\",\n})\nexport class ExportScopeCalloutComponent implements OnInit {\n  @Input() organizationId: string = null;\n\n  show = false;\n  scopeConfig: {\n    title: string;\n    description: string;\n    scopeIdentifier: string;\n  };\n\n  constructor(\n    protected organizationService: OrganizationService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    if (!(await this.organizationService.hasOrganizations())) {\n      return;\n    }\n    this.scopeConfig =\n      this.organizationId != null\n        ? {\n            title: \"exportingOrganizationVaultTitle\",\n            description: \"exportingOrganizationVaultDescription\",\n            scopeIdentifier: (await this.organizationService.get(this.organizationId)).name,\n          }\n        : {\n            title: \"exportingPersonalVaultTitle\",\n            description: \"exportingPersonalVaultDescription\",\n            scopeIdentifier: await this.stateService.getEmail(),\n          };\n    this.show = true;\n  }\n}\n","<ng-container *ngIf=\"!usesKeyConnector\">\n  <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n  <input\n    id=\"masterPassword\"\n    type=\"password\"\n    name=\"MasterPasswordHash\"\n    class=\"form-control\"\n    [formControl]=\"secret\"\n    required\n    appAutofocus\n    appInputVerbatim\n  />\n  <small class=\"form-text text-muted\">{{ \"confirmIdentity\" | i18n }}</small>\n</ng-container>\n<ng-container *ngIf=\"usesKeyConnector\">\n  <div class=\"form-group\">\n    <label class=\"d-block\">{{ \"sendVerificationCode\" | i18n }}</label>\n    <button\n      type=\"button\"\n      class=\"btn btn-outline-secondary\"\n      (click)=\"requestOTP()\"\n      [disabled]=\"disableRequestOTP\"\n    >\n      {{ \"sendCode\" | i18n }}\n    </button>\n    <span class=\"ml-2 text-success\" role=\"alert\" @sent *ngIf=\"sentCode\">\n      <i class=\"bwi bwi-check-circle\" aria-hidden=\"true\"></i>\n      {{ \"codeSent\" | i18n }}\n    </span>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"verificationCode\">{{ \"verificationCode\" | i18n }}</label>\n    <input\n      id=\"verificationCode\"\n      type=\"input\"\n      name=\"verificationCode\"\n      class=\"form-control\"\n      [formControl]=\"secret\"\n      required\n      appAutofocus\n      appInputVerbatim\n    />\n    <small class=\"form-text text-muted\">{{ \"confirmIdentity\" | i18n }}</small>\n  </div>\n</ng-container>\n","import { animate, style, transition, trigger } from \"@angular/animations\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, FormControl } from \"@angular/forms\";\n\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { VerificationType } from \"@bitwarden/common/enums/verificationType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n/**\n * Used for general-purpose user verification throughout the app.\n * Collects the user's master password, or if they are using Key Connector, prompts for an OTP via email.\n * This is exposed to the parent component via the ControlValueAccessor interface (e.g. bind it to a FormControl).\n * Use UserVerificationService to verify the user's input.\n */\n@Component({\n  selector: \"app-user-verification\",\n  templateUrl: \"user-verification.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: UserVerificationComponent,\n    },\n  ],\n  animations: [\n    trigger(\"sent\", [\n      transition(\":enter\", [style({ opacity: 0 }), animate(\"100ms\", style({ opacity: 1 }))]),\n    ]),\n  ],\n})\nexport class UserVerificationComponent implements ControlValueAccessor, OnInit {\n  usesKeyConnector = false;\n  disableRequestOTP = false;\n  sentCode = false;\n\n  secret = new FormControl(\"\");\n\n  private onChange: (value: Verification) => void;\n\n  constructor(\n    private keyConnectorService: KeyConnectorService,\n    private userVerificationService: UserVerificationService\n  ) {}\n\n  async ngOnInit() {\n    this.usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.processChanges(this.secret.value);\n\n    this.secret.valueChanges.subscribe((secret: string) => this.processChanges(secret));\n  }\n\n  async requestOTP() {\n    if (this.usesKeyConnector) {\n      this.disableRequestOTP = true;\n      try {\n        await this.userVerificationService.requestOTP();\n        this.sentCode = true;\n      } finally {\n        this.disableRequestOTP = false;\n      }\n    }\n  }\n\n  writeValue(obj: any): void {\n    this.secret.setValue(obj);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    // Not implemented\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disableRequestOTP = isDisabled;\n    if (isDisabled) {\n      this.secret.disable();\n    } else {\n      this.secret.enable();\n    }\n  }\n\n  private processChanges(secret: string) {\n    if (this.onChange == null) {\n      return;\n    }\n\n    this.onChange({\n      type: this.usesKeyConnector ? VerificationType.OTP : VerificationType.MasterPassword,\n      secret: Utils.isNullOrWhitespace(secret) ? null : secret,\n    });\n  }\n}\n","<ng-container *ngIf=\"!usesKeyConnector\">\n  <div class=\"box-content-row\" appBoxRow>\n    <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n    <input\n      id=\"masterPassword\"\n      type=\"password\"\n      name=\"MasterPasswordHash\"\n      class=\"form-control\"\n      [formControl]=\"secret\"\n      required\n      appAutofocus\n      appInputVerbatim\n    />\n  </div>\n</ng-container>\n<ng-container *ngIf=\"usesKeyConnector\">\n  <div class=\"box-content-row\" appBoxRow>\n    <label class=\"d-block\">{{ \"sendVerificationCode\" | i18n }}</label>\n    <button\n      type=\"button\"\n      class=\"btn btn-outline-secondary\"\n      (click)=\"requestOTP()\"\n      [disabled]=\"disableRequestOTP\"\n    >\n      {{ \"sendCode\" | i18n }}\n    </button>\n    <span class=\"ml-2 text-success\" role=\"alert\" @sent *ngIf=\"sentCode\">\n      <i class=\"bwi bwi-check-circle\" aria-hidden=\"true\"></i>\n      {{ \"codeSent\" | i18n }}\n    </span>\n  </div>\n\n  <div class=\"box-content-row\" appBoxRow>\n    <label for=\"verificationCode\">{{ \"verificationCode\" | i18n }}</label>\n    <input\n      id=\"verificationCode\"\n      type=\"input\"\n      name=\"verificationCode\"\n      class=\"form-control\"\n      [formControl]=\"secret\"\n      required\n      appAutofocus\n      appInputVerbatim\n    />\n  </div>\n</ng-container>\n","import { animate, style, transition, trigger } from \"@angular/animations\";\nimport { Component } from \"@angular/core\";\nimport { NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { UserVerificationComponent as BaseComponent } from \"@bitwarden/angular/components/user-verification.component\";\n\n@Component({\n  selector: \"app-user-verification\",\n  templateUrl: \"user-verification.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: UserVerificationComponent,\n    },\n  ],\n  animations: [\n    trigger(\"sent\", [\n      transition(\":enter\", [style({ opacity: 0 }), animate(\"100ms\", style({ opacity: 1 }))]),\n    ]),\n  ],\n})\nexport class UserVerificationComponent extends BaseComponent {}\n","<form (ngSubmit)=\"submit()\" [formGroup]=\"exportForm\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" routerLink=\"/tabs/settings\">\n        <span class=\"header-icon\" aria-hidden=\"true\"><i class=\"bwi bwi-angle-left\"></i></span>\n        <span>{{ \"back\" | i18n }}</span>\n      </button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"exportVault\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" [disabled]=\"!exportForm.enabled\">\n        {{ \"submit\" | i18n }}\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <app-callout type=\"warning\" title=\"{{ 'vaultExportDisabled' | i18n }}\" *ngIf=\"disabledByPolicy\">\n      {{ \"personalVaultExportPolicyInEffect\" | i18n }}\n    </app-callout>\n    <app-export-scope-callout *ngIf=\"!disabledByPolicy\"></app-export-scope-callout>\n\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"format\">{{ \"fileFormat\" | i18n }}</label>\n          <select id=\"format\" name=\"Format\" formControlName=\"format\">\n            <option *ngFor=\"let f of formatOptions\" [value]=\"f.value\">{{ f.name }}</option>\n          </select>\n        </div>\n        <app-user-verification ngDefaultControl formControlName=\"secret\" name=\"Secret\">\n        </app-user-verification>\n      </div>\n      <div class=\"box-footer\">\n        <p>{{ \"confirmIdentity\" | i18n }}</p>\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { ExportComponent as BaseExportComponent } from \"@bitwarden/angular/components/export.component\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { ExportService } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\n\n@Component({\n  selector: \"app-export\",\n  templateUrl: \"export.component.html\",\n})\nexport class ExportComponent extends BaseExportComponent {\n  constructor(\n    cryptoService: CryptoService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    exportService: ExportService,\n    eventService: EventService,\n    policyService: PolicyService,\n    private router: Router,\n    logService: LogService,\n    userVerificationService: UserVerificationService,\n    formBuilder: UntypedFormBuilder,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cryptoService,\n      i18nService,\n      platformUtilsService,\n      exportService,\n      eventService,\n      policyService,\n      window,\n      logService,\n      userVerificationService,\n      formBuilder,\n      fileDownloadService\n    );\n  }\n\n  protected saved() {\n    super.saved();\n    this.router.navigate([\"/tabs/settings\"]);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Folder } from \"../domain/folder\";\nimport { ITreeNodeObject } from \"../domain/treeNode\";\n\nimport { View } from \"./view\";\n\nexport class FolderView implements View, ITreeNodeObject {\n  id: string = null;\n  name: string = null;\n  revisionDate: Date = null;\n\n  constructor(f?: Folder) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.revisionDate = f.revisionDate;\n  }\n\n  static fromJSON(obj: Jsonify<FolderView>) {\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    return Object.assign(new FolderView(), obj, { revisionDate });\n  }\n}\n","import { Observable } from \"rxjs\";\n\nimport { FolderData } from \"../../models/data/folderData\";\nimport { Folder } from \"../../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetricCryptoKey\";\nimport { FolderView } from \"../../models/view/folderView\";\n\nexport abstract class FolderService {\n  folders$: Observable<Folder[]>;\n  folderViews$: Observable<FolderView[]>;\n\n  clearCache: () => Promise<void>;\n  encrypt: (model: FolderView, key?: SymmetricCryptoKey) => Promise<Folder>;\n  get: (id: string) => Promise<Folder>;\n  /**\n   * @deprecated Only use in CLI!\n   */\n  getAllDecryptedFromState: () => Promise<FolderView[]>;\n}\n\nexport abstract class InternalFolderService extends FolderService {\n  upsert: (folder: FolderData | FolderData[]) => Promise<void>;\n  replace: (folders: { [id: string]: FolderData }) => Promise<void>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n}\n","import { Folder } from \"@bitwarden/common/models/domain/folder\";\nimport { FolderResponse } from \"@bitwarden/common/models/response/folderResponse\";\n\nexport class FolderApiServiceAbstraction {\n  save: (folder: Folder) => Promise<any>;\n  delete: (id: string) => Promise<any>;\n  get: (id: string) => Promise<FolderResponse>;\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\n@Directive()\nexport class FolderAddEditComponent implements OnInit {\n  @Input() folderId: string;\n  @Output() onSavedFolder = new EventEmitter<FolderView>();\n  @Output() onDeletedFolder = new EventEmitter<FolderView>();\n\n  editMode = false;\n  folder: FolderView = new FolderView();\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n\n  constructor(\n    protected folderService: FolderService,\n    protected folderApiService: FolderApiServiceAbstraction,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.folder.name == null || this.folder.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    try {\n      const folder = await this.folderService.encrypt(this.folder);\n      this.formPromise = this.folderApiService.save(folder);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedFolder\" : \"addedFolder\")\n      );\n      this.onSavedFolder.emit(this.folder);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteFolderConfirmation\"),\n      this.i18nService.t(\"deleteFolder\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.folderApiService.delete(this.folder.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedFolder\"));\n      this.onDeletedFolder.emit(this.folder);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  protected async init() {\n    this.editMode = this.folderId != null;\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editFolder\");\n      const folder = await this.folderService.get(this.folderId);\n      this.folder = await folder.decrypt();\n    } else {\n      this.title = this.i18nService.t(\"addFolder\");\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" routerLink=\"/folders\">{{ \"cancel\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ title }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\" *ngIf=\"folder\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input\n            id=\"name\"\n            type=\"text\"\n            name=\"Name\"\n            [(ngModel)]=\"folder.name\"\n            [appAutofocus]=\"!editMode\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"editMode\">\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"delete()\"\n          [appApiAction]=\"deletePromise\"\n          #deleteBtn\n        >\n          <div class=\"row-main text-danger\">\n            <div class=\"icon text-danger\" aria-hidden=\"true\">\n              <i class=\"bwi bwi-trash bwi-lg bwi-fw\" [hidden]=\"deleteBtn.loading\"></i>\n              <i class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\" [hidden]=\"!deleteBtn.loading\"></i>\n            </div>\n            <span>{{ \"deleteFolder\" | i18n }}</span>\n          </div>\n        </button>\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { FolderAddEditComponent as BaseFolderAddEditComponent } from \"@bitwarden/angular/components/folder-add-edit.component\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-folder-add-edit\",\n  templateUrl: \"folder-add-edit.component.html\",\n})\nexport class FolderAddEditComponent extends BaseFolderAddEditComponent {\n  constructor(\n    folderService: FolderService,\n    folderApiService: FolderApiServiceAbstraction,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    private route: ActivatedRoute,\n    logService: LogService\n  ) {\n    super(folderService, folderApiService, i18nService, platformUtilsService, logService);\n  }\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.folderId) {\n        this.folderId = params.folderId;\n      }\n      await this.init();\n    });\n  }\n\n  async submit(): Promise<boolean> {\n    if (await super.submit()) {\n      this.router.navigate([\"/folders\"]);\n      return true;\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await super.delete();\n    if (confirmed) {\n      this.router.navigate([\"/folders\"]);\n    }\n    return confirmed;\n  }\n}\n","export enum ThemeType {\n  System = \"system\",\n  Light = \"light\",\n  Dark = \"dark\",\n  Nord = \"nord\",\n  SolarizedDark = \"solarizedDark\",\n}\n","export enum UriMatchType {\n  Domain = 0,\n  Host = 1,\n  StartsWith = 2,\n  Exact = 3,\n  RegularExpression = 4,\n  Never = 5,\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" routerLink=\"/tabs/settings\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"folders\" | i18n }}</span>\n  </h1>\n  <div class=\"right\">\n    <button type=\"button\" (click)=\"addFolder()\" appA11yTitle=\"{{ 'addFolder' | i18n }}\">\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"box list full-list\" *ngIf=\"(folders$ | async)?.length\">\n    <div class=\"box-content\">\n      <button\n        type=\"button\"\n        appStopClick\n        (click)=\"folderSelected(f)\"\n        class=\"box-content-row padded\"\n        *ngFor=\"let f of folders$ | async\"\n      >\n        {{ f.name }}\n      </button>\n    </div>\n  </div>\n  <div class=\"no-items\" *ngIf=\"!(folders$ | async)?.length\">\n    <p>{{ \"noFolders\" | i18n }}</p>\n  </div>\n</main>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { map, Observable } from \"rxjs\";\n\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\n@Component({\n  selector: \"app-folders\",\n  templateUrl: \"folders.component.html\",\n})\nexport class FoldersComponent {\n  folders$: Observable<FolderView[]>;\n\n  constructor(private folderService: FolderService, private router: Router) {\n    this.folders$ = this.folderService.folderViews$.pipe(\n      map((folders) => {\n        if (folders.length > 0) {\n          folders = folders.slice(0, folders.length - 1);\n        }\n\n        return folders;\n      })\n    );\n  }\n\n  folderSelected(folder: FolderView) {\n    this.router.navigate([\"/edit-folder\"], { queryParams: { folderId: folder.id } });\n  }\n\n  addFolder() {\n    this.router.navigate([\"/add-folder\"]);\n  }\n}\n","export abstract class TotpService {\n  getCode: (key: string) => Promise<string>;\n  getTimeInterval: (key: string) => number;\n}\n","import { Observable } from \"rxjs\";\n\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { Theme } from \"./theme\";\n\nexport abstract class AbstractThemingService {\n  theme$: Observable<Theme>;\n  monitorThemeChanges: () => Promise<void>;\n  updateSystemTheme: (systemTheme: ThemeType) => void;\n  updateConfiguredTheme: (theme: ThemeType) => Promise<void>;\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" routerLink=\"/tabs/settings\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"options\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"box\">\n    <h2>\n      <button\n        type=\"button\"\n        class=\"box-header-expandable\"\n        (click)=\"showGeneral = !showGeneral\"\n        [attr.aria-expanded]=\"showGeneral\"\n      >\n        General\n        <i *ngIf=\"!showGeneral\" class=\"bwi bwi-angle-down bwi-sm icon\" aria-hidden=\"true\"></i>\n        <i *ngIf=\"showGeneral\" class=\"bwi bwi-chevron-up bwi-sm icon\" aria-hidden=\"true\"></i>\n      </button>\n    </h2>\n  </div>\n  <ng-container *ngIf=\"showGeneral\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"defaultUriMatch\">{{ \"defaultUriMatchDetection\" | i18n }}</label>\n          <select\n            id=\"defaultUriMatch\"\n            name=\"DefaultUriMatch\"\n            [(ngModel)]=\"defaultUriMatch\"\n            (change)=\"saveDefaultUriMatch()\"\n          >\n            <option *ngFor=\"let o of uriMatchOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"defaultUriMatchDetectionDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\" *ngIf=\"showClearClipboard\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"clearClipboard\">{{ \"clearClipboard\" | i18n }}</label>\n          <select\n            id=\"clearClipboard\"\n            name=\"ClearClipboard\"\n            [(ngModel)]=\"clearClipboard\"\n            (change)=\"saveClearClipboard()\"\n          >\n            <option *ngFor=\"let o of clearClipboardOptions\" [ngValue]=\"o.value\">\n              {{ o.name }}\n            </option>\n          </select>\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"clearClipboardDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"totp\">{{ \"enableAutoTotpCopy\" | i18n }}</label>\n          <input\n            id=\"totp\"\n            type=\"checkbox\"\n            (change)=\"updateAutoTotpCopy()\"\n            [(ngModel)]=\"enableAutoTotpCopy\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"disableAutoTotpCopyDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"addlogin-notification-bar\">{{ \"enableAddLoginNotification\" | i18n }}</label>\n          <input\n            id=\"addlogin-notification-bar\"\n            type=\"checkbox\"\n            (change)=\"updateAddLoginNotification()\"\n            [(ngModel)]=\"enableAddLoginNotification\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"addLoginNotificationDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"changedpass-notification-bar\">{{\n            \"enableChangedPasswordNotification\" | i18n\n          }}</label>\n          <input\n            id=\"changedpass-notification-bar\"\n            type=\"checkbox\"\n            (change)=\"updateChangedPasswordNotification()\"\n            [(ngModel)]=\"enableChangedPasswordNotification\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"changedPasswordNotificationDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"context-menu\">{{ \"enableContextMenuItem\" | i18n }}</label>\n          <input\n            id=\"context-menu\"\n            type=\"checkbox\"\n            (change)=\"updateContextMenuItem()\"\n            [(ngModel)]=\"enableContextMenuItem\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"contextMenuItemDesc\" | i18n }}</div>\n    </div>\n  </ng-container>\n  <div class=\"box box-section-divider\">\n    <h2>\n      <button\n        type=\"button\"\n        class=\"box-header-expandable\"\n        (click)=\"showDisplay = !showDisplay\"\n        [attr.aria-expanded]=\"showDisplay\"\n      >\n        Display\n        <i *ngIf=\"!showDisplay\" class=\"bwi bwi-angle-down bwi-sm icon\" aria-hidden=\"true\"></i>\n        <i *ngIf=\"showDisplay\" class=\"bwi bwi-chevron-up bwi-sm icon\" aria-hidden=\"true\"></i>\n      </button>\n    </h2>\n  </div>\n  <ng-container *ngIf=\"showDisplay\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"showCardsCurrentTab\">{{ \"showCardsCurrentTab\" | i18n }}</label>\n          <input\n            id=\"showCardsCurrentTab\"\n            type=\"checkbox\"\n            (change)=\"updateShowCardsCurrentTab()\"\n            [(ngModel)]=\"showCardsCurrentTab\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"showCardsCurrentTabDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"showIdentitiesCurrentTab\">{{ \"showIdentitiesCurrentTab\" | i18n }}</label>\n          <input\n            id=\"showIdentitiesCurrentTab\"\n            type=\"checkbox\"\n            (change)=\"updateShowIdentitiesCurrentTab()\"\n            [(ngModel)]=\"showIdentitiesCurrentTab\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"showIdentitiesCurrentTabDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"favicon\">{{ \"enableFavicon\" | i18n }}</label>\n          <input\n            id=\"favicon\"\n            type=\"checkbox\"\n            (change)=\"updateFavicon()\"\n            [(ngModel)]=\"enableFavicon\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"faviconDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"badge\">{{ \"enableBadgeCounter\" | i18n }}</label>\n          <input\n            id=\"badge\"\n            type=\"checkbox\"\n            (change)=\"updateBadgeCounter()\"\n            [(ngModel)]=\"enableBadgeCounter\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"badgeCounterDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"theme\">{{ \"theme\" | i18n }}</label>\n          <select id=\"theme\" name=\"Theme\" [(ngModel)]=\"theme\" (change)=\"saveTheme()\">\n            <option *ngFor=\"let o of themeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"themeDesc\" | i18n }}</div>\n    </div>\n  </ng-container>\n  <div class=\"box box-section-divider\">\n    <h2>\n      <button\n        type=\"button\"\n        class=\"box-header-expandable\"\n        (click)=\"showAutofill = !showAutofill\"\n        [attr.aria-expanded]=\"showAutofill\"\n      >\n        Autofill\n        <i *ngIf=\"!showAutofill\" class=\"bwi bwi-angle-down bwi-sm icon\" aria-hidden=\"true\"></i>\n        <i *ngIf=\"showAutofill\" class=\"bwi bwi-chevron-up bwi-sm icon\" aria-hidden=\"true\"></i>\n      </button>\n    </h2>\n  </div>\n  <ng-container *ngIf=\"showAutofill\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"autofill\">{{ \"enableAutoFillOnPageLoad\" | i18n }}</label>\n          <input\n            id=\"autofill\"\n            type=\"checkbox\"\n            (change)=\"updateAutoFillOnPageLoad()\"\n            [(ngModel)]=\"enableAutoFillOnPageLoad\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"enableAutoFillOnPageLoadDesc\" | i18n }}\n        <b>{{ \"warning\" | i18n }}</b\n        >: {{ \"experimentalFeature\" | i18n }}\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"defaultAutofill\">{{ \"defaultAutoFillOnPageLoad\" | i18n }}</label>\n          <select\n            id=\"defaultAutofill\"\n            name=\"DefaultAutofill\"\n            [(ngModel)]=\"autoFillOnPageLoadDefault\"\n            (change)=\"updateAutoFillOnPageLoadDefault()\"\n            [disabled]=\"!enableAutoFillOnPageLoad\"\n          >\n            <option *ngFor=\"let o of autoFillOnPageLoadOptions\" [ngValue]=\"o.value\">\n              {{ o.name }}\n            </option>\n          </select>\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"defaultAutoFillOnPageLoadDesc\" | i18n }}</div>\n    </div>\n  </ng-container>\n</main>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\nimport { UriMatchType } from \"@bitwarden/common/enums/uriMatchType\";\n\n@Component({\n  selector: \"app-options\",\n  templateUrl: \"options.component.html\",\n})\nexport class OptionsComponent implements OnInit {\n  enableFavicon = false;\n  enableBadgeCounter = false;\n  enableAutoFillOnPageLoad = false;\n  autoFillOnPageLoadDefault = false;\n  autoFillOnPageLoadOptions: any[];\n  enableAutoTotpCopy = false; // TODO: Does it matter if this is set to false or true?\n  enableContextMenuItem = false;\n  enableAddLoginNotification = false;\n  enableChangedPasswordNotification = false;\n  showCardsCurrentTab = false;\n  showIdentitiesCurrentTab = false;\n  showClearClipboard = true;\n  theme: ThemeType;\n  themeOptions: any[];\n  defaultUriMatch = UriMatchType.Domain;\n  uriMatchOptions: any[];\n  clearClipboard: number;\n  clearClipboardOptions: any[];\n  showGeneral = true;\n  showAutofill = true;\n  showDisplay = true;\n\n  constructor(\n    private messagingService: MessagingService,\n    private stateService: StateService,\n    private totpService: TotpService,\n    i18nService: I18nService,\n    private themingService: AbstractThemingService\n  ) {\n    this.themeOptions = [\n      { name: i18nService.t(\"default\"), value: ThemeType.System },\n      { name: i18nService.t(\"light\"), value: ThemeType.Light },\n      { name: i18nService.t(\"dark\"), value: ThemeType.Dark },\n      { name: \"Nord\", value: ThemeType.Nord },\n      { name: i18nService.t(\"solarizedDark\"), value: ThemeType.SolarizedDark },\n    ];\n    this.uriMatchOptions = [\n      { name: i18nService.t(\"baseDomain\"), value: UriMatchType.Domain },\n      { name: i18nService.t(\"host\"), value: UriMatchType.Host },\n      { name: i18nService.t(\"startsWith\"), value: UriMatchType.StartsWith },\n      { name: i18nService.t(\"regEx\"), value: UriMatchType.RegularExpression },\n      { name: i18nService.t(\"exact\"), value: UriMatchType.Exact },\n      { name: i18nService.t(\"never\"), value: UriMatchType.Never },\n    ];\n    this.clearClipboardOptions = [\n      { name: i18nService.t(\"never\"), value: null },\n      { name: i18nService.t(\"tenSeconds\"), value: 10 },\n      { name: i18nService.t(\"twentySeconds\"), value: 20 },\n      { name: i18nService.t(\"thirtySeconds\"), value: 30 },\n      { name: i18nService.t(\"oneMinute\"), value: 60 },\n      { name: i18nService.t(\"twoMinutes\"), value: 120 },\n      { name: i18nService.t(\"fiveMinutes\"), value: 300 },\n    ];\n    this.autoFillOnPageLoadOptions = [\n      { name: i18nService.t(\"autoFillOnPageLoadYes\"), value: true },\n      { name: i18nService.t(\"autoFillOnPageLoadNo\"), value: false },\n    ];\n  }\n\n  async ngOnInit() {\n    this.enableAutoFillOnPageLoad = await this.stateService.getEnableAutoFillOnPageLoad();\n\n    this.autoFillOnPageLoadDefault =\n      (await this.stateService.getAutoFillOnPageLoadDefault()) ?? true;\n\n    this.enableAddLoginNotification = !(await this.stateService.getDisableAddLoginNotification());\n\n    this.enableChangedPasswordNotification =\n      !(await this.stateService.getDisableChangedPasswordNotification());\n\n    this.enableContextMenuItem = !(await this.stateService.getDisableContextMenuItem());\n\n    this.showCardsCurrentTab = !(await this.stateService.getDontShowCardsCurrentTab());\n    this.showIdentitiesCurrentTab = !(await this.stateService.getDontShowIdentitiesCurrentTab());\n\n    this.enableAutoTotpCopy = !(await this.stateService.getDisableAutoTotpCopy());\n\n    this.enableFavicon = !(await this.stateService.getDisableFavicon());\n\n    this.enableBadgeCounter = !(await this.stateService.getDisableBadgeCounter());\n\n    this.theme = await this.stateService.getTheme();\n\n    const defaultUriMatch = await this.stateService.getDefaultUriMatch();\n    this.defaultUriMatch = defaultUriMatch == null ? UriMatchType.Domain : defaultUriMatch;\n\n    this.clearClipboard = await this.stateService.getClearClipboard();\n  }\n\n  async updateAddLoginNotification() {\n    await this.stateService.setDisableAddLoginNotification(!this.enableAddLoginNotification);\n  }\n\n  async updateChangedPasswordNotification() {\n    await this.stateService.setDisableChangedPasswordNotification(\n      !this.enableChangedPasswordNotification\n    );\n  }\n\n  async updateContextMenuItem() {\n    await this.stateService.setDisableContextMenuItem(!this.enableContextMenuItem);\n    this.messagingService.send(\"bgUpdateContextMenu\");\n  }\n\n  async updateAutoTotpCopy() {\n    await this.stateService.setDisableAutoTotpCopy(!this.enableAutoTotpCopy);\n  }\n\n  async updateAutoFillOnPageLoad() {\n    await this.stateService.setEnableAutoFillOnPageLoad(this.enableAutoFillOnPageLoad);\n  }\n\n  async updateAutoFillOnPageLoadDefault() {\n    await this.stateService.setAutoFillOnPageLoadDefault(this.autoFillOnPageLoadDefault);\n  }\n\n  async updateFavicon() {\n    await this.stateService.setDisableFavicon(!this.enableFavicon);\n  }\n\n  async updateBadgeCounter() {\n    await this.stateService.setDisableBadgeCounter(!this.enableBadgeCounter);\n    this.messagingService.send(\"bgUpdateContextMenu\");\n  }\n\n  async updateShowCardsCurrentTab() {\n    await this.stateService.setDontShowCardsCurrentTab(!this.showCardsCurrentTab);\n  }\n\n  async updateShowIdentitiesCurrentTab() {\n    await this.stateService.setDontShowIdentitiesCurrentTab(!this.showIdentitiesCurrentTab);\n  }\n\n  async saveTheme() {\n    await this.themingService.updateConfiguredTheme(this.theme);\n  }\n\n  async saveDefaultUriMatch() {\n    await this.stateService.setDefaultUriMatch(this.defaultUriMatch);\n  }\n\n  async saveClearClipboard() {\n    await this.stateService.setClearClipboard(this.clearClipboard);\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Directive()\nexport class PremiumComponent implements OnInit {\n  isPremium = false;\n  price = 10;\n  refreshPromise: Promise<any>;\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    private logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.isPremium = await this.stateService.getCanAccessPremium();\n  }\n\n  async refresh() {\n    try {\n      this.refreshPromise = this.apiService.refreshIdentityToken();\n      await this.refreshPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"refreshComplete\"));\n      this.isPremium = await this.stateService.getCanAccessPremium();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async purchase() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"premiumPurchaseAlert\"),\n      this.i18nService.t(\"premiumPurchase\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.platformUtilsService.launchUri(\"https://vault.bitwarden.com/#/?premium=purchase\");\n    }\n  }\n\n  async manage() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"premiumManageAlert\"),\n      this.i18nService.t(\"premiumManage\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.platformUtilsService.launchUri(\"https://vault.bitwarden.com/#/?premium=manage\");\n    }\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" (click)=\"goBack()\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"premiumMembership\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"content\">\n    <ng-container *ngIf=\"!isPremium\">\n      <p class=\"text-center lead\">{{ \"premiumNotCurrentMember\" | i18n }}</p>\n      <p>{{ \"premiumSignUpAndGet\" | i18n }}</p>\n      <ul class=\"bwi-ul\">\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpStorage\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpTwoStep\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpReports\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpTotp\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpSupport\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpFuture\" | i18n }}\n        </li>\n      </ul>\n      <p class=\"text-center lead\">{{ priceString }}</p>\n      <button type=\"button\" class=\"btn primary block\" (click)=\"purchase()\">\n        <b>{{ \"premiumPurchase\" | i18n }}</b>\n      </button>\n      <button\n        #refreshBtn\n        type=\"button\"\n        (click)=\"refresh()\"\n        [disabled]=\"refreshBtn.loading\"\n        [appApiAction]=\"refreshPromise\"\n        class=\"btn link block\"\n      >\n        <span [hidden]=\"refreshBtn.loading\">{{ \"premiumRefresh\" | i18n }}</span>\n        <i\n          class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n          [hidden]=\"!refreshBtn.loading\"\n          aria-hidden=\"true\"\n        ></i>\n      </button>\n    </ng-container>\n    <ng-container *ngIf=\"isPremium\">\n      <p class=\"text-center lead\">{{ \"premiumCurrentMember\" | i18n }}</p>\n      <p class=\"text-center\">{{ \"premiumCurrentMemberThanks\" | i18n }}</p>\n      <button type=\"button\" class=\"btn block primary\" (click)=\"manage()\">\n        <b>{{ \"premiumManage\" | i18n }}</b>\n      </button>\n    </ng-container>\n  </div>\n</main>\n","import { CurrencyPipe, Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\n\nimport { PremiumComponent as BasePremiumComponent } from \"@bitwarden/angular/components/premium.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-premium\",\n  templateUrl: \"premium.component.html\",\n})\nexport class PremiumComponent extends BasePremiumComponent {\n  priceString: string;\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    stateService: StateService,\n    logService: LogService,\n    private location: Location,\n    private currencyPipe: CurrencyPipe\n  ) {\n    super(i18nService, platformUtilsService, apiService, logService, stateService);\n\n    // Support old price string. Can be removed in future once all translations are properly updated.\n    const thePrice = this.currencyPipe.transform(this.price, \"$\");\n    this.priceString = i18nService.t(\"premiumPrice\", thePrice);\n    if (this.priceString.indexOf(\"%price%\") > -1) {\n      this.priceString = this.priceString.replace(\"%price%\", thePrice);\n    }\n  }\n\n  goBack() {\n    this.location.back();\n  }\n}\n","import { Observable, Subject } from \"rxjs\";\nimport { first } from \"rxjs/operators\";\n\nexport class ModalRef {\n  onCreated: Observable<HTMLElement>; // Modal added to the DOM.\n  onClose: Observable<any>; // Initiated close.\n  onClosed: Observable<any>; // Modal was closed (Remove element from DOM)\n  onShow: Observable<void>; // Start showing modal\n  onShown: Observable<void>; // Modal is fully visible\n\n  private readonly _onCreated = new Subject<HTMLElement>();\n  private readonly _onClose = new Subject<any>();\n  private readonly _onClosed = new Subject<any>();\n  private readonly _onShow = new Subject<void>();\n  private readonly _onShown = new Subject<void>();\n  private lastResult: any;\n\n  constructor() {\n    this.onCreated = this._onCreated.asObservable();\n    this.onClose = this._onClose.asObservable();\n    this.onClosed = this._onClosed.asObservable();\n    this.onShow = this._onShow.asObservable();\n    this.onShown = this._onShow.asObservable();\n  }\n\n  show() {\n    this._onShow.next();\n  }\n\n  shown() {\n    this._onShown.next();\n  }\n\n  close(result?: any) {\n    this.lastResult = result;\n    this._onClose.next(result);\n  }\n\n  closed() {\n    this._onClosed.next(this.lastResult);\n  }\n\n  created(el: HTMLElement) {\n    this._onCreated.next(el);\n  }\n\n  onClosedPromise(): Promise<any> {\n    return this.onClosed.pipe(first()).toPromise();\n  }\n}\n","import { ConfigurableFocusTrap, ConfigurableFocusTrapFactory } from \"@angular/cdk/a11y\";\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  ElementRef,\n  OnDestroy,\n  Type,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\n\nimport { ModalService } from \"../../services/modal.service\";\n\nimport { ModalRef } from \"./modal.ref\";\n\n@Component({\n  selector: \"app-modal\",\n  template: \"<ng-template #modalContent></ng-template>\",\n})\nexport class DynamicModalComponent implements AfterViewInit, OnDestroy {\n  componentRef: ComponentRef<any>;\n\n  @ViewChild(\"modalContent\", { read: ViewContainerRef, static: true })\n  modalContentRef: ViewContainerRef;\n\n  childComponentType: Type<any>;\n  setComponentParameters: (component: any) => void;\n\n  private focusTrap: ConfigurableFocusTrap;\n\n  constructor(\n    private modalService: ModalService,\n    private cd: ChangeDetectorRef,\n    private el: ElementRef<HTMLElement>,\n    private focusTrapFactory: ConfigurableFocusTrapFactory,\n    public modalRef: ModalRef\n  ) {}\n\n  ngAfterViewInit() {\n    this.loadChildComponent(this.childComponentType);\n    if (this.setComponentParameters != null) {\n      this.setComponentParameters(this.componentRef.instance);\n    }\n    this.cd.detectChanges();\n\n    this.modalRef.created(this.el.nativeElement);\n    this.focusTrap = this.focusTrapFactory.create(\n      this.el.nativeElement.querySelector(\".modal-dialog\")\n    );\n    if (this.el.nativeElement.querySelector(\"[appAutoFocus]\") == null) {\n      this.focusTrap.focusFirstTabbableElementWhenReady();\n    }\n  }\n\n  loadChildComponent(componentType: Type<any>) {\n    const componentFactory = this.modalService.resolveComponentFactory(componentType);\n\n    this.modalContentRef.clear();\n    this.componentRef = this.modalContentRef.createComponent(componentFactory);\n  }\n\n  ngOnDestroy() {\n    if (this.componentRef) {\n      this.componentRef.destroy();\n    }\n    this.focusTrap.destroy();\n  }\n\n  close() {\n    this.modalRef.close();\n  }\n\n  getFocus() {\n    const autoFocusEl = this.el.nativeElement.querySelector(\"[appAutoFocus]\") as HTMLElement;\n    autoFocusEl?.focus();\n  }\n}\n","import { InjectFlags, InjectionToken, Injector, Type } from \"@angular/core\";\n\nexport class ModalInjector implements Injector {\n  constructor(private _parentInjector: Injector, private _additionalTokens: WeakMap<any, any>) {}\n\n  get<T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags): T;\n  get(token: any, notFoundValue?: any, flags?: any) {\n    return this._additionalTokens.get(token) ?? this._parentInjector.get<any>(token, notFoundValue);\n  }\n}\n","export enum DeviceType {\n  Android = 0,\n  iOS = 1,\n  ChromeExtension = 2,\n  FirefoxExtension = 3,\n  OperaExtension = 4,\n  EdgeExtension = 5,\n  WindowsDesktop = 6,\n  MacOsDesktop = 7,\n  LinuxDesktop = 8,\n  ChromeBrowser = 9,\n  FirefoxBrowser = 10,\n  OperaBrowser = 11,\n  EdgeBrowser = 12,\n  IEBrowser = 13,\n  UnknownBrowser = 14,\n  AndroidAmazon = 15,\n  UWP = 16,\n  SafariBrowser = 17,\n  VivaldiBrowser = 18,\n  VivaldiExtension = 19,\n  SafariExtension = 20,\n}\n","import {\n  ApplicationRef,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n  Injectable,\n  Injector,\n  Type,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { first } from \"rxjs/operators\";\n\nimport { DynamicModalComponent } from \"../components/modal/dynamic-modal.component\";\nimport { ModalInjector } from \"../components/modal/modal-injector\";\nimport { ModalRef } from \"../components/modal/modal.ref\";\n\nexport class ModalConfig<D = any> {\n  data?: D;\n  allowMultipleModals?: boolean;\n  replaceTopModal?: boolean;\n}\n\n@Injectable()\nexport class ModalService {\n  protected modalList: ComponentRef<DynamicModalComponent>[] = [];\n\n  // Lazy loaded modules are not available in componentFactoryResolver,\n  // therefore modules needs to manually initialize their resolvers.\n  private factoryResolvers: Map<Type<any>, ComponentFactoryResolver> = new Map();\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private applicationRef: ApplicationRef,\n    private injector: Injector\n  ) {\n    document.addEventListener(\"keyup\", (event) => {\n      if (event.key === \"Escape\" && this.modalCount > 0) {\n        this.topModal.instance.close();\n      }\n    });\n  }\n\n  get modalCount() {\n    return this.modalList.length;\n  }\n\n  private get topModal() {\n    return this.modalList[this.modalCount - 1];\n  }\n\n  async openViewRef<T>(\n    componentType: Type<T>,\n    viewContainerRef: ViewContainerRef,\n    setComponentParameters: (component: T) => void = null\n  ): Promise<[ModalRef, T]> {\n    const [modalRef, modalComponentRef] = this.openInternal(componentType, null, false);\n    modalComponentRef.instance.setComponentParameters = setComponentParameters;\n\n    viewContainerRef.insert(modalComponentRef.hostView);\n\n    await modalRef.onCreated.pipe(first()).toPromise();\n\n    return [modalRef, modalComponentRef.instance.componentRef.instance];\n  }\n\n  open(componentType: Type<any>, config: ModalConfig = {}) {\n    const { replaceTopModal = false, allowMultipleModals = false } = config;\n\n    if (this.modalCount > 0 && replaceTopModal) {\n      this.topModal.instance.close();\n    }\n\n    if (this.modalCount > 0 && !allowMultipleModals) {\n      return;\n    }\n\n    const [modalRef] = this.openInternal(componentType, config, true);\n\n    return modalRef;\n  }\n\n  registerComponentFactoryResolver<T>(\n    componentType: Type<T>,\n    componentFactoryResolver: ComponentFactoryResolver\n  ): void {\n    this.factoryResolvers.set(componentType, componentFactoryResolver);\n  }\n\n  resolveComponentFactory<T>(componentType: Type<T>): ComponentFactory<T> {\n    if (this.factoryResolvers.has(componentType)) {\n      return this.factoryResolvers.get(componentType).resolveComponentFactory(componentType);\n    }\n\n    return this.componentFactoryResolver.resolveComponentFactory(componentType);\n  }\n\n  closeAll(): void {\n    this.modalList.forEach((modal) => modal.instance.close());\n  }\n\n  protected openInternal(\n    componentType: Type<any>,\n    config?: ModalConfig,\n    attachToDom?: boolean\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const [modalRef, componentRef] = this.createModalComponent(config);\n    componentRef.instance.childComponentType = componentType;\n\n    if (attachToDom) {\n      this.applicationRef.attachView(componentRef.hostView);\n      const domElem = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n      document.body.appendChild(domElem);\n    }\n\n    modalRef.onClosed.pipe(first()).subscribe(() => {\n      if (attachToDom) {\n        this.applicationRef.detachView(componentRef.hostView);\n      }\n      componentRef.destroy();\n\n      this.modalList.pop();\n      if (this.modalCount > 0) {\n        this.topModal.instance.getFocus();\n      }\n    });\n\n    this.setupHandlers(modalRef);\n\n    this.modalList.push(componentRef);\n\n    return [modalRef, componentRef];\n  }\n\n  protected setupHandlers(modalRef: ModalRef) {\n    let backdrop: HTMLElement = null;\n\n    // Add backdrop, setup [data-dismiss] handler.\n    modalRef.onCreated.pipe(first()).subscribe((el) => {\n      document.body.classList.add(\"modal-open\");\n\n      const modalEl: HTMLElement = el.querySelector(\".modal\");\n      const dialogEl = modalEl.querySelector(\".modal-dialog\") as HTMLElement;\n\n      backdrop = document.createElement(\"div\");\n      backdrop.className = \"modal-backdrop fade\";\n      backdrop.style.zIndex = `${this.modalCount}040`;\n      modalEl.prepend(backdrop);\n\n      dialogEl.addEventListener(\"click\", (e: Event) => {\n        e.stopPropagation();\n      });\n      dialogEl.style.zIndex = `${this.modalCount}050`;\n\n      const modals = Array.from(\n        el.querySelectorAll('.modal-backdrop, .modal *[data-dismiss=\"modal\"]')\n      );\n      for (const closeElement of modals) {\n        closeElement.addEventListener(\"click\", () => {\n          modalRef.close();\n        });\n      }\n    });\n\n    // onClose is used in Web to hook into bootstrap. On other projects we pipe it directly to closed.\n    modalRef.onClose.pipe(first()).subscribe(() => {\n      modalRef.closed();\n\n      if (this.modalCount === 0) {\n        document.body.classList.remove(\"modal-open\");\n      }\n    });\n  }\n\n  protected createModalComponent(\n    config: ModalConfig\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const modalRef = new ModalRef();\n\n    const map = new WeakMap();\n    map.set(ModalConfig, config);\n    map.set(ModalRef, modalRef);\n\n    const componentFactory =\n      this.componentFactoryResolver.resolveComponentFactory(DynamicModalComponent);\n    const componentRef = componentFactory.create(new ModalInjector(this.injector, map));\n\n    return [modalRef, componentRef];\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nimport { ModalRef } from \"./modal/modal.ref\";\n\n@Directive()\nexport class SetPinComponent implements OnInit {\n  pin = \"\";\n  showPin = false;\n  masterPassOnRestart = true;\n  showMasterPassOnRestart = true;\n\n  constructor(\n    private modalRef: ModalRef,\n    private cryptoService: CryptoService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.showMasterPassOnRestart = this.masterPassOnRestart =\n      !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n\n  toggleVisibility() {\n    this.showPin = !this.showPin;\n  }\n\n  async submit() {\n    if (Utils.isNullOrWhitespace(this.pin)) {\n      this.modalRef.close(false);\n    }\n\n    const kdf = await this.stateService.getKdfType();\n    const kdfIterations = await this.stateService.getKdfIterations();\n    const email = await this.stateService.getEmail();\n    const pinKey = await this.cryptoService.makePinKey(this.pin, email, kdf, kdfIterations);\n    const key = await this.cryptoService.getKey();\n    const pinProtectedKey = await this.cryptoService.encrypt(key.key, pinKey);\n    if (this.masterPassOnRestart) {\n      const encPin = await this.cryptoService.encrypt(this.pin);\n      await this.stateService.setProtectedPin(encPin.encryptedString);\n      await this.stateService.setDecryptedPinProtected(pinProtectedKey);\n    } else {\n      await this.stateService.setEncryptedPinProtected(pinProtectedKey.encryptedString);\n    }\n\n    this.modalRef.close(true);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\">\n      <div class=\"modal-body\">\n        <div>\n          {{ \"setYourPinCode\" | i18n }}\n        </div>\n        <div class=\"box\">\n          <div class=\"box-content\">\n            <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n              <div class=\"row-main\">\n                <label for=\"pin\">{{ \"pin\" | i18n }}</label>\n                <input\n                  id=\"pin\"\n                  type=\"{{ showPin ? 'text' : 'password' }}\"\n                  name=\"Pin\"\n                  class=\"monospaced\"\n                  [(ngModel)]=\"pin\"\n                  required\n                  appInputVerbatim\n                />\n              </div>\n              <div class=\"action-buttons\">\n                <button\n                  type=\"button\"\n                  class=\"row-btn\"\n                  appStopClick\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"toggleVisibility()\"\n                  [attr.aria-pressed]=\"showPin\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPin, 'bwi-eye-slash': showPin }\"\n                  ></i>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"checkbox\" *ngIf=\"showMasterPassOnRestart\">\n          <label for=\"masterPasswordOnRestart\">\n            <input\n              type=\"checkbox\"\n              id=\"masterPasswordOnRestart\"\n              name=\"MasterPasswordOnRestart\"\n              [(ngModel)]=\"masterPassOnRestart\"\n            />\n            <span>{{ \"lockWithMasterPassOnRestart\" | i18n }}</span>\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\">\n          <span>{{ \"ok\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { SetPinComponent as BaseSetPinComponent } from \"@bitwarden/angular/components/set-pin.component\";\n\n@Component({\n  templateUrl: \"set-pin.component.html\",\n})\nexport class SetPinComponent extends BaseSetPinComponent {}\n","import { Directive, Input, OnInit } from \"@angular/core\";\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  UntypedFormBuilder,\n  ValidationErrors,\n  Validator,\n} from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\n\n@Directive()\nexport class VaultTimeoutInputComponent implements ControlValueAccessor, Validator, OnInit {\n  get showCustom() {\n    return this.form.get(\"vaultTimeout\").value === VaultTimeoutInputComponent.CUSTOM_VALUE;\n  }\n\n  get exceedsMinimumTimout(): boolean {\n    return (\n      !this.showCustom || this.customTimeInMinutes() > VaultTimeoutInputComponent.MIN_CUSTOM_MINUTES\n    );\n  }\n\n  static CUSTOM_VALUE = -100;\n  static MIN_CUSTOM_MINUTES = 0;\n\n  form = this.formBuilder.group({\n    vaultTimeout: [null],\n    custom: this.formBuilder.group({\n      hours: [null],\n      minutes: [null],\n    }),\n  });\n\n  @Input() vaultTimeouts: { name: string; value: number }[];\n  vaultTimeoutPolicy: Policy;\n  vaultTimeoutPolicyHours: number;\n  vaultTimeoutPolicyMinutes: number;\n\n  private onChange: (vaultTimeout: number) => void;\n  private validatorChange: () => void;\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    private policyService: PolicyService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit() {\n    if (await this.policyService.policyAppliesToUser(PolicyType.MaximumVaultTimeout)) {\n      const vaultTimeoutPolicy = await this.policyService.getAll(PolicyType.MaximumVaultTimeout);\n\n      this.vaultTimeoutPolicy = vaultTimeoutPolicy[0];\n      this.vaultTimeoutPolicyHours = Math.floor(this.vaultTimeoutPolicy.data.minutes / 60);\n      this.vaultTimeoutPolicyMinutes = this.vaultTimeoutPolicy.data.minutes % 60;\n\n      this.vaultTimeouts = this.vaultTimeouts.filter(\n        (t) =>\n          t.value <= this.vaultTimeoutPolicy.data.minutes &&\n          (t.value > 0 || t.value === VaultTimeoutInputComponent.CUSTOM_VALUE) &&\n          t.value != null\n      );\n      this.validatorChange();\n    }\n\n    this.form.valueChanges.subscribe(async (value) => {\n      this.onChange(this.getVaultTimeout(value));\n    });\n\n    // Assign the previous value to the custom fields\n    this.form.get(\"vaultTimeout\").valueChanges.subscribe((value) => {\n      if (value !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n        return;\n      }\n\n      const current = Math.max(this.form.value.vaultTimeout, 0);\n      this.form.patchValue({\n        custom: {\n          hours: Math.floor(current / 60),\n          minutes: current % 60,\n        },\n      });\n    });\n  }\n\n  ngOnChanges() {\n    this.vaultTimeouts.push({\n      name: this.i18nService.t(\"custom\"),\n      value: VaultTimeoutInputComponent.CUSTOM_VALUE,\n    });\n  }\n\n  getVaultTimeout(value: any) {\n    if (value.vaultTimeout !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n      return value.vaultTimeout;\n    }\n\n    return value.custom.hours * 60 + value.custom.minutes;\n  }\n\n  writeValue(value: number): void {\n    if (value == null) {\n      return;\n    }\n\n    if (this.vaultTimeouts.every((p) => p.value !== value)) {\n      this.form.setValue({\n        vaultTimeout: VaultTimeoutInputComponent.CUSTOM_VALUE,\n        custom: {\n          hours: Math.floor(value / 60),\n          minutes: value % 60,\n        },\n      });\n      return;\n    }\n\n    this.form.patchValue({\n      vaultTimeout: value,\n    });\n  }\n\n  registerOnChange(onChange: any): void {\n    this.onChange = onChange;\n  }\n\n  registerOnTouched(onTouched: any): void {\n    // Empty\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    // Empty\n  }\n\n  validate(control: AbstractControl): ValidationErrors {\n    if (this.vaultTimeoutPolicy && this.vaultTimeoutPolicy?.data?.minutes < control.value) {\n      return { policyError: true };\n    }\n\n    if (!this.exceedsMinimumTimout) {\n      return { minTimeoutError: true };\n    }\n\n    return null;\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.validatorChange = fn;\n  }\n\n  private customTimeInMinutes() {\n    return this.form.get(\"custom.hours\")?.value * 60 + this.form.get(\"custom.minutes\")?.value;\n  }\n}\n","<app-callout type=\"info\" *ngIf=\"vaultTimeoutPolicy\">\n  {{ \"vaultTimeoutPolicyInEffect\" | i18n: vaultTimeoutPolicyHours:vaultTimeoutPolicyMinutes }}\n</app-callout>\n\n<div [formGroup]=\"form\">\n  <div class=\"box-content-row last display-block\" appBoxRow>\n    <label for=\"vaultTimeout\">{{ \"vaultTimeout\" | i18n }}</label>\n    <select\n      id=\"vaultTimeout\"\n      name=\"VaultTimeout\"\n      formControlName=\"vaultTimeout\"\n      class=\"form-control\"\n    >\n      <option *ngFor=\"let o of vaultTimeouts\" [ngValue]=\"o.value\">{{ o.name }}</option>\n    </select>\n  </div>\n  <div class=\"box-content-row last\" *ngIf=\"showCustom\">\n    <div formGroupName=\"custom\" class=\"row\">\n      <div class=\"col\">\n        <div class=\"display-block\" appBoxRow>\n          <label for=\"customVaultTimeout\">{{ \"hours\" | i18n }}</label>\n          <input\n            id=\"hours\"\n            class=\"form-control\"\n            type=\"number\"\n            min=\"0\"\n            name=\"hours\"\n            formControlName=\"hours\"\n          />\n        </div>\n      </div>\n      <div class=\"col\">\n        <div class=\"display-block\" appBoxRow>\n          <label for=\"customVaultTimeout\">{{ \"minutes\" | i18n }}</label>\n          <input\n            id=\"minutes\"\n            class=\"form-control\"\n            type=\"number\"\n            min=\"0\"\n            max=\"59\"\n            name=\"minutes\"\n            formControlName=\"minutes\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { VaultTimeoutInputComponent as VaultTimeoutInputComponentBase } from \"@bitwarden/angular/components/settings/vault-timeout-input.component\";\n\n@Component({\n  selector: \"app-vault-timeout-input\",\n  templateUrl: \"vault-timeout-input.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n    {\n      provide: NG_VALIDATORS,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n  ],\n})\nexport class VaultTimeoutInputComponent extends VaultTimeoutInputComponentBase {}\n","<header>\n  <div class=\"left\">\n    <app-pop-out></app-pop-out>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"settings\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"manage\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        routerLink=\"/folders\"\n      >\n        <div class=\"row-main\">{{ \"folders\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        routerLink=\"/sync\"\n      >\n        <div class=\"row-main\">{{ \"sync\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        routerLink=\"/excluded-domains\"\n      >\n        <div class=\"row-main\">{{ \"excludedDomains\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"security\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <app-vault-timeout-input\n        [vaultTimeouts]=\"vaultTimeouts\"\n        [formControl]=\"vaultTimeout\"\n        ngDefaultControl\n      >\n      </app-vault-timeout-input>\n      <div class=\"box-content-row display-block\" appBoxRow>\n        <label for=\"vaultTimeoutAction\">{{ \"vaultTimeoutAction\" | i18n }}</label>\n        <select\n          #vaultTimeoutActionSelect\n          id=\"vaultTimeoutAction\"\n          name=\"VaultTimeoutActions\"\n          [ngModel]=\"vaultTimeoutAction\"\n          (ngModelChange)=\"saveVaultTimeoutAction($event)\"\n        >\n          <option *ngFor=\"let o of vaultTimeoutActions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n      </div>\n      <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n        <label for=\"pin\">{{ \"unlockWithPin\" | i18n }}</label>\n        <input id=\"pin\" type=\"checkbox\" (change)=\"updatePin()\" [(ngModel)]=\"pin\" />\n      </div>\n      <div class=\"box-content-row box-content-row-checkbox\" appBoxRow *ngIf=\"supportsBiometric\">\n        <label for=\"biometric\">{{ \"unlockWithBiometrics\" | i18n }}</label>\n        <input\n          id=\"biometric\"\n          type=\"checkbox\"\n          (change)=\"updateBiometric()\"\n          [(ngModel)]=\"biometric\"\n        />\n      </div>\n      <div\n        class=\"box-content-row box-content-row-checkbox\"\n        appBoxRow\n        *ngIf=\"supportsBiometric && biometric\"\n      >\n        <label for=\"autoBiometricsPrompt\">{{ \"enableAutoBiometricsPrompt\" | i18n }}</label>\n        <input\n          id=\"autoBiometricsPrompt\"\n          type=\"checkbox\"\n          (change)=\"updateAutoBiometricsPrompt()\"\n          [disabled]=\"!biometric\"\n          [(ngModel)]=\"enableAutoBiometricsPrompt\"\n        />\n      </div>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        (click)=\"lock()\"\n      >\n        <div class=\"row-main\">{{ \"lockNow\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        (click)=\"twoStep()\"\n      >\n        <div class=\"row-main\">{{ \"twoStepLogin\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"account\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <button type=\"button\" class=\"box-content-row\" routerLink=\"/premium\">\n        <div class=\"row-main\">\n          <div class=\"icon text-primary\">\n            <i class=\"bwi bwi-fw bwi-lg bwi-star-f\" aria-hidden=\"true\"></i>\n          </div>\n          <span class=\"text text-primary\"\n            ><b>{{ \"premiumMembership\" | i18n }}</b></span\n          >\n        </div>\n        <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i></span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        (click)=\"changePassword()\"\n        *ngIf=\"showChangeMasterPass\"\n      >\n        <div class=\"row-main\">{{ \"changeMasterPassword\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        (click)=\"fingerprint()\"\n      >\n        <div class=\"row-main\">{{ \"fingerprintPhrase\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        (click)=\"logOut()\"\n      >\n        <div class=\"row-main\">{{ \"logOut\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"tools\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        (click)=\"import()\"\n      >\n        <div class=\"row-main\">{{ \"importItems\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        (click)=\"export()\"\n      >\n        <div class=\"row-main\">{{ \"exportVault\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        (click)=\"webVault()\"\n      >\n        <div class=\"row-main\">{{ \"bitWebVault\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"other\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        routerLink=\"/options\"\n      >\n        <div class=\"row-main\">{{ \"options\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        (click)=\"about()\"\n      >\n        <div class=\"row-main\">{{ \"about\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        (click)=\"share()\"\n      >\n        <div class=\"row-main\">{{ \"learnOrg\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        (click)=\"help()\"\n      >\n        <div class=\"row-main\">{{ \"helpFeedback\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        (click)=\"rate()\"\n      >\n        <div class=\"row-main\">{{ \"rateExtension\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n    <div class=\"box-footer\">{{ \"rateExtensionDesc\" | i18n }}</div>\n  </div>\n</main>\n","import { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\nimport { UntypedFormControl } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport Swal from \"sweetalert2\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout.service\";\nimport { DeviceType } from \"@bitwarden/common/enums/deviceType\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { BiometricErrors, BiometricErrorTypes } from \"../../models/biometricErrors\";\nimport { SetPinComponent } from \"../components/set-pin.component\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst RateUrls = {\n  [DeviceType.ChromeExtension]:\n    \"https://chrome.google.com/webstore/detail/bitwarden-free-password-m/nngceckbapebfimnlniiiahkandclblb/reviews\",\n  [DeviceType.FirefoxExtension]:\n    \"https://addons.mozilla.org/en-US/firefox/addon/bitwarden-password-manager/#reviews\",\n  [DeviceType.OperaExtension]:\n    \"https://addons.opera.com/en/extensions/details/bitwarden-free-password-manager/#feedback-container\",\n  [DeviceType.EdgeExtension]:\n    \"https://microsoftedge.microsoft.com/addons/detail/jbkfoedolllekgbhcbcoahefnbanhhlh\",\n  [DeviceType.VivaldiExtension]:\n    \"https://chrome.google.com/webstore/detail/bitwarden-free-password-m/nngceckbapebfimnlniiiahkandclblb/reviews\",\n  [DeviceType.SafariExtension]: \"https://apps.apple.com/app/bitwarden/id1352778147\",\n};\n\n@Component({\n  selector: \"app-settings\",\n  templateUrl: \"settings.component.html\",\n})\nexport class SettingsComponent implements OnInit {\n  @ViewChild(\"vaultTimeoutActionSelect\", { read: ElementRef, static: true })\n  vaultTimeoutActionSelectRef: ElementRef;\n  vaultTimeouts: any[];\n  vaultTimeoutActions: any[];\n  vaultTimeoutAction: string;\n  pin: boolean = null;\n  supportsBiometric: boolean;\n  biometric = false;\n  enableAutoBiometricsPrompt = true;\n  previousVaultTimeout: number = null;\n  showChangeMasterPass = true;\n\n  vaultTimeout: UntypedFormControl = new UntypedFormControl(null);\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private vaultTimeoutService: VaultTimeoutService,\n    public messagingService: MessagingService,\n    private router: Router,\n    private environmentService: EnvironmentService,\n    private cryptoService: CryptoService,\n    private stateService: StateService,\n    private popupUtilsService: PopupUtilsService,\n    private modalService: ModalService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  async ngOnInit() {\n    const showOnLocked =\n      !this.platformUtilsService.isFirefox() && !this.platformUtilsService.isSafari();\n\n    this.vaultTimeouts = [\n      { name: this.i18nService.t(\"immediately\"), value: 0 },\n      { name: this.i18nService.t(\"oneMinute\"), value: 1 },\n      { name: this.i18nService.t(\"fiveMinutes\"), value: 5 },\n      { name: this.i18nService.t(\"fifteenMinutes\"), value: 15 },\n      { name: this.i18nService.t(\"thirtyMinutes\"), value: 30 },\n      { name: this.i18nService.t(\"oneHour\"), value: 60 },\n      { name: this.i18nService.t(\"fourHours\"), value: 240 },\n      // { name: i18nService.t('onIdle'), value: -4 },\n      // { name: i18nService.t('onSleep'), value: -3 },\n    ];\n\n    if (showOnLocked) {\n      this.vaultTimeouts.push({ name: this.i18nService.t(\"onLocked\"), value: -2 });\n    }\n\n    this.vaultTimeouts.push({ name: this.i18nService.t(\"onRestart\"), value: -1 });\n    this.vaultTimeouts.push({ name: this.i18nService.t(\"never\"), value: null });\n\n    this.vaultTimeoutActions = [\n      { name: this.i18nService.t(\"lock\"), value: \"lock\" },\n      { name: this.i18nService.t(\"logOut\"), value: \"logOut\" },\n    ];\n\n    let timeout = await this.vaultTimeoutService.getVaultTimeout();\n    if (timeout != null) {\n      if (timeout === -2 && !showOnLocked) {\n        timeout = -1;\n      }\n      this.vaultTimeout.setValue(timeout);\n    }\n    this.previousVaultTimeout = this.vaultTimeout.value;\n    this.vaultTimeout.valueChanges.subscribe(async (value) => {\n      await this.saveVaultTimeout(value);\n    });\n\n    const action = await this.stateService.getVaultTimeoutAction();\n    this.vaultTimeoutAction = action == null ? \"lock\" : action;\n\n    const pinSet = await this.vaultTimeoutService.isPinLockSet();\n    this.pin = pinSet[0] || pinSet[1];\n\n    this.supportsBiometric = await this.platformUtilsService.supportsBiometric();\n    this.biometric = await this.vaultTimeoutService.isBiometricLockSet();\n    this.enableAutoBiometricsPrompt = !(await this.stateService.getDisableAutoBiometricsPrompt());\n    this.showChangeMasterPass = !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n\n  async saveVaultTimeout(newValue: number) {\n    if (newValue == null) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"neverLockWarning\"),\n        null,\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (!confirmed) {\n        this.vaultTimeout.setValue(this.previousVaultTimeout);\n        return;\n      }\n    }\n\n    // The minTimeoutError does not apply to browser because it supports Immediately\n    // So only check for the policyError\n    if (this.vaultTimeout.hasError(\"policyError\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"vaultTimeoutTooLarge\")\n      );\n      return;\n    }\n\n    this.previousVaultTimeout = this.vaultTimeout.value;\n\n    await this.vaultTimeoutService.setVaultTimeoutOptions(\n      this.vaultTimeout.value,\n      this.vaultTimeoutAction\n    );\n    if (this.previousVaultTimeout == null) {\n      this.messagingService.send(\"bgReseedStorage\");\n    }\n  }\n\n  async saveVaultTimeoutAction(newValue: string) {\n    if (newValue === \"logOut\") {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmation\"),\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmationTitle\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (!confirmed) {\n        this.vaultTimeoutActions.forEach((option: any, i) => {\n          if (option.value === this.vaultTimeoutAction) {\n            this.vaultTimeoutActionSelectRef.nativeElement.value =\n              i + \": \" + this.vaultTimeoutAction;\n          }\n        });\n        return;\n      }\n    }\n\n    if (this.vaultTimeout.hasError(\"policyError\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"vaultTimeoutTooLarge\")\n      );\n      return;\n    }\n\n    this.vaultTimeoutAction = newValue;\n    await this.vaultTimeoutService.setVaultTimeoutOptions(\n      this.vaultTimeout.value,\n      this.vaultTimeoutAction\n    );\n  }\n\n  async updatePin() {\n    if (this.pin) {\n      const ref = this.modalService.open(SetPinComponent, { allowMultipleModals: true });\n\n      if (ref == null) {\n        this.pin = false;\n        return;\n      }\n\n      this.pin = await ref.onClosedPromise();\n    } else {\n      await this.cryptoService.clearPinProtectedKey();\n      await this.vaultTimeoutService.clear();\n    }\n  }\n\n  async updateBiometric() {\n    if (this.biometric && this.supportsBiometric) {\n      let granted;\n      try {\n        granted = await BrowserApi.requestPermission({ permissions: [\"nativeMessaging\"] });\n      } catch (e) {\n        // eslint-disable-next-line\n        console.error(e);\n\n        if (this.platformUtilsService.isFirefox() && this.popupUtilsService.inSidebar(window)) {\n          await this.platformUtilsService.showDialog(\n            this.i18nService.t(\"nativeMessaginPermissionSidebarDesc\"),\n            this.i18nService.t(\"nativeMessaginPermissionSidebarTitle\"),\n            this.i18nService.t(\"ok\"),\n            null\n          );\n          this.biometric = false;\n          return;\n        }\n      }\n\n      if (!granted) {\n        await this.platformUtilsService.showDialog(\n          this.i18nService.t(\"nativeMessaginPermissionErrorDesc\"),\n          this.i18nService.t(\"nativeMessaginPermissionErrorTitle\"),\n          this.i18nService.t(\"ok\"),\n          null\n        );\n        this.biometric = false;\n        return;\n      }\n\n      const submitted = Swal.fire({\n        heightAuto: false,\n        buttonsStyling: false,\n        titleText: this.i18nService.t(\"awaitDesktop\"),\n        text: this.i18nService.t(\"awaitDesktopDesc\"),\n        icon: \"info\",\n        iconHtml: '<i class=\"swal-custom-icon bwi bwi-info-circle text-info\"></i>',\n        showCancelButton: true,\n        cancelButtonText: this.i18nService.t(\"cancel\"),\n        showConfirmButton: false,\n        allowOutsideClick: false,\n      });\n\n      await this.stateService.setBiometricAwaitingAcceptance(true);\n      await this.cryptoService.toggleKey();\n\n      await Promise.race([\n        submitted.then(async (result) => {\n          if (result.dismiss === Swal.DismissReason.cancel) {\n            this.biometric = false;\n            await this.stateService.setBiometricAwaitingAcceptance(null);\n          }\n        }),\n        this.platformUtilsService\n          .authenticateBiometric()\n          .then((result) => {\n            this.biometric = result;\n\n            Swal.close();\n            if (this.biometric === false) {\n              this.platformUtilsService.showToast(\n                \"error\",\n                this.i18nService.t(\"errorEnableBiometricTitle\"),\n                this.i18nService.t(\"errorEnableBiometricDesc\")\n              );\n            }\n          })\n          .catch((e) => {\n            // Handle connection errors\n            this.biometric = false;\n\n            const error = BiometricErrors[e as BiometricErrorTypes];\n\n            this.platformUtilsService.showDialog(\n              this.i18nService.t(error.description),\n              this.i18nService.t(error.title),\n              this.i18nService.t(\"ok\"),\n              null,\n              \"error\"\n            );\n          }),\n      ]);\n    } else {\n      await this.stateService.setBiometricUnlock(null);\n      await this.stateService.setBiometricFingerprintValidated(false);\n    }\n  }\n\n  async updateAutoBiometricsPrompt() {\n    await this.stateService.setDisableAutoBiometricsPrompt(!this.enableAutoBiometricsPrompt);\n  }\n\n  async lock() {\n    await this.vaultTimeoutService.lock(true);\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  async changePassword() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"changeMasterPasswordConfirmation\"),\n      this.i18nService.t(\"changeMasterPassword\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      BrowserApi.createNewTab(\n        \"https://bitwarden.com/help/master-password/#change-your-master-password\"\n      );\n    }\n  }\n\n  async twoStep() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"twoStepLoginConfirmation\"),\n      this.i18nService.t(\"twoStepLogin\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      BrowserApi.createNewTab(\"https://bitwarden.com/help/setup-two-step-login/\");\n    }\n  }\n\n  async share() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"learnOrgConfirmation\"),\n      this.i18nService.t(\"learnOrg\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      BrowserApi.createNewTab(\"https://bitwarden.com/help/about-organizations/\");\n    }\n  }\n\n  async webVault() {\n    const url = this.environmentService.getWebVaultUrl();\n    BrowserApi.createNewTab(url);\n  }\n\n  import() {\n    BrowserApi.createNewTab(\"https://bitwarden.com/help/import-data/\");\n  }\n\n  export() {\n    this.router.navigate([\"/export\"]);\n  }\n\n  help() {\n    BrowserApi.createNewTab(\"https://bitwarden.com/help/\");\n  }\n\n  about() {\n    const year = new Date().getFullYear();\n    const versionText = document.createTextNode(\n      this.i18nService.t(\"version\") + \": \" + BrowserApi.getApplicationVersion()\n    );\n    const div = document.createElement(\"div\");\n    div.innerHTML =\n      `<p class=\"text-center\"><i class=\"bwi bwi-shield bwi-3x\" aria-hidden=\"true\"></i></p>\n            <p class=\"text-center\"><b>Bitwarden</b><br>&copy; Bitwarden Inc. 2015-` +\n      year +\n      `</p>`;\n    div.appendChild(versionText);\n\n    Swal.fire({\n      heightAuto: false,\n      buttonsStyling: false,\n      html: div,\n      showConfirmButton: false,\n      showCancelButton: true,\n      cancelButtonText: this.i18nService.t(\"close\"),\n    });\n  }\n\n  async fingerprint() {\n    const fingerprint = await this.cryptoService.getFingerprint(\n      await this.stateService.getUserId()\n    );\n    const p = document.createElement(\"p\");\n    p.innerText = this.i18nService.t(\"yourAccountsFingerprint\") + \":\";\n    const p2 = document.createElement(\"p\");\n    p2.innerText = fingerprint.join(\"-\");\n    const div = document.createElement(\"div\");\n    div.appendChild(p);\n    div.appendChild(p2);\n\n    const result = await Swal.fire({\n      heightAuto: false,\n      buttonsStyling: false,\n      html: div,\n      showCancelButton: true,\n      cancelButtonText: this.i18nService.t(\"close\"),\n      showConfirmButton: true,\n      confirmButtonText: this.i18nService.t(\"learnMore\"),\n    });\n\n    if (result.value) {\n      this.platformUtilsService.launchUri(\"https://bitwarden.com/help/fingerprint-phrase/\");\n    }\n  }\n\n  rate() {\n    const deviceType = this.platformUtilsService.getDevice();\n    BrowserApi.createNewTab((RateUrls as any)[deviceType]);\n  }\n}\n","export enum CipherRepromptType {\n  None = 0,\n  Password = 1,\n}\n","export enum CipherType {\n  Login = 1,\n  SecureNote = 2,\n  Card = 3,\n  Identity = 4,\n}\n","export enum OrganizationUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n  Revoked = -1,\n}\n","export enum SecureNoteType {\n  Generic = 0,\n}\n","export type LinkedIdType = LoginLinkedId | CardLinkedId | IdentityLinkedId;\n\n// LoginView\nexport enum LoginLinkedId {\n  Username = 100,\n  Password = 101,\n}\n\n// CardView\nexport enum CardLinkedId {\n  CardholderName = 300,\n  ExpMonth = 301,\n  ExpYear = 302,\n  Code = 303,\n  Brand = 304,\n  Number = 305,\n}\n\n// IdentityView\nexport enum IdentityLinkedId {\n  Title = 400,\n  MiddleName = 401,\n  Address1 = 402,\n  Address2 = 403,\n  Address3 = 404,\n  City = 405,\n  State = 406,\n  PostalCode = 407,\n  Country = 408,\n  Company = 409,\n  Email = 410,\n  Phone = 411,\n  Ssn = 412,\n  Username = 413,\n  PassportNumber = 414,\n  LicenseNumber = 415,\n  FirstName = 416,\n  LastName = 417,\n  FullName = 418,\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\n\n@Component({\n  selector: \"app-sync\",\n  templateUrl: \"sync.component.html\",\n})\nexport class SyncComponent implements OnInit {\n  lastSync = \"--\";\n  syncPromise: Promise<any>;\n\n  constructor(\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit() {\n    await this.setLastSync();\n  }\n\n  async sync() {\n    this.syncPromise = this.syncService.fullSync(true);\n    const success = await this.syncPromise;\n    if (success) {\n      await this.setLastSync();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"syncingComplete\"));\n    } else {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"syncingFailed\"));\n    }\n  }\n\n  async setLastSync() {\n    const last = await this.syncService.getLastSync();\n    if (last != null) {\n      this.lastSync = last.toLocaleDateString() + \" \" + last.toLocaleTimeString();\n    } else {\n      this.lastSync = this.i18nService.t(\"never\");\n    }\n  }\n}\n","<div class=\"tab-page\">\n  <router-outlet></router-outlet>\n  <nav class=\"tabs\">\n    <ul>\n      <li routerLinkActive=\"active\" #rlaCurrentTab=\"routerLinkActive\" *ngIf=\"showCurrentTab\">\n        <button\n          type=\"button\"\n          routerLink=\"current\"\n          appA11yTitle=\"{{ 'currentTab' | i18n }}\"\n          [attr.aria-pressed]=\"rlaCurrentTab.isActive\"\n        >\n          <i class=\"bwi bwi-folder-closed-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"tab\" | i18n }}\n        </button>\n      </li>\n      <li routerLinkActive=\"active\" #rlaMyVault=\"routerLinkActive\">\n        <button\n          type=\"button\"\n          routerLink=\"vault\"\n          appA11yTitle=\"{{ 'myVault' | i18n }}\"\n          [attr.aria-pressed]=\"rlaMyVault.isActive\"\n        >\n          <i class=\"bwi bwi-lock-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"vault\" | i18n }}\n        </button>\n      </li>\n      <li routerLinkActive=\"active\" #rlaSend=\"routerLinkActive\">\n        <button\n          type=\"button\"\n          routerLink=\"send\"\n          appA11yTitle=\"{{ 'send' | i18n }}\"\n          [attr.aria-pressed]=\"rlaSend.isActive\"\n        >\n          <i class=\"bwi bwi-send-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"send\" | i18n }}\n        </button>\n      </li>\n      <li routerLinkActive=\"active\" #rlaGenerator=\"routerLinkActive\">\n        <button\n          type=\"button\"\n          routerLink=\"generator\"\n          appA11yTitle=\"{{ 'passGen' | i18n }}\"\n          [attr.aria-pressed]=\"rlaGenerator.isActive\"\n        >\n          <i class=\"bwi bwi-generate-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"generator\" | i18n }}\n        </button>\n      </li>\n      <li routerLinkActive=\"active\" #rlaSettings=\"routerLinkActive\">\n        <button\n          type=\"button\"\n          routerLink=\"settings\"\n          appA11yTitle=\"{{ 'settings' | i18n }}\"\n          [attr.aria-pressed]=\"rlaSettings.isActive\"\n        >\n          <i class=\"bwi bwi-cog-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"settings\" | i18n }}\n        </button>\n      </li>\n    </ul>\n  </nav>\n</div>\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" routerLink=\"/tabs/settings\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"sync\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"content center-content\">\n    <button\n      type=\"button\"\n      class=\"btn block primary\"\n      (click)=\"sync()\"\n      #syncBtn\n      [disabled]=\"syncBtn.loading\"\n      [appApiAction]=\"syncPromise\"\n    >\n      <span [hidden]=\"syncBtn.loading\">{{ \"syncVaultNow\" | i18n }}</span>\n      <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!syncBtn.loading\" aria-hidden=\"true\"></i>\n    </button>\n    <p class=\"text-center text-muted small\">{{ \"lastSync\" | i18n }} {{ lastSync }}</p>\n  </div>\n</main>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { PopupUtilsService } from \"./services/popup-utils.service\";\n\n@Component({\n  selector: \"app-tabs\",\n  templateUrl: \"tabs.component.html\",\n})\nexport class TabsComponent implements OnInit {\n  showCurrentTab = true;\n\n  constructor(private popupUtilsService: PopupUtilsService) {}\n\n  ngOnInit() {\n    this.showCurrentTab = !this.popupUtilsService.inPopout(window);\n  }\n}\n","import { LinkedIdType } from \"../enums/linkedIdType\";\nimport { ItemView } from \"../models/view/itemView\";\n\nexport class LinkedMetadata {\n  constructor(readonly propertyKey: string, private readonly _i18nKey?: string) {}\n\n  get i18nKey() {\n    return this._i18nKey ?? this.propertyKey;\n  }\n}\n\n/**\n * A decorator used to set metadata used by Linked custom fields. Apply it to a class property or getter to make it\n *    available as a Linked custom field option.\n * @param id - A unique value that is saved in the Field model. It is used to look up the decorated class property.\n * @param i18nKey - The i18n key used to describe the decorated class property in the UI. If it is null, then the name\n *    of the class property will be used as the i18n key.\n */\nexport function linkedFieldOption(id: LinkedIdType, i18nKey?: string) {\n  return (prototype: ItemView, propertyKey: string) => {\n    if (prototype.linkedFieldOptions == null) {\n      prototype.linkedFieldOptions = new Map<LinkedIdType, LinkedMetadata>();\n    }\n\n    prototype.linkedFieldOptions.set(id, new LinkedMetadata(propertyKey, i18nKey));\n  };\n}\n","import { LinkedMetadata } from \"../../misc/linkedFieldOption.decorator\";\n\nimport { View } from \"./view\";\n\nexport abstract class ItemView implements View {\n  linkedFieldOptions: Map<number, LinkedMetadata>;\n  abstract get subTitle(): string;\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { CardLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class CardView extends ItemView {\n  @linkedFieldOption(LinkedId.CardholderName)\n  cardholderName: string = null;\n  @linkedFieldOption(LinkedId.ExpMonth, \"expirationMonth\")\n  expMonth: string = null;\n  @linkedFieldOption(LinkedId.ExpYear, \"expirationYear\")\n  expYear: string = null;\n  @linkedFieldOption(LinkedId.Code, \"securityCode\")\n  code: string = null;\n\n  private _brand: string = null;\n  private _number: string = null;\n  private _subTitle: string = null;\n\n  get maskedCode(): string {\n    return this.code != null ? \"•\".repeat(this.code.length) : null;\n  }\n\n  get maskedNumber(): string {\n    return this.number != null ? \"•\".repeat(this.number.length) : null;\n  }\n\n  @linkedFieldOption(LinkedId.Brand)\n  get brand(): string {\n    return this._brand;\n  }\n  set brand(value: string) {\n    this._brand = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.Number)\n  get number(): string {\n    return this._number;\n  }\n  set number(value: string) {\n    this._number = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null) {\n      this._subTitle = this.brand;\n      if (this.number != null && this.number.length >= 4) {\n        if (this._subTitle != null && this._subTitle !== \"\") {\n          this._subTitle += \", \";\n        } else {\n          this._subTitle = \"\";\n        }\n\n        // Show last 5 on amex, last 4 for all others\n        const count =\n          this.number.length >= 5 && this.number.match(new RegExp(\"^3[47]\")) != null ? 5 : 4;\n        this._subTitle += \"*\" + this.number.substr(this.number.length - count);\n      }\n    }\n    return this._subTitle;\n  }\n\n  get expiration(): string {\n    if (!this.expMonth && !this.expYear) {\n      return null;\n    }\n\n    let exp = this.expMonth != null ? (\"0\" + this.expMonth).slice(-2) : \"__\";\n    exp += \" / \" + (this.expYear != null ? this.formatYear(this.expYear) : \"____\");\n    return exp;\n  }\n\n  private formatYear(year: string): string {\n    return year.length === 2 ? \"20\" + year : year;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<CardView>>): CardView {\n    return Object.assign(new CardView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nimport { EncryptionType } from \"../../enums/encryptionType\";\n\nexport class SymmetricCryptoKey {\n  key: ArrayBuffer;\n  encKey?: ArrayBuffer;\n  macKey?: ArrayBuffer;\n  encType: EncryptionType;\n\n  keyB64: string;\n  encKeyB64: string;\n  macKeyB64: string;\n\n  meta: any;\n\n  constructor(key: ArrayBuffer, encType?: EncryptionType) {\n    if (key == null) {\n      throw new Error(\"Must provide key\");\n    }\n\n    if (encType == null) {\n      if (key.byteLength === 32) {\n        encType = EncryptionType.AesCbc256_B64;\n      } else if (key.byteLength === 64) {\n        encType = EncryptionType.AesCbc256_HmacSha256_B64;\n      } else {\n        throw new Error(\"Unable to determine encType.\");\n      }\n    }\n\n    this.key = key;\n    this.encType = encType;\n\n    if (encType === EncryptionType.AesCbc256_B64 && key.byteLength === 32) {\n      this.encKey = key;\n      this.macKey = null;\n    } else if (encType === EncryptionType.AesCbc128_HmacSha256_B64 && key.byteLength === 32) {\n      this.encKey = key.slice(0, 16);\n      this.macKey = key.slice(16, 32);\n    } else if (encType === EncryptionType.AesCbc256_HmacSha256_B64 && key.byteLength === 64) {\n      this.encKey = key.slice(0, 32);\n      this.macKey = key.slice(32, 64);\n    } else {\n      throw new Error(\"Unsupported encType/key length.\");\n    }\n\n    if (this.key != null) {\n      this.keyB64 = Utils.fromBufferToB64(this.key);\n    }\n    if (this.encKey != null) {\n      this.encKeyB64 = Utils.fromBufferToB64(this.encKey);\n    }\n    if (this.macKey != null) {\n      this.macKeyB64 = Utils.fromBufferToB64(this.macKey);\n    }\n  }\n\n  toJSON() {\n    // The whole object is constructed from the initial key, so just store the B64 key\n    return { keyB64: this.keyB64 };\n  }\n\n  static fromJSON(obj: Jsonify<SymmetricCryptoKey>): SymmetricCryptoKey {\n    if (obj == null) {\n      return null;\n    }\n\n    const arrayBuffer = Utils.fromB64ToArray(obj.keyB64).buffer;\n    return new SymmetricCryptoKey(arrayBuffer);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Attachment } from \"../domain/attachment\";\nimport { SymmetricCryptoKey } from \"../domain/symmetricCryptoKey\";\n\nimport { View } from \"./view\";\n\nexport class AttachmentView implements View {\n  id: string = null;\n  url: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n  key: SymmetricCryptoKey = null;\n\n  constructor(a?: Attachment) {\n    if (!a) {\n      return;\n    }\n\n    this.id = a.id;\n    this.url = a.url;\n    this.size = a.size;\n    this.sizeName = a.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<AttachmentView>>): AttachmentView {\n    const key = obj.key == null ? null : SymmetricCryptoKey.fromJSON(obj.key);\n    return Object.assign(new AttachmentView(), obj, { key: key });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { Field } from \"../domain/field\";\n\nimport { View } from \"./view\";\n\nexport class FieldView implements View {\n  name: string = null;\n  value: string = null;\n  type: FieldType = null;\n  newField = false; // Marks if the field is new and hasn't been saved\n  showValue = false;\n  showCount = false;\n  linkedId: LinkedIdType = null;\n\n  constructor(f?: Field) {\n    if (!f) {\n      return;\n    }\n\n    this.type = f.type;\n    this.linkedId = f.linkedId;\n  }\n\n  get maskedValue(): string {\n    return this.value != null ? \"••••••••\" : null;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<FieldView>>): FieldView {\n    return Object.assign(new FieldView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { IdentityLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class IdentityView extends ItemView {\n  @linkedFieldOption(LinkedId.Title)\n  title: string = null;\n  @linkedFieldOption(LinkedId.MiddleName)\n  middleName: string = null;\n  @linkedFieldOption(LinkedId.Address1)\n  address1: string = null;\n  @linkedFieldOption(LinkedId.Address2)\n  address2: string = null;\n  @linkedFieldOption(LinkedId.Address3)\n  address3: string = null;\n  @linkedFieldOption(LinkedId.City, \"cityTown\")\n  city: string = null;\n  @linkedFieldOption(LinkedId.State, \"stateProvince\")\n  state: string = null;\n  @linkedFieldOption(LinkedId.PostalCode, \"zipPostalCode\")\n  postalCode: string = null;\n  @linkedFieldOption(LinkedId.Country)\n  country: string = null;\n  @linkedFieldOption(LinkedId.Company)\n  company: string = null;\n  @linkedFieldOption(LinkedId.Email)\n  email: string = null;\n  @linkedFieldOption(LinkedId.Phone)\n  phone: string = null;\n  @linkedFieldOption(LinkedId.Ssn)\n  ssn: string = null;\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.PassportNumber)\n  passportNumber: string = null;\n  @linkedFieldOption(LinkedId.LicenseNumber)\n  licenseNumber: string = null;\n\n  private _firstName: string = null;\n  private _lastName: string = null;\n  private _subTitle: string = null;\n\n  constructor() {\n    super();\n  }\n\n  @linkedFieldOption(LinkedId.FirstName)\n  get firstName(): string {\n    return this._firstName;\n  }\n  set firstName(value: string) {\n    this._firstName = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.LastName)\n  get lastName(): string {\n    return this._lastName;\n  }\n  set lastName(value: string) {\n    this._lastName = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null && (this.firstName != null || this.lastName != null)) {\n      this._subTitle = \"\";\n      if (this.firstName != null) {\n        this._subTitle = this.firstName;\n      }\n      if (this.lastName != null) {\n        if (this._subTitle !== \"\") {\n          this._subTitle += \" \";\n        }\n        this._subTitle += this.lastName;\n      }\n    }\n\n    return this._subTitle;\n  }\n\n  @linkedFieldOption(LinkedId.FullName)\n  get fullName(): string {\n    if (\n      this.title != null ||\n      this.firstName != null ||\n      this.middleName != null ||\n      this.lastName != null\n    ) {\n      let name = \"\";\n      if (this.title != null) {\n        name += this.title + \" \";\n      }\n      if (this.firstName != null) {\n        name += this.firstName + \" \";\n      }\n      if (this.middleName != null) {\n        name += this.middleName + \" \";\n      }\n      if (this.lastName != null) {\n        name += this.lastName;\n      }\n      return name.trim();\n    }\n\n    return null;\n  }\n\n  get fullAddress(): string {\n    let address = this.address1;\n    if (!Utils.isNullOrWhitespace(this.address2)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address2;\n    }\n    if (!Utils.isNullOrWhitespace(this.address3)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address3;\n    }\n    return address;\n  }\n\n  get fullAddressPart2(): string {\n    if (this.city == null && this.state == null && this.postalCode == null) {\n      return null;\n    }\n    const city = this.city || \"-\";\n    const state = this.state;\n    const postalCode = this.postalCode || \"-\";\n    let addressPart2 = city;\n    if (!Utils.isNullOrWhitespace(state)) {\n      addressPart2 += \", \" + state;\n    }\n    addressPart2 += \", \" + postalCode;\n    return addressPart2;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<IdentityView>>): IdentityView {\n    return Object.assign(new IdentityView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { UriMatchType } from \"../../enums/uriMatchType\";\nimport { Utils } from \"../../misc/utils\";\nimport { LoginUri } from \"../domain/loginUri\";\n\nimport { View } from \"./view\";\n\nconst CanLaunchWhitelist = [\n  \"https://\",\n  \"http://\",\n  \"ssh://\",\n  \"ftp://\",\n  \"sftp://\",\n  \"irc://\",\n  \"vnc://\",\n  // https://docs.microsoft.com/en-us/windows-server/remote/remote-desktop-services/clients/remote-desktop-uri\n  \"rdp://\", // Legacy RDP URI scheme\n  \"ms-rd:\", // Preferred RDP URI scheme\n  \"chrome://\",\n  \"iosapp://\",\n  \"androidapp://\",\n];\n\nexport class LoginUriView implements View {\n  match: UriMatchType = null;\n\n  private _uri: string = null;\n  private _domain: string = null;\n  private _hostname: string = null;\n  private _host: string = null;\n  private _canLaunch: boolean = null;\n\n  constructor(u?: LoginUri) {\n    if (!u) {\n      return;\n    }\n\n    this.match = u.match;\n  }\n\n  get uri(): string {\n    return this._uri;\n  }\n  set uri(value: string) {\n    this._uri = value;\n    this._domain = null;\n    this._canLaunch = null;\n  }\n\n  get domain(): string {\n    if (this._domain == null && this.uri != null) {\n      this._domain = Utils.getDomain(this.uri);\n      if (this._domain === \"\") {\n        this._domain = null;\n      }\n    }\n\n    return this._domain;\n  }\n\n  get hostname(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._hostname == null && this.uri != null) {\n      this._hostname = Utils.getHostname(this.uri);\n      if (this._hostname === \"\") {\n        this._hostname = null;\n      }\n    }\n\n    return this._hostname;\n  }\n\n  get host(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._host == null && this.uri != null) {\n      this._host = Utils.getHost(this.uri);\n      if (this._host === \"\") {\n        this._host = null;\n      }\n    }\n\n    return this._host;\n  }\n\n  get hostnameOrUri(): string {\n    return this.hostname != null ? this.hostname : this.uri;\n  }\n\n  get hostOrUri(): string {\n    return this.host != null ? this.host : this.uri;\n  }\n\n  get isWebsite(): boolean {\n    return (\n      this.uri != null &&\n      (this.uri.indexOf(\"http://\") === 0 ||\n        this.uri.indexOf(\"https://\") === 0 ||\n        (this.uri.indexOf(\"://\") < 0 && Utils.tldEndingRegex.test(this.uri)))\n    );\n  }\n\n  get canLaunch(): boolean {\n    if (this._canLaunch != null) {\n      return this._canLaunch;\n    }\n    if (this.uri != null && this.match !== UriMatchType.RegularExpression) {\n      const uri = this.launchUri;\n      for (let i = 0; i < CanLaunchWhitelist.length; i++) {\n        if (uri.indexOf(CanLaunchWhitelist[i]) === 0) {\n          this._canLaunch = true;\n          return this._canLaunch;\n        }\n      }\n    }\n    this._canLaunch = false;\n    return this._canLaunch;\n  }\n\n  get launchUri(): string {\n    return this.uri.indexOf(\"://\") < 0 && Utils.tldEndingRegex.test(this.uri)\n      ? \"http://\" + this.uri\n      : this.uri;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<LoginUriView>>): LoginUriView {\n    return Object.assign(new LoginUriView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { LoginLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../misc/utils\";\nimport { Login } from \"../domain/login\";\n\nimport { ItemView } from \"./itemView\";\nimport { LoginUriView } from \"./loginUriView\";\n\nexport class LoginView extends ItemView {\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.Password)\n  password: string = null;\n\n  passwordRevisionDate?: Date = null;\n  totp: string = null;\n  uris: LoginUriView[] = null;\n  autofillOnPageLoad: boolean = null;\n\n  constructor(l?: Login) {\n    super();\n    if (!l) {\n      return;\n    }\n\n    this.passwordRevisionDate = l.passwordRevisionDate;\n    this.autofillOnPageLoad = l.autofillOnPageLoad;\n  }\n\n  get uri(): string {\n    return this.hasUris ? this.uris[0].uri : null;\n  }\n\n  get maskedPassword(): string {\n    return this.password != null ? \"••••••••\" : null;\n  }\n\n  get subTitle(): string {\n    return this.username;\n  }\n\n  get canLaunch(): boolean {\n    return this.hasUris && this.uris.some((u) => u.canLaunch);\n  }\n\n  get hasTotp(): boolean {\n    return !Utils.isNullOrWhitespace(this.totp);\n  }\n\n  get launchUri(): string {\n    if (this.hasUris) {\n      const uri = this.uris.find((u) => u.canLaunch);\n      if (uri != null) {\n        return uri.launchUri;\n      }\n    }\n    return null;\n  }\n\n  get hasUris(): boolean {\n    return this.uris != null && this.uris.length > 0;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<LoginView>>): LoginView {\n    const passwordRevisionDate =\n      obj.passwordRevisionDate == null ? null : new Date(obj.passwordRevisionDate);\n    const uris = obj.uris?.map((uri: any) => LoginUriView.fromJSON(uri));\n\n    return Object.assign(new LoginView(), obj, {\n      passwordRevisionDate: passwordRevisionDate,\n      uris: uris,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Password } from \"../domain/password\";\n\nimport { View } from \"./view\";\n\nexport class PasswordHistoryView implements View {\n  password: string = null;\n  lastUsedDate: Date = null;\n\n  constructor(ph?: Password) {\n    if (!ph) {\n      return;\n    }\n\n    this.lastUsedDate = ph.lastUsedDate;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<PasswordHistoryView>>): PasswordHistoryView {\n    const lastUsedDate = obj.lastUsedDate == null ? null : new Date(obj.lastUsedDate);\n\n    return Object.assign(new PasswordHistoryView(), obj, {\n      lastUsedDate: lastUsedDate,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNote } from \"../domain/secureNote\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class SecureNoteView extends ItemView {\n  type: SecureNoteType = null;\n\n  constructor(n?: SecureNote) {\n    super();\n    if (!n) {\n      return;\n    }\n\n    this.type = n.type;\n  }\n\n  get subTitle(): string {\n    return null;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<SecureNoteView>>): SecureNoteView {\n    return Object.assign(new SecureNoteView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentView } from \"./attachmentView\";\nimport { CardView } from \"./cardView\";\nimport { FieldView } from \"./fieldView\";\nimport { IdentityView } from \"./identityView\";\nimport { LoginView } from \"./loginView\";\nimport { PasswordHistoryView } from \"./passwordHistoryView\";\nimport { SecureNoteView } from \"./secureNoteView\";\nimport { View } from \"./view\";\n\nexport class CipherView implements View {\n  id: string = null;\n  organizationId: string = null;\n  folderId: string = null;\n  name: string = null;\n  notes: string = null;\n  type: CipherType = null;\n  favorite = false;\n  organizationUseTotp = false;\n  edit = false;\n  viewPassword = true;\n  localData: any;\n  login = new LoginView();\n  identity = new IdentityView();\n  card = new CardView();\n  secureNote = new SecureNoteView();\n  attachments: AttachmentView[] = null;\n  fields: FieldView[] = null;\n  passwordHistory: PasswordHistoryView[] = null;\n  collectionIds: string[] = null;\n  revisionDate: Date = null;\n  deletedDate: Date = null;\n  reprompt: CipherRepromptType = CipherRepromptType.None;\n\n  constructor(c?: Cipher) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.folderId = c.folderId;\n    this.favorite = c.favorite;\n    this.organizationUseTotp = c.organizationUseTotp;\n    this.edit = c.edit;\n    this.viewPassword = c.viewPassword;\n    this.type = c.type;\n    this.localData = c.localData;\n    this.collectionIds = c.collectionIds;\n    this.revisionDate = c.revisionDate;\n    this.deletedDate = c.deletedDate;\n    // Old locally stored ciphers might have reprompt == null. If so set it to None.\n    this.reprompt = c.reprompt ?? CipherRepromptType.None;\n  }\n\n  private get item() {\n    switch (this.type) {\n      case CipherType.Login:\n        return this.login;\n      case CipherType.SecureNote:\n        return this.secureNote;\n      case CipherType.Card:\n        return this.card;\n      case CipherType.Identity:\n        return this.identity;\n      default:\n        break;\n    }\n\n    return null;\n  }\n\n  get subTitle(): string {\n    return this.item.subTitle;\n  }\n\n  get hasPasswordHistory(): boolean {\n    return this.passwordHistory && this.passwordHistory.length > 0;\n  }\n\n  get hasAttachments(): boolean {\n    return this.attachments && this.attachments.length > 0;\n  }\n\n  get hasOldAttachments(): boolean {\n    if (this.hasAttachments) {\n      for (let i = 0; i < this.attachments.length; i++) {\n        if (this.attachments[i].key == null) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  get hasFields(): boolean {\n    return this.fields && this.fields.length > 0;\n  }\n\n  get passwordRevisionDisplayDate(): Date {\n    if (this.type !== CipherType.Login || this.login == null) {\n      return null;\n    } else if (this.login.password == null || this.login.password === \"\") {\n      return null;\n    }\n    return this.login.passwordRevisionDate;\n  }\n\n  get isDeleted(): boolean {\n    return this.deletedDate != null;\n  }\n\n  get linkedFieldOptions() {\n    return this.item.linkedFieldOptions;\n  }\n\n  linkedFieldValue(id: LinkedIdType) {\n    const linkedFieldOption = this.linkedFieldOptions?.get(id);\n    if (linkedFieldOption == null) {\n      return null;\n    }\n\n    const item = this.item;\n    return this.item[linkedFieldOption.propertyKey as keyof typeof item];\n  }\n\n  linkedFieldI18nKey(id: LinkedIdType): string {\n    return this.linkedFieldOptions.get(id)?.i18nKey;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<CipherView>>): CipherView {\n    const view = new CipherView();\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    const deletedDate = obj.deletedDate == null ? null : new Date(obj.deletedDate);\n    const attachments = obj.attachments?.map((a: any) => AttachmentView.fromJSON(a));\n    const fields = obj.fields?.map((f: any) => FieldView.fromJSON(f));\n    const passwordHistory = obj.passwordHistory?.map((ph: any) => PasswordHistoryView.fromJSON(ph));\n\n    Object.assign(view, obj, {\n      revisionDate: revisionDate,\n      deletedDate: deletedDate,\n      attachments: attachments,\n      fields: fields,\n      passwordHistory: passwordHistory,\n    });\n\n    switch (obj.type) {\n      case CipherType.Card:\n        view.card = CardView.fromJSON(obj.card);\n        break;\n      case CipherType.Identity:\n        view.identity = IdentityView.fromJSON(obj.identity);\n        break;\n      case CipherType.Login:\n        view.login = LoginView.fromJSON(obj.login);\n        break;\n      case CipherType.SecureNote:\n        view.secureNote = SecureNoteView.fromJSON(obj.secureNote);\n        break;\n      default:\n        break;\n    }\n\n    return view;\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Field } from \"../models/domain/field\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { FieldView } from \"../models/view/fieldView\";\n\nexport abstract class CipherService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher?: Cipher\n  ) => Promise<Cipher>;\n  encryptFields: (fieldsModel: FieldView[], key: SymmetricCryptoKey) => Promise<Field[]>;\n  encryptField: (fieldModel: FieldView, key: SymmetricCryptoKey) => Promise<Field>;\n  get: (id: string) => Promise<Cipher>;\n  getAll: () => Promise<Cipher[]>;\n  getAllDecrypted: () => Promise<CipherView[]>;\n  getAllDecryptedForGrouping: (groupingId: string, folder?: boolean) => Promise<CipherView[]>;\n  getAllDecryptedForUrl: (\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch?: UriMatchType\n  ) => Promise<CipherView[]>;\n  getAllFromApiForOrganization: (organizationId: string) => Promise<CipherView[]>;\n  getLastUsedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getLastLaunchedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getNextCipherForUrl: (url: string) => Promise<CipherView>;\n  updateLastUsedIndexForUrl: (url: string) => void;\n  updateLastUsedDate: (id: string) => Promise<void>;\n  updateLastLaunchedDate: (id: string) => Promise<void>;\n  saveNeverDomain: (domain: string) => Promise<void>;\n  saveWithServer: (cipher: Cipher) => Promise<any>;\n  shareWithServer: (\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  shareManyWithServer: (\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  saveAttachmentWithServer: (\n    cipher: Cipher,\n    unencryptedFile: any,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveAttachmentRawWithServer: (\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveCollectionsWithServer: (cipher: Cipher) => Promise<any>;\n  upsert: (cipher: CipherData | CipherData[]) => Promise<any>;\n  replace: (ciphers: { [id: string]: CipherData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  moveManyWithServer: (ids: string[], folderId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  deleteManyWithServer: (ids: string[]) => Promise<any>;\n  deleteAttachment: (id: string, attachmentId: string) => Promise<void>;\n  deleteAttachmentWithServer: (id: string, attachmentId: string) => Promise<void>;\n  sortCiphersByLastUsed: (a: any, b: any) => number;\n  sortCiphersByLastUsedThenName: (a: any, b: any) => number;\n  getLocaleSortingFunction: () => (a: CipherView, b: CipherView) => number;\n  softDelete: (id: string | string[]) => Promise<any>;\n  softDeleteWithServer: (id: string) => Promise<any>;\n  softDeleteManyWithServer: (ids: string[]) => Promise<any>;\n  restore: (\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) => Promise<any>;\n  restoreWithServer: (id: string) => Promise<any>;\n  restoreManyWithServer: (ids: string[]) => Promise<any>;\n}\n","import { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\n\nexport abstract class AuditService {\n  passwordLeaked: (password: string) => Promise<number>;\n  breachedAccounts: (username: string) => Promise<BreachAccountResponse[]>;\n}\n","import { CollectionData } from \"../models/data/collectionData\";\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/treeNode\";\nimport { CollectionView } from \"../models/view/collectionView\";\n\nexport abstract class CollectionService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (model: CollectionView) => Promise<Collection>;\n  decryptMany: (collections: Collection[]) => Promise<CollectionView[]>;\n  get: (id: string) => Promise<Collection>;\n  getAll: () => Promise<Collection[]>;\n  getAllDecrypted: () => Promise<CollectionView[]>;\n  getAllNested: (collections?: CollectionView[]) => Promise<TreeNode<CollectionView>[]>;\n  getNested: (id: string) => Promise<TreeNode<CollectionView>>;\n  upsert: (collection: CollectionData | CollectionData[]) => Promise<any>;\n  replace: (collections: { [id: string]: CollectionData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n}\n","export abstract class PasswordRepromptService {\n  protectedFields: () => string[];\n  showPasswordPrompt: () => Promise<boolean>;\n  enabled: () => Promise<boolean>;\n}\n","export enum FieldType {\n  Text = 0,\n  Hidden = 1,\n  Boolean = 2,\n  Linked = 3,\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\n\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SecureNoteType } from \"@bitwarden/common/enums/secureNoteType\";\nimport { UriMatchType } from \"@bitwarden/common/enums/uriMatchType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CardView } from \"@bitwarden/common/models/view/cardView\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\nimport { IdentityView } from \"@bitwarden/common/models/view/identityView\";\nimport { LoginUriView } from \"@bitwarden/common/models/view/loginUriView\";\nimport { LoginView } from \"@bitwarden/common/models/view/loginView\";\nimport { SecureNoteView } from \"@bitwarden/common/models/view/secureNoteView\";\n\n@Directive()\nexport class AddEditComponent implements OnInit {\n  @Input() cloneMode = false;\n  @Input() folderId: string = null;\n  @Input() cipherId: string;\n  @Input() type: CipherType;\n  @Input() collectionIds: string[];\n  @Input() organizationId: string = null;\n  @Output() onSavedCipher = new EventEmitter<CipherView>();\n  @Output() onDeletedCipher = new EventEmitter<CipherView>();\n  @Output() onRestoredCipher = new EventEmitter<CipherView>();\n  @Output() onCancelled = new EventEmitter<CipherView>();\n  @Output() onEditAttachments = new EventEmitter<CipherView>();\n  @Output() onShareCipher = new EventEmitter<CipherView>();\n  @Output() onEditCollections = new EventEmitter<CipherView>();\n  @Output() onGeneratePassword = new EventEmitter();\n  @Output() onGenerateUsername = new EventEmitter();\n\n  editMode = false;\n  cipher: CipherView;\n  folders$: Observable<FolderView[]>;\n  collections: CollectionView[] = [];\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  restorePromise: Promise<any>;\n  checkPasswordPromise: Promise<number>;\n  showPassword = false;\n  showCardNumber = false;\n  showCardCode = false;\n  cipherType = CipherType;\n  typeOptions: any[];\n  cardBrandOptions: any[];\n  cardExpMonthOptions: any[];\n  identityTitleOptions: any[];\n  uriMatchOptions: any[];\n  ownershipOptions: any[] = [];\n  autofillOnPageLoadOptions: any[];\n  currentDate = new Date();\n  allowPersonal = true;\n  reprompt = false;\n  canUseReprompt = true;\n\n  protected writeableCollections: CollectionView[];\n  private previousCipherId: string;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected folderService: FolderService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected auditService: AuditService,\n    protected stateService: StateService,\n    protected collectionService: CollectionService,\n    protected messagingService: MessagingService,\n    protected eventService: EventService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected passwordRepromptService: PasswordRepromptService,\n    private organizationService: OrganizationService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"typeLogin\"), value: CipherType.Login },\n      { name: i18nService.t(\"typeCard\"), value: CipherType.Card },\n      { name: i18nService.t(\"typeIdentity\"), value: CipherType.Identity },\n      { name: i18nService.t(\"typeSecureNote\"), value: CipherType.SecureNote },\n    ];\n    this.cardBrandOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"Visa\", value: \"Visa\" },\n      { name: \"Mastercard\", value: \"Mastercard\" },\n      { name: \"American Express\", value: \"Amex\" },\n      { name: \"Discover\", value: \"Discover\" },\n      { name: \"Diners Club\", value: \"Diners Club\" },\n      { name: \"JCB\", value: \"JCB\" },\n      { name: \"Maestro\", value: \"Maestro\" },\n      { name: \"UnionPay\", value: \"UnionPay\" },\n      { name: \"RuPay\", value: \"RuPay\" },\n      { name: i18nService.t(\"cardBrandMir\"), value: \"Mir\" },\n      { name: i18nService.t(\"other\"), value: \"Other\" },\n    ];\n    this.cardExpMonthOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"01 - \" + i18nService.t(\"january\"), value: \"1\" },\n      { name: \"02 - \" + i18nService.t(\"february\"), value: \"2\" },\n      { name: \"03 - \" + i18nService.t(\"march\"), value: \"3\" },\n      { name: \"04 - \" + i18nService.t(\"april\"), value: \"4\" },\n      { name: \"05 - \" + i18nService.t(\"may\"), value: \"5\" },\n      { name: \"06 - \" + i18nService.t(\"june\"), value: \"6\" },\n      { name: \"07 - \" + i18nService.t(\"july\"), value: \"7\" },\n      { name: \"08 - \" + i18nService.t(\"august\"), value: \"8\" },\n      { name: \"09 - \" + i18nService.t(\"september\"), value: \"9\" },\n      { name: \"10 - \" + i18nService.t(\"october\"), value: \"10\" },\n      { name: \"11 - \" + i18nService.t(\"november\"), value: \"11\" },\n      { name: \"12 - \" + i18nService.t(\"december\"), value: \"12\" },\n    ];\n    this.identityTitleOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: i18nService.t(\"mr\"), value: i18nService.t(\"mr\") },\n      { name: i18nService.t(\"mrs\"), value: i18nService.t(\"mrs\") },\n      { name: i18nService.t(\"ms\"), value: i18nService.t(\"ms\") },\n      { name: i18nService.t(\"dr\"), value: i18nService.t(\"dr\") },\n    ];\n    this.uriMatchOptions = [\n      { name: i18nService.t(\"defaultMatchDetection\"), value: null },\n      { name: i18nService.t(\"baseDomain\"), value: UriMatchType.Domain },\n      { name: i18nService.t(\"host\"), value: UriMatchType.Host },\n      { name: i18nService.t(\"startsWith\"), value: UriMatchType.StartsWith },\n      { name: i18nService.t(\"regEx\"), value: UriMatchType.RegularExpression },\n      { name: i18nService.t(\"exact\"), value: UriMatchType.Exact },\n      { name: i18nService.t(\"never\"), value: UriMatchType.Never },\n    ];\n    this.autofillOnPageLoadOptions = [\n      { name: i18nService.t(\"autoFillOnPageLoadUseDefault\"), value: null },\n      { name: i18nService.t(\"autoFillOnPageLoadYes\"), value: true },\n      { name: i18nService.t(\"autoFillOnPageLoadNo\"), value: false },\n    ];\n  }\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async init() {\n    if (this.ownershipOptions.length) {\n      this.ownershipOptions = [];\n    }\n    if (await this.policyService.policyAppliesToUser(PolicyType.PersonalOwnership)) {\n      this.allowPersonal = false;\n    } else {\n      const myEmail = await this.stateService.getEmail();\n      this.ownershipOptions.push({ name: myEmail, value: null });\n    }\n\n    const orgs = await this.organizationService.getAll();\n    orgs.sort(Utils.getSortFunction(this.i18nService, \"name\")).forEach((o) => {\n      if (o.enabled && o.status === OrganizationUserStatusType.Confirmed) {\n        this.ownershipOptions.push({ name: o.name, value: o.id });\n      }\n    });\n    if (!this.allowPersonal) {\n      this.organizationId = this.ownershipOptions[0].value;\n    }\n\n    this.writeableCollections = await this.loadCollections();\n\n    this.canUseReprompt = await this.passwordRepromptService.enabled();\n  }\n\n  async load() {\n    this.editMode = this.cipherId != null;\n    if (this.editMode) {\n      this.editMode = true;\n      if (this.cloneMode) {\n        this.cloneMode = true;\n        this.title = this.i18nService.t(\"addItem\");\n      } else {\n        this.title = this.i18nService.t(\"editItem\");\n      }\n    } else {\n      this.title = this.i18nService.t(\"addItem\");\n    }\n\n    const addEditCipherInfo: any = await this.stateService.getAddEditCipherInfo();\n    if (addEditCipherInfo != null) {\n      this.cipher = addEditCipherInfo.cipher;\n      this.collectionIds = addEditCipherInfo.collectionIds;\n    }\n    await this.stateService.setAddEditCipherInfo(null);\n\n    if (this.cipher == null) {\n      if (this.editMode) {\n        const cipher = await this.loadCipher();\n        this.cipher = await cipher.decrypt();\n\n        // Adjust Cipher Name if Cloning\n        if (this.cloneMode) {\n          this.cipher.name += \" - \" + this.i18nService.t(\"clone\");\n          // If not allowing personal ownership, update cipher's org Id to prompt downstream changes\n          if (this.cipher.organizationId == null && !this.allowPersonal) {\n            this.cipher.organizationId = this.organizationId;\n          }\n        }\n      } else {\n        this.cipher = new CipherView();\n        this.cipher.organizationId = this.organizationId == null ? null : this.organizationId;\n        this.cipher.folderId = this.folderId;\n        this.cipher.type = this.type == null ? CipherType.Login : this.type;\n        this.cipher.login = new LoginView();\n        this.cipher.login.uris = [new LoginUriView()];\n        this.cipher.card = new CardView();\n        this.cipher.identity = new IdentityView();\n        this.cipher.secureNote = new SecureNoteView();\n        this.cipher.secureNote.type = SecureNoteType.Generic;\n        this.cipher.reprompt = CipherRepromptType.None;\n      }\n    }\n\n    if (this.cipher != null && (!this.editMode || addEditCipherInfo != null || this.cloneMode)) {\n      await this.organizationChanged();\n      if (\n        this.collectionIds != null &&\n        this.collectionIds.length > 0 &&\n        this.collections.length > 0\n      ) {\n        this.collections.forEach((c) => {\n          if (this.collectionIds.indexOf(c.id) > -1) {\n            (c as any).checked = true;\n          }\n        });\n      }\n    }\n\n    this.folders$ = this.folderService.folderViews$;\n\n    if (this.editMode && this.previousCipherId !== this.cipherId) {\n      this.eventService.collect(EventType.Cipher_ClientViewed, this.cipherId);\n    }\n    this.previousCipherId = this.cipherId;\n    this.reprompt = this.cipher.reprompt !== CipherRepromptType.None;\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.cipher.isDeleted) {\n      return this.restore();\n    }\n\n    if (this.cipher.name == null || this.cipher.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      !this.allowPersonal &&\n      this.cipher.organizationId == null\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"personalOwnershipSubmitError\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.uris != null &&\n      this.cipher.login.uris.length === 1 &&\n      (this.cipher.login.uris[0].uri == null || this.cipher.login.uris[0].uri === \"\")\n    ) {\n      this.cipher.login.uris = null;\n    }\n\n    // Allows saving of selected collections during \"Add\" and \"Clone\" flows\n    if ((!this.editMode || this.cloneMode) && this.cipher.organizationId != null) {\n      this.cipher.collectionIds =\n        this.collections == null\n          ? []\n          : this.collections.filter((c) => (c as any).checked).map((c) => c.id);\n    }\n\n    // Clear current Cipher Id to trigger \"Add\" cipher flow\n    if (this.cloneMode) {\n      this.cipher.id = null;\n    }\n\n    const cipher = await this.encryptCipher();\n    try {\n      this.formPromise = this.saveCipher(cipher);\n      await this.formPromise;\n      this.cipher.id = cipher.id;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode && !this.cloneMode ? \"editedItem\" : \"addedItem\")\n      );\n      this.onSavedCipher.emit(this.cipher);\n      this.messagingService.send(this.editMode && !this.cloneMode ? \"editedCipher\" : \"addedCipher\");\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  addUri() {\n    if (this.cipher.type !== CipherType.Login) {\n      return;\n    }\n\n    if (this.cipher.login.uris == null) {\n      this.cipher.login.uris = [];\n    }\n\n    this.cipher.login.uris.push(new LoginUriView());\n  }\n\n  removeUri(uri: LoginUriView) {\n    if (this.cipher.type !== CipherType.Login || this.cipher.login.uris == null) {\n      return;\n    }\n\n    const i = this.cipher.login.uris.indexOf(uri);\n    if (i > -1) {\n      this.cipher.login.uris.splice(i, 1);\n    }\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  cancel() {\n    this.onCancelled.emit(this.cipher);\n  }\n\n  attachments() {\n    this.onEditAttachments.emit(this.cipher);\n  }\n\n  share() {\n    this.onShareCipher.emit(this.cipher);\n  }\n\n  editCollections() {\n    this.onEditCollections.emit(this.cipher);\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        this.cipher.isDeleted ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(\"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.deleteCipher();\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.cipher.isDeleted ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.onDeletedCipher.emit(this.cipher);\n      this.messagingService.send(\n        this.cipher.isDeleted ? \"permanentlyDeletedCipher\" : \"deletedCipher\"\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async restore(): Promise<boolean> {\n    if (!this.cipher.isDeleted) {\n      return false;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.restorePromise = this.restoreCipher();\n      await this.restorePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.onRestoredCipher.emit(this.cipher);\n      this.messagingService.send(\"restoredCipher\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async generateUsername(): Promise<boolean> {\n    if (this.cipher.login?.username?.length) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"overwriteUsernameConfirmation\"),\n        this.i18nService.t(\"overwriteUsername\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (!confirmed) {\n        return false;\n      }\n    }\n\n    this.onGenerateUsername.emit();\n    return true;\n  }\n\n  async generatePassword(): Promise<boolean> {\n    if (this.cipher.login?.password?.length) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"overwritePasswordConfirmation\"),\n        this.i18nService.t(\"overwritePassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (!confirmed) {\n        return false;\n      }\n    }\n\n    this.onGeneratePassword.emit();\n    return true;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"loginPassword\").focus();\n    if (this.editMode && this.showPassword) {\n      this.eventService.collect(EventType.Cipher_ClientToggledPasswordVisible, this.cipherId);\n    }\n  }\n\n  async toggleCardNumber() {\n    this.showCardNumber = !this.showCardNumber;\n    if (this.showCardNumber) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardNumberVisible, this.cipherId);\n    }\n  }\n\n  toggleCardCode() {\n    this.showCardCode = !this.showCardCode;\n    document.getElementById(\"cardCode\").focus();\n    if (this.editMode && this.showCardCode) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardCodeVisible, this.cipherId);\n    }\n  }\n\n  toggleUriOptions(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null && uri.match != null ? false : !u.showOptions;\n  }\n\n  loginUriMatchChanged(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null ? true : u.showOptions;\n  }\n\n  async organizationChanged() {\n    if (this.writeableCollections != null) {\n      this.writeableCollections.forEach((c) => ((c as any).checked = false));\n    }\n    if (this.cipher.organizationId != null) {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.cipher.organizationId\n      );\n      const org = await this.organizationService.get(this.cipher.organizationId);\n      if (org != null) {\n        this.cipher.organizationUseTotp = org.useTotp;\n      }\n    } else {\n      this.collections = [];\n    }\n  }\n\n  async checkPassword() {\n    if (this.checkPasswordPromise != null) {\n      return;\n    }\n\n    if (\n      this.cipher.login == null ||\n      this.cipher.login.password == null ||\n      this.cipher.login.password === \"\"\n    ) {\n      return;\n    }\n\n    this.checkPasswordPromise = this.auditService.passwordLeaked(this.cipher.login.password);\n    const matches = await this.checkPasswordPromise;\n    this.checkPasswordPromise = null;\n\n    if (matches > 0) {\n      this.platformUtilsService.showToast(\n        \"warning\",\n        null,\n        this.i18nService.t(\"passwordExposed\", matches.toString())\n      );\n    } else {\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"passwordSafe\"));\n    }\n  }\n\n  repromptChanged() {\n    this.reprompt = !this.reprompt;\n    if (this.reprompt) {\n      this.cipher.reprompt = CipherRepromptType.Password;\n    } else {\n      this.cipher.reprompt = CipherRepromptType.None;\n    }\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter((c) => !c.readOnly);\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected encryptCipher() {\n    return this.cipherService.encrypt(this.cipher);\n  }\n\n  protected saveCipher(cipher: Cipher) {\n    return this.cipherService.saveWithServer(cipher);\n  }\n\n  protected deleteCipher() {\n    return this.cipher.isDeleted\n      ? this.cipherService.deleteWithServer(this.cipher.id)\n      : this.cipherService.softDeleteWithServer(this.cipher.id);\n  }\n\n  protected restoreCipher() {\n    return this.cipherService.restoreWithServer(this.cipher.id);\n  }\n}\n","import { CdkDragDrop, moveItemInArray } from \"@angular/cdk/drag-drop\";\nimport { Directive, Input, OnChanges, SimpleChanges } from \"@angular/core\";\n\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { FieldType } from \"@bitwarden/common/enums/fieldType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { FieldView } from \"@bitwarden/common/models/view/fieldView\";\n\n@Directive()\nexport class AddEditCustomFieldsComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  @Input() thisCipherType: CipherType;\n  @Input() editMode: boolean;\n\n  addFieldType: FieldType = FieldType.Text;\n  addFieldTypeOptions: any[];\n  addFieldLinkedTypeOption: any;\n  linkedFieldOptions: any[] = [];\n\n  cipherType = CipherType;\n  fieldType = FieldType;\n  eventType = EventType;\n\n  constructor(private i18nService: I18nService, private eventService: EventService) {\n    this.addFieldTypeOptions = [\n      { name: i18nService.t(\"cfTypeText\"), value: FieldType.Text },\n      { name: i18nService.t(\"cfTypeHidden\"), value: FieldType.Hidden },\n      { name: i18nService.t(\"cfTypeBoolean\"), value: FieldType.Boolean },\n    ];\n    this.addFieldLinkedTypeOption = {\n      name: this.i18nService.t(\"cfTypeLinked\"),\n      value: FieldType.Linked,\n    };\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.thisCipherType != null) {\n      this.setLinkedFieldOptions();\n\n      if (!changes.thisCipherType.firstChange) {\n        this.resetCipherLinkedFields();\n      }\n    }\n  }\n\n  addField() {\n    if (this.cipher.fields == null) {\n      this.cipher.fields = [];\n    }\n\n    const f = new FieldView();\n    f.type = this.addFieldType;\n    f.newField = true;\n\n    if (f.type === FieldType.Linked) {\n      f.linkedId = this.linkedFieldOptions[0].value;\n    }\n\n    this.cipher.fields.push(f);\n  }\n\n  removeField(field: FieldView) {\n    const i = this.cipher.fields.indexOf(field);\n    if (i > -1) {\n      this.cipher.fields.splice(i, 1);\n    }\n  }\n\n  toggleFieldValue(field: FieldView) {\n    const f = field as any;\n    f.showValue = !f.showValue;\n    if (this.editMode && f.showValue) {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipher.id);\n    }\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.cipher.fields, event.previousIndex, event.currentIndex);\n  }\n\n  private setLinkedFieldOptions() {\n    if (this.cipher.linkedFieldOptions == null) {\n      return;\n    }\n\n    const options: any = [];\n    this.cipher.linkedFieldOptions.forEach((linkedFieldOption, id) =>\n      options.push({ name: this.i18nService.t(linkedFieldOption.i18nKey), value: id })\n    );\n    this.linkedFieldOptions = options.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  private resetCipherLinkedFields() {\n    if (this.cipher.fields == null || this.cipher.fields.length === 0) {\n      return;\n    }\n\n    // Delete any Linked custom fields if the item type does not support them\n    if (this.cipher.linkedFieldOptions == null) {\n      this.cipher.fields = this.cipher.fields.filter((f) => f.type !== FieldType.Linked);\n      return;\n    }\n\n    this.cipher.fields\n      .filter((f) => f.type === FieldType.Linked)\n      .forEach((f) => (f.linkedId = this.linkedFieldOptions[0].value));\n  }\n}\n","import { Directive, ElementRef, forwardRef, HostListener, Input, Renderer2 } from \"@angular/core\";\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\n// ref: https://juristr.com/blog/2018/02/ng-true-value-directive/\n@Directive({\n  selector: \"input[type=checkbox][appTrueFalseValue]\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TrueFalseValueDirective),\n      multi: true,\n    },\n  ],\n})\nexport class TrueFalseValueDirective implements ControlValueAccessor {\n  @Input() trueValue = true;\n  @Input() falseValue = false;\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {}\n\n  @HostListener(\"change\", [\"$event\"])\n  onHostChange(ev: any) {\n    this.propagateChange(ev.target.checked ? this.trueValue : this.falseValue);\n  }\n\n  writeValue(obj: any): void {\n    if (obj === this.trueValue) {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", true);\n    } else {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", false);\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    /* nothing */\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    /* nothing */\n  }\n\n  private propagateChange = (_: any) => {\n    /* nothing */\n  };\n}\n","<div class=\"box\">\n  <h2 class=\"box-header\">\n    {{ \"customFields\" | i18n }}\n  </h2>\n  <div class=\"box-content\">\n    <!-- Current custom fields -->\n    <div cdkDropList (cdkDropListDropped)=\"drop($event)\" *ngIf=\"cipher.hasFields\">\n      <div\n        role=\"group\"\n        class=\"box-content-row box-content-row-multi box-draggable-row\"\n        appBoxRow\n        cdkDrag\n        *ngFor=\"let f of cipher.fields; let i = index; trackBy: trackByFunction\"\n        [ngClass]=\"{ 'box-content-row-checkbox': f.type === fieldType.Boolean }\"\n        attr.aria-label=\"{{ f.name }}\"\n      >\n        <button\n          type=\"button\"\n          appStopClick\n          (click)=\"removeField(f)\"\n          appA11yTitle=\"{{ 'remove' | i18n }}\"\n        >\n          <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n        </button>\n        <label for=\"fieldName{{ i }}\" class=\"sr-only\">{{ \"name\" | i18n }}</label>\n        <label for=\"fieldValue{{ i }}\" class=\"sr-only\">{{ \"value\" | i18n }}</label>\n        <div class=\"row-main\">\n          <input\n            id=\"fieldName{{ i }}\"\n            type=\"text\"\n            name=\"Field.Name{{ i }}\"\n            [(ngModel)]=\"f.name\"\n            class=\"row-label\"\n            placeholder=\"{{ 'name' | i18n }}\"\n            appInputVerbatim\n          />\n          <!-- Text -->\n          <input\n            id=\"fieldValue{{ i }}\"\n            type=\"text\"\n            name=\"Field.Value{{ i }}\"\n            [(ngModel)]=\"f.value\"\n            *ngIf=\"f.type === fieldType.Text\"\n            placeholder=\"{{ 'value' | i18n }}\"\n            appInputVerbatim\n            attr.aria-describedby=\"fieldName{{ i }}\"\n          />\n          <!-- Hidden -->\n          <input\n            id=\"fieldValue{{ i }}\"\n            type=\"{{ f.showValue ? 'text' : 'password' }}\"\n            name=\"Field.Value{{ i }}\"\n            [(ngModel)]=\"f.value\"\n            class=\"monospaced\"\n            appInputVerbatim\n            *ngIf=\"f.type === fieldType.Hidden\"\n            placeholder=\"{{ 'value' | i18n }}\"\n            [disabled]=\"!cipher.viewPassword && !f.newField\"\n            attr.aria-describedby=\"fieldName{{ i }}\"\n          />\n          <!-- Linked -->\n          <select\n            id=\"fieldValue{{ i }}\"\n            name=\"Field.Value{{ i }}\"\n            [(ngModel)]=\"f.linkedId\"\n            *ngIf=\"f.type === fieldType.Linked && cipher.linkedFieldOptions != null\"\n            attr.aria-describedby=\"fieldName{{ i }}\"\n          >\n            <option *ngFor=\"let o of linkedFieldOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n        <!-- Boolean -->\n        <input\n          id=\"fieldValue{{ i }}\"\n          name=\"Field.Value{{ i }}\"\n          type=\"checkbox\"\n          [(ngModel)]=\"f.value\"\n          *ngIf=\"f.type === fieldType.Boolean\"\n          appTrueFalseValue\n          trueValue=\"true\"\n          falseValue=\"false\"\n          attr.aria-describedby=\"fieldName{{ i }}\"\n        />\n        <div\n          class=\"action-buttons\"\n          *ngIf=\"f.type === fieldType.Hidden && (cipher.viewPassword || f.newField)\"\n        >\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n            (click)=\"toggleFieldValue(f)\"\n            [attr.aria-pressed]=\"f.showValue\"\n          >\n            <i\n              class=\"bwi bwi-lg\"\n              aria-hidden=\"true\"\n              [ngClass]=\"{ 'bwi-eye': !f.showValue, 'bwi-eye-slash': f.showValue }\"\n            ></i>\n          </button>\n        </div>\n        <div class=\"drag-handle\" appA11yTitle=\"{{ 'dragToSort' | i18n }}\" cdkDragHandle>\n          <i class=\"bwi bwi-hamburger\" aria-hidden=\"true\"></i>\n        </div>\n      </div>\n    </div>\n    <!-- Add new custom field -->\n    <div class=\"box-content-row box-content-row-newmulti\" appBoxRow>\n      <button type=\"button\" appStopClick (click)=\"addField()\">\n        <i class=\"bwi bwi-plus-circle bwi-fw bwi-lg\" aria-hidden=\"true\"></i>\n        {{ \"newCustomField\" | i18n }}\n      </button>\n      <label for=\"addFieldType\" class=\"sr-only\">{{ \"type\" | i18n }}</label>\n      <select id=\"addFieldType\" name=\"AddFieldType\" [(ngModel)]=\"addFieldType\" class=\"field-type\">\n        <option *ngFor=\"let o of addFieldTypeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        <option\n          *ngIf=\"cipher.linkedFieldOptions != null\"\n          [ngValue]=\"addFieldLinkedTypeOption.value\"\n        >\n          {{ addFieldLinkedTypeOption.name }}\n        </option>\n      </select>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { AddEditCustomFieldsComponent as BaseAddEditCustomFieldsComponent } from \"@bitwarden/angular/components/add-edit-custom-fields.component\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n@Component({\n  selector: \"app-vault-add-edit-custom-fields\",\n  templateUrl: \"add-edit-custom-fields.component.html\",\n})\nexport class AddEditCustomFieldsComponent extends BaseAddEditCustomFieldsComponent {\n  constructor(i18nService: I18nService, eventService: EventService) {\n    super(i18nService, eventService);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" (click)=\"cancel()\">{{ \"cancel\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ title }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\" *ngIf=\"cipher\">\n    <app-callout type=\"info\" *ngIf=\"allowOwnershipOptions() && !allowPersonal\">\n      {{ \"personalOwnershipPolicyInEffect\" | i18n }}\n    </app-callout>\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"itemInformation\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" *ngIf=\"!editMode\" appBoxRow>\n          <label for=\"type\">{{ \"type\" | i18n }}</label>\n          <select id=\"type\" name=\"Type\" [(ngModel)]=\"cipher.type\">\n            <option *ngFor=\"let o of typeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input id=\"name\" type=\"text\" name=\"Name\" [(ngModel)]=\"cipher.name\" />\n        </div>\n        <!-- Login -->\n        <div *ngIf=\"cipher.type === cipherType.Login\">\n          <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n            <div class=\"row-main\">\n              <label for=\"loginUsername\">{{ \"username\" | i18n }}</label>\n              <input\n                id=\"loginUsername\"\n                type=\"text\"\n                name=\"Login.Username\"\n                [(ngModel)]=\"cipher.login.username\"\n                inputmode=\"email\"\n                appInputVerbatim\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'generateUsername' | i18n }}\"\n                (click)=\"generateUsername()\"\n              >\n                <i class=\"bwi bwi-lg bwi-generate\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n            <div class=\"row-main\">\n              <label for=\"loginPassword\">{{ \"password\" | i18n }}</label>\n              <input\n                id=\"loginPassword\"\n                class=\"monospaced\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"Login.Password\"\n                [(ngModel)]=\"cipher.login.password\"\n                appInputVerbatim\n                [disabled]=\"!cipher.viewPassword\"\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                #checkPasswordBtn\n                class=\"row-btn btn\"\n                appA11yTitle=\"{{ 'checkPassword' | i18n }}\"\n                (click)=\"checkPassword()\"\n                [appApiAction]=\"checkPasswordPromise\"\n                [disabled]=\"checkPasswordBtn.loading\"\n                *ngIf=\"cipher.viewPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg bwi-check-circle\"\n                  [hidden]=\"checkPasswordBtn.loading\"\n                  aria-hidden=\"true\"\n                ></i>\n                <i\n                  class=\"bwi bwi-lg bwi-spinner bwi-spin\"\n                  [hidden]=\"!checkPasswordBtn.loading\"\n                  aria-hidden=\"true\"\n                ></i>\n              </button>\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword()\"\n                *ngIf=\"cipher.viewPassword\"\n                [attr.aria-pressed]=\"showPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'generatePassword' | i18n }}\"\n                (click)=\"generatePassword()\"\n                *ngIf=\"cipher.viewPassword\"\n              >\n                <i class=\"bwi bwi-lg bwi-generate\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"loginTotp\">{{ \"authenticatorKeyTotp\" | i18n }}</label>\n            <input\n              id=\"loginTotp\"\n              type=\"{{ cipher.viewPassword ? 'text' : 'password' }}\"\n              name=\"Login.Totp\"\n              class=\"monospaced\"\n              [(ngModel)]=\"cipher.login.totp\"\n              appInputVerbatim\n              [disabled]=\"!cipher.viewPassword\"\n            />\n          </div>\n        </div>\n        <!-- Card -->\n        <div *ngIf=\"cipher.type === cipherType.Card\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"cardCardholderName\">{{ \"cardholderName\" | i18n }}</label>\n            <input\n              id=\"cardCardholderName\"\n              type=\"text\"\n              name=\"Card.CardCardholderName\"\n              [(ngModel)]=\"cipher.card.cardholderName\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n            <div class=\"row-main\">\n              <label for=\"cardNumber\">{{ \"number\" | i18n }}</label>\n              <input\n                id=\"cardNumber\"\n                class=\"monospaced\"\n                type=\"{{ showCardNumber ? 'text' : 'password' }}\"\n                name=\"Card.Number\"\n                [(ngModel)]=\"cipher.card.number\"\n                appInputVerbatim\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"toggleCardNumber()\"\n                [attr.aria-pressed]=\"showCardNumber\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showCardNumber, 'bwi-eye-slash': showCardNumber }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"cardBrand\">{{ \"brand\" | i18n }}</label>\n            <select id=\"cardBrand\" name=\"Card.Brand\" [(ngModel)]=\"cipher.card.brand\">\n              <option *ngFor=\"let o of cardBrandOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n            </select>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"cardExpMonth\">{{ \"expirationMonth\" | i18n }}</label>\n            <select id=\"cardExpMonth\" name=\"Card.ExpMonth\" [(ngModel)]=\"cipher.card.expMonth\">\n              <option *ngFor=\"let o of cardExpMonthOptions\" [ngValue]=\"o.value\">\n                {{ o.name }}\n              </option>\n            </select>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"cardExpYear\">{{ \"expirationYear\" | i18n }}</label>\n            <input\n              id=\"cardExpYear\"\n              type=\"text\"\n              name=\"Card.ExpYear\"\n              [(ngModel)]=\"cipher.card.expYear\"\n              placeholder=\"{{ 'ex' | i18n }} {{ currentDate | date: 'yyyy' }}\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n            <div class=\"row-main\">\n              <label for=\"cardCode\">{{ \"securityCode\" | i18n }}</label>\n              <input\n                id=\"cardCode\"\n                class=\"monospaced\"\n                type=\"{{ showCardCode ? 'text' : 'password' }}\"\n                name=\"Card.Code\"\n                [(ngModel)]=\"cipher.card.code\"\n                appInputVerbatim\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"toggleCardCode()\"\n                [attr.aria-pressed]=\"showCardCode\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showCardCode, 'bwi-eye-slash': showCardCode }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n        </div>\n        <!-- Identity -->\n        <div *ngIf=\"cipher.type === cipherType.Identity\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idTitle\">{{ \"title\" | i18n }}</label>\n            <select id=\"idTitle\" name=\"Identity.Title\" [(ngModel)]=\"cipher.identity.title\">\n              <option *ngFor=\"let o of identityTitleOptions\" [ngValue]=\"o.value\">\n                {{ o.name }}\n              </option>\n            </select>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idFirstName\">{{ \"firstName\" | i18n }}</label>\n            <input\n              id=\"idFirstName\"\n              type=\"text\"\n              name=\"Identity.FirstName\"\n              [(ngModel)]=\"cipher.identity.firstName\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idMiddleName\">{{ \"middleName\" | i18n }}</label>\n            <input\n              id=\"idMiddleName\"\n              type=\"text\"\n              name=\"Identity.MiddleName\"\n              [(ngModel)]=\"cipher.identity.middleName\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idLastName\">{{ \"lastName\" | i18n }}</label>\n            <input\n              id=\"idLastName\"\n              type=\"text\"\n              name=\"Identity.LastName\"\n              [(ngModel)]=\"cipher.identity.lastName\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idUsername\">{{ \"username\" | i18n }}</label>\n            <input\n              id=\"idUsername\"\n              type=\"text\"\n              name=\"Identity.Username\"\n              [(ngModel)]=\"cipher.identity.username\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idCompany\">{{ \"company\" | i18n }}</label>\n            <input\n              id=\"idCompany\"\n              type=\"text\"\n              name=\"Identity.Company\"\n              [(ngModel)]=\"cipher.identity.company\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idSsn\">{{ \"ssn\" | i18n }}</label>\n            <input\n              id=\"idSsn\"\n              type=\"text\"\n              name=\"Identity.SSN\"\n              [(ngModel)]=\"cipher.identity.ssn\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idPassportNumber\">{{ \"passportNumber\" | i18n }}</label>\n            <input\n              id=\"idPassportNumber\"\n              type=\"text\"\n              name=\"Identity.PassportNumber\"\n              [(ngModel)]=\"cipher.identity.passportNumber\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idLicenseNumber\">{{ \"licenseNumber\" | i18n }}</label>\n            <input\n              id=\"idLicenseNumber\"\n              type=\"text\"\n              name=\"Identity.LicenseNumber\"\n              [(ngModel)]=\"cipher.identity.licenseNumber\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idEmail\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"idEmail\"\n              type=\"text\"\n              name=\"Identity.Email\"\n              [(ngModel)]=\"cipher.identity.email\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idPhone\">{{ \"phone\" | i18n }}</label>\n            <input\n              id=\"idPhone\"\n              type=\"text\"\n              name=\"Identity.Phone\"\n              [(ngModel)]=\"cipher.identity.phone\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idAddress1\">{{ \"address1\" | i18n }}</label>\n            <input\n              id=\"idAddress1\"\n              type=\"text\"\n              name=\"Identity.Address1\"\n              [(ngModel)]=\"cipher.identity.address1\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idAddress2\">{{ \"address2\" | i18n }}</label>\n            <input\n              id=\"idAddress2\"\n              type=\"text\"\n              name=\"Identity.Address2\"\n              [(ngModel)]=\"cipher.identity.address2\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idAddress3\">{{ \"address3\" | i18n }}</label>\n            <input\n              id=\"idAddress3\"\n              type=\"text\"\n              name=\"Identity.Address3\"\n              [(ngModel)]=\"cipher.identity.address3\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idCity\">{{ \"cityTown\" | i18n }}</label>\n            <input\n              id=\"idCity\"\n              type=\"text\"\n              name=\"Identity.City\"\n              [(ngModel)]=\"cipher.identity.city\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idState\">{{ \"stateProvince\" | i18n }}</label>\n            <input\n              id=\"idState\"\n              type=\"text\"\n              name=\"Identity.State\"\n              [(ngModel)]=\"cipher.identity.state\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idPostalCode\">{{ \"zipPostalCode\" | i18n }}</label>\n            <input\n              id=\"idPostalCode\"\n              type=\"text\"\n              name=\"Identity.PostalCode\"\n              [(ngModel)]=\"cipher.identity.postalCode\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idCountry\">{{ \"country\" | i18n }}</label>\n            <input\n              id=\"idCountry\"\n              type=\"text\"\n              name=\"Identity.Country\"\n              [(ngModel)]=\"cipher.identity.country\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"cipher.type === cipherType.Login\">\n      <div class=\"box-content\">\n        <ng-container *ngIf=\"cipher.login.hasUris\">\n          <div\n            role=\"group\"\n            class=\"box-content-row box-content-row-multi\"\n            appBoxRow\n            *ngFor=\"let u of cipher.login.uris; let i = index; trackBy: trackByFunction\"\n            attr.aria-label=\"{{ 'uriPosition' | i18n: i + 1 }}\"\n          >\n            <button\n              type=\"button\"\n              appStopClick\n              (click)=\"removeUri(u)\"\n              appA11yTitle=\"{{ 'remove' | i18n }}\"\n            >\n              <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"row-main\">\n              <label for=\"loginUri{{ i }}\">{{ \"uriPosition\" | i18n: i + 1 }}</label>\n              <input\n                id=\"loginUri{{ i }}\"\n                type=\"text\"\n                name=\"Login.Uris[{{ i }}].Uri\"\n                [(ngModel)]=\"u.uri\"\n                [hidden]=\"u.showUriOptionsInput === true\"\n                placeholder=\"{{ 'ex' | i18n }} https://google.com\"\n                inputmode=\"url\"\n                appInputVerbatim\n              />\n              <label for=\"loginUriMatch{{ i }}\" class=\"sr-only\">\n                {{ \"currentUri\" | i18n }} {{ i + 1 }}\n              </label>\n              <select\n                *ngIf=\"currentUris && currentUris.length\"\n                id=\"currentUris{{ i }}\"\n                name=\"Login.Uris[{{ i }}].CurrentUris\"\n                [(ngModel)]=\"u.uri\"\n                [hidden]=\"!u.showCurrentUris\"\n              >\n                <option [ngValue]=\"null\">-- {{ \"select\" | i18n }} --</option>\n                <option *ngFor=\"let u of currentUris\" [ngValue]=\"u\">{{ u }}</option>\n              </select>\n              <label for=\"loginUriMatch{{ i }}\" class=\"sr-only\">\n                {{ \"matchDetection\" | i18n }} {{ i + 1 }}\n              </label>\n              <select\n                id=\"loginUriMatch{{ i }}\"\n                name=\"Login.Uris[{{ i }}].Match\"\n                [(ngModel)]=\"u.match\"\n                [hidden]=\"u.showOptions === false || (u.showOptions == null && u.match == null)\"\n                (change)=\"loginUriMatchChanged(u)\"\n              >\n                <option *ngFor=\"let o of uriMatchOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n              </select>\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                *ngIf=\"currentUris && currentUris.length\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'toggleCurrentUris' | i18n }}\"\n                (click)=\"toggleUriInput(u)\"\n                [attr.aria-pressed]=\"u.showCurrentUris === true\"\n              >\n                <i aria-hidden=\"true\" class=\"bwi bwi-lg bwi-list\"></i>\n              </button>\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appA11yTitle=\"{{ 'toggleOptions' | i18n }}\"\n                (click)=\"toggleUriOptions(u)\"\n                [attr.aria-pressed]=\"u.showOptions === true\"\n              >\n                <i class=\"bwi bwi-lg bwi-cog\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n        </ng-container>\n        <button\n          type=\"button\"\n          appStopClick\n          (click)=\"addUri()\"\n          class=\"box-content-row box-content-row-newmulti\"\n        >\n          <i class=\"bwi bwi-plus-circle bwi-fw bwi-lg\" aria-hidden=\"true\"></i> {{ \"newUri\" | i18n }}\n        </button>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"showAutoFillOnPageLoadOptions\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"autofillOnPageLoad\">{{ \"itemAutoFillOnPageLoad\" | i18n }} </label>\n          <select\n            id=\"autofillOnPageLoad\"\n            name=\"AutofillOnPageLoad\"\n            [(ngModel)]=\"cipher.login.autofillOnPageLoad\"\n          >\n            <option *ngFor=\"let o of autofillOnPageLoadOptions\" [ngValue]=\"o.value\">\n              {{ o.name }}\n            </option>\n          </select>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"folder\">{{ \"folder\" | i18n }}</label>\n          <select id=\"folder\" name=\"FolderId\" [(ngModel)]=\"cipher.folderId\">\n            <option *ngFor=\"let f of folders$ | async\" [ngValue]=\"f.id\">{{ f.name }}</option>\n          </select>\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"favorite\">{{ \"favorite\" | i18n }}</label>\n          <input id=\"favorite\" type=\"checkbox\" name=\"Favorite\" [(ngModel)]=\"cipher.favorite\" />\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow *ngIf=\"canUseReprompt\">\n          <label for=\"passwordPrompt\">\n            {{ \"passwordPrompt\" | i18n }}\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n              href=\"https://bitwarden.com/help/managing-items/#protect-individual-items\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </label>\n          <input\n            id=\"passwordPrompt\"\n            type=\"checkbox\"\n            name=\"PasswordPrompt\"\n            [ngModel]=\"reprompt\"\n            (change)=\"repromptChanged()\"\n          />\n        </div>\n        <button\n          type=\"button\"\n          class=\"box-content-row box-content-row-flex text-default\"\n          appStopClick\n          (click)=\"attachments()\"\n          *ngIf=\"editMode && showAttachments && !cloneMode\"\n        >\n          <div class=\"row-main\">{{ \"attachments\" | i18n }}</div>\n          <i\n            class=\"bwi bwi-external-link bwi-lg bwi-fw\"\n            aria-hidden=\"true\"\n            *ngIf=\"openAttachmentsInPopup\"\n          ></i>\n          <i\n            class=\"bwi bwi-angle-right row-sub-icon\"\n            aria-hidden=\"true\"\n            *ngIf=\"!openAttachmentsInPopup\"\n          ></i>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row box-content-row-flex text-default\"\n          appStopClick\n          (click)=\"editCollections()\"\n          *ngIf=\"editMode && cipher.organizationId && !cloneMode\"\n        >\n          <div class=\"row-main\">{{ \"collections\" | i18n }}</div>\n          <i class=\"bwi bwi-angle-right row-sub-icon\" aria-hidden=\"true\"></i>\n        </button>\n      </div>\n    </div>\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <textarea id=\"notes\" name=\"Notes\" rows=\"6\" [(ngModel)]=\"cipher.notes\"></textarea>\n        </div>\n      </div>\n    </div>\n    <app-vault-add-edit-custom-fields\n      [cipher]=\"cipher\"\n      [thisCipherType]=\"cipher.type\"\n      [editMode]=\"editMode\"\n    >\n    </app-vault-add-edit-custom-fields>\n    <div class=\"box\" *ngIf=\"allowOwnershipOptions()\">\n      <h2 class=\"box-header\">\n        {{ \"ownership\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"organizationId\">{{ \"whoOwnsThisItem\" | i18n }}</label>\n          <select\n            id=\"organizationId\"\n            class=\"form-control\"\n            name=\"OrganizationId\"\n            [(ngModel)]=\"cipher.organizationId\"\n            (change)=\"organizationChanged()\"\n          >\n            <option *ngFor=\"let o of ownershipOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"(!editMode || cloneMode) && cipher.organizationId\">\n      <h2 class=\"box-header\">\n        {{ \"collections\" | i18n }}\n      </h2>\n      <div class=\"box-content\" *ngIf=\"!collections || !collections.length\">\n        <div class=\"box-content-row padded no-hover\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n      </div>\n      <div class=\"box-content\" *ngIf=\"collections && collections.length\">\n        <div\n          class=\"box-content-row box-content-row-checkbox\"\n          *ngFor=\"let c of collections; let i = index\"\n          appBoxRow\n        >\n          <label for=\"collection_{{ i }}\">{{ c.name }}</label>\n          <input\n            id=\"collection_{{ i }}\"\n            type=\"checkbox\"\n            [(ngModel)]=\"c.checked\"\n            name=\"Collection[{{ i }}].Checked\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"editMode && !cloneMode\">\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"delete()\"\n          [appApiAction]=\"deletePromise\"\n          #deleteBtn\n        >\n          <div class=\"row-main text-danger\">\n            <div class=\"icon text-danger\" aria-hidden=\"true\">\n              <i class=\"bwi bwi-trash bwi-lg bwi-fw\" [hidden]=\"deleteBtn.loading\"></i>\n              <i class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\" [hidden]=\"!deleteBtn.loading\"></i>\n            </div>\n            <span>{{ \"deleteItem\" | i18n }}</span>\n          </div>\n        </button>\n      </div>\n    </div>\n  </main>\n</form>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"@bitwarden/angular/components/add-edit.component\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { LoginUriView } from \"@bitwarden/common/models/view/loginUriView\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\n@Component({\n  selector: \"app-vault-add-edit\",\n  templateUrl: \"add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n  currentUris: string[];\n  showAttachments = true;\n  openAttachmentsInPopup: boolean;\n  showAutoFillOnPageLoadOptions: boolean;\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    messagingService: MessagingService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    eventService: EventService,\n    policyService: PolicyService,\n    private popupUtilsService: PopupUtilsService,\n    organizationService: OrganizationService,\n    passwordRepromptService: PasswordRepromptService,\n    logService: LogService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      messagingService,\n      eventService,\n      policyService,\n      logService,\n      passwordRepromptService,\n      organizationService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.cipherId) {\n        this.cipherId = params.cipherId;\n      }\n      if (params.folderId) {\n        this.folderId = params.folderId;\n      }\n      if (params.collectionId) {\n        const collection = this.writeableCollections.find((c) => c.id === params.collectionId);\n        if (collection != null) {\n          this.collectionIds = [collection.id];\n          this.organizationId = collection.organizationId;\n        }\n      }\n      if (params.type) {\n        const type = parseInt(params.type, null);\n        this.type = type;\n      }\n      this.editMode = !params.cipherId;\n\n      if (params.cloneMode != null) {\n        this.cloneMode = params.cloneMode === \"true\";\n      }\n      if (params.selectedVault) {\n        this.organizationId = params.selectedVault;\n      }\n      await this.load();\n\n      if (!this.editMode || this.cloneMode) {\n        if (\n          !this.popupUtilsService.inPopout(window) &&\n          params.name &&\n          (this.cipher.name == null || this.cipher.name === \"\")\n        ) {\n          this.cipher.name = params.name;\n        }\n        if (\n          !this.popupUtilsService.inPopout(window) &&\n          params.uri &&\n          (this.cipher.login.uris[0].uri == null || this.cipher.login.uris[0].uri === \"\")\n        ) {\n          this.cipher.login.uris[0].uri = params.uri;\n        }\n      }\n\n      this.openAttachmentsInPopup = this.popupUtilsService.inPopup(window);\n    });\n\n    if (!this.editMode) {\n      const tabs = await BrowserApi.tabsQuery({ windowType: \"normal\" });\n      this.currentUris =\n        tabs == null\n          ? null\n          : tabs.filter((tab) => tab.url != null && tab.url !== \"\").map((tab) => tab.url);\n    }\n\n    window.setTimeout(() => {\n      if (!this.editMode) {\n        if (this.cipher.name != null && this.cipher.name !== \"\") {\n          document.getElementById(\"loginUsername\").focus();\n        } else {\n          document.getElementById(\"name\").focus();\n        }\n      }\n    }, 200);\n  }\n\n  async load() {\n    await super.load();\n    this.showAutoFillOnPageLoadOptions =\n      this.cipher.type === CipherType.Login &&\n      (await this.stateService.getEnableAutoFillOnPageLoad());\n  }\n\n  async submit(): Promise<boolean> {\n    if (await super.submit()) {\n      if (this.cloneMode) {\n        this.router.navigate([\"/tabs/vault\"]);\n      } else {\n        this.location.back();\n      }\n      return true;\n    }\n\n    return false;\n  }\n\n  attachments() {\n    super.attachments();\n\n    if (this.openAttachmentsInPopup) {\n      const destinationUrl = this.router\n        .createUrlTree([\"/attachments\"], { queryParams: { cipherId: this.cipher.id } })\n        .toString();\n      const currentBaseUrl = window.location.href.replace(this.router.url, \"\");\n      this.popupUtilsService.popOut(window, currentBaseUrl + destinationUrl);\n    } else {\n      this.router.navigate([\"/attachments\"], { queryParams: { cipherId: this.cipher.id } });\n    }\n  }\n\n  editCollections() {\n    super.editCollections();\n    if (this.cipher.organizationId != null) {\n      this.router.navigate([\"/collections\"], { queryParams: { cipherId: this.cipher.id } });\n    }\n  }\n\n  cancel() {\n    super.cancel();\n    this.location.back();\n  }\n\n  async generateUsername(): Promise<boolean> {\n    const confirmed = await super.generateUsername();\n    if (confirmed) {\n      await this.saveCipherState();\n      this.router.navigate([\"generator\"], { queryParams: { type: \"username\" } });\n    }\n    return confirmed;\n  }\n\n  async generatePassword(): Promise<boolean> {\n    const confirmed = await super.generatePassword();\n    if (confirmed) {\n      await this.saveCipherState();\n      this.router.navigate([\"generator\"], { queryParams: { type: \"password\" } });\n    }\n    return confirmed;\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await super.delete();\n    if (confirmed) {\n      this.router.navigate([\"/tabs/vault\"]);\n    }\n    return confirmed;\n  }\n\n  toggleUriInput(uri: LoginUriView) {\n    const u = uri as any;\n    u.showCurrentUris = !u.showCurrentUris;\n  }\n\n  allowOwnershipOptions(): boolean {\n    return (\n      (!this.editMode || this.cloneMode) &&\n      this.ownershipOptions &&\n      (this.ownershipOptions.length > 1 || !this.allowPersonal)\n    );\n  }\n\n  private saveCipherState() {\n    return this.stateService.setAddEditCipherInfo({\n      cipher: this.cipher,\n      collectionIds:\n        this.collections == null\n          ? []\n          : this.collections.filter((c) => (c as any).checked).map((c) => c.id),\n    });\n  }\n}\n","import { EncryptionType } from \"@bitwarden/common/enums/encryptionType\";\nimport { IEncrypted } from \"@bitwarden/common/interfaces/IEncrypted\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nconst ENC_TYPE_LENGTH = 1;\nconst IV_LENGTH = 16;\nconst MAC_LENGTH = 32;\nconst MIN_DATA_LENGTH = 1;\n\nexport class EncArrayBuffer implements IEncrypted {\n  readonly encryptionType: EncryptionType = null;\n  readonly dataBytes: ArrayBuffer = null;\n  readonly ivBytes: ArrayBuffer = null;\n  readonly macBytes: ArrayBuffer = null;\n\n  constructor(readonly buffer: ArrayBuffer) {\n    const encBytes = new Uint8Array(buffer);\n    const encType = encBytes[0];\n\n    switch (encType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64: {\n        const minimumLength = ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH + MIN_DATA_LENGTH;\n        if (encBytes.length < minimumLength) {\n          this.throwDecryptionError();\n        }\n\n        this.ivBytes = encBytes.slice(ENC_TYPE_LENGTH, ENC_TYPE_LENGTH + IV_LENGTH).buffer;\n        this.macBytes = encBytes.slice(\n          ENC_TYPE_LENGTH + IV_LENGTH,\n          ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH\n        ).buffer;\n        this.dataBytes = encBytes.slice(ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH).buffer;\n        break;\n      }\n      case EncryptionType.AesCbc256_B64: {\n        const minimumLength = ENC_TYPE_LENGTH + IV_LENGTH + MIN_DATA_LENGTH;\n        if (encBytes.length < minimumLength) {\n          this.throwDecryptionError();\n        }\n\n        this.ivBytes = encBytes.slice(ENC_TYPE_LENGTH, ENC_TYPE_LENGTH + IV_LENGTH).buffer;\n        this.dataBytes = encBytes.slice(ENC_TYPE_LENGTH + IV_LENGTH).buffer;\n        break;\n      }\n      default:\n        this.throwDecryptionError();\n    }\n\n    this.encryptionType = encType;\n  }\n\n  private throwDecryptionError() {\n    throw new Error(\n      \"Error parsing encrypted ArrayBuffer: data is corrupted or has an invalid format.\"\n    );\n  }\n\n  static async fromResponse(response: {\n    arrayBuffer: () => Promise<ArrayBuffer>;\n  }): Promise<EncArrayBuffer> {\n    const buffer = await response.arrayBuffer();\n    if (buffer == null) {\n      throw new Error(\"Cannot create EncArrayBuffer from Response - Response is empty\");\n    }\n    return new EncArrayBuffer(buffer);\n  }\n\n  static fromB64(b64: string) {\n    const buffer = Utils.fromB64ToArray(b64).buffer;\n    return new EncArrayBuffer(buffer);\n  }\n}\n","export abstract class BaseResponse {\n  private response: any;\n\n  constructor(response: any) {\n    this.response = response;\n  }\n\n  protected getResponseProperty(\n    propertyName: string,\n    response: any = null,\n    exactName = false\n  ): any {\n    if (propertyName == null || propertyName === \"\") {\n      throw new Error(\"propertyName must not be null/empty.\");\n    }\n    if (response == null && this.response != null) {\n      response = this.response;\n    }\n    if (response == null) {\n      return null;\n    }\n    if (!exactName && response[propertyName] === undefined) {\n      let otherCasePropertyName: string = null;\n      if (propertyName.charAt(0) === propertyName.charAt(0).toUpperCase()) {\n        otherCasePropertyName = propertyName.charAt(0).toLowerCase();\n      } else {\n        otherCasePropertyName = propertyName.charAt(0).toUpperCase();\n      }\n      if (propertyName.length > 1) {\n        otherCasePropertyName += propertyName.slice(1);\n      }\n\n      propertyName = otherCasePropertyName;\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toLowerCase();\n      }\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toUpperCase();\n      }\n    }\n    return response[propertyName];\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ErrorResponse extends BaseResponse {\n  message: string;\n  validationErrors: { [key: string]: string[] };\n  statusCode: number;\n  captchaRequired: boolean;\n  captchaSiteKey: string;\n\n  constructor(response: any, status: number, identityResponse?: boolean) {\n    super(response);\n    let errorModel = null;\n    if (response != null) {\n      const responseErrorModel = this.getResponseProperty(\"ErrorModel\");\n      if (responseErrorModel && identityResponse) {\n        errorModel = responseErrorModel;\n      } else {\n        errorModel = response;\n      }\n    }\n\n    if (status === 429) {\n      this.message = \"Rate limit exceeded. Try again later.\";\n    } else if (errorModel) {\n      this.message = this.getResponseProperty(\"Message\", errorModel);\n      this.validationErrors = this.getResponseProperty(\"ValidationErrors\", errorModel);\n      this.captchaSiteKey = this.validationErrors?.HCaptcha_SiteKey?.[0];\n      this.captchaRequired = !Utils.isNullOrWhitespace(this.captchaSiteKey);\n    }\n    this.statusCode = status;\n  }\n\n  getSingleMessage(): string {\n    if (this.validationErrors == null) {\n      return this.message;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      if (this.validationErrors[key].length) {\n        return this.validationErrors[key][0];\n      }\n    }\n    return this.message;\n  }\n\n  getAllMessages(): string[] {\n    const messages: string[] = [];\n    if (this.validationErrors == null) {\n      return messages;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      this.validationErrors[key].forEach((item: string) => {\n        let prefix = \"\";\n        if (key.indexOf(\"[\") > -1 && key.indexOf(\"]\") > -1) {\n          const lastSep = key.lastIndexOf(\".\");\n          prefix = key.substr(0, lastSep > -1 ? lastSep : key.length) + \": \";\n        }\n        messages.push(prefix + item);\n      });\n    }\n    return messages;\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { EncArrayBuffer } from \"@bitwarden/common/models/domain/encArrayBuffer\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/errorResponse\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachmentView\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n@Directive()\nexport class AttachmentsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Output() onUploadedAttachment = new EventEmitter();\n  @Output() onDeletedAttachment = new EventEmitter();\n  @Output() onReuploadedAttachment = new EventEmitter();\n\n  cipher: CipherView;\n  cipherDomain: Cipher;\n  hasUpdatedKey: boolean;\n  canAccessAttachments: boolean;\n  formPromise: Promise<any>;\n  deletePromises: { [id: string]: Promise<any> } = {};\n  reuploadPromises: { [id: string]: Promise<any> } = {};\n  emergencyAccessId?: string = null;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected win: Window,\n    protected logService: LogService,\n    protected stateService: StateService,\n    protected fileDownloadService: FileDownloadService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit() {\n    if (!this.hasUpdatedKey) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"updateKey\")\n      );\n      return;\n    }\n\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFile\")\n      );\n      return;\n    }\n\n    if (files[0].size > 524288000) {\n      // 500 MB\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"maxFileSize\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.saveCipherAttachment(files[0]);\n      this.cipherDomain = await this.formPromise;\n      this.cipher = await this.cipherDomain.decrypt();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"attachmentSaved\"));\n      this.onUploadedAttachment.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    // reset file input\n    // ref: https://stackoverflow.com/a/20552042\n    fileEl.type = \"\";\n    fileEl.type = \"file\";\n    fileEl.value = \"\";\n  }\n\n  async delete(attachment: AttachmentView) {\n    if (this.deletePromises[attachment.id] != null) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteAttachmentConfirmation\"),\n      this.i18nService.t(\"deleteAttachment\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n      await this.deletePromises[attachment.id];\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedAttachment\"));\n      const i = this.cipher.attachments.indexOf(attachment);\n      if (i > -1) {\n        this.cipher.attachments.splice(i, 1);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.deletePromises[attachment.id] = null;\n    this.onDeletedAttachment.emit();\n  }\n\n  async download(attachment: AttachmentView) {\n    const a = attachment as any;\n    if (a.downloading) {\n      return;\n    }\n\n    if (!this.canAccessAttachments) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"premiumRequiredDesc\")\n      );\n      return;\n    }\n\n    let url: string;\n    try {\n      const attachmentDownloadResponse = await this.apiService.getAttachmentData(\n        this.cipher.id,\n        attachment.id,\n        this.emergencyAccessId\n      );\n      url = attachmentDownloadResponse.url;\n    } catch (e) {\n      if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n        url = attachment.url;\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    a.downloading = true;\n    const response = await fetch(new Request(url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      a.downloading = false;\n      return;\n    }\n\n    try {\n      const encBuf = await EncArrayBuffer.fromResponse(response);\n      const key =\n        attachment.key != null\n          ? attachment.key\n          : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n      const decBuf = await this.cryptoService.decryptFromBytes(encBuf, key);\n      this.fileDownloadService.download({\n        fileName: attachment.fileName,\n        blobData: decBuf,\n      });\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    a.downloading = false;\n  }\n\n  protected async init() {\n    this.cipherDomain = await this.loadCipher();\n    this.cipher = await this.cipherDomain.decrypt();\n\n    this.hasUpdatedKey = await this.cryptoService.hasEncKey();\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.canAccessAttachments = canAccessPremium || this.cipher.organizationId != null;\n\n    if (!this.canAccessAttachments) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"premiumRequiredDesc\"),\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\")\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\"https://vault.bitwarden.com/#/?premium=purchase\");\n      }\n    } else if (!this.hasUpdatedKey) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"updateKey\"),\n        this.i18nService.t(\"featureUnavailable\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\n          \"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n        );\n      }\n    }\n  }\n\n  protected async reuploadCipherAttachment(attachment: AttachmentView, admin: boolean) {\n    const a = attachment as any;\n    if (attachment.key != null || a.downloading || this.reuploadPromises[attachment.id] != null) {\n      return;\n    }\n\n    try {\n      this.reuploadPromises[attachment.id] = Promise.resolve().then(async () => {\n        // 1. Download\n        a.downloading = true;\n        const response = await fetch(new Request(attachment.url, { cache: \"no-store\" }));\n        if (response.status !== 200) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n          a.downloading = false;\n          return;\n        }\n\n        try {\n          // 2. Resave\n          const encBuf = await EncArrayBuffer.fromResponse(response);\n          const key =\n            attachment.key != null\n              ? attachment.key\n              : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n          const decBuf = await this.cryptoService.decryptFromBytes(encBuf, key);\n          this.cipherDomain = await this.cipherService.saveAttachmentRawWithServer(\n            this.cipherDomain,\n            attachment.fileName,\n            decBuf,\n            admin\n          );\n          this.cipher = await this.cipherDomain.decrypt();\n\n          // 3. Delete old\n          this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n          await this.deletePromises[attachment.id];\n          const foundAttachment = this.cipher.attachments.filter((a2) => a2.id === attachment.id);\n          if (foundAttachment.length > 0) {\n            const i = this.cipher.attachments.indexOf(foundAttachment[0]);\n            if (i > -1) {\n              this.cipher.attachments.splice(i, 1);\n            }\n          }\n\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"attachmentSaved\")\n          );\n          this.onReuploadedAttachment.emit();\n        } catch (e) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n        }\n\n        a.downloading = false;\n      });\n      await this.reuploadPromises[attachment.id];\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected saveCipherAttachment(file: File) {\n    return this.cipherService.saveAttachmentWithServer(this.cipherDomain, file);\n  }\n\n  protected deleteCipherAttachment(attachmentId: string) {\n    return this.cipherService.deleteAttachmentWithServer(this.cipher.id, attachmentId);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" (click)=\"close()\" *ngIf=\"openedAttachmentsInPopup\">\n        {{ \"close\" | i18n }}\n      </button>\n      <button type=\"button\" (click)=\"back()\" *ngIf=\"!openedAttachmentsInPopup\">\n        <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n        <span>{{ \"back\" | i18n }}</span>\n      </button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"attachments\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\" *ngIf=\"cipher && cipher.hasAttachments\">\n      <div class=\"box-content no-hover\">\n        <div class=\"box-content-row box-content-row-flex\" *ngFor=\"let a of cipher.attachments\">\n          <div class=\"row-main\">\n            {{ a.fileName }}\n          </div>\n          <small class=\"row-sub-label\">{{ a.sizeName }}</small>\n          <div class=\"action-buttons no-pad\">\n            <button\n              type=\"button\"\n              class=\"row-btn btn\"\n              type=\"button\"\n              appStopClick\n              appA11yTitle=\"{{ 'deleteAttachment' | i18n }}\"\n              (click)=\"delete(a)\"\n              #deleteBtn\n              [appApiAction]=\"deletePromises[a.id]\"\n              [disabled]=\"deleteBtn.loading\"\n            >\n              <i\n                class=\"bwi bwi-trash bwi-lg bwi-fw\"\n                [hidden]=\"deleteBtn.loading\"\n                aria-hidden=\"true\"\n              ></i>\n              <i\n                class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n                [hidden]=\"!deleteBtn.loading\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"newAttachment\" | i18n }}\n      </h2>\n      <div class=\"box-content no-hover\">\n        <div class=\"box-content-row\">\n          <label for=\"file\">{{ \"file\" | i18n }}</label>\n          <input type=\"file\" id=\"file\" name=\"file\" required />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"maxFileSize\" | i18n }}\n      </div>\n    </div>\n  </main>\n</form>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"@bitwarden/angular/components/attachments.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-vault-attachments\",\n  templateUrl: \"attachments.component.html\",\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n  openedAttachmentsInPopup: boolean;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    private location: Location,\n    private route: ActivatedRoute,\n    stateService: StateService,\n    logService: LogService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      apiService,\n      window,\n      logService,\n      stateService,\n      fileDownloadService\n    );\n  }\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      this.cipherId = params.cipherId;\n      await this.init();\n    });\n\n    this.openedAttachmentsInPopup = history.length === 1;\n  }\n\n  back() {\n    this.location.back();\n  }\n\n  close() {\n    window.close();\n  }\n}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n@Directive()\nexport class CiphersComponent {\n  @Input() activeCipherId: string = null;\n  @Output() onCipherClicked = new EventEmitter<CipherView>();\n  @Output() onCipherRightClicked = new EventEmitter<CipherView>();\n  @Output() onAddCipher = new EventEmitter();\n  @Output() onAddCipherOptions = new EventEmitter();\n\n  loaded = false;\n  ciphers: CipherView[] = [];\n  searchText: string;\n  searchPlaceholder: string = null;\n  filter: (cipher: CipherView) => boolean = null;\n  deleted = false;\n\n  protected searchPending = false;\n\n  private searchTimeout: any = null;\n\n  constructor(protected searchService: SearchService) {}\n\n  async load(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.deleted = deleted || false;\n    await this.applyFilter(filter);\n    this.loaded = true;\n  }\n\n  async reload(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.loaded = false;\n    await this.load(filter, deleted);\n  }\n\n  async refresh() {\n    await this.reload(this.filter, this.deleted);\n  }\n\n  async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null, indexedCiphers?: CipherView[]) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      await this.doSearch(indexedCiphers);\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      await this.doSearch(indexedCiphers);\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  selectCipher(cipher: CipherView) {\n    this.onCipherClicked.emit(cipher);\n  }\n\n  rightClickCipher(cipher: CipherView) {\n    this.onCipherRightClicked.emit(cipher);\n  }\n\n  addCipher() {\n    this.onAddCipher.emit();\n  }\n\n  addCipherOptions() {\n    this.onAddCipherOptions.emit();\n  }\n\n  isSearching() {\n    return !this.searchPending && this.searchService.isSearchable(this.searchText);\n  }\n\n  protected deletedFilter: (cipher: CipherView) => boolean = (c) => c.isDeleted === this.deleted;\n\n  protected async doSearch(indexedCiphers?: CipherView[]) {\n    this.ciphers = await this.searchService.searchCiphers(\n      this.searchText,\n      [this.filter, this.deletedFilter],\n      indexedCiphers\n    );\n  }\n}\n","import { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { CipherStatus } from \"./cipher-status.model\";\n\nexport type VaultFilterFunction = (cipher: CipherView) => boolean;\n\nexport class VaultFilter {\n  cipherType?: CipherType;\n  selectedCollection = false; // This is needed because of how the \"Unassigned\" collection works. It has a null id.\n  selectedCollectionId?: string;\n  status?: CipherStatus;\n  selectedFolder = false; // This is needed because of how the \"No Folder\" folder works. It has a null id.\n  selectedFolderId?: string;\n  selectedOrganizationId?: string;\n  myVaultOnly = false;\n  refreshCollectionsAndFolders = false;\n\n  constructor(init?: Partial<VaultFilter>) {\n    Object.assign(this, init);\n  }\n\n  resetFilter() {\n    this.cipherType = null;\n    this.status = null;\n    this.selectedCollection = false;\n    this.selectedCollectionId = null;\n    this.selectedFolder = false;\n    this.selectedFolderId = null;\n  }\n\n  resetOrganization() {\n    this.myVaultOnly = false;\n    this.selectedOrganizationId = null;\n    this.resetFilter();\n  }\n\n  buildFilter(): VaultFilterFunction {\n    return (cipher) => {\n      let cipherPassesFilter = true;\n      if (this.status === \"favorites\" && cipherPassesFilter) {\n        cipherPassesFilter = cipher.favorite;\n      }\n      if (this.status === \"trash\" && cipherPassesFilter) {\n        cipherPassesFilter = cipher.isDeleted;\n      }\n      if (this.cipherType != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.type === this.cipherType;\n      }\n      if (this.selectedFolder && this.selectedFolderId == null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.folderId == null;\n      }\n      if (this.selectedFolder && this.selectedFolderId != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.folderId === this.selectedFolderId;\n      }\n      if (this.selectedCollection && this.selectedCollectionId == null && cipherPassesFilter) {\n        cipherPassesFilter =\n          cipher.organizationId != null &&\n          (cipher.collectionIds == null || cipher.collectionIds.length === 0);\n      }\n      if (this.selectedCollection && this.selectedCollectionId != null && cipherPassesFilter) {\n        cipherPassesFilter =\n          cipher.collectionIds != null && cipher.collectionIds.includes(this.selectedCollectionId);\n      }\n      if (this.selectedOrganizationId != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.organizationId === this.selectedOrganizationId;\n      }\n      if (this.myVaultOnly && cipherPassesFilter) {\n        cipherPassesFilter = cipher.organizationId === null;\n      }\n      return cipherPassesFilter;\n    };\n  }\n}\n","export class TreeNode<T extends ITreeNodeObject> {\n  parent: T;\n  node: T;\n  children: TreeNode<T>[] = [];\n\n  constructor(node: T, name: string, parent: T) {\n    this.parent = parent;\n    this.node = node;\n    this.node.name = name;\n  }\n}\n\nexport interface ITreeNodeObject {\n  id: string;\n  name: string;\n}\n","import { ITreeNodeObject, TreeNode } from \"../models/domain/treeNode\";\n\nexport class ServiceUtils {\n  static nestedTraverse(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    partIndex: number,\n    parts: string[],\n    obj: ITreeNodeObject,\n    parent: ITreeNodeObject,\n    delimiter: string\n  ) {\n    if (parts.length <= partIndex) {\n      return;\n    }\n\n    const end = partIndex === parts.length - 1;\n    const partName = parts[partIndex];\n\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.name !== parts[partIndex]) {\n        continue;\n      }\n      if (end && nodeTree[i].node.id !== obj.id) {\n        // Another node with the same name.\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      ServiceUtils.nestedTraverse(\n        nodeTree[i].children,\n        partIndex + 1,\n        parts,\n        obj,\n        nodeTree[i].node,\n        delimiter\n      );\n      return;\n    }\n\n    if (nodeTree.filter((n) => n.node.name === partName).length === 0) {\n      if (end) {\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      const newPartName = parts[partIndex] + delimiter + parts[partIndex + 1];\n      ServiceUtils.nestedTraverse(\n        nodeTree,\n        0,\n        [newPartName, ...parts.slice(partIndex + 2)],\n        obj,\n        parent,\n        delimiter\n      );\n    }\n  }\n\n  static getTreeNodeObject(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    id: string\n  ): TreeNode<ITreeNodeObject> {\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.id === id) {\n        return nodeTree[i];\n      } else if (nodeTree[i].children != null) {\n        const node = ServiceUtils.getTreeNodeObject(nodeTree[i].children, id);\n        if (node !== null) {\n          return node;\n        }\n      }\n    }\n    return null;\n  }\n}\n","import { TreeNode } from \"@bitwarden/common/models/domain/treeNode\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\nexport class DynamicTreeNode<T extends CollectionView | FolderView> {\n  fullList: T[];\n  nestedList: TreeNode<T>[];\n\n  hasId(id: string): boolean {\n    return this.fullList != null && this.fullList.filter((i: T) => i.id === id).length > 0;\n  }\n\n  constructor(init?: Partial<DynamicTreeNode<T>>) {\n    Object.assign(this, init);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { firstValueFrom, from, mergeMap, Observable } from \"rxjs\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { ServiceUtils } from \"@bitwarden/common/misc/serviceUtils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/treeNode\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\nimport { DynamicTreeNode } from \"../models/dynamic-tree-node.model\";\n\nconst NestingDelimiter = \"/\";\n\n@Injectable()\nexport class VaultFilterService {\n  constructor(\n    protected stateService: StateService,\n    protected organizationService: OrganizationService,\n    protected folderService: FolderService,\n    protected cipherService: CipherService,\n    protected collectionService: CollectionService,\n    protected policyService: PolicyService\n  ) {}\n\n  async storeCollapsedFilterNodes(collapsedFilterNodes: Set<string>): Promise<void> {\n    await this.stateService.setCollapsedGroupings(Array.from(collapsedFilterNodes));\n  }\n\n  async buildCollapsedFilterNodes(): Promise<Set<string>> {\n    return new Set(await this.stateService.getCollapsedGroupings());\n  }\n\n  async buildOrganizations(): Promise<Organization[]> {\n    return await this.organizationService.getAll();\n  }\n\n  buildNestedFolders(organizationId?: string): Observable<DynamicTreeNode<FolderView>> {\n    const transformation = async (storedFolders: FolderView[]) => {\n      let folders: FolderView[];\n      if (organizationId != null) {\n        const ciphers = await this.cipherService.getAllDecrypted();\n        const orgCiphers = ciphers.filter((c) => c.organizationId == organizationId);\n        folders = storedFolders.filter(\n          (f) =>\n            orgCiphers.filter((oc) => oc.folderId == f.id).length > 0 ||\n            ciphers.filter((c) => c.folderId == f.id).length < 1\n        );\n      } else {\n        folders = storedFolders;\n      }\n      const nestedFolders = await this.getAllFoldersNested(folders);\n      return new DynamicTreeNode<FolderView>({\n        fullList: folders,\n        nestedList: nestedFolders,\n      });\n    };\n\n    return this.folderService.folderViews$.pipe(\n      mergeMap((folders) => from(transformation(folders)))\n    );\n  }\n\n  async buildCollections(organizationId?: string): Promise<DynamicTreeNode<CollectionView>> {\n    const storedCollections = await this.collectionService.getAllDecrypted();\n    let collections: CollectionView[];\n    if (organizationId != null) {\n      collections = storedCollections.filter((c) => c.organizationId === organizationId);\n    } else {\n      collections = storedCollections;\n    }\n    const nestedCollections = await this.collectionService.getAllNested(collections);\n    return new DynamicTreeNode<CollectionView>({\n      fullList: collections,\n      nestedList: nestedCollections,\n    });\n  }\n\n  async checkForSingleOrganizationPolicy(): Promise<boolean> {\n    return await this.policyService.policyAppliesToUser(PolicyType.SingleOrg);\n  }\n\n  async checkForPersonalOwnershipPolicy(): Promise<boolean> {\n    return await this.policyService.policyAppliesToUser(PolicyType.PersonalOwnership);\n  }\n\n  protected async getAllFoldersNested(folders: FolderView[]): Promise<TreeNode<FolderView>[]> {\n    const nodes: TreeNode<FolderView>[] = [];\n    folders.forEach((f) => {\n      const folderCopy = new FolderView();\n      folderCopy.id = f.id;\n      folderCopy.revisionDate = f.revisionDate;\n      const parts = f.name != null ? f.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, folderCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getFolderNested(id: string): Promise<TreeNode<FolderView>> {\n    const folders = await this.getAllFoldersNested(\n      await firstValueFrom(this.folderService.folderViews$)\n    );\n    return ServiceUtils.getTreeNodeObject(folders, id) as TreeNode<FolderView>;\n  }\n}\n","import { VaultFilter } from \"@bitwarden/angular/vault/vault-filter/models/vault-filter.model\";\nimport { VaultFilterService as BaseVaultFilterService } from \"@bitwarden/angular/vault/vault-filter/services/vault-filter.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nexport class VaultFilterService extends BaseVaultFilterService {\n  vaultFilter: VaultFilter = new VaultFilter();\n\n  allVaults = \"allVaults\";\n  myVault = \"myVault\";\n\n  constructor(\n    stateService: StateService,\n    organizationService: OrganizationService,\n    folderService: FolderService,\n    cipherService: CipherService,\n    collectionService: CollectionService,\n    policyService: PolicyService\n  ) {\n    super(\n      stateService,\n      organizationService,\n      folderService,\n      cipherService,\n      collectionService,\n      policyService\n    );\n    this.vaultFilter.myVaultOnly = false;\n    this.vaultFilter.selectedOrganizationId = null;\n  }\n\n  getVaultFilter() {\n    return this.vaultFilter;\n  }\n\n  setVaultFilter(filter: string) {\n    if (filter === this.allVaults) {\n      this.vaultFilter.myVaultOnly = false;\n      this.vaultFilter.selectedOrganizationId = null;\n    } else if (filter === this.myVault) {\n      this.vaultFilter.myVaultOnly = true;\n      this.vaultFilter.selectedOrganizationId = null;\n    } else {\n      this.vaultFilter.myVaultOnly = false;\n      this.vaultFilter.selectedOrganizationId = filter;\n    }\n  }\n\n  clear() {\n    this.setVaultFilter(this.allVaults);\n  }\n\n  filterCipherForSelectedVault(cipher: CipherView) {\n    if (!this.vaultFilter.selectedOrganizationId && !this.vaultFilter.myVaultOnly) {\n      return false;\n    }\n    if (this.vaultFilter.selectedOrganizationId) {\n      if (cipher.organizationId === this.vaultFilter.selectedOrganizationId) {\n        return false;\n      }\n    } else if (this.vaultFilter.myVaultOnly) {\n      if (!cipher.organizationId) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","import { Directive, ElementRef, HostListener, Input } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appFallbackSrc]\",\n})\nexport class FallbackSrcDirective {\n  @Input(\"appFallbackSrc\") appFallbackSrc: string;\n\n  constructor(private el: ElementRef) {}\n\n  @HostListener(\"error\") onError() {\n    this.el.nativeElement.src = this.appFallbackSrc;\n  }\n}\n","<div class=\"icon\" aria-hidden=\"true\">\n  <img\n    [src]=\"image\"\n    appFallbackSrc=\"{{ fallbackImage }}\"\n    *ngIf=\"imageEnabled && image\"\n    alt=\"\"\n    decoding=\"async\"\n    loading=\"lazy\"\n  />\n  <i class=\"bwi bwi-fw bwi-lg {{ icon }}\" *ngIf=\"!imageEnabled || !image\"></i>\n</div>\n","import { Component, Input, OnChanges } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n/**\n * Provides a mapping from supported card brands to\n * the filenames of icon that should be present in images/cards folder of clients.\n */\nconst cardIcons: Record<string, string> = {\n  Visa: \"card-visa\",\n  Mastercard: \"card-mastercard\",\n  Amex: \"card-amex\",\n  Discover: \"card-discover\",\n  \"Diners Club\": \"card-diners-club\",\n  JCB: \"card-jcb\",\n  Maestro: \"card-maestro\",\n  UnionPay: \"card-union-pay\",\n  RuPay: \"card-ru-pay\",\n  Mir: \"card-mir\",\n};\n\n@Component({\n  selector: \"app-vault-icon\",\n  templateUrl: \"icon.component.html\",\n})\nexport class IconComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  icon: string;\n  image: string;\n  fallbackImage: string;\n  imageEnabled: boolean;\n\n  private iconsUrl: string;\n\n  constructor(environmentService: EnvironmentService, private stateService: StateService) {\n    this.iconsUrl = environmentService.getIconsUrl();\n  }\n\n  async ngOnChanges() {\n    // Components may be re-used when using cdk-virtual-scroll. Which puts the component in a weird state,\n    // to avoid this we reset all state variables.\n    this.image = null;\n    this.fallbackImage = null;\n    this.imageEnabled = !(await this.stateService.getDisableFavicon());\n    this.load();\n  }\n\n  protected load() {\n    switch (this.cipher.type) {\n      case CipherType.Login:\n        this.icon = \"bwi-globe\";\n        this.setLoginIcon();\n        break;\n      case CipherType.SecureNote:\n        this.icon = \"bwi-sticky-note\";\n        break;\n      case CipherType.Card:\n        this.icon = \"bwi-credit-card\";\n        this.setCardIcon();\n        break;\n      case CipherType.Identity:\n        this.icon = \"bwi-id-card\";\n        break;\n      default:\n        break;\n    }\n  }\n\n  private setLoginIcon() {\n    if (this.cipher.login.uri) {\n      let hostnameUri = this.cipher.login.uri;\n      let isWebsite = false;\n\n      if (hostnameUri.indexOf(\"androidapp://\") === 0) {\n        this.icon = \"bwi-android\";\n        this.image = null;\n      } else if (hostnameUri.indexOf(\"iosapp://\") === 0) {\n        this.icon = \"bwi-apple\";\n        this.image = null;\n      } else if (\n        this.imageEnabled &&\n        hostnameUri.indexOf(\"://\") === -1 &&\n        hostnameUri.indexOf(\".\") > -1\n      ) {\n        hostnameUri = \"http://\" + hostnameUri;\n        isWebsite = true;\n      } else if (this.imageEnabled) {\n        isWebsite = hostnameUri.indexOf(\"http\") === 0 && hostnameUri.indexOf(\".\") > -1;\n      }\n\n      if (this.imageEnabled && isWebsite) {\n        try {\n          this.image = this.iconsUrl + \"/\" + Utils.getHostname(hostnameUri) + \"/icon.png\";\n          this.fallbackImage = \"images/bwi-globe.png\";\n        } catch (e) {\n          // Ignore error since the fallback icon will be shown if image is null.\n        }\n      }\n    } else {\n      this.image = null;\n    }\n  }\n\n  private setCardIcon() {\n    const brand = this.cipher.card.brand;\n    if (this.imageEnabled && brand in cardIcons) {\n      this.icon = \"credit-card-icon \" + cardIcons[brand];\n    }\n  }\n}\n","<button\n  type=\"button\"\n  class=\"row-btn\"\n  (click)=\"view()\"\n  appStopClick\n  appStopProp\n  appA11yTitle=\"{{ 'view' | i18n }}\"\n  *ngIf=\"showView\"\n>\n  <i class=\"bwi bwi-lg bwi-list-alt\" aria-hidden=\"true\"></i>\n</button>\n<ng-container *ngIf=\"cipher.type === cipherType.Login\">\n  <button\n    type=\"button\"\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'launch' | i18n }}\"\n    (click)=\"launchCipher()\"\n    *ngIf=\"!showView\"\n    [ngClass]=\"{ disabled: !cipher.login.canLaunch }\"\n    [attr.disabled]=\"!cipher.login.canLaunch ? '' : null\"\n  >\n    <i class=\"bwi bwi-lg bwi-share-square\" aria-hidden=\"true\"></i>\n  </button>\n  <button\n    type=\"button\"\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyUsername' | i18n }}\"\n    (click)=\"copy(cipher, cipher.login.username, 'username', 'Username')\"\n    [ngClass]=\"{ disabled: !cipher.login.username }\"\n    [attr.disabled]=\"!cipher.login.username ? '' : null\"\n  >\n    <i class=\"bwi bwi-lg bwi-user\" aria-hidden=\"true\"></i>\n  </button>\n  <button\n    type=\"button\"\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n    (click)=\"copy(cipher, cipher.login.password, 'password', 'Password')\"\n    [ngClass]=\"{ disabled: !cipher.login.password || !cipher.viewPassword }\"\n    [attr.disabled]=\"!cipher.login.password ? '' : null\"\n  >\n    <i class=\"bwi bwi-lg bwi-key\" aria-hidden=\"true\"></i>\n  </button>\n  <button\n    type=\"button\"\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyVerificationCode' | i18n }}\"\n    (click)=\"copy(cipher, cipher.login.totp, 'verificationCodeTotp', 'TOTP')\"\n    [ngClass]=\"{ disabled: !displayTotpCopyButton(cipher) }\"\n    [attr.disabled]=\"!displayTotpCopyButton(cipher) ? '' : null\"\n  >\n    <i class=\"bwi bwi-lg bwi-clock\" aria-hidden=\"true\"></i>\n  </button>\n</ng-container>\n<ng-container *ngIf=\"cipher.type === cipherType.Card\">\n  <button\n    type=\"button\"\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyNumber' | i18n }}\"\n    (click)=\"copy(cipher, cipher.card.number, 'number', 'Card Number')\"\n    [ngClass]=\"{ disabled: !cipher.card.number }\"\n    [attr.disabled]=\"!cipher.card.number ? '' : null\"\n  >\n    <i class=\"bwi bwi-lg bwi-hashtag\" aria-hidden=\"true\"></i>\n  </button>\n  <button\n    type=\"button\"\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copySecurityCode' | i18n }}\"\n    (click)=\"copy(cipher, cipher.card.code, 'securityCode', 'Security Code')\"\n    [ngClass]=\"{ disabled: !cipher.card.code }\"\n    [attr.disabled]=\"!cipher.card.code ? '' : null\"\n  >\n    <i class=\"bwi bwi-lg bwi-key\" aria-hidden=\"true\"></i>\n  </button>\n</ng-container>\n<ng-container *ngIf=\"cipher.type === cipherType.SecureNote\">\n  <button\n    type=\"button\"\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyNote' | i18n }}\"\n    (click)=\"copy(cipher, cipher.notes, 'note', 'Note')\"\n    [ngClass]=\"{ disabled: !cipher.notes }\"\n    [attr.disabled]=\"!cipher.notes ? '' : null\"\n  >\n    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n  </button>\n</ng-container>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n@Component({\n  selector: \"app-action-buttons\",\n  templateUrl: \"action-buttons.component.html\",\n})\nexport class ActionButtonsComponent {\n  @Output() onView = new EventEmitter<CipherView>();\n  @Output() launchEvent = new EventEmitter<CipherView>();\n  @Input() cipher: CipherView;\n  @Input() showView = false;\n\n  cipherType = CipherType;\n  userHasPremiumAccess = false;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private eventService: EventService,\n    private totpService: TotpService,\n    private stateService: StateService,\n    private passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  async ngOnInit() {\n    this.userHasPremiumAccess = await this.stateService.getCanAccessPremium();\n  }\n\n  launchCipher() {\n    this.launchEvent.emit(this.cipher);\n  }\n\n  async copy(cipher: CipherView, value: string, typeI18nKey: string, aType: string) {\n    if (\n      this.cipher.reprompt !== CipherRepromptType.None &&\n      this.passwordRepromptService.protectedFields().includes(aType) &&\n      !(await this.passwordRepromptService.showPasswordPrompt())\n    ) {\n      return;\n    }\n\n    if (value == null || (aType === \"TOTP\" && !this.displayTotpCopyButton(cipher))) {\n      return;\n    } else if (aType === \"TOTP\") {\n      value = await this.totpService.getCode(value);\n    }\n\n    if (!cipher.viewPassword) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (typeI18nKey === \"password\" || typeI18nKey === \"verificationCodeTotp\") {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, cipher.id);\n    } else if (typeI18nKey === \"securityCode\") {\n      this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, cipher.id);\n    }\n  }\n\n  displayTotpCopyButton(cipher: CipherView) {\n    return (\n      (cipher?.login?.hasTotp ?? false) && (cipher.organizationUseTotp || this.userHasPremiumAccess)\n    );\n  }\n\n  view() {\n    this.onView.emit(this.cipher);\n  }\n}\n","<div\n  role=\"group\"\n  appA11yTitle=\"{{ cipher.name }}\"\n  class=\"box-content-row box-content-row-flex virtual-scroll-item\"\n  [ngClass]=\"{ 'override-last': !last }\"\n>\n  <button\n    type=\"button\"\n    (click)=\"selectCipher(cipher)\"\n    (dblclick)=\"launchCipher(cipher)\"\n    appStopClick\n    title=\"{{ title }} - {{ cipher.name }}\"\n    class=\"row-main\"\n  >\n    <app-vault-icon [cipher]=\"cipher\"></app-vault-icon>\n    <div class=\"row-main-content\">\n      <span class=\"text\">\n        {{ cipher.name }}\n        <ng-container *ngIf=\"cipher.organizationId\">\n          <i\n            class=\"bwi bwi-collection text-muted\"\n            title=\"{{ 'shared' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"cipher.hasAttachments\">\n          <i\n            class=\"bwi bwi-paperclip text-muted\"\n            title=\"{{ 'attachments' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n        </ng-container>\n      </span>\n      <span class=\"detail\">{{ cipher.subTitle }}</span>\n    </div>\n  </button>\n  <app-action-buttons\n    [cipher]=\"cipher\"\n    [showView]=\"showView\"\n    (onView)=\"viewCipher(cipher)\"\n    (launchEvent)=\"launchCipher(cipher)\"\n    class=\"action-buttons\"\n  >\n  </app-action-buttons>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\n@Component({\n  selector: \"app-cipher-row\",\n  templateUrl: \"cipher-row.component.html\",\n})\nexport class CipherRowComponent {\n  @Output() onSelected = new EventEmitter<CipherView>();\n  @Output() launchEvent = new EventEmitter<CipherView>();\n  @Output() onView = new EventEmitter<CipherView>();\n  @Input() cipher: CipherView;\n  @Input() last: boolean;\n  @Input() showView = false;\n  @Input() title: string;\n\n  selectCipher(c: CipherView) {\n    this.onSelected.emit(c);\n  }\n\n  launchCipher(c: CipherView) {\n    this.launchEvent.emit(c);\n  }\n\n  viewCipher(c: CipherView) {\n    this.onView.emit(c);\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"ellipsis\",\n})\nexport class EllipsisPipe implements PipeTransform {\n  transform(value: string, limit = 25, completeWords = false, ellipsis = \"...\") {\n    if (value.length <= limit) {\n      return value;\n    }\n    limit -= ellipsis.length;\n    if (completeWords && value.length > limit && value.indexOf(\" \") > 0) {\n      limit = value.substring(0, limit).lastIndexOf(\" \");\n    }\n    return value.substring(0, limit) + ellipsis;\n  }\n}\n","<div class=\"content org-filter-content\" *ngIf=\"loaded && show\">\n  <button\n    #toggleVaults\n    class=\"org-filter\"\n    (click)=\"openOverlay()\"\n    aria-haspopup=\"menu\"\n    aria-controls=\"cdk-overlay-container\"\n    [attr.aria-expanded]=\"isOpen\"\n    [attr.aria-label]=\"vaultFilterDisplay\"\n  >\n    {{ vaultFilterDisplay | ellipsis: 45 }}&nbsp;\n    <i\n      class=\"bwi bwi-sm\"\n      aria-hidden=\"true\"\n      [ngClass]=\"{ 'bwi-angle-down': !isOpen, 'bwi-chevron-up': isOpen }\"\n    ></i>\n  </button>\n  <ng-template class=\"vault-select-container\" #vaultSelectorTemplate>\n    <div\n      class=\"vault-select\"\n      [@transformPanel]=\"'open'\"\n      cdkTrapFocus\n      cdkTrapFocusAutoCapture\n      role=\"dialog\"\n      aria-modal=\"true\"\n    >\n      <button\n        appStopClick\n        (click)=\"selectAllVaults()\"\n        [ngClass]=\"{ active: !myVaultOnly && !selectOrganizationId }\"\n      >\n        <i class=\"bwi bwi-fw bwi-filter\" aria-hidden=\"true\"></i>\n        &nbsp;{{ \"allVaults\" | i18n }}\n      </button>\n      <button *ngIf=\"!enforcePersonalOwnwership\" appStopClick (click)=\"selectMyVault()\">\n        <i class=\"bwi bwi-fw bwi-user\" aria-hidden=\"true\"></i>\n        &nbsp;{{ \"myVault\" | i18n }}\n      </button>\n      <button\n        *ngFor=\"let organization of organizations\"\n        appStopClick\n        (click)=\"selectOrganization(organization)\"\n      >\n        <i\n          *ngIf=\"organization.planProductType !== 1\"\n          class=\"bwi bwi-fw bwi-business\"\n          aria-hidden=\"true\"\n        ></i>\n        <i\n          *ngIf=\"organization.planProductType === 1\"\n          class=\"bwi bwi-fw bwi-family\"\n          aria-hidden=\"true\"\n        ></i>\n        <span>&nbsp;{{ organization.name | ellipsis: (organization.enabled ? 21 : 18):true }}</span>\n        <i\n          *ngIf=\"!organization.enabled\"\n          class=\"bwi bwi-fw bwi-exclamation-triangle text-danger\"\n          aria-label=\"{{ 'organizationIsDisabled' | i18n }}\"\n          appA11yTitle=\"{{ 'organizationIsDisabled' | i18n }}\"\n        ></i>\n      </button>\n    </div>\n  </ng-template>\n</div>\n","import { animate, state, style, transition, trigger } from \"@angular/animations\";\nimport { ConnectedPosition, Overlay, OverlayRef } from \"@angular/cdk/overlay\";\nimport { TemplatePortal } from \"@angular/cdk/portal\";\nimport {\n  Component,\n  ElementRef,\n  EventEmitter,\n  NgZone,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n  HostListener,\n} from \"@angular/core\";\nimport { merge } from \"rxjs\";\n\nimport { VaultFilter } from \"@bitwarden/angular/vault/vault-filter/models/vault-filter.model\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { VaultFilterService } from \"../../services/vaultFilter.service\";\n\n@Component({\n  selector: \"app-vault-select\",\n  templateUrl: \"vault-select.component.html\",\n  animations: [\n    trigger(\"transformPanel\", [\n      state(\n        \"void\",\n        style({\n          opacity: 0,\n        })\n      ),\n      transition(\n        \"void => open\",\n        animate(\n          \"100ms linear\",\n          style({\n            opacity: 1,\n          })\n        )\n      ),\n      transition(\"* => void\", animate(\"100ms linear\", style({ opacity: 0 }))),\n    ]),\n  ],\n})\nexport class VaultSelectComponent implements OnInit {\n  @Output() onVaultSelectionChanged = new EventEmitter();\n\n  @ViewChild(\"toggleVaults\", { read: ElementRef })\n  buttonRef: ElementRef<HTMLButtonElement>;\n  @ViewChild(\"vaultSelectorTemplate\", { read: TemplateRef }) templateRef: TemplateRef<HTMLElement>;\n\n  isOpen = false;\n  loaded = false;\n  organizations: Organization[];\n  vaultFilter: VaultFilter = new VaultFilter();\n  vaultFilterDisplay = \"\";\n  enforcePersonalOwnwership = false;\n  overlayPostition: ConnectedPosition[] = [\n    {\n      originX: \"start\",\n      originY: \"bottom\",\n      overlayX: \"start\",\n      overlayY: \"top\",\n    },\n  ];\n\n  private overlayRef: OverlayRef;\n\n  get show() {\n    return (\n      (this.organizations.length > 0 && !this.enforcePersonalOwnwership) ||\n      (this.organizations.length > 1 && this.enforcePersonalOwnwership)\n    );\n  }\n\n  constructor(\n    private vaultFilterService: VaultFilterService,\n    private i18nService: I18nService,\n    private ngZone: NgZone,\n    private broadcasterService: BroadcasterService,\n    private overlay: Overlay,\n    private viewContainerRef: ViewContainerRef,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  @HostListener(\"document:keydown.escape\", [\"$event\"])\n  handleKeyboardEvent(event: KeyboardEvent) {\n    if (this.isOpen) {\n      event.preventDefault();\n      this.close();\n    }\n  }\n\n  async ngOnInit() {\n    await this.load();\n    this.broadcasterService.subscribe(this.constructor.name, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            await this.load();\n            break;\n          default:\n            break;\n        }\n      });\n    });\n  }\n\n  async load() {\n    this.vaultFilter = this.vaultFilterService.getVaultFilter();\n    this.organizations = (await this.vaultFilterService.buildOrganizations()).sort((a, b) =>\n      a.name.localeCompare(b.name)\n    );\n    this.enforcePersonalOwnwership =\n      await this.vaultFilterService.checkForPersonalOwnershipPolicy();\n\n    if (this.show) {\n      if (this.enforcePersonalOwnwership && !this.vaultFilter.myVaultOnly) {\n        this.vaultFilterService.setVaultFilter(this.organizations[0].id);\n        this.vaultFilter.selectedOrganizationId = this.organizations[0].id;\n        this.vaultFilterDisplay = this.organizations.find(\n          (o) => o.id === this.vaultFilter.selectedOrganizationId\n        ).name;\n      } else if (this.vaultFilter.myVaultOnly) {\n        this.vaultFilterDisplay = this.i18nService.t(this.vaultFilterService.myVault);\n      } else if (this.vaultFilter.selectedOrganizationId != null) {\n        this.vaultFilterDisplay = this.organizations.find(\n          (o) => o.id === this.vaultFilter.selectedOrganizationId\n        ).name;\n      } else {\n        this.vaultFilterDisplay = this.i18nService.t(this.vaultFilterService.allVaults);\n      }\n    }\n    this.loaded = true;\n  }\n\n  openOverlay() {\n    const viewPortHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    const positionStrategyBuilder = this.overlay.position();\n\n    const positionStrategy = positionStrategyBuilder\n      .flexibleConnectedTo(this.buttonRef.nativeElement)\n      .withFlexibleDimensions(true)\n      .withPush(true)\n      .withViewportMargin(10)\n      .withGrowAfterOpen(true)\n      .withPositions(this.overlayPostition);\n\n    this.overlayRef = this.overlay.create({\n      hasBackdrop: true,\n      positionStrategy,\n      maxHeight: viewPortHeight - 160,\n      backdropClass: \"cdk-overlay-transparent-backdrop\",\n      scrollStrategy: this.overlay.scrollStrategies.close(),\n    });\n\n    const templatePortal = new TemplatePortal(this.templateRef, this.viewContainerRef);\n    this.overlayRef.attach(templatePortal);\n    this.isOpen = true;\n\n    // Handle closing\n    merge(\n      this.overlayRef.outsidePointerEvents(),\n      this.overlayRef.backdropClick(),\n      this.overlayRef.detachments()\n    ).subscribe(() => {\n      this.close();\n    });\n  }\n\n  close() {\n    if (this.overlayRef) {\n      this.overlayRef.dispose();\n      this.overlayRef = undefined;\n    }\n    this.isOpen = false;\n  }\n\n  selectOrganization(organization: Organization) {\n    if (!organization.enabled) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"disabledOrganizationFilterError\")\n      );\n    } else {\n      this.vaultFilterDisplay = organization.name;\n      this.vaultFilterService.setVaultFilter(organization.id);\n      this.onVaultSelectionChanged.emit();\n      this.close();\n    }\n  }\n  selectAllVaults() {\n    this.vaultFilterDisplay = this.i18nService.t(this.vaultFilterService.allVaults);\n    this.vaultFilterService.setVaultFilter(this.vaultFilterService.allVaults);\n    this.onVaultSelectionChanged.emit();\n    this.close();\n  }\n  selectMyVault() {\n    this.vaultFilterDisplay = this.i18nService.t(this.vaultFilterService.myVault);\n    this.vaultFilterService.setVaultFilter(this.vaultFilterService.myVault);\n    this.onVaultSelectionChanged.emit();\n    this.close();\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" (click)=\"back()\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </button>\n  </div>\n  <h1 class=\"sr-only\">{{ \"myVault\" | i18n }}</h1>\n  <div class=\"search\">\n    <input\n      type=\"{{ searchTypeSearch ? 'search' : 'text' }}\"\n      placeholder=\"{{ searchPlaceholder || ('searchVault' | i18n) }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"search(200)\"\n      autocomplete=\"off\"\n      appAutofocus\n    />\n    <i class=\"bwi bwi-search\" aria-hidden=\"true\"></i>\n  </div>\n  <div class=\"right\">\n    <button type=\"button\" (click)=\"addCipher()\" appA11yTitle=\"{{ 'addItem' | i18n }}\">\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\" [ngClass]=\"{ 'stacked-boxes': showGroupings() }\">\n  <ng-container *ngIf=\"showGroupings()\">\n    <app-vault-select\n      *ngIf=\"showVaultFilter\"\n      (onVaultSelectionChanged)=\"changeVaultSelection()\"\n    ></app-vault-select>\n    <div class=\"box list\" *ngIf=\"nestedFolders && nestedFolders.length\">\n      <h2 class=\"box-header\">\n        {{ \"folders\" | i18n }}\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          *ngFor=\"let f of nestedFolders\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"selectFolder(f.node)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\">\n              <i class=\"bwi bwi-fw bwi-lg bwi-folder\" aria-hidden=\"true\"></i>\n            </div>\n            <span class=\"text\">{{ f.node.name }}</span>\n          </div>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"nestedCollections && nestedCollections.length\">\n      <h2 class=\"box-header\">\n        {{ \"collections\" | i18n }}\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          *ngFor=\"let c of nestedCollections\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"selectCollection(c.node)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\">\n              <i class=\"bwi bwi-fw bwi-lg bwi-collection\" aria-hidden=\"true\"></i>\n            </div>\n            <span class=\"text\">{{ c.node.name }}</span>\n          </div>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i></span>\n        </button>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"ciphers\">\n    <div *ngIf=\"!ciphers.length\">\n      <app-vault-select\n        *ngIf=\"showVaultFilter && !showGroupings()\"\n        (onVaultSelectionChanged)=\"changeVaultSelection()\"\n      ></app-vault-select>\n      <div class=\"no-items\">\n        <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" *ngIf=\"!loaded\" aria-hidden=\"true\"></i>\n        <ng-container *ngIf=\"loaded\">\n          <img class=\"no-items-image\" aria-hidden=\"true\" />\n          <p>{{ \"noItemsInList\" | i18n }}</p>\n          <button type=\"button\" (click)=\"addCipher()\" class=\"btn block primary link\">\n            {{ \"addItem\" | i18n }}\n          </button>\n        </ng-container>\n      </div>\n    </div>\n    <cdk-virtual-scroll-viewport\n      itemSize=\"46\"\n      minBufferPx=\"400\"\n      maxBufferPx=\"600\"\n      *ngIf=\"ciphers.length\"\n      #virtualScrollViewport\n      ><app-vault-select\n        *ngIf=\"showVaultFilter && !showGroupings()\"\n        (onVaultSelectionChanged)=\"changeVaultSelection()\"\n      ></app-vault-select>\n      <div class=\"box list only-list\">\n        <h2 class=\"box-header\">\n          {{ groupingTitle }}\n          <span class=\"flex-right\">{{ isSearching() ? ciphers.length : ciphers.length }}</span>\n        </h2>\n        <div class=\"box-content\">\n          <app-cipher-row\n            *cdkVirtualFor=\"let c of ciphers; let last = last\"\n            [cipher]=\"c\"\n            [last]=\"last\"\n            title=\"{{ 'viewItem' | i18n }}\"\n            (onSelected)=\"selectCipher($event)\"\n            (launchEvent)=\"launchCipher($event)\"\n          ></app-cipher-row>\n        </div>\n      </div>\n    </cdk-virtual-scroll-viewport>\n  </ng-container>\n</main>\n","import { Location } from \"@angular/common\";\nimport { ChangeDetectorRef, Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { CiphersComponent as BaseCiphersComponent } from \"@bitwarden/angular/components/ciphers.component\";\nimport { VaultFilter } from \"@bitwarden/angular/vault/vault-filter/models/vault-filter.model\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/treeNode\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\nimport { BrowserComponentState } from \"src/models/browserComponentState\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { StateService } from \"../../services/abstractions/state.service\";\nimport { VaultFilterService } from \"../../services/vaultFilter.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst ComponentId = \"CiphersComponent\";\n\n@Component({\n  selector: \"app-vault-ciphers\",\n  templateUrl: \"ciphers.component.html\",\n})\nexport class CiphersComponent extends BaseCiphersComponent implements OnInit, OnDestroy {\n  groupingTitle: string;\n  state: BrowserComponentState;\n  folderId: string = null;\n  collectionId: string = null;\n  type: CipherType = null;\n  nestedFolders: TreeNode<FolderView>[];\n  nestedCollections: TreeNode<CollectionView>[];\n  searchTypeSearch = false;\n  showOrganizations = false;\n  vaultFilter: VaultFilter;\n  deleted = true;\n  noneFolder = false;\n  showVaultFilter = false;\n\n  private selectedTimeout: number;\n  private preventSelected = false;\n  private applySavedState = true;\n  private scrollingContainer = \"cdk-virtual-scroll-viewport\";\n\n  constructor(\n    searchService: SearchService,\n    private organizationService: OrganizationService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private ngZone: NgZone,\n    private broadcasterService: BroadcasterService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private stateService: StateService,\n    private popupUtils: PopupUtilsService,\n    private i18nService: I18nService,\n    private folderService: FolderService,\n    private collectionService: CollectionService,\n    private platformUtilsService: PlatformUtilsService,\n    private cipherService: CipherService,\n    private vaultFilterService: VaultFilterService\n  ) {\n    super(searchService);\n    this.applySavedState =\n      (window as any).previousPopupUrl != null &&\n      !(window as any).previousPopupUrl.startsWith(\"/ciphers\");\n  }\n\n  async ngOnInit() {\n    this.searchTypeSearch = !this.platformUtilsService.isSafari();\n    this.showOrganizations = await this.organizationService.hasOrganizations();\n    this.vaultFilter = this.vaultFilterService.getVaultFilter();\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (this.applySavedState) {\n        this.state = await this.stateService.getBrowserCipherComponentState();\n        if (this.state?.searchText) {\n          this.searchText = this.state.searchText;\n        }\n      }\n\n      if (params.deleted) {\n        this.showVaultFilter = true;\n        this.groupingTitle = this.i18nService.t(\"trash\");\n        this.searchPlaceholder = this.i18nService.t(\"searchTrash\");\n        await this.load(this.buildFilter(), true);\n      } else if (params.type) {\n        this.showVaultFilter = true;\n        this.searchPlaceholder = this.i18nService.t(\"searchType\");\n        this.type = parseInt(params.type, null);\n        switch (this.type) {\n          case CipherType.Login:\n            this.groupingTitle = this.i18nService.t(\"logins\");\n            break;\n          case CipherType.Card:\n            this.groupingTitle = this.i18nService.t(\"cards\");\n            break;\n          case CipherType.Identity:\n            this.groupingTitle = this.i18nService.t(\"identities\");\n            break;\n          case CipherType.SecureNote:\n            this.groupingTitle = this.i18nService.t(\"secureNotes\");\n            break;\n          default:\n            break;\n        }\n        await this.load(this.buildFilter());\n      } else if (params.folderId) {\n        this.showVaultFilter = true;\n        this.folderId = params.folderId === \"none\" ? null : params.folderId;\n        this.searchPlaceholder = this.i18nService.t(\"searchFolder\");\n        if (this.folderId != null) {\n          this.showOrganizations = false;\n          const folderNode = await this.vaultFilterService.getFolderNested(this.folderId);\n          if (folderNode != null && folderNode.node != null) {\n            this.groupingTitle = folderNode.node.name;\n            this.nestedFolders =\n              folderNode.children != null && folderNode.children.length > 0\n                ? folderNode.children\n                : null;\n          }\n        } else {\n          this.noneFolder = true;\n          this.groupingTitle = this.i18nService.t(\"noneFolder\");\n        }\n        await this.load(this.buildFilter());\n      } else if (params.collectionId) {\n        this.showVaultFilter = false;\n        this.collectionId = params.collectionId;\n        this.searchPlaceholder = this.i18nService.t(\"searchCollection\");\n        const collectionNode = await this.collectionService.getNested(this.collectionId);\n        if (collectionNode != null && collectionNode.node != null) {\n          this.groupingTitle = collectionNode.node.name;\n          this.nestedCollections =\n            collectionNode.children != null && collectionNode.children.length > 0\n              ? collectionNode.children\n              : null;\n        }\n        await this.load(\n          (c) => c.collectionIds != null && c.collectionIds.indexOf(this.collectionId) > -1\n        );\n      } else {\n        this.showVaultFilter = true;\n        this.groupingTitle = this.i18nService.t(\"allItems\");\n        await this.load(this.buildFilter());\n      }\n\n      if (this.applySavedState && this.state != null) {\n        window.setTimeout(\n          () =>\n            this.popupUtils.setContentScrollY(window, this.state.scrollY, this.scrollingContainer),\n          0\n        );\n      }\n      await this.stateService.setBrowserCipherComponentState(null);\n    });\n\n    this.broadcasterService.subscribe(ComponentId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (message.successfully) {\n              window.setTimeout(() => {\n                this.refresh();\n              }, 500);\n            }\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.saveState();\n    this.broadcasterService.unsubscribe(ComponentId);\n  }\n\n  selectCipher(cipher: CipherView) {\n    this.selectedTimeout = window.setTimeout(() => {\n      if (!this.preventSelected) {\n        super.selectCipher(cipher);\n        this.router.navigate([\"/view-cipher\"], { queryParams: { cipherId: cipher.id } });\n      }\n      this.preventSelected = false;\n    }, 200);\n  }\n\n  selectFolder(folder: FolderView) {\n    if (folder.id != null) {\n      this.router.navigate([\"/ciphers\"], { queryParams: { folderId: folder.id } });\n    }\n  }\n\n  selectCollection(collection: CollectionView) {\n    this.router.navigate([\"/ciphers\"], { queryParams: { collectionId: collection.id } });\n  }\n\n  async launchCipher(cipher: CipherView) {\n    if (cipher.type !== CipherType.Login || !cipher.login.canLaunch) {\n      return;\n    }\n\n    if (this.selectedTimeout != null) {\n      window.clearTimeout(this.selectedTimeout);\n    }\n    this.preventSelected = true;\n    await this.cipherService.updateLastLaunchedDate(cipher.id);\n    BrowserApi.createNewTab(cipher.login.launchUri);\n    if (this.popupUtils.inPopup(window)) {\n      BrowserApi.closePopup(window);\n    }\n  }\n\n  addCipher() {\n    if (this.deleted) {\n      return false;\n    }\n    super.addCipher();\n    this.router.navigate([\"/add-cipher\"], {\n      queryParams: {\n        folderId: this.folderId,\n        type: this.type,\n        collectionId: this.collectionId,\n        selectedVault: this.vaultFilter.selectedOrganizationId,\n      },\n    });\n  }\n\n  back() {\n    (window as any).routeDirection = \"b\";\n    this.location.back();\n  }\n\n  showGroupings() {\n    return (\n      !this.isSearching() &&\n      ((this.nestedFolders && this.nestedFolders.length) ||\n        (this.nestedCollections && this.nestedCollections.length))\n    );\n  }\n\n  async changeVaultSelection() {\n    this.vaultFilter = this.vaultFilterService.getVaultFilter();\n    await this.load(this.buildFilter(), this.deleted);\n  }\n\n  private buildFilter(): (cipher: CipherView) => boolean {\n    return (cipher) => {\n      let cipherPassesFilter = true;\n      if (this.deleted && cipherPassesFilter) {\n        cipherPassesFilter = cipher.isDeleted;\n      }\n      if (this.type != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.type === this.type;\n      }\n      if (this.folderId != null && this.folderId != \"none\" && cipherPassesFilter) {\n        cipherPassesFilter = cipher.folderId === this.folderId;\n      }\n      if (this.noneFolder) {\n        cipherPassesFilter = cipher.folderId == null;\n      }\n      if (this.collectionId != null && cipherPassesFilter) {\n        cipherPassesFilter =\n          cipher.collectionIds != null && cipher.collectionIds.indexOf(this.collectionId) > -1;\n      }\n      if (this.vaultFilter.selectedOrganizationId != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.organizationId === this.vaultFilter.selectedOrganizationId;\n      }\n      if (this.vaultFilter.myVaultOnly && cipherPassesFilter) {\n        cipherPassesFilter = cipher.organizationId === null;\n      }\n      return cipherPassesFilter;\n    };\n  }\n\n  private async saveState() {\n    this.state = {\n      scrollY: this.popupUtils.getContentScrollY(window, this.scrollingContainer),\n      searchText: this.searchText,\n    };\n    await this.stateService.setBrowserCipherComponentState(this.state);\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Directive()\nexport class CollectionsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Input() allowSelectNone = false;\n  @Output() onSavedCollections = new EventEmitter();\n\n  formPromise: Promise<any>;\n  cipher: CipherView;\n  collectionIds: string[];\n  collections: CollectionView[] = [];\n\n  protected cipherDomain: Cipher;\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    this.cipherDomain = await this.loadCipher();\n    this.collectionIds = this.loadCipherCollections();\n    this.cipher = await this.cipherDomain.decrypt();\n    this.collections = await this.loadCollections();\n\n    this.collections.forEach((c) => ((c as any).checked = false));\n    if (this.collectionIds != null) {\n      this.collections.forEach((c) => {\n        (c as any).checked = this.collectionIds != null && this.collectionIds.indexOf(c.id) > -1;\n      });\n    }\n  }\n\n  async submit() {\n    const selectedCollectionIds = this.collections\n      .filter((c) => !!(c as any).checked)\n      .map((c) => c.id);\n    if (!this.allowSelectNone && selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n    this.cipherDomain.collectionIds = selectedCollectionIds;\n    try {\n      this.formPromise = this.saveCollections();\n      await this.formPromise;\n      this.onSavedCollections.emit();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"editedItem\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected loadCipherCollections() {\n    return this.cipherDomain.collectionIds;\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter(\n      (c) => !c.readOnly && c.organizationId === this.cipher.organizationId\n    );\n  }\n\n  protected saveCollections() {\n    return this.cipherService.saveCollectionsWithServer(this.cipherDomain);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" (click)=\"back()\">\n        <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n        <span>{{ \"back\" | i18n }}</span>\n      </button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"collections\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <div class=\"box-content\" *ngIf=\"!collections || !collections.length\">\n        <div class=\"box-content-row padded no-hover\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n      </div>\n      <div class=\"box-content\" *ngIf=\"collections && collections.length\">\n        <div\n          class=\"box-content-row box-content-row-checkbox\"\n          *ngFor=\"let c of collections; let i = index\"\n          appBoxRow\n        >\n          <label for=\"collection_{{ i }}\">{{ c.name }}</label>\n          <input\n            id=\"collection_{{ i }}\"\n            type=\"checkbox\"\n            [(ngModel)]=\"c.checked\"\n            name=\"Collection[{{ i }}].Checked\"\n          />\n        </div>\n      </div>\n    </div>\n  </main>\n</form>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { CollectionsComponent as BaseCollectionsComponent } from \"@bitwarden/angular/components/collections.component\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-vault-collections\",\n  templateUrl: \"collections.component.html\",\n})\nexport class CollectionsComponent extends BaseCollectionsComponent {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    private route: ActivatedRoute,\n    private location: Location,\n    logService: LogService\n  ) {\n    super(collectionService, platformUtilsService, i18nService, cipherService, logService);\n  }\n\n  async ngOnInit() {\n    this.onSavedCollections.subscribe(() => {\n      this.back();\n    });\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      this.cipherId = params.cipherId;\n      await this.load();\n    });\n  }\n\n  back() {\n    this.location.back();\n  }\n}\n","import { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport AutofillField from \"../../models/autofillField\";\nimport AutofillForm from \"../../models/autofillForm\";\nimport AutofillPageDetails from \"../../models/autofillPageDetails\";\n\nexport interface PageDetail {\n  frameId: number;\n  tab: chrome.tabs.Tab;\n  details: AutofillPageDetails;\n}\n\nexport interface AutoFillOptions {\n  cipher: CipherView;\n  pageDetails: PageDetail[];\n  doc?: typeof window.document;\n  tab: chrome.tabs.Tab;\n  skipUsernameOnlyFill?: boolean;\n  onlyEmptyFields?: boolean;\n  onlyVisibleFields?: boolean;\n  fillNewPassword?: boolean;\n  skipLastUsed?: boolean;\n}\n\nexport interface FormData {\n  form: AutofillForm;\n  password: AutofillField;\n  username: AutofillField;\n  passwords: AutofillField[];\n}\n\nexport abstract class AutofillService {\n  getFormsWithPasswordFields: (pageDetails: AutofillPageDetails) => FormData[];\n  doAutoFill: (options: AutoFillOptions) => Promise<string>;\n  doAutoFillOnTab: (\n    pageDetails: PageDetail[],\n    tab: chrome.tabs.Tab,\n    fromCommand: boolean\n  ) => Promise<string>;\n  doAutoFillActiveTab: (pageDetails: PageDetail[], fromCommand: boolean) => Promise<string>;\n}\n","<header>\n  <h1 class=\"sr-only\">{{ \"currentTab\" | i18n }}</h1>\n  <div class=\"left\">\n    <app-pop-out *ngIf=\"!inSidebar\"></app-pop-out>\n    <button\n      type=\"button\"\n      (click)=\"refresh()\"\n      appA11yTitle=\"{{ 'refresh' | i18n }}\"\n      *ngIf=\"inSidebar\"\n    >\n      <i class=\"bwi bwi-refresh-tab bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n  <div class=\"search\">\n    <input\n      type=\"{{ searchTypeSearch ? 'search' : 'text' }}\"\n      placeholder=\"{{ 'searchVault' | i18n }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"searchVault()\"\n      autocomplete=\"off\"\n      (keydown)=\"closeOnEsc($event)\"\n    />\n    <i class=\"bwi bwi-search\" aria-hidden=\"true\"></i>\n  </div>\n  <div class=\"right\">\n    <button type=\"button\" (click)=\"addCipher()\" appA11yTitle=\"{{ 'addItem' | i18n }}\">\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"no-items\" *ngIf=\"!loaded\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" aria-hidden=\"true\"></i>\n  </div>\n  <ng-container *ngIf=\"loaded\">\n    <app-vault-select (onVaultSelectionChanged)=\"load()\"></app-vault-select>\n    <div class=\"box list\" *ngIf=\"loginCiphers\">\n      <h2 class=\"box-header\">\n        {{ \"typeLogins\" | i18n }}\n        <span class=\"flex-right\">{{ loginCiphers.length }}</span>\n      </h2>\n      <div class=\"box-content\">\n        <app-cipher-row\n          *ngFor=\"let loginCipher of loginCiphers\"\n          [cipher]=\"loginCipher\"\n          title=\"{{ 'autoFill' | i18n }}\"\n          [showView]=\"true\"\n          (onSelected)=\"fillCipher($event)\"\n          (onView)=\"viewCipher($event)\"\n        >\n        </app-cipher-row>\n        <div class=\"box-content-row padded no-hover\" *ngIf=\"!loginCiphers.length\">\n          <p class=\"text-center\">{{ \"autoFillInfo\" | i18n }}</p>\n          <button type=\"button\" class=\"btn primary link block\" (click)=\"addCipher()\">\n            {{ \"addLogin\" | i18n }}\n          </button>\n        </div>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"cardCiphers && cardCiphers.length\">\n      <h2 class=\"box-header\">\n        {{ \"cards\" | i18n }}\n        <span class=\"flex-right\">{{ cardCiphers.length }}</span>\n      </h2>\n      <div class=\"box-content\">\n        <app-cipher-row\n          *ngFor=\"let cardCipher of cardCiphers\"\n          [cipher]=\"cardCipher\"\n          title=\"{{ 'autoFill' | i18n }}\"\n          [showView]=\"true\"\n          (onSelected)=\"fillCipher($event)\"\n          (onView)=\"viewCipher($event)\"\n        ></app-cipher-row>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"identityCiphers && identityCiphers.length\">\n      <h2 class=\"box-header\">\n        {{ \"identities\" | i18n }}\n        <span class=\"flex-right\">{{ identityCiphers.length }}</span>\n      </h2>\n      <div class=\"box-content\">\n        <app-cipher-row\n          *ngFor=\"let identityCipher of identityCiphers\"\n          [cipher]=\"identityCipher\"\n          title=\"{{ 'autoFill' | i18n }}\"\n          [showView]=\"true\"\n          (onSelected)=\"fillCipher($event)\"\n          (onView)=\"viewCipher($event)\"\n        ></app-cipher-row>\n      </div>\n    </div>\n  </ng-container>\n</main>\n","import { ChangeDetectorRef, Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { AutofillService } from \"../../services/abstractions/autofill.service\";\nimport { VaultFilterService } from \"../../services/vaultFilter.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst BroadcasterSubscriptionId = \"CurrentTabComponent\";\n\n@Component({\n  selector: \"app-current-tab\",\n  templateUrl: \"current-tab.component.html\",\n})\nexport class CurrentTabComponent implements OnInit, OnDestroy {\n  pageDetails: any[] = [];\n  tab: chrome.tabs.Tab;\n  cardCiphers: CipherView[];\n  identityCiphers: CipherView[];\n  loginCiphers: CipherView[];\n  url: string;\n  hostname: string;\n  searchText: string;\n  inSidebar = false;\n  searchTypeSearch = false;\n  loaded = false;\n  isLoading = false;\n  showOrganizations = false;\n\n  private totpCode: string;\n  private totpTimeout: number;\n  private loadedTimeout: number;\n  private searchTimeout: number;\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private cipherService: CipherService,\n    private popupUtilsService: PopupUtilsService,\n    private autofillService: AutofillService,\n    private i18nService: I18nService,\n    private router: Router,\n    private ngZone: NgZone,\n    private broadcasterService: BroadcasterService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private syncService: SyncService,\n    private searchService: SearchService,\n    private stateService: StateService,\n    private passwordRepromptService: PasswordRepromptService,\n    private organizationService: OrganizationService,\n    private vaultFilterService: VaultFilterService\n  ) {}\n\n  async ngOnInit() {\n    this.searchTypeSearch = !this.platformUtilsService.isSafari();\n    this.inSidebar = this.popupUtilsService.inSidebar(window);\n\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (this.isLoading) {\n              window.setTimeout(() => {\n                this.load();\n              }, 500);\n            }\n            break;\n          case \"collectPageDetailsResponse\":\n            if (message.sender === BroadcasterSubscriptionId) {\n              this.pageDetails.push({\n                frameId: message.webExtSender.frameId,\n                tab: message.tab,\n                details: message.details,\n              });\n            }\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n\n    if (!this.syncService.syncInProgress) {\n      await this.load();\n    } else {\n      this.loadedTimeout = window.setTimeout(async () => {\n        if (!this.isLoading) {\n          await this.load();\n        }\n      }, 5000);\n    }\n\n    window.setTimeout(() => {\n      document.getElementById(\"search\").focus();\n    }, 100);\n  }\n\n  ngOnDestroy() {\n    window.clearTimeout(this.loadedTimeout);\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async refresh() {\n    await this.load();\n  }\n\n  addCipher() {\n    this.router.navigate([\"/add-cipher\"], {\n      queryParams: {\n        name: this.hostname,\n        uri: this.url,\n        selectedVault: this.vaultFilterService.getVaultFilter().selectedOrganizationId,\n      },\n    });\n  }\n\n  viewCipher(cipher: CipherView) {\n    this.router.navigate([\"/view-cipher\"], { queryParams: { cipherId: cipher.id } });\n  }\n\n  async fillCipher(cipher: CipherView) {\n    if (\n      cipher.reprompt !== CipherRepromptType.None &&\n      !(await this.passwordRepromptService.showPasswordPrompt())\n    ) {\n      return;\n    }\n\n    this.totpCode = null;\n    if (this.totpTimeout != null) {\n      window.clearTimeout(this.totpTimeout);\n    }\n\n    if (this.pageDetails == null || this.pageDetails.length === 0) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"autofillError\"));\n      return;\n    }\n\n    try {\n      this.totpCode = await this.autofillService.doAutoFill({\n        tab: this.tab,\n        cipher: cipher,\n        pageDetails: this.pageDetails,\n        doc: window.document,\n        fillNewPassword: true,\n      });\n      if (this.totpCode != null) {\n        this.platformUtilsService.copyToClipboard(this.totpCode, { window: window });\n      }\n      if (this.popupUtilsService.inPopup(window)) {\n        if (this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari()) {\n          BrowserApi.closePopup(window);\n        } else {\n          // Slight delay to fix bug in Chromium browsers where popup closes without copying totp to clipboard\n          setTimeout(() => BrowserApi.closePopup(window), 50);\n        }\n      }\n    } catch {\n      this.ngZone.run(() => {\n        this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"autofillError\"));\n        this.changeDetectorRef.detectChanges();\n      });\n    }\n  }\n\n  searchVault() {\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (!this.searchService.isSearchable(this.searchText)) {\n      return;\n    }\n    this.searchTimeout = window.setTimeout(async () => {\n      this.router.navigate([\"/tabs/vault\"], { queryParams: { searchText: this.searchText } });\n    }, 200);\n  }\n\n  closeOnEsc(e: KeyboardEvent) {\n    // If input not empty, use browser default behavior of clearing input instead\n    if (e.key === \"Escape\" && (this.searchText == null || this.searchText === \"\")) {\n      BrowserApi.closePopup(window);\n    }\n  }\n\n  private async load() {\n    this.isLoading = false;\n    this.tab = await BrowserApi.getTabFromCurrentWindow();\n    if (this.tab != null) {\n      this.url = this.tab.url;\n    } else {\n      this.loginCiphers = [];\n      this.isLoading = this.loaded = true;\n      return;\n    }\n\n    this.hostname = Utils.getHostname(this.url);\n    this.pageDetails = [];\n    BrowserApi.tabSendMessage(this.tab, {\n      command: \"collectPageDetails\",\n      tab: this.tab,\n      sender: BroadcasterSubscriptionId,\n    });\n\n    const otherTypes: CipherType[] = [];\n    const dontShowCards = await this.stateService.getDontShowCardsCurrentTab();\n    const dontShowIdentities = await this.stateService.getDontShowIdentitiesCurrentTab();\n    this.showOrganizations = await this.organizationService.hasOrganizations();\n    if (!dontShowCards) {\n      otherTypes.push(CipherType.Card);\n    }\n    if (!dontShowIdentities) {\n      otherTypes.push(CipherType.Identity);\n    }\n\n    const ciphers = await this.cipherService.getAllDecryptedForUrl(\n      this.url,\n      otherTypes.length > 0 ? otherTypes : null\n    );\n\n    this.loginCiphers = [];\n    this.cardCiphers = [];\n    this.identityCiphers = [];\n\n    ciphers.forEach((c) => {\n      if (!this.vaultFilterService.filterCipherForSelectedVault(c)) {\n        switch (c.type) {\n          case CipherType.Login:\n            this.loginCiphers.push(c);\n            break;\n          case CipherType.Card:\n            this.cardCiphers.push(c);\n            break;\n          case CipherType.Identity:\n            this.identityCiphers.push(c);\n            break;\n          default:\n            break;\n        }\n      }\n    });\n\n    this.loginCiphers = this.loginCiphers.sort((a, b) =>\n      this.cipherService.sortCiphersByLastUsedThenName(a, b)\n    );\n    this.isLoading = this.loaded = true;\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PasswordHistoryView } from \"@bitwarden/common/models/view/passwordHistoryView\";\n\n@Directive()\nexport class PasswordHistoryComponent implements OnInit {\n  cipherId: string;\n  history: PasswordHistoryView[] = [];\n\n  constructor(\n    protected cipherService: CipherService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    private win: Window\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  copy(password: string) {\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(password, copyOptions);\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n\n  protected async init() {\n    const cipher = await this.cipherService.get(this.cipherId);\n    const decCipher = await cipher.decrypt();\n    this.history = decCipher.passwordHistory == null ? [] : decCipher.passwordHistory;\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" (click)=\"close()\">{{ \"close\" | i18n }}</button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"passwordHistory\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<main tabindex=\"-1\">\n  <div class=\"box list full-list\" *ngIf=\"history && history.length\">\n    <div class=\"box-content\">\n      <div class=\"box-content-row box-content-row-flex\" *ngFor=\"let h of history\">\n        <div class=\"row-main\">\n          <div class=\"row-main-content\">\n            <span class=\"text monospaced no-ellipsis\">\n              {{ h.password }}\n            </span>\n            <span class=\"detail\">{{ h.lastUsedDate | date: \"medium\" }}</span>\n          </div>\n        </div>\n        <div class=\"action-buttons\">\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n            (click)=\"copy(h.password)\"\n          >\n            <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"no-items\" *ngIf=\"!history || !history.length\">\n    <p>{{ \"noPasswordsInList\" | i18n }}</p>\n  </div>\n</main>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { PasswordHistoryComponent as BasePasswordHistoryComponent } from \"@bitwarden/angular/components/password-history.component\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-password-history\",\n  templateUrl: \"password-history.component.html\",\n})\nexport class PasswordHistoryComponent extends BasePasswordHistoryComponent {\n  constructor(\n    cipherService: CipherService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    private location: Location,\n    private route: ActivatedRoute\n  ) {\n    super(cipherService, platformUtilsService, i18nService, window);\n  }\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.cipherId) {\n        this.cipherId = params.cipherId;\n      } else {\n        this.close();\n      }\n      await this.init();\n    });\n  }\n\n  close() {\n    this.location.back();\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\n\n@Directive()\nexport class ShareComponent implements OnInit {\n  @Input() cipherId: string;\n  @Input() organizationId: string;\n  @Output() onSharedCipher = new EventEmitter();\n\n  formPromise: Promise<any>;\n  cipher: CipherView;\n  collections: CollectionView[] = [];\n  organizations: Organization[] = [];\n\n  protected writeableCollections: CollectionView[] = [];\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService,\n    protected organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    this.writeableCollections = allCollections.map((c) => c).filter((c) => !c.readOnly);\n    const orgs = await this.organizationService.getAll();\n    this.organizations = orgs\n      .sort(Utils.getSortFunction(this.i18nService, \"name\"))\n      .filter((o) => o.enabled && o.status === OrganizationUserStatusType.Confirmed);\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    this.cipher = await cipherDomain.decrypt();\n    if (this.organizationId == null && this.organizations.length > 0) {\n      this.organizationId = this.organizations[0].id;\n    }\n    this.filterCollections();\n  }\n\n  filterCollections() {\n    this.writeableCollections.forEach((c) => ((c as any).checked = false));\n    if (this.organizationId == null || this.writeableCollections.length === 0) {\n      this.collections = [];\n    } else {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.organizationId\n      );\n    }\n  }\n\n  async submit(): Promise<boolean> {\n    const selectedCollectionIds = this.collections\n      .filter((c) => !!(c as any).checked)\n      .map((c) => c.id);\n    if (selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    const cipherView = await cipherDomain.decrypt();\n    const orgName =\n      this.organizations.find((o) => o.id === this.organizationId)?.name ??\n      this.i18nService.t(\"organization\");\n\n    try {\n      this.formPromise = this.cipherService\n        .shareWithServer(cipherView, this.organizationId, selectedCollectionIds)\n        .then(async () => {\n          this.onSharedCipher.emit();\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"movedItemToOrg\", cipherView.name, orgName)\n          );\n        });\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  get canSave() {\n    if (this.collections != null) {\n      for (let i = 0; i < this.collections.length; i++) {\n        if ((this.collections[i] as any).checked) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" (click)=\"cancel()\">{{ \"cancel\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"moveToOrganization\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button\n        type=\"submit\"\n        [disabled]=\"form.loading || !canSave\"\n        *ngIf=\"organizations && organizations.length\"\n      >\n        <span [hidden]=\"form.loading\">{{ \"move\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <main tabindex=\"-1\">\n    <div class=\"box\">\n      <div class=\"box-content\" *ngIf=\"!organizations || !organizations.length\">\n        <div class=\"box-content-row padded no-hover\">\n          {{ \"noOrganizationsList\" | i18n }}\n        </div>\n      </div>\n      <div class=\"box-content\" *ngIf=\"organizations && organizations.length\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"organization\">{{ \"organization\" | i18n }}</label>\n          <select\n            id=\"organization\"\n            name=\"OrganizationId\"\n            [(ngModel)]=\"organizationId\"\n            (change)=\"filterCollections()\"\n          >\n            <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{ o.name }}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"moveToOrgDesc\" | i18n }}\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"organizations && organizations.length\">\n      <h2 class=\"box-header\">\n        {{ \"collections\" | i18n }}\n      </h2>\n      <div class=\"box-content\" *ngIf=\"!collections || !collections.length\">\n        <div class=\"box-content-row padded no-hover\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n      </div>\n      <div class=\"box-content\" *ngIf=\"collections && collections.length\">\n        <div\n          class=\"box-content-row box-content-row-checkbox\"\n          *ngFor=\"let c of collections; let i = index\"\n          appBoxRow\n        >\n          <label for=\"collection_{{ i }}\">{{ c.name }}</label>\n          <input\n            id=\"collection_{{ i }}\"\n            type=\"checkbox\"\n            [(ngModel)]=\"c.checked\"\n            name=\"Collection[{{ i }}].Checked\"\n          />\n        </div>\n      </div>\n    </div>\n  </main>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ShareComponent as BaseShareComponent } from \"@bitwarden/angular/components/share.component\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-vault-share\",\n  templateUrl: \"share.component.html\",\n})\nexport class ShareComponent extends BaseShareComponent {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    logService: LogService,\n    cipherService: CipherService,\n    private route: ActivatedRoute,\n    private router: Router,\n    organizationService: OrganizationService\n  ) {\n    super(\n      collectionService,\n      platformUtilsService,\n      i18nService,\n      cipherService,\n      logService,\n      organizationService\n    );\n  }\n\n  async ngOnInit() {\n    this.onSharedCipher.subscribe(() => {\n      this.router.navigate([\"view-cipher\", { cipherId: this.cipherId }]);\n    });\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      this.cipherId = params.cipherId;\n      await this.load();\n    });\n  }\n\n  async submit(): Promise<boolean> {\n    const success = await super.submit();\n    if (success) {\n      this.cancel();\n    }\n    return success;\n  }\n\n  cancel() {\n    this.router.navigate([\"/view-cipher\"], {\n      replaceUrl: true,\n      queryParams: { cipherId: this.cipher.id },\n    });\n  }\n}\n","<header>\n  <div class=\"left\">\n    <app-pop-out></app-pop-out>\n  </div>\n  <h1 class=\"sr-only\">{{ \"myVault\" | i18n }}</h1>\n  <div class=\"search\">\n    <input\n      type=\"{{ searchTypeSearch ? 'search' : 'text' }}\"\n      placeholder=\"{{ 'searchVault' | i18n }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"search(200)\"\n      autocomplete=\"off\"\n      appAutofocus\n      (keydown)=\"closeOnEsc($event)\"\n    />\n    <i class=\"bwi bwi-search\"></i>\n  </div>\n  <div class=\"right\">\n    <button type=\"button\" (click)=\"addCipher()\" appA11yTitle=\"{{ 'addItem' | i18n }}\">\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\" cdk-scrollable>\n  <app-vault-select (onVaultSelectionChanged)=\"vaultFilterChanged()\"></app-vault-select>\n  <div class=\"no-items\" *ngIf=\"(!ciphers || !ciphers.length) && !showSearching()\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" *ngIf=\"!loaded\"></i>\n    <ng-container *ngIf=\"loaded\">\n      <img class=\"no-items-image\" aria-hidden=\"true\" />\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n      <button type=\"button\" (click)=\"addCipher()\" class=\"btn block primary link\">\n        {{ \"addItem\" | i18n }}\n      </button>\n    </ng-container>\n  </div>\n  <ng-container *ngIf=\"ciphers && ciphers.length && !showSearching()\">\n    <div class=\"box list\" *ngIf=\"favoriteCiphers\">\n      <h2 class=\"box-header\">\n        {{ \"favorites\" | i18n }}\n        <span class=\"flex-right\">{{ favoriteCiphers.length }}</span>\n      </h2>\n      <div class=\"box-content\">\n        <app-cipher-row\n          *ngFor=\"let favoriteCipher of favoriteCiphers\"\n          [cipher]=\"favoriteCipher\"\n          title=\"{{ 'viewItem' | i18n }}\"\n          (onSelected)=\"selectCipher($event)\"\n          (launchEvent)=\"launchCipher($event)\"\n        >\n        </app-cipher-row>\n      </div>\n    </div>\n    <div class=\"box list\">\n      <h2 class=\"box-header\">\n        {{ \"types\" | i18n }}\n        <span class=\"flex-right\">4</span>\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"selectType(cipherType.Login)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-globe\"></i></div>\n            <span class=\"text\">{{ \"typeLogin\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(cipherType.Login) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"selectType(cipherType.Card)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-credit-card\"></i></div>\n            <span class=\"text\">{{ \"typeCard\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(cipherType.Card) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"selectType(cipherType.Identity)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-id-card\"></i></div>\n            <span class=\"text\">{{ \"typeIdentity\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(cipherType.Identity) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"selectType(cipherType.SecureNote)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-sticky-note\"></i></div>\n            <span class=\"text\">{{ \"typeSecureNote\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(cipherType.SecureNote) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"nestedFolders?.length\">\n      <h2 class=\"box-header\">\n        {{ \"folders\" | i18n }}\n        <span class=\"flex-right\">{{ folderCount }}</span>\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          *ngFor=\"let f of nestedFolders\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"selectFolder(f.node)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\">\n              <i class=\"bwi bwi-fw bwi-lg bwi-folder\"></i>\n            </div>\n            <span class=\"text\">{{ f.node.name }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ folderCounts.get(f.node.id) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"showCollections && nestedCollections && nestedCollections.length\">\n      <h2 class=\"box-header\">\n        {{ \"collections\" | i18n }}\n        <span class=\"flex-right\">{{ nestedCollections.length }}</span>\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          *ngFor=\"let nestedCollection of nestedCollections\"\n          class=\"box-content-row\"\n          appStopClick\n          (click)=\"selectCollection(nestedCollection.node)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-collection\"></i></div>\n            <span class=\"text\">{{ nestedCollection.node.name }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{\n            collectionCounts.get(nestedCollection.node.id) || 0\n          }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"showNoFolderCiphers\">\n      <h2 class=\"box-header\">\n        {{ \"noneFolder\" | i18n }}\n        <div class=\"flex-right\">{{ noFolderCiphers.length }}</div>\n      </h2>\n      <div class=\"box-content\">\n        <app-cipher-row\n          *ngFor=\"let noFolderCipher of noFolderCiphers\"\n          [cipher]=\"noFolderCipher\"\n          title=\"{{ 'viewItem' | i18n }}\"\n          (onSelected)=\"selectCipher($event)\"\n          (launchEvent)=\"launchCipher($event)\"\n        >\n        </app-cipher-row>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"deletedCount\">\n      <h2 class=\"box-header\">\n        {{ \"trash\" | i18n }}\n        <span class=\"flex-right\">{{ deletedCount }}</span>\n      </h2>\n      <div class=\"box-content single-line\">\n        <button type=\"button\" class=\"box-content-row\" appStopClick (click)=\"selectTrash()\">\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-trash\"></i></div>\n            <span class=\"text\">{{ \"trash\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ deletedCount }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"showSearching()\">\n    <div class=\"no-items\" *ngIf=\"!ciphers || !ciphers.length\">\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n    </div>\n    <cdk-virtual-scroll-viewport\n      itemSize=\"46\"\n      minBufferPx=\"400\"\n      maxBufferPx=\"600\"\n      *ngIf=\"ciphers && ciphers.length > 0\"\n    >\n      <div class=\"box list full-list\">\n        <div class=\"box-content\">\n          <app-cipher-row\n            *cdkVirtualFor=\"let searchedCipher of ciphers\"\n            [cipher]=\"searchedCipher\"\n            title=\"{{ 'viewItem' | i18n }}\"\n            (onSelected)=\"selectCipher($event)\"\n            (launchEvent)=\"launchCipher($event)\"\n          >\n          </app-cipher-row>\n        </div>\n      </div>\n    </cdk-virtual-scroll-viewport>\n  </ng-container>\n</main>\n","import { Location } from \"@angular/common\";\nimport { ChangeDetectorRef, Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { firstValueFrom } from \"rxjs\";\nimport { first } from \"rxjs/operators\";\n\nimport { VaultFilter } from \"@bitwarden/angular/vault/vault-filter/models/vault-filter.model\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/treeNode\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\nimport { BrowserGroupingsComponentState } from \"src/models/browserGroupingsComponentState\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { StateService } from \"../../services/abstractions/state.service\";\nimport { VaultFilterService } from \"../../services/vaultFilter.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst ComponentId = \"VaultComponent\";\n\n@Component({\n  selector: \"app-vault-filter\",\n  templateUrl: \"vault-filter.component.html\",\n})\nexport class VaultFilterComponent implements OnInit, OnDestroy {\n  get showNoFolderCiphers(): boolean {\n    return (\n      this.noFolderCiphers != null &&\n      this.noFolderCiphers.length < this.noFolderListSize &&\n      this.collections.length === 0\n    );\n  }\n\n  get folderCount(): number {\n    return this.nestedFolders.length - (this.showNoFolderCiphers ? 0 : 1);\n  }\n  folders: FolderView[];\n  nestedFolders: TreeNode<FolderView>[];\n  collections: CollectionView[];\n  nestedCollections: TreeNode<CollectionView>[];\n  loaded = false;\n  cipherType = CipherType;\n  ciphers: CipherView[];\n  favoriteCiphers: CipherView[];\n  noFolderCiphers: CipherView[];\n  folderCounts = new Map<string, number>();\n  collectionCounts = new Map<string, number>();\n  typeCounts = new Map<CipherType, number>();\n  searchText: string;\n  state: BrowserGroupingsComponentState;\n  showLeftHeader = true;\n  searchPending = false;\n  searchTypeSearch = false;\n  deletedCount = 0;\n  vaultFilter: VaultFilter;\n  selectedOrganization: string = null;\n  showCollections = true;\n\n  private loadedTimeout: number;\n  private selectedTimeout: number;\n  private preventSelected = false;\n  private noFolderListSize = 100;\n  private searchTimeout: any = null;\n  private hasSearched = false;\n  private hasLoadedAllCiphers = false;\n  private allCiphers: CipherView[] = null;\n\n  constructor(\n    private cipherService: CipherService,\n    private router: Router,\n    private ngZone: NgZone,\n    private broadcasterService: BroadcasterService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private route: ActivatedRoute,\n    private popupUtils: PopupUtilsService,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private searchService: SearchService,\n    private location: Location,\n    private browserStateService: StateService,\n    private vaultFilterService: VaultFilterService\n  ) {\n    this.noFolderListSize = 100;\n  }\n\n  async ngOnInit() {\n    this.searchTypeSearch = !this.platformUtilsService.isSafari();\n    this.showLeftHeader = !(\n      this.popupUtils.inSidebar(window) && this.platformUtilsService.isFirefox()\n    );\n    await this.browserStateService.setBrowserCipherComponentState(null);\n\n    this.broadcasterService.subscribe(ComponentId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            window.setTimeout(() => {\n              this.load();\n            }, 500);\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n\n    const restoredScopeState = await this.restoreState();\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      this.state = await this.browserStateService.getBrowserGroupingComponentState();\n      if (this.state?.searchText) {\n        this.searchText = this.state.searchText;\n      } else if (params.searchText) {\n        this.searchText = params.searchText;\n        this.location.replaceState(\"vault\");\n      }\n\n      if (!this.syncService.syncInProgress) {\n        this.load();\n      } else {\n        this.loadedTimeout = window.setTimeout(() => {\n          if (!this.loaded) {\n            this.load();\n          }\n        }, 5000);\n      }\n\n      if (!this.syncService.syncInProgress || restoredScopeState) {\n        window.setTimeout(() => this.popupUtils.setContentScrollY(window, this.state?.scrollY), 0);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.loadedTimeout != null) {\n      window.clearTimeout(this.loadedTimeout);\n    }\n    if (this.selectedTimeout != null) {\n      window.clearTimeout(this.selectedTimeout);\n    }\n    this.saveState();\n    this.broadcasterService.unsubscribe(ComponentId);\n  }\n\n  async load() {\n    this.vaultFilter = this.vaultFilterService.getVaultFilter();\n\n    this.updateSelectedOrg();\n    await this.loadCollectionsAndFolders();\n    await this.loadCiphers();\n\n    if (this.showNoFolderCiphers && this.nestedFolders.length > 0) {\n      // Remove \"No Folder\" from folder listing\n      this.nestedFolders = this.nestedFolders.slice(0, this.nestedFolders.length - 1);\n    }\n\n    this.loaded = true;\n  }\n\n  async loadCiphers() {\n    this.allCiphers = await this.cipherService.getAllDecrypted();\n    if (!this.hasLoadedAllCiphers) {\n      this.hasLoadedAllCiphers = !this.searchService.isSearchable(this.searchText);\n    }\n    await this.search(null);\n    this.getCounts();\n  }\n\n  async loadCollections() {\n    const allCollections = await this.vaultFilterService.buildCollections(\n      this.selectedOrganization\n    );\n    this.collections = allCollections.fullList;\n    this.nestedCollections = allCollections.nestedList;\n  }\n\n  async loadFolders() {\n    const allFolders = await firstValueFrom(\n      this.vaultFilterService.buildNestedFolders(this.selectedOrganization)\n    );\n    this.folders = allFolders.fullList;\n    this.nestedFolders = allFolders.nestedList;\n  }\n\n  async search(timeout: number = null) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    const filterDeleted = (c: CipherView) => !c.isDeleted;\n    if (timeout == null) {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.ciphers = await this.searchService.searchCiphers(\n        this.searchText,\n        filterDeleted,\n        this.allCiphers\n      );\n      this.ciphers = this.ciphers.filter(\n        (c) => !this.vaultFilterService.filterCipherForSelectedVault(c)\n      );\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      if (!this.hasLoadedAllCiphers && !this.hasSearched) {\n        await this.loadCiphers();\n      } else {\n        this.ciphers = await this.searchService.searchCiphers(\n          this.searchText,\n          filterDeleted,\n          this.allCiphers\n        );\n      }\n      this.ciphers = this.ciphers.filter(\n        (c) => !this.vaultFilterService.filterCipherForSelectedVault(c)\n      );\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  async selectType(type: CipherType) {\n    this.router.navigate([\"/ciphers\"], { queryParams: { type: type } });\n  }\n\n  async selectFolder(folder: FolderView) {\n    this.router.navigate([\"/ciphers\"], { queryParams: { folderId: folder.id || \"none\" } });\n  }\n\n  async selectCollection(collection: CollectionView) {\n    this.router.navigate([\"/ciphers\"], { queryParams: { collectionId: collection.id } });\n  }\n\n  async selectTrash() {\n    this.router.navigate([\"/ciphers\"], { queryParams: { deleted: true } });\n  }\n\n  async selectCipher(cipher: CipherView) {\n    this.selectedTimeout = window.setTimeout(() => {\n      if (!this.preventSelected) {\n        this.router.navigate([\"/view-cipher\"], { queryParams: { cipherId: cipher.id } });\n      }\n      this.preventSelected = false;\n    }, 200);\n  }\n\n  async launchCipher(cipher: CipherView) {\n    if (cipher.type !== CipherType.Login || !cipher.login.canLaunch) {\n      return;\n    }\n\n    if (this.selectedTimeout != null) {\n      window.clearTimeout(this.selectedTimeout);\n    }\n    this.preventSelected = true;\n    await this.cipherService.updateLastLaunchedDate(cipher.id);\n    BrowserApi.createNewTab(cipher.login.launchUri);\n    if (this.popupUtils.inPopup(window)) {\n      BrowserApi.closePopup(window);\n    }\n  }\n\n  async addCipher() {\n    this.router.navigate([\"/add-cipher\"], {\n      queryParams: { selectedVault: this.vaultFilter.selectedOrganizationId },\n    });\n  }\n\n  async vaultFilterChanged() {\n    if (this.showSearching) {\n      await this.search();\n    }\n    this.updateSelectedOrg();\n    await this.loadCollectionsAndFolders();\n    this.getCounts();\n  }\n\n  updateSelectedOrg() {\n    this.vaultFilter = this.vaultFilterService.getVaultFilter();\n    if (this.vaultFilter.selectedOrganizationId != null) {\n      this.selectedOrganization = this.vaultFilter.selectedOrganizationId;\n    } else {\n      this.selectedOrganization = null;\n    }\n  }\n\n  getCounts() {\n    let favoriteCiphers: CipherView[] = null;\n    let noFolderCiphers: CipherView[] = null;\n    const folderCounts = new Map<string, number>();\n    const collectionCounts = new Map<string, number>();\n    const typeCounts = new Map<CipherType, number>();\n\n    this.deletedCount = this.allCiphers.filter(\n      (c) => c.isDeleted && !this.vaultFilterService.filterCipherForSelectedVault(c)\n    ).length;\n\n    this.ciphers?.forEach((c) => {\n      if (!this.vaultFilterService.filterCipherForSelectedVault(c)) {\n        if (c.isDeleted) {\n          return;\n        }\n        if (c.favorite) {\n          if (favoriteCiphers == null) {\n            favoriteCiphers = [];\n          }\n          favoriteCiphers.push(c);\n        }\n\n        if (c.folderId == null) {\n          if (noFolderCiphers == null) {\n            noFolderCiphers = [];\n          }\n          noFolderCiphers.push(c);\n        }\n\n        if (typeCounts.has(c.type)) {\n          typeCounts.set(c.type, typeCounts.get(c.type) + 1);\n        } else {\n          typeCounts.set(c.type, 1);\n        }\n\n        if (folderCounts.has(c.folderId)) {\n          folderCounts.set(c.folderId, folderCounts.get(c.folderId) + 1);\n        } else {\n          folderCounts.set(c.folderId, 1);\n        }\n\n        if (c.collectionIds != null) {\n          c.collectionIds.forEach((colId) => {\n            if (collectionCounts.has(colId)) {\n              collectionCounts.set(colId, collectionCounts.get(colId) + 1);\n            } else {\n              collectionCounts.set(colId, 1);\n            }\n          });\n        }\n      }\n    });\n\n    this.favoriteCiphers = favoriteCiphers;\n    this.noFolderCiphers = noFolderCiphers;\n    this.typeCounts = typeCounts;\n    this.folderCounts = folderCounts;\n    this.collectionCounts = collectionCounts;\n  }\n\n  showSearching() {\n    return (\n      this.hasSearched || (!this.searchPending && this.searchService.isSearchable(this.searchText))\n    );\n  }\n\n  closeOnEsc(e: KeyboardEvent) {\n    // If input not empty, use browser default behavior of clearing input instead\n    if (e.key === \"Escape\" && (this.searchText == null || this.searchText === \"\")) {\n      BrowserApi.closePopup(window);\n    }\n  }\n\n  private async loadCollectionsAndFolders() {\n    this.showCollections = !this.vaultFilter.myVaultOnly;\n    await this.loadFolders();\n    await this.loadCollections();\n  }\n\n  private async saveState() {\n    this.state = {\n      scrollY: this.popupUtils.getContentScrollY(window),\n      searchText: this.searchText,\n      favoriteCiphers: this.favoriteCiphers,\n      noFolderCiphers: this.noFolderCiphers,\n      ciphers: this.ciphers,\n      collectionCounts: this.collectionCounts,\n      folderCounts: this.folderCounts,\n      typeCounts: this.typeCounts,\n      folders: this.folders,\n      collections: this.collections,\n      deletedCount: this.deletedCount,\n    };\n    await this.browserStateService.setBrowserGroupingComponentState(this.state);\n  }\n\n  private async restoreState(): Promise<boolean> {\n    this.state = await this.browserStateService.getBrowserGroupingComponentState();\n    if (this.state == null) {\n      return false;\n    }\n\n    if (this.state.favoriteCiphers != null) {\n      this.favoriteCiphers = this.state.favoriteCiphers;\n    }\n    if (this.state.noFolderCiphers != null) {\n      this.noFolderCiphers = this.state.noFolderCiphers;\n    }\n    if (this.state.ciphers != null) {\n      this.ciphers = this.state.ciphers;\n    }\n    if (this.state.collectionCounts != null) {\n      this.collectionCounts = this.state.collectionCounts;\n    }\n    if (this.state.folderCounts != null) {\n      this.folderCounts = this.state.folderCounts;\n    }\n    if (this.state.typeCounts != null) {\n      this.typeCounts = this.state.typeCounts;\n    }\n    if (this.state.folders != null) {\n      this.folders = this.state.folders;\n    }\n    if (this.state.collections != null) {\n      this.collections = this.state.collections;\n    }\n    if (this.state.deletedCount != null) {\n      this.deletedCount = this.state.deletedCount;\n    }\n\n    return true;\n  }\n}\n","import { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport abstract class TokenService {\n  setTokens: (\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ) => Promise<any>;\n  setToken: (token: string) => Promise<any>;\n  getToken: () => Promise<string>;\n  setRefreshToken: (refreshToken: string) => Promise<any>;\n  getRefreshToken: () => Promise<string>;\n  setClientId: (clientId: string) => Promise<any>;\n  getClientId: () => Promise<string>;\n  setClientSecret: (clientSecret: string) => Promise<any>;\n  getClientSecret: () => Promise<string>;\n  setTwoFactorToken: (tokenResponse: IdentityTokenResponse) => Promise<any>;\n  getTwoFactorToken: () => Promise<string>;\n  clearTwoFactorToken: () => Promise<any>;\n  clearToken: (userId?: string) => Promise<any>;\n  decodeToken: (token?: string) => any;\n  getTokenExpirationDate: () => Promise<Date>;\n  tokenSecondsRemaining: (offsetSeconds?: number) => Promise<number>;\n  tokenNeedsRefresh: (minutes?: number) => Promise<boolean>;\n  getUserId: () => Promise<string>;\n  getEmail: () => Promise<string>;\n  getEmailVerified: () => Promise<boolean>;\n  getName: () => Promise<string>;\n  getIssuer: () => Promise<string>;\n  getIsExternal: () => Promise<boolean>;\n}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n} from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { FieldType } from \"@bitwarden/common/enums/fieldType\";\nimport { EncArrayBuffer } from \"@bitwarden/common/models/domain/encArrayBuffer\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/errorResponse\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachmentView\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { LoginUriView } from \"@bitwarden/common/models/view/loginUriView\";\n\nconst BroadcasterSubscriptionId = \"ViewComponent\";\n\n@Directive()\nexport class ViewComponent implements OnDestroy, OnInit {\n  @Input() cipherId: string;\n  @Output() onEditCipher = new EventEmitter<CipherView>();\n  @Output() onCloneCipher = new EventEmitter<CipherView>();\n  @Output() onShareCipher = new EventEmitter<CipherView>();\n  @Output() onDeletedCipher = new EventEmitter<CipherView>();\n  @Output() onRestoredCipher = new EventEmitter<CipherView>();\n\n  cipher: CipherView;\n  showPassword: boolean;\n  showPasswordCount: boolean;\n  showCardNumber: boolean;\n  showCardCode: boolean;\n  canAccessPremium: boolean;\n  showPremiumRequiredTotp: boolean;\n  totpCode: string;\n  totpCodeFormatted: string;\n  totpDash: number;\n  totpSec: number;\n  totpLow: boolean;\n  fieldType = FieldType;\n  checkPasswordPromise: Promise<number>;\n\n  private totpInterval: any;\n  private previousCipherId: string;\n  private passwordReprompted = false;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected totpService: TotpService,\n    protected tokenService: TokenService,\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected auditService: AuditService,\n    protected win: Window,\n    protected broadcasterService: BroadcasterService,\n    protected ngZone: NgZone,\n    protected changeDetectorRef: ChangeDetectorRef,\n    protected eventService: EventService,\n    protected apiService: ApiService,\n    protected passwordRepromptService: PasswordRepromptService,\n    private logService: LogService,\n    protected stateService: StateService,\n    protected fileDownloadService: FileDownloadService\n  ) {}\n\n  ngOnInit() {\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (message.successfully) {\n              await this.load();\n              this.changeDetectorRef.detectChanges();\n            }\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    this.cleanUp();\n  }\n\n  async load() {\n    this.cleanUp();\n\n    const cipher = await this.cipherService.get(this.cipherId);\n    this.cipher = await cipher.decrypt();\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.showPremiumRequiredTotp =\n      this.cipher.login.totp && !this.canAccessPremium && !this.cipher.organizationUseTotp;\n\n    if (\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.totp &&\n      (cipher.organizationUseTotp || this.canAccessPremium)\n    ) {\n      await this.totpUpdateCode();\n      const interval = this.totpService.getTimeInterval(this.cipher.login.totp);\n      await this.totpTick(interval);\n\n      this.totpInterval = setInterval(async () => {\n        await this.totpTick(interval);\n      }, 1000);\n    }\n\n    if (this.previousCipherId !== this.cipherId) {\n      this.eventService.collect(EventType.Cipher_ClientViewed, this.cipherId);\n    }\n    this.previousCipherId = this.cipherId;\n  }\n\n  async edit() {\n    if (await this.promptPassword()) {\n      this.onEditCipher.emit(this.cipher);\n      return true;\n    }\n\n    return false;\n  }\n\n  async clone() {\n    if (await this.promptPassword()) {\n      this.onCloneCipher.emit(this.cipher);\n      return true;\n    }\n\n    return false;\n  }\n\n  async share() {\n    if (await this.promptPassword()) {\n      this.onShareCipher.emit(this.cipher);\n      return true;\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        this.cipher.isDeleted ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(\"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.deleteCipher();\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.cipher.isDeleted ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.onDeletedCipher.emit(this.cipher);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async restore(): Promise<boolean> {\n    if (!this.cipher.isDeleted) {\n      return false;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.restoreCipher();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.onRestoredCipher.emit(this.cipher);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async togglePassword() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    this.showPassword = !this.showPassword;\n    this.showPasswordCount = false;\n    if (this.showPassword) {\n      this.eventService.collect(EventType.Cipher_ClientToggledPasswordVisible, this.cipherId);\n    }\n  }\n\n  async togglePasswordCount() {\n    if (!this.showPassword) {\n      return;\n    }\n\n    this.showPasswordCount = !this.showPasswordCount;\n  }\n\n  async toggleCardNumber() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    this.showCardNumber = !this.showCardNumber;\n    if (this.showCardNumber) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardCodeVisible, this.cipherId);\n    }\n  }\n\n  async toggleCardCode() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    this.showCardCode = !this.showCardCode;\n    if (this.showCardCode) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardCodeVisible, this.cipherId);\n    }\n  }\n\n  async checkPassword() {\n    if (\n      this.cipher.login == null ||\n      this.cipher.login.password == null ||\n      this.cipher.login.password === \"\"\n    ) {\n      return;\n    }\n\n    this.checkPasswordPromise = this.auditService.passwordLeaked(this.cipher.login.password);\n    const matches = await this.checkPasswordPromise;\n\n    if (matches > 0) {\n      this.platformUtilsService.showToast(\n        \"warning\",\n        null,\n        this.i18nService.t(\"passwordExposed\", matches.toString())\n      );\n    } else {\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"passwordSafe\"));\n    }\n  }\n\n  launch(uri: LoginUriView, cipherId?: string) {\n    if (!uri.canLaunch) {\n      return;\n    }\n\n    if (cipherId) {\n      this.cipherService.updateLastLaunchedDate(cipherId);\n    }\n\n    this.platformUtilsService.launchUri(uri.launchUri);\n  }\n\n  async copy(value: string, typeI18nKey: string, aType: string) {\n    if (value == null) {\n      return;\n    }\n\n    if (\n      this.passwordRepromptService.protectedFields().includes(aType) &&\n      !(await this.promptPassword())\n    ) {\n      return;\n    }\n\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(value, copyOptions);\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (typeI18nKey === \"password\") {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipherId);\n    } else if (typeI18nKey === \"securityCode\") {\n      this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, this.cipherId);\n    } else if (aType === \"H_Field\") {\n      this.eventService.collect(EventType.Cipher_ClientCopiedHiddenField, this.cipherId);\n    }\n  }\n\n  setTextDataOnDrag(event: DragEvent, data: string) {\n    event.dataTransfer.setData(\"text\", data);\n  }\n\n  async downloadAttachment(attachment: AttachmentView) {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n    const a = attachment as any;\n    if (a.downloading) {\n      return;\n    }\n\n    if (this.cipher.organizationId == null && !this.canAccessPremium) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"premiumRequiredDesc\")\n      );\n      return;\n    }\n\n    let url: string;\n    try {\n      const attachmentDownloadResponse = await this.apiService.getAttachmentData(\n        this.cipher.id,\n        attachment.id\n      );\n      url = attachmentDownloadResponse.url;\n    } catch (e) {\n      if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n        url = attachment.url;\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    a.downloading = true;\n    const response = await fetch(new Request(url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      a.downloading = false;\n      return;\n    }\n\n    try {\n      const encBuf = await EncArrayBuffer.fromResponse(response);\n      const key =\n        attachment.key != null\n          ? attachment.key\n          : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n      const decBuf = await this.cryptoService.decryptFromBytes(encBuf, key);\n      this.fileDownloadService.download({\n        fileName: attachment.fileName,\n        blobData: decBuf,\n      });\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    a.downloading = false;\n  }\n\n  protected deleteCipher() {\n    return this.cipher.isDeleted\n      ? this.cipherService.deleteWithServer(this.cipher.id)\n      : this.cipherService.softDeleteWithServer(this.cipher.id);\n  }\n\n  protected restoreCipher() {\n    return this.cipherService.restoreWithServer(this.cipher.id);\n  }\n\n  protected async promptPassword() {\n    if (this.cipher.reprompt === CipherRepromptType.None || this.passwordReprompted) {\n      return true;\n    }\n\n    return (this.passwordReprompted = await this.passwordRepromptService.showPasswordPrompt());\n  }\n\n  private cleanUp() {\n    this.totpCode = null;\n    this.cipher = null;\n    this.showPassword = false;\n    this.showCardNumber = false;\n    this.showCardCode = false;\n    this.passwordReprompted = false;\n    if (this.totpInterval) {\n      clearInterval(this.totpInterval);\n    }\n  }\n\n  private async totpUpdateCode() {\n    if (\n      this.cipher == null ||\n      this.cipher.type !== CipherType.Login ||\n      this.cipher.login.totp == null\n    ) {\n      if (this.totpInterval) {\n        clearInterval(this.totpInterval);\n      }\n      return;\n    }\n\n    this.totpCode = await this.totpService.getCode(this.cipher.login.totp);\n    if (this.totpCode != null) {\n      if (this.totpCode.length > 4) {\n        const half = Math.floor(this.totpCode.length / 2);\n        this.totpCodeFormatted =\n          this.totpCode.substring(0, half) + \" \" + this.totpCode.substring(half);\n      } else {\n        this.totpCodeFormatted = this.totpCode;\n      }\n    } else {\n      this.totpCodeFormatted = null;\n      if (this.totpInterval) {\n        clearInterval(this.totpInterval);\n      }\n    }\n  }\n\n  private async totpTick(intervalSeconds: number) {\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const mod = epoch % intervalSeconds;\n\n    this.totpSec = intervalSeconds - mod;\n    this.totpDash = +(Math.round(((78.6 / intervalSeconds) * mod + \"e+2\") as any) + \"e-2\");\n    this.totpLow = this.totpSec <= 7;\n    if (mod === 0) {\n      await this.totpUpdateCode();\n    }\n  }\n}\n","import { Directive, Input } from \"@angular/core\";\n\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { FieldType } from \"@bitwarden/common/enums/fieldType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { FieldView } from \"@bitwarden/common/models/view/fieldView\";\n\n@Directive()\nexport class ViewCustomFieldsComponent {\n  @Input() cipher: CipherView;\n  @Input() promptPassword: () => Promise<boolean>;\n  @Input() copy: (value: string, typeI18nKey: string, aType: string) => void;\n\n  fieldType = FieldType;\n\n  constructor(private eventService: EventService) {}\n\n  async toggleFieldValue(field: FieldView) {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const f = field as any;\n    f.showValue = !f.showValue;\n    f.showCount = false;\n    if (f.showValue) {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipher.id);\n    }\n  }\n\n  async toggleFieldCount(field: FieldView) {\n    if (!field.showValue) {\n      return;\n    }\n\n    field.showCount = !field.showCount;\n  }\n}\n","import { Pipe } from \"@angular/core\";\n\nimport { ColorPasswordPipe } from \"./color-password.pipe\";\n\n/*\n An updated pipe that extends ColourPasswordPipe to include a character count\n*/\n@Pipe({ name: \"colorPasswordCount\" })\nexport class ColorPasswordCountPipe extends ColorPasswordPipe {\n  transform(password: string) {\n    const template = (character: string, type: string, index: number) =>\n      `<span class=\"password-character password-${type}\">\n                ${character}<span class=\"password-count\">${index + 1}</span>\n            </span>`;\n    const colorizedPasswordCount = this.generateTemplate(password, template);\n\n    return colorizedPasswordCount;\n  }\n}\n","<ng-container>\n  <h2 class=\"box-header\">\n    {{ \"customFields\" | i18n }}\n  </h2>\n  <div class=\"box-content\">\n    <div class=\"box-content-row box-content-row-flex\" *ngFor=\"let field of cipher.fields\">\n      <div class=\"row-main\">\n        <span class=\"row-label\">{{ field.name }}</span>\n        <div *ngIf=\"field.type === fieldType.Text\">\n          {{ field.value || \"&nbsp;\" }}\n        </div>\n        <div *ngIf=\"field.type === fieldType.Hidden\">\n          <span *ngIf=\"!field.showValue\" class=\"monospaced\">{{ field.maskedValue }}</span>\n          <span\n            *ngIf=\"field.showValue && !field.showCount\"\n            class=\"monospaced show-whitespace\"\n            [innerHTML]=\"field.value | colorPassword\"\n          ></span>\n          <span\n            *ngIf=\"field.showValue && field.showCount\"\n            [innerHTML]=\"field.value | colorPasswordCount\"\n          ></span>\n        </div>\n        <div *ngIf=\"field.type === fieldType.Boolean\">\n          <i class=\"bwi bwi-check-square\" *ngIf=\"field.value === 'true'\" aria-hidden=\"true\"></i>\n          <i class=\"bwi bwi-square\" *ngIf=\"field.value !== 'true'\" aria-hidden=\"true\"></i>\n          <span class=\"sr-only\">{{ field.value }}</span>\n        </div>\n        <div *ngIf=\"field.type === fieldType.Linked\" class=\"box-content-row-flex\">\n          <div class=\"icon icon-small\">\n            <i\n              class=\"bwi bwi-link\"\n              aria-hidden=\"true\"\n              appA11yTitle=\"{{ 'linkedValue' | i18n }}\"\n            ></i>\n            <span class=\"sr-only\">{{ \"linkedValue\" | i18n }}</span>\n          </div>\n          <span>{{ cipher.linkedFieldI18nKey(field.linkedId) | i18n }}</span>\n        </div>\n      </div>\n      <div class=\"action-buttons action-buttons-fixed\">\n        <button\n          type=\"button\"\n          class=\"row-btn\"\n          appStopClick\n          attr.aria-label=\"{{ 'toggleCharacterCount' | i18n }} {{ field.name }}\"\n          appA11yTitle=\"{{ 'toggleCharacterCount' | i18n }}\"\n          *ngIf=\"field.type === fieldType.Hidden && cipher.viewPassword && field.showValue\"\n          (click)=\"toggleFieldCount(field)\"\n          [attr.aria-pressed]=\"field.showCount\"\n        >\n          <i class=\"bwi bwi-lg bwi-numbered-list\" aria-hidden=\"true\"></i>\n        </button>\n        <button\n          type=\"button\"\n          class=\"row-btn\"\n          appStopClick\n          attr.aria-label=\"{{ 'toggleVisibility' | i18n }} {{ field.name }}\"\n          appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n          *ngIf=\"field.type === fieldType.Hidden && cipher.viewPassword\"\n          (click)=\"toggleFieldValue(field)\"\n          [attr.aria-pressed]=\"field.showValue\"\n        >\n          <i\n            class=\"bwi bwi-lg\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{ 'bwi-eye': !field.showValue, 'bwi-eye-slash': field.showValue }\"\n          ></i>\n        </button>\n        <button\n          type=\"button\"\n          class=\"row-btn\"\n          appStopClick\n          attr.aria-label=\"{{ 'copyValue' | i18n }} {{ field.name }}\"\n          appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n          *ngIf=\"\n            field.value &&\n            field.type !== fieldType.Boolean &&\n            field.type !== fieldType.Linked &&\n            !(field.type === fieldType.Hidden && !cipher.viewPassword)\n          \"\n          (click)=\"\n            copy(field.value, 'value', field.type === fieldType.Hidden ? 'H_Field' : 'Field')\n          \"\n        >\n          <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n        </button>\n      </div>\n    </div>\n  </div>\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { ViewCustomFieldsComponent as BaseViewCustomFieldsComponent } from \"@bitwarden/angular/components/view-custom-fields.component\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\n\n@Component({\n  selector: \"app-vault-view-custom-fields\",\n  templateUrl: \"view-custom-fields.component.html\",\n})\nexport class ViewCustomFieldsComponent extends BaseViewCustomFieldsComponent {\n  constructor(eventService: EventService) {\n    super(eventService);\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" (click)=\"close()\">{{ \"close\" | i18n }}</button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"viewItem\" | i18n }}</span>\n  </h1>\n  <div class=\"right\" *ngIf=\"cipher\">\n    <button type=\"button\" (click)=\"edit()\" *ngIf=\"!cipher.isDeleted\">\n      {{ \"edit\" | i18n }}\n    </button>\n  </div>\n</header>\n<main tabindex=\"-1\" *ngIf=\"cipher\">\n  <div class=\"box\">\n    <h2 class=\"box-header\">\n      {{ \"itemInformation\" | i18n }}\n    </h2>\n    <div class=\"box-content\">\n      <div class=\"box-content-row\">\n        <label for=\"name\">{{ \"name\" | i18n }}</label>\n        <input id=\"name\" type=\"text\" [value]=\"cipher.name\" readonly aria-readonly=\"true\" />\n      </div>\n      <!-- Login -->\n      <div *ngIf=\"cipher.login\">\n        <div class=\"box-content-row box-content-row-flex\" *ngIf=\"cipher.login.username\">\n          <div class=\"row-main\">\n            <label\n              for=\"loginUsername\"\n              class=\"row-label draggable\"\n              draggable=\"true\"\n              (dragstart)=\"setTextDataOnDrag($event, cipher.login.username)\"\n              >{{ \"username\" | i18n }}\n            </label>\n            <input\n              id=\"loginUsername\"\n              type=\"text\"\n              [value]=\"cipher.login.username\"\n              readonly\n              aria-readonly=\"true\"\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'copyUsername' | i18n }}\"\n              (click)=\"copy(cipher.login.username, 'username', 'Username')\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"box-content-row box-content-row-flex\" *ngIf=\"cipher.login.password\">\n          <div class=\"row-main\">\n            <span\n              class=\"row-label draggable\"\n              draggable=\"true\"\n              (dragstart)=\"setTextDataOnDrag($event, cipher.login.password)\"\n              >{{ \"password\" | i18n }}</span\n            >\n            <div *ngIf=\"!showPassword\" class=\"monospaced\">\n              {{ cipher.login.maskedPassword }}\n            </div>\n            <div\n              *ngIf=\"showPassword && !showPasswordCount\"\n              class=\"monospaced password-wrapper\"\n              appSelectCopy\n              [innerHTML]=\"cipher.login.password | colorPassword\"\n            ></div>\n            <div\n              *ngIf=\"showPassword && showPasswordCount\"\n              [innerHTML]=\"cipher.login.password | colorPasswordCount\"\n            ></div>\n          </div>\n          <div class=\"action-buttons action-buttons-fixed\">\n            <button\n              type=\"button\"\n              #checkPasswordBtn\n              class=\"row-btn btn\"\n              appA11yTitle=\"{{ 'checkPassword' | i18n }}\"\n              (click)=\"checkPassword()\"\n              [appApiAction]=\"checkPasswordPromise\"\n              [disabled]=\"checkPasswordBtn.loading\"\n              *ngIf=\"cipher.viewPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg bwi-check-circle\"\n                [hidden]=\"checkPasswordBtn.loading\"\n                aria-hidden=\"true\"\n              ></i>\n              <i\n                class=\"bwi bwi-lg bwi-spinner bwi-spin\"\n                [hidden]=\"!checkPasswordBtn.loading\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              attr.aria-label=\"{{ 'toggleCharacterCount' | i18n }} {{ 'password' | i18n }}\"\n              appA11yTitle=\"{{ 'toggleCharacterCount' | i18n }}\"\n              (click)=\"togglePasswordCount()\"\n              *ngIf=\"showPassword\"\n              [attr.aria-pressed]=\"showPasswordCount\"\n            >\n              <i class=\"bwi bwi-lg bwi-numbered-list\" aria-hidden=\"true\"></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              attr.aria-label=\"{{ 'toggleVisibility' | i18n }} {{ 'password' | i18n }}\"\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n              *ngIf=\"cipher.viewPassword\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n              (click)=\"copy(cipher.login.password, 'password', 'Password')\"\n              *ngIf=\"cipher.viewPassword\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n        <div\n          class=\"box-content-row box-content-row-flex totp\"\n          [ngClass]=\"{ low: totpLow }\"\n          *ngIf=\"cipher.login.totp && totpCode\"\n        >\n          <div class=\"row-main\">\n            <span\n              class=\"row-label draggable\"\n              draggable=\"true\"\n              (dragstart)=\"setTextDataOnDrag($event, totpCode)\"\n              >{{ \"verificationCodeTotp\" | i18n }}</span\n            >\n            <span class=\"totp-code\">{{ totpCodeFormatted }}</span>\n          </div>\n          <span class=\"totp-countdown\">\n            <span class=\"totp-sec\">{{ totpSec }}</span>\n            <svg>\n              <g>\n                <circle\n                  class=\"totp-circle inner\"\n                  r=\"12.6\"\n                  cy=\"16\"\n                  cx=\"16\"\n                  [ngStyle]=\"{ 'stroke-dashoffset.px': totpDash }\"\n                ></circle>\n                <circle class=\"totp-circle outer\" r=\"14\" cy=\"16\" cx=\"16\"></circle>\n              </g>\n            </svg>\n          </span>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'copyVerificationCode' | i18n }}\"\n              (click)=\"copy(totpCode, 'verificationCodeTotp', 'TOTP')\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n\n        <div class=\"box-content-row box-content-row-flex totp\" *ngIf=\"showPremiumRequiredTotp\">\n          <div class=\"row-main\">\n            <span class=\"row-label\">{{ \"verificationCodeTotp\" | i18n }}</span>\n            <span class=\"row-label\">\n              <a routerLink=\"/premium\">\n                {{ \"premiumSubcriptionRequired\" | i18n }}\n              </a>\n            </span>\n          </div>\n        </div>\n      </div>\n      <!-- Card -->\n      <div *ngIf=\"cipher.card\">\n        <div class=\"box-content-row\" *ngIf=\"cipher.card.cardholderName\">\n          <span class=\"row-label\">{{ \"cardholderName\" | i18n }}</span>\n          {{ cipher.card.cardholderName }}\n        </div>\n        <div class=\"box-content-row box-content-row-flex\" *ngIf=\"cipher.card.number\">\n          <div class=\"row-main\">\n            <span class=\"row-label\">{{ \"number\" | i18n }}</span>\n            <span [hidden]=\"showCardNumber\" class=\"monospaced\">{{\n              cipher.card.maskedNumber | creditCardNumber: cipher.card.brand\n            }}</span>\n            <span [hidden]=\"!showCardNumber\" class=\"monospaced\">{{\n              cipher.card.number | creditCardNumber: cipher.card.brand\n            }}</span>\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              attr.aria-label=\"{{ 'toggleVisibility' | i18n }} {{ 'number' | i18n }}\"\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"toggleCardNumber()\"\n              [attr.aria-pressed]=\"showCardNumber\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showCardNumber, 'bwi-eye-slash': showCardNumber }\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'copyNumber' | i18n }}\"\n              (click)=\"copy(cipher.card.number, 'number', 'Card Number')\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.card.brand\">\n          <span class=\"row-label\">{{ \"brand\" | i18n }}</span>\n          {{ cipher.card.brand }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.card.expiration\">\n          <span class=\"row-label\">{{ \"expiration\" | i18n }}</span>\n          {{ cipher.card.expiration }}\n        </div>\n        <div class=\"box-content-row box-content-row-flex\" *ngIf=\"cipher.card.code\">\n          <div class=\"row-main\">\n            <span class=\"row-label\">{{ \"securityCode\" | i18n }}</span>\n            <span [hidden]=\"showCardCode\" class=\"monospaced\">{{ cipher.card.maskedCode }}</span>\n            <span [hidden]=\"!showCardCode\" class=\"monospaced\">{{ cipher.card.code }}</span>\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              attr.aria-label=\"{{ 'toggleVisibility' | i18n }} {{ 'securityCode' | i18n }}\"\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"toggleCardCode()\"\n              [attr.aria-pressed]=\"showCardCode\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showCardCode, 'bwi-eye-slash': showCardCode }\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'copySecurityCode' | i18n }}\"\n              (click)=\"copy(cipher.card.code, 'securityCode', 'Security Code')\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <!-- Identity -->\n      <div *ngIf=\"cipher.identity\">\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.fullName\">\n          <span class=\"row-label\">{{ \"identityName\" | i18n }}</span>\n          {{ cipher.identity.fullName }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.username\">\n          <span class=\"row-label\">{{ \"username\" | i18n }}</span>\n          {{ cipher.identity.username }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.company\">\n          <span class=\"row-label\">{{ \"company\" | i18n }}</span>\n          {{ cipher.identity.company }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.ssn\">\n          <span class=\"row-label\">{{ \"ssn\" | i18n }}</span>\n          {{ cipher.identity.ssn }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.passportNumber\">\n          <span class=\"row-label\">{{ \"passportNumber\" | i18n }}</span>\n          {{ cipher.identity.passportNumber }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.licenseNumber\">\n          <span class=\"row-label\">{{ \"licenseNumber\" | i18n }}</span>\n          {{ cipher.identity.licenseNumber }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.email\">\n          <span class=\"row-label\">{{ \"email\" | i18n }}</span>\n          {{ cipher.identity.email }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.phone\">\n          <span class=\"row-label\">{{ \"phone\" | i18n }}</span>\n          {{ cipher.identity.phone }}\n        </div>\n        <div\n          class=\"box-content-row\"\n          *ngIf=\"cipher.identity.address1 || cipher.identity.city || cipher.identity.country\"\n        >\n          <span class=\"row-label\">{{ \"address\" | i18n }}</span>\n          <div *ngIf=\"cipher.identity.address1\">{{ cipher.identity.address1 }}</div>\n          <div *ngIf=\"cipher.identity.address2\">{{ cipher.identity.address2 }}</div>\n          <div *ngIf=\"cipher.identity.address3\">{{ cipher.identity.address3 }}</div>\n          <div *ngIf=\"cipher.identity.fullAddressPart2\">{{ cipher.identity.fullAddressPart2 }}</div>\n          <div *ngIf=\"cipher.identity.country\">{{ cipher.identity.country }}</div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"box\" *ngIf=\"cipher.login && cipher.login.hasUris\">\n    <div class=\"box-content\">\n      <div\n        class=\"box-content-row box-content-row-flex\"\n        *ngFor=\"let u of cipher.login.uris; let i = index\"\n      >\n        <div class=\"row-main\">\n          <label for=\"hostOrUri{{ i }}\" class=\"row-label\" *ngIf=\"!u.isWebsite\">{{\n            \"uri\" | i18n\n          }}</label>\n          <label for=\"hostOrUri{{ i }}\" class=\"row-label\" *ngIf=\"u.isWebsite\">{{\n            \"website\" | i18n\n          }}</label>\n          <span title=\"{{ u.uri }}\">\n            <input\n              id=\"hostOrUri{{ i }}\"\n              type=\"text\"\n              [value]=\"u.hostOrUri\"\n              readonly\n              aria-readonly=\"true\"\n            />\n          </span>\n        </div>\n        <div class=\"action-buttons\">\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            attr.aria-label=\"{{ 'launch' | i18n }} {{ u.uri }}\"\n            appA11yTitle=\"{{ 'launch' | i18n }}\"\n            *ngIf=\"u.canLaunch\"\n            (click)=\"launch(u)\"\n          >\n            <i class=\"bwi bwi-lg bwi-share-square\" aria-hidden=\"true\"></i>\n          </button>\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            attr.aria-label=\"{{ 'copyUri' | i18n }} {{ u.uri }}\"\n            appA11yTitle=\"{{ 'copyUri' | i18n }}\"\n            (click)=\"copy(u.uri, u.isWebsite ? 'website' : 'uri', 'URI')\"\n          >\n            <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"box\" *ngIf=\"cipher.notes\">\n    <h2 class=\"box-header\">\n      <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n    </h2>\n    <div class=\"box-content\">\n      <div class=\"box-content-row\">\n        <textarea\n          id=\"notes\"\n          [value]=\"cipher.notes\"\n          rows=\"6\"\n          readonly\n          aria-readonly=\"true\"\n        ></textarea>\n      </div>\n    </div>\n  </div>\n  <div class=\"box\" *ngIf=\"cipher.hasFields\">\n    <app-vault-view-custom-fields\n      [cipher]=\"cipher\"\n      [promptPassword]=\"promptPassword.bind(this)\"\n      [copy]=\"copy.bind(this)\"\n    ></app-vault-view-custom-fields>\n  </div>\n  <div\n    class=\"box\"\n    *ngIf=\"cipher.hasAttachments && (canAccessPremium || cipher.organizationId) && showAttachments\"\n  >\n    <h2 class=\"box-header\">\n      {{ \"attachments\" | i18n }}\n    </h2>\n    <div class=\"box-content\">\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        *ngFor=\"let attachment of cipher.attachments\"\n        appStopClick\n        (click)=\"downloadAttachment(attachment)\"\n      >\n        <span class=\"row-main\">{{ attachment.fileName }}</span>\n        <small class=\"row-sub-label\">{{ attachment.sizeName }}</small>\n        <i\n          class=\"bwi bwi-download bwi-fw row-sub-icon\"\n          *ngIf=\"!attachment.downloading\"\n          aria-hidden=\"true\"\n        ></i>\n        <i\n          class=\"bwi bwi-spinner bwi-fw bwi-spin row-sub-icon\"\n          *ngIf=\"attachment.downloading\"\n          aria-hidden=\"true\"\n        ></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <div class=\"box-content single-line\">\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        (click)=\"fillCipher()\"\n        *ngIf=\"cipher.type !== cipherType.SecureNote && !cipher.isDeleted && !inPopout\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-pencil-square bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"autoFill\" | i18n }}</span>\n        </div>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        (click)=\"fillCipherAndSave()\"\n        *ngIf=\"cipher.type === cipherType.Login && !cipher.isDeleted && !inPopout\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-bookmark bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"autoFillAndSave\" | i18n }}</span>\n        </div>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        (click)=\"clone()\"\n        *ngIf=\"!cipher.organizationId && !cipher.isDeleted\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-files bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"cloneItem\" | i18n }}</span>\n        </div>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        (click)=\"share()\"\n        *ngIf=\"!cipher.organizationId\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-arrow-circle-right bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"moveToOrganization\" | i18n }}</span>\n        </div>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        (click)=\"restore()\"\n        *ngIf=\"cipher.isDeleted\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-undo bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"restoreItem\" | i18n }}</span>\n        </div>\n      </button>\n      <button type=\"button\" class=\"box-content-row\" appStopClick (click)=\"delete()\">\n        <div class=\"row-main text-danger\">\n          <div class=\"icon text-danger\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-trash bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ (cipher.isDeleted ? \"permanentlyDeleteItem\" : \"deleteItem\") | i18n }}</span>\n        </div>\n      </button>\n    </div>\n  </div>\n  <div class=\"box\">\n    <div class=\"box-footer\">\n      <div>\n        <b class=\"font-weight-semibold\">{{ \"dateUpdated\" | i18n }}:</b>\n        {{ cipher.revisionDate | date: \"medium\" }}\n      </div>\n      <div *ngIf=\"cipher.passwordRevisionDisplayDate\">\n        <b class=\"font-weight-semibold\">{{ \"datePasswordUpdated\" | i18n }}:</b>\n        {{ cipher.passwordRevisionDisplayDate | date: \"medium\" }}\n      </div>\n      <div *ngIf=\"cipher.hasPasswordHistory\">\n        <b class=\"font-weight-semibold\">{{ \"passwordHistory\" | i18n }}:</b>\n        <button\n          routerLink=\"/cipher-password-history\"\n          [queryParams]=\"{ cipherId: cipher.id }\"\n          appStopClick\n          title=\"{{ 'passwordHistory' | i18n }}\"\n        >\n          {{ cipher.passwordHistory.length }}\n        </button>\n      </div>\n    </div>\n  </div>\n</main>\n","import { Location } from \"@angular/common\";\nimport { ChangeDetectorRef, Component, NgZone } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ViewComponent as BaseViewComponent } from \"@bitwarden/angular/components/view.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { LoginUriView } from \"@bitwarden/common/models/view/loginUriView\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { AutofillService } from \"../../services/abstractions/autofill.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst BroadcasterSubscriptionId = \"ChildViewComponent\";\n\n@Component({\n  selector: \"app-vault-view\",\n  templateUrl: \"view.component.html\",\n})\nexport class ViewComponent extends BaseViewComponent {\n  showAttachments = true;\n  pageDetails: any[] = [];\n  tab: any;\n  loadPageDetailsTimeout: number;\n  inPopout = false;\n  cipherType = CipherType;\n\n  constructor(\n    cipherService: CipherService,\n    totpService: TotpService,\n    tokenService: TokenService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    broadcasterService: BroadcasterService,\n    ngZone: NgZone,\n    changeDetectorRef: ChangeDetectorRef,\n    stateService: StateService,\n    eventService: EventService,\n    private autofillService: AutofillService,\n    private messagingService: MessagingService,\n    private popupUtilsService: PopupUtilsService,\n    apiService: ApiService,\n    passwordRepromptService: PasswordRepromptService,\n    logService: LogService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cipherService,\n      totpService,\n      tokenService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      auditService,\n      window,\n      broadcasterService,\n      ngZone,\n      changeDetectorRef,\n      eventService,\n      apiService,\n      passwordRepromptService,\n      logService,\n      stateService,\n      fileDownloadService\n    );\n  }\n\n  ngOnInit() {\n    this.inPopout = this.popupUtilsService.inPopout(window);\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.cipherId) {\n        this.cipherId = params.cipherId;\n      } else {\n        this.close();\n      }\n\n      await this.load();\n    });\n\n    super.ngOnInit();\n\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"collectPageDetailsResponse\":\n            if (message.sender === BroadcasterSubscriptionId) {\n              this.pageDetails.push({\n                frameId: message.webExtSender.frameId,\n                tab: message.tab,\n                details: message.details,\n              });\n            }\n            break;\n          case \"tabChanged\":\n          case \"windowChanged\":\n            if (this.loadPageDetailsTimeout != null) {\n              window.clearTimeout(this.loadPageDetailsTimeout);\n            }\n            this.loadPageDetailsTimeout = window.setTimeout(() => this.loadPageDetails(), 500);\n            break;\n          default:\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async load() {\n    await super.load();\n    await this.loadPageDetails();\n  }\n\n  async edit() {\n    if (this.cipher.isDeleted) {\n      return false;\n    }\n    if (!(await super.edit())) {\n      return false;\n    }\n\n    this.router.navigate([\"/edit-cipher\"], { queryParams: { cipherId: this.cipher.id } });\n    return true;\n  }\n\n  async clone() {\n    if (this.cipher.isDeleted) {\n      return false;\n    }\n\n    if (!(await super.clone())) {\n      return false;\n    }\n\n    this.router.navigate([\"/clone-cipher\"], {\n      queryParams: {\n        cloneMode: true,\n        cipherId: this.cipher.id,\n      },\n    });\n    return true;\n  }\n\n  async share() {\n    if (!(await super.share())) {\n      return false;\n    }\n\n    if (this.cipher.organizationId == null) {\n      this.router.navigate([\"/share-cipher\"], {\n        replaceUrl: true,\n        queryParams: { cipherId: this.cipher.id },\n      });\n    }\n    return true;\n  }\n\n  async fillCipher() {\n    const didAutofill = await this.doAutofill();\n    if (didAutofill) {\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"autoFillSuccess\"));\n    }\n  }\n\n  async fillCipherAndSave() {\n    const didAutofill = await this.doAutofill();\n\n    if (didAutofill) {\n      if (this.tab == null) {\n        throw new Error(\"No tab found.\");\n      }\n\n      if (this.cipher.login.uris == null) {\n        this.cipher.login.uris = [];\n      } else {\n        if (this.cipher.login.uris.some((uri) => uri.uri === this.tab.url)) {\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"autoFillSuccessAndSavedUri\")\n          );\n          return;\n        }\n      }\n\n      const loginUri = new LoginUriView();\n      loginUri.uri = this.tab.url;\n      this.cipher.login.uris.push(loginUri);\n\n      try {\n        const cipher: Cipher = await this.cipherService.encrypt(this.cipher);\n        await this.cipherService.saveWithServer(cipher);\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"autoFillSuccessAndSavedUri\")\n        );\n        this.messagingService.send(\"editedCipher\");\n      } catch {\n        this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"unexpectedError\"));\n      }\n    }\n  }\n\n  async restore() {\n    if (!this.cipher.isDeleted) {\n      return false;\n    }\n    if (await super.restore()) {\n      this.close();\n      return true;\n    }\n    return false;\n  }\n\n  async delete() {\n    if (await super.delete()) {\n      this.messagingService.send(\"deletedCipher\");\n      this.close();\n      return true;\n    }\n    return false;\n  }\n\n  close() {\n    this.location.back();\n  }\n\n  private async loadPageDetails() {\n    this.pageDetails = [];\n    this.tab = await BrowserApi.getTabFromCurrentWindow();\n    if (this.tab == null) {\n      return;\n    }\n    BrowserApi.tabSendMessage(this.tab, {\n      command: \"collectPageDetails\",\n      tab: this.tab,\n      sender: BroadcasterSubscriptionId,\n    });\n  }\n\n  private async doAutofill() {\n    if (!(await this.promptPassword())) {\n      return false;\n    }\n\n    if (this.pageDetails == null || this.pageDetails.length === 0) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"autofillError\"));\n      return false;\n    }\n\n    try {\n      this.totpCode = await this.autofillService.doAutoFill({\n        tab: this.tab,\n        cipher: this.cipher,\n        pageDetails: this.pageDetails,\n        doc: window.document,\n        fillNewPassword: true,\n      });\n      if (this.totpCode != null) {\n        this.platformUtilsService.copyToClipboard(this.totpCode, { window: window });\n      }\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"autofillError\"));\n      this.changeDetectorRef.detectChanges();\n      return false;\n    }\n\n    return true;\n  }\n}\n","import { Injectable, NgModule } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, RouteReuseStrategy, RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\nimport { LockGuard } from \"@bitwarden/angular/guards/lock.guard\";\nimport { UnauthGuard } from \"@bitwarden/angular/guards/unauth.guard\";\n\nimport { EnvironmentComponent } from \"./accounts/environment.component\";\nimport { HintComponent } from \"./accounts/hint.component\";\nimport { HomeComponent } from \"./accounts/home.component\";\nimport { LockComponent } from \"./accounts/lock.component\";\nimport { LoginComponent } from \"./accounts/login.component\";\nimport { RegisterComponent } from \"./accounts/register.component\";\nimport { RemovePasswordComponent } from \"./accounts/remove-password.component\";\nimport { SetPasswordComponent } from \"./accounts/set-password.component\";\nimport { SsoComponent } from \"./accounts/sso.component\";\nimport { TwoFactorOptionsComponent } from \"./accounts/two-factor-options.component\";\nimport { TwoFactorComponent } from \"./accounts/two-factor.component\";\nimport { UpdateTempPasswordComponent } from \"./accounts/update-temp-password.component\";\nimport { GeneratorComponent } from \"./generator/generator.component\";\nimport { PasswordGeneratorHistoryComponent } from \"./generator/password-generator-history.component\";\nimport { SendAddEditComponent } from \"./send/send-add-edit.component\";\nimport { SendGroupingsComponent } from \"./send/send-groupings.component\";\nimport { SendTypeComponent } from \"./send/send-type.component\";\nimport { DebounceNavigationService } from \"./services/debounceNavigationService\";\nimport { ExcludedDomainsComponent } from \"./settings/excluded-domains.component\";\nimport { ExportComponent } from \"./settings/export.component\";\nimport { FolderAddEditComponent } from \"./settings/folder-add-edit.component\";\nimport { FoldersComponent } from \"./settings/folders.component\";\nimport { OptionsComponent } from \"./settings/options.component\";\nimport { PremiumComponent } from \"./settings/premium.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SyncComponent } from \"./settings/sync.component\";\nimport { TabsComponent } from \"./tabs.component\";\nimport { AddEditComponent } from \"./vault/add-edit.component\";\nimport { AttachmentsComponent } from \"./vault/attachments.component\";\nimport { CiphersComponent } from \"./vault/ciphers.component\";\nimport { CollectionsComponent } from \"./vault/collections.component\";\nimport { CurrentTabComponent } from \"./vault/current-tab.component\";\nimport { PasswordHistoryComponent } from \"./vault/password-history.component\";\nimport { ShareComponent } from \"./vault/share.component\";\nimport { VaultFilterComponent } from \"./vault/vault-filter.component\";\nimport { ViewComponent } from \"./vault/view.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    redirectTo: \"home\",\n    pathMatch: \"full\",\n  },\n  {\n    path: \"vault\",\n    redirectTo: \"/tabs/vault\",\n    pathMatch: \"full\",\n  },\n  {\n    path: \"home\",\n    component: HomeComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"home\" },\n  },\n  {\n    path: \"login\",\n    component: LoginComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"login\" },\n  },\n  {\n    path: \"lock\",\n    component: LockComponent,\n    canActivate: [LockGuard],\n    data: { state: \"lock\" },\n  },\n  {\n    path: \"2fa\",\n    component: TwoFactorComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"2fa\" },\n  },\n  {\n    path: \"2fa-options\",\n    component: TwoFactorOptionsComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"2fa-options\" },\n  },\n  {\n    path: \"sso\",\n    component: SsoComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"sso\" },\n  },\n  {\n    path: \"set-password\",\n    component: SetPasswordComponent,\n    data: { state: \"set-password\" },\n  },\n  {\n    path: \"remove-password\",\n    component: RemovePasswordComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"remove-password\" },\n  },\n  {\n    path: \"register\",\n    component: RegisterComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"register\" },\n  },\n  {\n    path: \"hint\",\n    component: HintComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"hint\" },\n  },\n  {\n    path: \"environment\",\n    component: EnvironmentComponent,\n    canActivate: [UnauthGuard],\n    data: { state: \"environment\" },\n  },\n  {\n    path: \"ciphers\",\n    component: CiphersComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"ciphers\" },\n  },\n  {\n    path: \"view-cipher\",\n    component: ViewComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"view-cipher\" },\n  },\n  {\n    path: \"cipher-password-history\",\n    component: PasswordHistoryComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"cipher-password-history\" },\n  },\n  {\n    path: \"add-cipher\",\n    component: AddEditComponent,\n    canActivate: [AuthGuard, DebounceNavigationService],\n    data: { state: \"add-cipher\" },\n    runGuardsAndResolvers: \"always\",\n  },\n  {\n    path: \"edit-cipher\",\n    component: AddEditComponent,\n    canActivate: [AuthGuard, DebounceNavigationService],\n    data: { state: \"edit-cipher\" },\n    runGuardsAndResolvers: \"always\",\n  },\n  {\n    path: \"share-cipher\",\n    component: ShareComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"share-cipher\" },\n  },\n  {\n    path: \"collections\",\n    component: CollectionsComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"collections\" },\n  },\n  {\n    path: \"attachments\",\n    component: AttachmentsComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"attachments\" },\n  },\n  {\n    path: \"generator\",\n    component: GeneratorComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"generator\" },\n  },\n  {\n    path: \"generator-history\",\n    component: PasswordGeneratorHistoryComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"generator-history\" },\n  },\n  {\n    path: \"export\",\n    component: ExportComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"export\" },\n  },\n  {\n    path: \"folders\",\n    component: FoldersComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"folders\" },\n  },\n  {\n    path: \"add-folder\",\n    component: FolderAddEditComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"add-folder\" },\n  },\n  {\n    path: \"edit-folder\",\n    component: FolderAddEditComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"edit-folder\" },\n  },\n  {\n    path: \"sync\",\n    component: SyncComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"sync\" },\n  },\n  {\n    path: \"excluded-domains\",\n    component: ExcludedDomainsComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"excluded-domains\" },\n  },\n  {\n    path: \"premium\",\n    component: PremiumComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"premium\" },\n  },\n  {\n    path: \"options\",\n    component: OptionsComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"options\" },\n  },\n  {\n    path: \"clone-cipher\",\n    component: AddEditComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"clone-cipher\" },\n  },\n  {\n    path: \"send-type\",\n    component: SendTypeComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"send-type\" },\n  },\n  {\n    path: \"add-send\",\n    component: SendAddEditComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"add-send\" },\n  },\n  {\n    path: \"edit-send\",\n    component: SendAddEditComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"edit-send\" },\n  },\n  {\n    path: \"update-temp-password\",\n    component: UpdateTempPasswordComponent,\n    canActivate: [AuthGuard],\n    data: { state: \"update-temp-password\" },\n  },\n  {\n    path: \"tabs\",\n    component: TabsComponent,\n    data: { state: \"tabs\" },\n    children: [\n      {\n        path: \"\",\n        redirectTo: \"/tabs/vault\",\n        pathMatch: \"full\",\n      },\n      {\n        path: \"current\",\n        component: CurrentTabComponent,\n        canActivate: [AuthGuard],\n        data: { state: \"tabs_current\" },\n        runGuardsAndResolvers: \"always\",\n      },\n      {\n        path: \"vault\",\n        component: VaultFilterComponent,\n        canActivate: [AuthGuard],\n        data: { state: \"tabs_vault\" },\n      },\n      {\n        path: \"generator\",\n        component: GeneratorComponent,\n        canActivate: [AuthGuard],\n        data: { state: \"tabs_generator\" },\n      },\n      {\n        path: \"settings\",\n        component: SettingsComponent,\n        canActivate: [AuthGuard],\n        data: { state: \"tabs_settings\" },\n      },\n      {\n        path: \"send\",\n        component: SendGroupingsComponent,\n        canActivate: [AuthGuard],\n        data: { state: \"tabs_send\" },\n      },\n    ],\n  },\n];\n\n@Injectable()\nexport class NoRouteReuseStrategy implements RouteReuseStrategy {\n  shouldDetach(route: ActivatedRouteSnapshot) {\n    return false;\n  }\n\n  // eslint-disable-next-line\n  store(route: ActivatedRouteSnapshot, handle: {}) {\n    /* Nothing */\n  }\n\n  shouldAttach(route: ActivatedRouteSnapshot) {\n    return false;\n  }\n\n  retrieve(route: ActivatedRouteSnapshot): any {\n    return null;\n  }\n\n  shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot) {\n    return false;\n  }\n}\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      useHash: true,\n      onSameUrlNavigation: \"reload\",\n      /*enableTracing: true,*/\n    }),\n  ],\n  exports: [RouterModule],\n  providers: [{ provide: RouteReuseStrategy, useClass: NoRouteReuseStrategy }],\n})\nexport class AppRoutingModule {}\n","import { animate, group, query, style, transition, trigger } from \"@angular/animations\";\n\nconst queryShown = query(\n  \":enter, :leave\",\n  [style({ position: \"fixed\", width: \"100%\", height: \"100%\" })],\n  {\n    optional: true,\n  }\n);\n\n// ref: https://github.com/angular/angular/issues/15477\nconst queryChildRoute = query(\"router-outlet ~ *\", [style({}), animate(1, style({}))], {\n  optional: true,\n});\n\nconst speed = \"0.4s\";\n\nexport function queryTranslate(\n  direction: string,\n  axis: string,\n  from: number,\n  to: number,\n  zIndex = 1000\n) {\n  return query(\n    \":\" + direction,\n    [\n      style({\n        transform: \"translate\" + axis + \"(\" + from + \"%)\",\n        zIndex: zIndex,\n        boxShadow: \"0 3px 2px -2px gray\",\n      }),\n      animate(speed + \" ease-in-out\", style({ transform: \"translate\" + axis + \"(\" + to + \"%)\" })),\n    ],\n    { optional: true }\n  );\n}\n\nexport function queryTranslateX(direction: string, from: number, to: number, zIndex = 1000) {\n  return queryTranslate(direction, \"X\", from, to, zIndex);\n}\n\nexport function queryTranslateY(direction: string, from: number, to: number, zIndex = 1000) {\n  return queryTranslate(direction, \"Y\", from, to, zIndex);\n}\n\nconst inSlideLeft = [\n  queryShown,\n  group([queryTranslateX(\"enter\", 100, 0), queryTranslateX(\"leave\", 0, -100), queryChildRoute]),\n];\n\nconst outSlideRight = [\n  queryShown,\n  group([queryTranslateX(\"enter\", -100, 0), queryTranslateX(\"leave\", 0, 100)]),\n];\n\nconst inSlideUp = [\n  queryShown,\n  group([queryTranslateY(\"enter\", 100, 0, 1010), queryTranslateY(\"leave\", 0, 0), queryChildRoute]),\n];\n\nconst outSlideDown = [\n  queryShown,\n  group([queryTranslateY(\"enter\", 0, 0), queryTranslateY(\"leave\", 0, 100, 1010)]),\n];\n\nconst inSlideDown = [\n  queryShown,\n  group([queryTranslateY(\"enter\", -100, 0, 1010), queryTranslateY(\"leave\", 0, 0), queryChildRoute]),\n];\n\n// eslint-disable-next-line\nconst outSlideUp = [\n  queryShown,\n  group([queryTranslateY(\"enter\", 0, 0), queryTranslateY(\"leave\", 0, -100, 1010)]),\n];\n\nexport function tabsToCiphers(fromState: string, toState: string) {\n  if (fromState == null || toState === null || toState.indexOf(\"ciphers_\") === -1) {\n    return false;\n  }\n  return (\n    (fromState.indexOf(\"ciphers_\") === 0 && fromState.indexOf(\"ciphers_direction=b\") === -1) ||\n    fromState === \"tabs\"\n  );\n}\n\nexport function ciphersToTabs(fromState: string, toState: string) {\n  if (fromState == null || toState === null || fromState.indexOf(\"ciphers_\") === -1) {\n    return false;\n  }\n  return toState.indexOf(\"ciphers_direction=b\") === 0 || toState === \"tabs\";\n}\n\nexport function ciphersToView(fromState: string, toState: string) {\n  if (fromState == null || toState === null) {\n    return false;\n  }\n  return (\n    fromState.indexOf(\"ciphers_\") === 0 &&\n    (toState === \"view-cipher\" || toState === \"add-cipher\" || toState === \"clone-cipher\")\n  );\n}\n\nexport function viewToCiphers(fromState: string, toState: string) {\n  if (fromState == null || toState === null) {\n    return false;\n  }\n  return (\n    (fromState === \"view-cipher\" || fromState === \"add-cipher\" || fromState === \"clone-cipher\") &&\n    toState.indexOf(\"ciphers_\") === 0\n  );\n}\n\nexport const routerTransition = trigger(\"routerTransition\", [\n  transition(\"void => home\", inSlideLeft),\n  transition(\"void => tabs\", inSlideLeft),\n\n  transition(\"home => environment, home => login, home => register\", inSlideUp),\n\n  transition(\"login => home\", outSlideDown),\n  transition(\"login => hint\", inSlideUp),\n  transition(\"login => tabs, login => 2fa\", inSlideLeft),\n\n  transition(\"hint => login, register => home, environment => home\", outSlideDown),\n\n  transition(\"2fa => login\", outSlideRight),\n  transition(\"2fa => 2fa-options\", inSlideUp),\n  transition(\"2fa-options => 2fa\", outSlideDown),\n  transition(\"2fa => tabs\", inSlideLeft),\n\n  transition(tabsToCiphers, inSlideLeft),\n  transition(ciphersToTabs, outSlideRight),\n\n  transition(ciphersToView, inSlideUp),\n  transition(viewToCiphers, outSlideDown),\n\n  transition(\"tabs => view-cipher\", inSlideUp),\n  transition(\"view-cipher => tabs\", outSlideDown),\n\n  transition(\"view-cipher => edit-cipher, view-cipher => cipher-password-history\", inSlideUp),\n  transition(\n    \"edit-cipher => view-cipher, cipher-password-history => view-cipher, edit-cipher => tabs\",\n    outSlideDown\n  ),\n\n  transition(\"view-cipher => clone-cipher\", inSlideUp),\n  transition(\"clone-cipher => view-cipher, clone-cipher => tabs\", outSlideDown),\n\n  transition(\"view-cipher => share-cipher\", inSlideUp),\n  transition(\"share-cipher => view-cipher\", outSlideDown),\n\n  transition(\"tabs => add-cipher\", inSlideUp),\n  transition(\"add-cipher => tabs\", outSlideDown),\n\n  transition(\"generator => generator-history, tabs => generator-history\", inSlideLeft),\n  transition(\"generator-history => generator, generator-history => tabs\", outSlideRight),\n\n  transition(\n    \"add-cipher => generator, edit-cipher => generator, clone-cipher => generator\",\n    inSlideUp\n  ),\n  transition(\n    \"generator => add-cipher, generator => edit-cipher, generator => clone-cipher\",\n    outSlideDown\n  ),\n\n  transition(\"edit-cipher => attachments, edit-cipher => collections\", inSlideLeft),\n  transition(\"attachments => edit-cipher, collections => edit-cipher\", outSlideRight),\n\n  transition(\"clone-cipher => attachments, clone-cipher => collections\", inSlideLeft),\n  transition(\"attachments => clone-cipher, collections => clone-cipher\", outSlideRight),\n\n  transition(\"tabs => export\", inSlideLeft),\n  transition(\"export => tabs\", outSlideRight),\n\n  transition(\"tabs => folders\", inSlideLeft),\n  transition(\"folders => tabs\", outSlideRight),\n\n  transition(\"folders => edit-folder, folders => add-folder\", inSlideUp),\n  transition(\"edit-folder => folders, add-folder => folders\", outSlideDown),\n\n  transition(\"tabs => sync\", inSlideLeft),\n  transition(\"sync => tabs\", outSlideRight),\n\n  transition(\"tabs => excluded-domains\", inSlideLeft),\n  transition(\"excluded-domains => tabs\", outSlideRight),\n\n  transition(\"tabs => options\", inSlideLeft),\n  transition(\"options => tabs\", outSlideRight),\n\n  transition(\"tabs => premium\", inSlideLeft),\n  transition(\"premium => tabs\", outSlideRight),\n\n  transition(\"tabs => lock\", inSlideDown),\n\n  transition(\"tabs => send-type\", inSlideLeft),\n  transition(\"send-type => tabs\", outSlideRight),\n\n  transition(\"tabs => add-send, send-type => add-send\", inSlideUp),\n  transition(\"add-send => tabs, add-send => send-type\", outSlideDown),\n\n  transition(\"tabs => edit-send, send-type => edit-send\", inSlideUp),\n  transition(\"edit-send => tabs, edit-send => send-type\", outSlideDown),\n]);\n","import {\n  ChangeDetectorRef,\n  Component,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  SecurityContext,\n} from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { NavigationEnd, Router, RouterOutlet } from \"@angular/router\";\nimport { IndividualConfig, ToastrService } from \"ngx-toastr\";\nimport { Subject, takeUntil } from \"rxjs\";\nimport Swal, { SweetAlertIcon } from \"sweetalert2\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { StateService } from \"../services/abstractions/state.service\";\n\nimport { routerTransition } from \"./app-routing.animations\";\n\n@Component({\n  selector: \"app-root\",\n  styles: [],\n  animations: [routerTransition],\n  template: ` <div [@routerTransition]=\"getState(o)\">\n    <router-outlet #o=\"outlet\"></router-outlet>\n  </div>`,\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  private lastActivity: number = null;\n  private activeUserId: string;\n\n  private destroy$: Subject<void> = new Subject<void>();\n\n  constructor(\n    private toastrService: ToastrService,\n    private broadcasterService: BroadcasterService,\n    private authService: AuthService,\n    private i18nService: I18nService,\n    private router: Router,\n    private stateService: StateService,\n    private messagingService: MessagingService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private ngZone: NgZone,\n    private sanitizer: DomSanitizer,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async ngOnInit() {\n    // Component states must not persist between closing and reopening the popup, otherwise they become dead objects\n    // Clear them aggressively to make sure this doesn't occur\n    await this.clearComponentStates();\n\n    this.stateService.activeAccount$.pipe(takeUntil(this.destroy$)).subscribe((userId) => {\n      this.activeUserId = userId;\n    });\n\n    this.ngZone.runOutsideAngular(() => {\n      window.onmousedown = () => this.recordActivity();\n      window.ontouchstart = () => this.recordActivity();\n      window.onclick = () => this.recordActivity();\n      window.onscroll = () => this.recordActivity();\n      window.onkeypress = () => this.recordActivity();\n    });\n\n    (window as any).bitwardenPopupMainMessageListener = async (\n      msg: any,\n      sender: any,\n      sendResponse: any\n    ) => {\n      if (msg.command === \"doneLoggingOut\") {\n        this.ngZone.run(async () => {\n          this.authService.logOut(async () => {\n            if (msg.expired) {\n              this.showToast({\n                type: \"warning\",\n                title: this.i18nService.t(\"loggedOut\"),\n                text: this.i18nService.t(\"loginExpired\"),\n              });\n            }\n\n            if (this.activeUserId === null) {\n              this.router.navigate([\"home\"]);\n            }\n          });\n          this.changeDetectorRef.detectChanges();\n        });\n      } else if (msg.command === \"authBlocked\") {\n        this.ngZone.run(() => {\n          this.router.navigate([\"home\"]);\n        });\n      } else if (msg.command === \"locked\") {\n        if (msg.userId == null || msg.userId === (await this.stateService.getUserId())) {\n          this.ngZone.run(() => {\n            this.router.navigate([\"lock\"]);\n          });\n        }\n      } else if (msg.command === \"showDialog\") {\n        await this.showDialog(msg);\n      } else if (msg.command === \"showToast\") {\n        this.ngZone.run(() => {\n          this.showToast(msg);\n        });\n      } else if (msg.command === \"reloadProcess\") {\n        const forceWindowReload =\n          this.platformUtilsService.isSafari() ||\n          this.platformUtilsService.isFirefox() ||\n          this.platformUtilsService.isOpera();\n        // Wait to make sure background has reloaded first.\n        window.setTimeout(\n          () => BrowserApi.reloadExtension(forceWindowReload ? window : null),\n          2000\n        );\n      } else if (msg.command === \"reloadPopup\") {\n        this.ngZone.run(() => {\n          this.router.navigate([\"/\"]);\n        });\n      } else if (msg.command === \"convertAccountToKeyConnector\") {\n        this.ngZone.run(async () => {\n          this.router.navigate([\"/remove-password\"]);\n        });\n      } else {\n        msg.webExtSender = sender;\n        this.broadcasterService.send(msg);\n      }\n    };\n\n    BrowserApi.messageListener(\"app.component\", (window as any).bitwardenPopupMainMessageListener);\n\n    this.router.events.pipe(takeUntil(this.destroy$)).subscribe(async (event) => {\n      if (event instanceof NavigationEnd) {\n        const url = event.urlAfterRedirects || event.url || \"\";\n        if (\n          url.startsWith(\"/tabs/\") &&\n          (window as any).previousPopupUrl != null &&\n          (window as any).previousPopupUrl.startsWith(\"/tabs/\")\n        ) {\n          await this.clearComponentStates();\n        }\n        if (url.startsWith(\"/tabs/\")) {\n          await this.stateService.setAddEditCipherInfo(null);\n        }\n        (window as any).previousPopupUrl = url;\n\n        // Clear route direction after animation (400ms)\n        if ((window as any).routeDirection != null) {\n          window.setTimeout(() => {\n            (window as any).routeDirection = null;\n          }, 400);\n        }\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  getState(outlet: RouterOutlet) {\n    if (outlet.activatedRouteData.state === \"ciphers\") {\n      const routeDirection =\n        (window as any).routeDirection != null ? (window as any).routeDirection : \"\";\n      return (\n        \"ciphers_direction=\" +\n        routeDirection +\n        \"_\" +\n        (outlet.activatedRoute.queryParams as any).value.folderId +\n        \"_\" +\n        (outlet.activatedRoute.queryParams as any).value.collectionId\n      );\n    } else {\n      return outlet.activatedRouteData.state;\n    }\n  }\n\n  private async recordActivity() {\n    if (this.activeUserId == null) {\n      return;\n    }\n\n    const now = new Date().getTime();\n    if (this.lastActivity != null && now - this.lastActivity < 250) {\n      return;\n    }\n\n    this.lastActivity = now;\n    await this.stateService.setLastActive(now, { userId: this.activeUserId });\n  }\n\n  private showToast(msg: any) {\n    let message = \"\";\n\n    const options: Partial<IndividualConfig> = {};\n\n    if (typeof msg.text === \"string\") {\n      message = msg.text;\n    } else if (msg.text.length === 1) {\n      message = msg.text[0];\n    } else {\n      msg.text.forEach(\n        (t: string) =>\n          (message += \"<p>\" + this.sanitizer.sanitize(SecurityContext.HTML, t) + \"</p>\")\n      );\n      options.enableHtml = true;\n    }\n    if (msg.options != null) {\n      if (msg.options.trustedHtml === true) {\n        options.enableHtml = true;\n      }\n      if (msg.options.timeout != null && msg.options.timeout > 0) {\n        options.timeOut = msg.options.timeout;\n      }\n    }\n\n    this.toastrService.show(message, msg.title, options, \"toast-\" + msg.type);\n  }\n\n  private async showDialog(msg: any) {\n    let iconClasses: string = null;\n    const type = msg.type;\n    if (type != null) {\n      // If you add custom types to this part, the type to SweetAlertIcon cast below needs to be changed.\n      switch (type) {\n        case \"success\":\n          iconClasses = \"bwi-check text-success\";\n          break;\n        case \"warning\":\n          iconClasses = \"bwi-exclamation-triangle text-warning\";\n          break;\n        case \"error\":\n          iconClasses = \"bwi-error text-danger\";\n          break;\n        case \"info\":\n          iconClasses = \"bwi-info-circle text-info\";\n          break;\n        default:\n          break;\n      }\n    }\n\n    const cancelText = msg.cancelText;\n    const confirmText = msg.confirmText;\n    const confirmed = await Swal.fire({\n      heightAuto: false,\n      buttonsStyling: false,\n      icon: type as SweetAlertIcon, // required to be any of the SweetAlertIcons to output the iconHtml.\n      iconHtml:\n        iconClasses != null ? `<i class=\"swal-custom-icon bwi ${iconClasses}\"></i>` : undefined,\n      text: msg.text,\n      html: msg.html,\n      titleText: msg.title,\n      showCancelButton: cancelText != null,\n      cancelButtonText: cancelText,\n      showConfirmButton: true,\n      confirmButtonText: confirmText == null ? this.i18nService.t(\"ok\") : confirmText,\n      timer: 300000,\n    });\n\n    this.messagingService.send(\"showDialogResolve\", {\n      dialogId: msg.dialogId,\n      confirmed: confirmed.value,\n    });\n  }\n\n  private async clearComponentStates() {\n    if (!(await this.stateService.getIsAuthenticated())) {\n      return;\n    }\n\n    await Promise.all([\n      this.stateService.setBrowserGroupingComponentState(null),\n      this.stateService.setBrowserCipherComponentState(null),\n      this.stateService.setBrowserSendComponentState(null),\n      this.stateService.setBrowserSendTypeComponentState(null),\n    ]);\n  }\n}\n","import { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { Theme } from \"./theme\";\n\nexport class ThemeBuilder implements Theme {\n  get effectiveTheme(): ThemeType {\n    return this.configuredTheme != ThemeType.System ? this.configuredTheme : this.systemTheme;\n  }\n\n  constructor(readonly configuredTheme: ThemeType, readonly systemTheme: ThemeType) {}\n\n  updateSystemTheme(systemTheme: ThemeType): ThemeBuilder {\n    return new ThemeBuilder(this.configuredTheme, systemTheme);\n  }\n\n  updateConfiguredTheme(configuredTheme: ThemeType): ThemeBuilder {\n    return new ThemeBuilder(configuredTheme, this.systemTheme);\n  }\n}\n","export enum StateVersion {\n  One = 1, // Original flat key/value pair store\n  Two = 2, // Move to a typed State object\n  Three = 3, // Fix migration of users' premium status\n  Four = 4, // Fix 'Never Lock' option by removing stale data\n  Five = 5, // Migrate to new storage of encrypted organization keys\n  Six = 6, // Delete account.keys.legacyEtmKey property\n  Latest = Six,\n}\n","import { DOCUMENT } from \"@angular/common\";\nimport { Inject, Injectable } from \"@angular/core\";\nimport { BehaviorSubject, filter, fromEvent, Observable } from \"rxjs\";\n\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { WINDOW } from \"../jslib-services.module\";\n\nimport { Theme } from \"./theme\";\nimport { ThemeBuilder } from \"./themeBuilder\";\nimport { AbstractThemingService } from \"./theming.service.abstraction\";\n\n@Injectable()\nexport class ThemingService implements AbstractThemingService {\n  private _theme = new BehaviorSubject<ThemeBuilder | null>(null);\n  theme$: Observable<Theme> = this._theme.pipe(filter((x) => x !== null));\n\n  constructor(\n    private stateService: StateService,\n    @Inject(WINDOW) private window: Window,\n    @Inject(DOCUMENT) private document: Document\n  ) {\n    this.monitorThemeChanges();\n  }\n\n  async monitorThemeChanges(): Promise<void> {\n    this._theme.next(\n      new ThemeBuilder(await this.stateService.getTheme(), await this.getSystemTheme())\n    );\n    this.monitorConfiguredThemeChanges();\n    this.monitorSystemThemeChanges();\n  }\n\n  updateSystemTheme(systemTheme: ThemeType): void {\n    this._theme.next(this._theme.getValue().updateSystemTheme(systemTheme));\n  }\n\n  async updateConfiguredTheme(theme: ThemeType): Promise<void> {\n    await this.stateService.setTheme(theme);\n    this._theme.next(this._theme.getValue().updateConfiguredTheme(theme));\n  }\n\n  protected monitorConfiguredThemeChanges(): void {\n    this.theme$.subscribe((theme: Theme) => {\n      this.document.documentElement.classList.remove(\n        \"theme_\" + ThemeType.Light,\n        \"theme_\" + ThemeType.Dark,\n        \"theme_\" + ThemeType.Nord,\n        \"theme_\" + ThemeType.SolarizedDark\n      );\n      this.document.documentElement.classList.add(\"theme_\" + theme.effectiveTheme);\n    });\n  }\n\n  // We use a media match query for monitoring the system theme on web and browser, but this doesn't work for electron apps on Linux.\n  // In desktop we override these methods to track systemTheme with the electron renderer instead, which works for all OSs.\n  protected async getSystemTheme(): Promise<ThemeType> {\n    return this.window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n      ? ThemeType.Dark\n      : ThemeType.Light;\n  }\n\n  protected monitorSystemThemeChanges(): void {\n    fromEvent<MediaQueryListEvent>(\n      this.window.matchMedia(\"(prefers-color-scheme: dark)\"),\n      \"change\"\n    ).subscribe((event) => {\n      this.updateSystemTheme(event.matches ? ThemeType.Dark : ThemeType.Light);\n    });\n  }\n}\n","import { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\n\nimport { IEncrypted } from \"../interfaces/IEncrypted\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nexport abstract class AbstractEncryptService {\n  abstract encrypt(plainValue: string | ArrayBuffer, key: SymmetricCryptoKey): Promise<EncString>;\n  abstract encryptToBytes: (\n    plainValue: ArrayBuffer,\n    key?: SymmetricCryptoKey\n  ) => Promise<EncArrayBuffer>;\n  abstract decryptToUtf8: (encString: EncString, key: SymmetricCryptoKey) => Promise<string>;\n  abstract decryptToBytes: (encThing: IEncrypted, key: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  abstract resolveLegacyKey: (key: SymmetricCryptoKey, encThing: IEncrypted) => SymmetricCryptoKey;\n}\n","import { SecretVerificationRequest } from \"@bitwarden/common/models/request/secretVerificationRequest\";\n\nexport abstract class AccountApiService {\n  abstract deleteAccount(request: SecretVerificationRequest): Promise<void>;\n}\n","import { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\n\nexport abstract class FileUploadService {\n  uploadSendFile: (\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n  uploadCipherAttachment: (\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n}\n","export abstract class NotificationsService {\n  init: () => Promise<void>;\n  updateConnection: (sync?: boolean) => Promise<void>;\n  reconnectFromActivity: () => Promise<void>;\n  disconnectFromInactivity: () => Promise<void>;\n}\n","import { ProviderData } from \"../models/data/providerData\";\nimport { Provider } from \"../models/domain/provider\";\n\nexport abstract class ProviderService {\n  get: (id: string) => Promise<Provider>;\n  getAll: () => Promise<Provider[]>;\n  save: (providers: { [id: string]: ProviderData }) => Promise<any>;\n}\n","export abstract class SettingsService {\n  clearCache: () => Promise<void>;\n  getEquivalentDomains: () => Promise<any>;\n  setEquivalentDomains: (equivalentDomains: string[][]) => Promise<any>;\n  clear: (userId?: string) => Promise<void>;\n}\n","export abstract class StateMigrationService {\n  needsMigration: () => Promise<boolean>;\n  migrate: () => Promise<void>;\n}\n","import { StorageOptions } from \"../models/domain/storageOptions\";\n\nexport abstract class AbstractStorageService {\n  abstract get<T>(key: string, options?: StorageOptions): Promise<T>;\n  abstract has(key: string, options?: StorageOptions): Promise<boolean>;\n  abstract save<T>(key: string, obj: T, options?: StorageOptions): Promise<void>;\n  abstract remove(key: string, options?: StorageOptions): Promise<void>;\n}\n\nexport abstract class AbstractCachedStorageService extends AbstractStorageService {\n  abstract getBypassCache<T>(key: string, options?: StorageOptions): Promise<T>;\n}\n","import { VerifyOTPRequest } from \"@bitwarden/common/models/request/account/verifyOTPRequest\";\n\nexport abstract class UserVerificationApiServiceAbstraction {\n  postAccountVerifyOTP: (request: VerifyOTPRequest) => Promise<void>;\n  postAccountRequestOTP: () => Promise<void>;\n}\n","import { Account } from \"../models/domain/account\";\n\nexport class AccountFactory<T extends Account = Account> {\n  private accountConstructor: new (init: Partial<T>) => T;\n\n  constructor(accountConstructor: new (init: Partial<T>) => T) {\n    this.accountConstructor = accountConstructor;\n  }\n\n  create(args: Partial<T>) {\n    return new this.accountConstructor(args);\n  }\n}\n","import { GlobalState } from \"../models/domain/globalState\";\n\nexport class GlobalStateFactory<T extends GlobalState = GlobalState> {\n  private globalStateConstructor: new (init: Partial<T>) => T;\n\n  constructor(globalStateConstructor: new (init: Partial<T>) => T) {\n    this.globalStateConstructor = globalStateConstructor;\n  }\n\n  create(args?: Partial<T>) {\n    return new this.globalStateConstructor(args);\n  }\n}\n","import { Account } from \"../models/domain/account\";\nimport { GlobalState } from \"../models/domain/globalState\";\n\nimport { AccountFactory } from \"./accountFactory\";\nimport { GlobalStateFactory } from \"./globalStateFactory\";\n\nexport class StateFactory<\n  TGlobal extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  private globalStateFactory: GlobalStateFactory<TGlobal>;\n  private accountFactory: AccountFactory<TAccount>;\n\n  constructor(\n    globalStateConstructor: new (init: Partial<TGlobal>) => TGlobal,\n    accountConstructor: new (init: Partial<TAccount>) => TAccount\n  ) {\n    this.globalStateFactory = new GlobalStateFactory(globalStateConstructor);\n    this.accountFactory = new AccountFactory(accountConstructor);\n  }\n\n  createGlobal(args: Partial<TGlobal>): TGlobal {\n    return this.globalStateFactory.create(args);\n  }\n\n  createAccount(args: Partial<TAccount>): TAccount {\n    return this.accountFactory.create(args);\n  }\n}\n","import { AuthenticationStatus } from \"../../enums/authenticationStatus\";\nimport { KdfType } from \"../../enums/kdfType\";\nimport { UriMatchType } from \"../../enums/uriMatchType\";\nimport { CipherData } from \"../data/cipherData\";\nimport { CollectionData } from \"../data/collectionData\";\nimport { EncryptedOrganizationKeyData } from \"../data/encryptedOrganizationKeyData\";\nimport { EventData } from \"../data/eventData\";\nimport { FolderData } from \"../data/folderData\";\nimport { OrganizationData } from \"../data/organizationData\";\nimport { PolicyData } from \"../data/policyData\";\nimport { ProviderData } from \"../data/providerData\";\nimport { SendData } from \"../data/sendData\";\nimport { CipherView } from \"../view/cipherView\";\nimport { CollectionView } from \"../view/collectionView\";\nimport { SendView } from \"../view/sendView\";\n\nimport { EncString } from \"./encString\";\nimport { EnvironmentUrls } from \"./environmentUrls\";\nimport { GeneratedPasswordHistory } from \"./generatedPasswordHistory\";\nimport { Policy } from \"./policy\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: TEncrypted;\n  decrypted?: TDecrypted;\n  decryptedSerialized?: string;\n}\n\nexport class DataEncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: { [id: string]: TEncrypted };\n  decrypted?: TDecrypted[];\n}\n\n// This is a temporary structure to handle migrated `DataEncryptionPair` to\n//  avoid needing a data migration at this stage. It should be replaced with\n//  proper data migrations when `DataEncryptionPair` is deprecated.\nexport class TemporaryDataEncryption<TEncrypted> {\n  encrypted?: { [id: string]: TEncrypted };\n}\n\nexport class AccountData {\n  ciphers?: DataEncryptionPair<CipherData, CipherView> = new DataEncryptionPair<\n    CipherData,\n    CipherView\n  >();\n  folders? = new TemporaryDataEncryption<FolderData>();\n  localData?: any;\n  sends?: DataEncryptionPair<SendData, SendView> = new DataEncryptionPair<SendData, SendView>();\n  collections?: DataEncryptionPair<CollectionData, CollectionView> = new DataEncryptionPair<\n    CollectionData,\n    CollectionView\n  >();\n  policies?: DataEncryptionPair<PolicyData, Policy> = new DataEncryptionPair<PolicyData, Policy>();\n  passwordGenerationHistory?: EncryptionPair<\n    GeneratedPasswordHistory[],\n    GeneratedPasswordHistory[]\n  > = new EncryptionPair<GeneratedPasswordHistory[], GeneratedPasswordHistory[]>();\n  addEditCipherInfo?: any;\n  eventCollection?: EventData[];\n  organizations?: { [id: string]: OrganizationData };\n  providers?: { [id: string]: ProviderData };\n}\n\nexport class AccountKeys {\n  cryptoMasterKey?: SymmetricCryptoKey;\n  cryptoMasterKeyAuto?: string;\n  cryptoMasterKeyB64?: string;\n  cryptoMasterKeyBiometric?: string;\n  cryptoSymmetricKey?: EncryptionPair<string, SymmetricCryptoKey> = new EncryptionPair<\n    string,\n    SymmetricCryptoKey\n  >();\n  organizationKeys?: EncryptionPair<\n    { [orgId: string]: EncryptedOrganizationKeyData },\n    Map<string, SymmetricCryptoKey>\n  > = new EncryptionPair<\n    { [orgId: string]: EncryptedOrganizationKeyData },\n    Map<string, SymmetricCryptoKey>\n  >();\n  providerKeys?: EncryptionPair<any, Map<string, SymmetricCryptoKey>> = new EncryptionPair<\n    any,\n    Map<string, SymmetricCryptoKey>\n  >();\n  privateKey?: EncryptionPair<string, ArrayBuffer> = new EncryptionPair<string, ArrayBuffer>();\n  publicKey?: ArrayBuffer;\n  publicKeySerialized?: string;\n  apiKeyClientSecret?: string;\n}\n\nexport class AccountProfile {\n  apiKeyClientId?: string;\n  authenticationStatus?: AuthenticationStatus;\n  convertAccountToKeyConnector?: boolean;\n  email?: string;\n  emailVerified?: boolean;\n  entityId?: string;\n  entityType?: string;\n  everBeenUnlocked?: boolean;\n  forcePasswordReset?: boolean;\n  hasPremiumPersonally?: boolean;\n  hasPremiumFromOrganization?: boolean;\n  lastSync?: string;\n  userId?: string;\n  usesKeyConnector?: boolean;\n  keyHash?: string;\n  kdfIterations?: number;\n  kdfType?: KdfType;\n}\n\nexport class AccountSettings {\n  autoConfirmFingerPrints?: boolean;\n  autoFillOnPageLoadDefault?: boolean;\n  biometricUnlock?: boolean;\n  clearClipboard?: number;\n  collapsedGroupings?: string[];\n  defaultUriMatch?: UriMatchType;\n  disableAddLoginNotification?: boolean;\n  disableAutoBiometricsPrompt?: boolean;\n  disableAutoTotpCopy?: boolean;\n  disableBadgeCounter?: boolean;\n  disableChangedPasswordNotification?: boolean;\n  disableContextMenuItem?: boolean;\n  disableGa?: boolean;\n  dontShowCardsCurrentTab?: boolean;\n  dontShowIdentitiesCurrentTab?: boolean;\n  enableAlwaysOnTop?: boolean;\n  enableAutoFillOnPageLoad?: boolean;\n  enableBiometric?: boolean;\n  enableFullWidth?: boolean;\n  enableGravitars?: boolean;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  equivalentDomains?: any;\n  minimizeOnCopyToClipboard?: boolean;\n  neverDomains?: { [id: string]: any };\n  passwordGenerationOptions?: any;\n  usernameGenerationOptions?: any;\n  generatorOptions?: any;\n  pinProtected?: EncryptionPair<string, EncString> = new EncryptionPair<string, EncString>();\n  protectedPin?: string;\n  settings?: any; // TODO: Merge whatever is going on here into the AccountSettings model properly\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string = \"lock\";\n}\n\nexport class AccountTokens {\n  accessToken?: string;\n  decodedToken?: any;\n  refreshToken?: string;\n  securityStamp?: string;\n}\n\nexport class Account {\n  data?: AccountData = new AccountData();\n  keys?: AccountKeys = new AccountKeys();\n  profile?: AccountProfile = new AccountProfile();\n  settings?: AccountSettings = new AccountSettings();\n  tokens?: AccountTokens = new AccountTokens();\n\n  constructor(init: Partial<Account>) {\n    Object.assign(this, {\n      data: {\n        ...new AccountData(),\n        ...init?.data,\n      },\n      keys: {\n        ...new AccountKeys(),\n        ...init?.keys,\n      },\n      profile: {\n        ...new AccountProfile(),\n        ...init?.profile,\n      },\n      settings: {\n        ...new AccountSettings(),\n        ...init?.settings,\n      },\n      tokens: {\n        ...new AccountTokens(),\n        ...init?.tokens,\n      },\n    });\n  }\n}\n","export class WindowState {\n  width?: number;\n  height?: number;\n  isMaximized?: boolean;\n  // TODO: displayBounds is an Electron.Rectangle.\n  // We need to establish some kind of client-specific global state, similiar to the way we already extend a base Account.\n  displayBounds: any;\n  x?: number;\n  y?: number;\n}\n","import { StateVersion } from \"../../enums/stateVersion\";\nimport { ThemeType } from \"../../enums/themeType\";\n\nimport { EnvironmentUrls } from \"./environmentUrls\";\nimport { WindowState } from \"./windowState\";\n\nexport class GlobalState {\n  enableAlwaysOnTop?: boolean;\n  installedVersion?: string;\n  locale?: string;\n  organizationInvitation?: any;\n  ssoCodeVerifier?: string;\n  ssoOrganizationIdentifier?: string;\n  ssoState?: string;\n  rememberedEmail?: string;\n  theme?: ThemeType = ThemeType.System;\n  window?: WindowState = new WindowState();\n  twoFactorToken?: string;\n  disableFavicon?: boolean;\n  biometricAwaitingAcceptance?: boolean;\n  biometricFingerprintValidated?: boolean;\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string;\n  loginRedirect?: any;\n  mainWindowSize?: number;\n  enableBiometrics?: boolean;\n  biometricText?: string;\n  noAutoPromptBiometrics?: boolean;\n  noAutoPromptBiometricsText?: string;\n  stateVersion: StateVersion = StateVersion.One;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  enableTray?: boolean;\n  enableMinimizeToTray?: boolean;\n  enableCloseToTray?: boolean;\n  enableStartToTray?: boolean;\n  openAtLogin?: boolean;\n  alwaysShowDock?: boolean;\n  enableBrowserIntegration?: boolean;\n  enableBrowserIntegrationFingerprint?: boolean;\n}\n","export enum SsoType {\n  None = 0,\n  OpenIdConnect = 1,\n  Saml2 = 2,\n}\n\nexport enum OpenIdConnectRedirectBehavior {\n  RedirectGet = 0,\n  FormPost = 1,\n}\n\nexport enum Saml2BindingType {\n  HttpRedirect = 1,\n  HttpPost = 2,\n}\n\nexport enum Saml2NameIdFormat {\n  NotConfigured = 0,\n  Unspecified = 1,\n  EmailAddress = 2,\n  X509SubjectName = 3,\n  WindowsDomainQualifiedName = 4,\n  KerberosPrincipalName = 5,\n  EntityIdentifier = 6,\n  Persistent = 7,\n  Transient = 8,\n}\n\nexport enum Saml2SigningBehavior {\n  IfIdpWantAuthnRequestsSigned = 0,\n  Always = 1,\n  Never = 3,\n}\n","import { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { DeviceType } from \"../../enums/deviceType\";\n\nexport class DeviceRequest {\n  type: DeviceType;\n  name: string;\n  identifier: string;\n  pushToken?: string;\n\n  constructor(appId: string, platformUtilsService: PlatformUtilsService) {\n    this.type = platformUtilsService.getDevice();\n    this.name = platformUtilsService.getDeviceString();\n    this.identifier = appId;\n    this.pushToken = null;\n  }\n}\n","import { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport abstract class TokenRequest {\n  protected device?: DeviceRequest;\n\n  constructor(protected twoFactor: TokenRequestTwoFactor, device?: DeviceRequest) {\n    this.device = device != null ? device : null;\n  }\n\n  // eslint-disable-next-line\n  alterIdentityTokenHeaders(headers: Headers) {\n    // Implemented in subclass if required\n  }\n\n  setTwoFactor(twoFactor: TokenRequestTwoFactor) {\n    this.twoFactor = twoFactor;\n  }\n\n  protected toIdentityToken(clientId: string) {\n    const obj: any = {\n      scope: \"api offline_access\",\n      client_id: clientId,\n    };\n\n    if (this.device) {\n      obj.deviceType = this.device.type;\n      obj.deviceIdentifier = this.device.identifier;\n      obj.deviceName = this.device.name;\n      // no push tokens for browser apps yet\n      // obj.devicePushToken = this.device.pushToken;\n    }\n\n    if (this.twoFactor.token && this.twoFactor.provider != null) {\n      obj.twoFactorToken = this.twoFactor.token;\n      obj.twoFactorProvider = this.twoFactor.provider;\n      obj.twoFactorRemember = this.twoFactor.remember ? \"1\" : \"0\";\n    }\n\n    return obj;\n  }\n}\n","import { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest } from \"./tokenRequest\";\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport class ApiTokenRequest extends TokenRequest {\n  constructor(\n    public clientId: string,\n    public clientSecret: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken() {\n    const obj = super.toIdentityToken(this.clientId);\n\n    obj.scope = this.clientId.startsWith(\"organization\") ? \"api.organization\" : \"api\";\n    obj.grant_type = \"client_credentials\";\n    obj.client_secret = this.clientSecret;\n\n    return obj;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class ApiKeyResponse extends BaseResponse {\n  apiKey: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.apiKey = this.getResponseProperty(\"ApiKey\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class AttachmentResponse extends BaseResponse {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class CardApi extends BaseResponse {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.cardholderName = this.getResponseProperty(\"CardholderName\");\n    this.brand = this.getResponseProperty(\"Brand\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.expMonth = this.getResponseProperty(\"ExpMonth\");\n    this.expYear = this.getResponseProperty(\"ExpYear\");\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class FieldApi extends BaseResponse {\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.value = this.getResponseProperty(\"Value\");\n    this.linkedId = this.getResponseProperty(\"linkedId\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class IdentityApi extends BaseResponse {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.title = this.getResponseProperty(\"Title\");\n    this.firstName = this.getResponseProperty(\"FirstName\");\n    this.middleName = this.getResponseProperty(\"MiddleName\");\n    this.lastName = this.getResponseProperty(\"LastName\");\n    this.address1 = this.getResponseProperty(\"Address1\");\n    this.address2 = this.getResponseProperty(\"Address2\");\n    this.address3 = this.getResponseProperty(\"Address3\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.company = this.getResponseProperty(\"Company\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.phone = this.getResponseProperty(\"Phone\");\n    this.ssn = this.getResponseProperty(\"SSN\");\n    this.username = this.getResponseProperty(\"Username\");\n    this.passportNumber = this.getResponseProperty(\"PassportNumber\");\n    this.licenseNumber = this.getResponseProperty(\"LicenseNumber\");\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class LoginUriApi extends BaseResponse {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.uri = this.getResponseProperty(\"Uri\");\n    const match = this.getResponseProperty(\"Match\");\n    this.match = match != null ? match : null;\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nimport { LoginUriApi } from \"./loginUriApi\";\n\nexport class LoginApi extends BaseResponse {\n  uris: LoginUriApi[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.username = this.getResponseProperty(\"Username\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.passwordRevisionDate = this.getResponseProperty(\"PasswordRevisionDate\");\n    this.totp = this.getResponseProperty(\"Totp\");\n    this.autofillOnPageLoad = this.getResponseProperty(\"AutofillOnPageLoad\");\n\n    const uris = this.getResponseProperty(\"Uris\");\n    if (uris != null) {\n      this.uris = uris.map((u: any) => new LoginUriApi(u));\n    }\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class SecureNoteApi extends BaseResponse {\n  type: SecureNoteType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class PasswordHistoryResponse extends BaseResponse {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.password = this.getResponseProperty(\"Password\");\n    this.lastUsedDate = this.getResponseProperty(\"LastUsedDate\");\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CardApi } from \"../api/cardApi\";\nimport { FieldApi } from \"../api/fieldApi\";\nimport { IdentityApi } from \"../api/identityApi\";\nimport { LoginApi } from \"../api/loginApi\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\n\nimport { AttachmentResponse } from \"./attachmentResponse\";\nimport { BaseResponse } from \"./baseResponse\";\nimport { PasswordHistoryResponse } from \"./passwordHistoryResponse\";\n\nexport class CipherResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  type: number;\n  name: string;\n  notes: string;\n  fields: FieldApi[];\n  login: LoginApi;\n  card: CardApi;\n  identity: IdentityApi;\n  secureNote: SecureNoteApi;\n  favorite: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  revisionDate: string;\n  attachments: AttachmentResponse[];\n  passwordHistory: PasswordHistoryResponse[];\n  collectionIds: string[];\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.folderId = this.getResponseProperty(\"FolderId\") || null;\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.favorite = this.getResponseProperty(\"Favorite\") || false;\n    this.edit = !!this.getResponseProperty(\"Edit\");\n    if (this.getResponseProperty(\"ViewPassword\") == null) {\n      this.viewPassword = true;\n    } else {\n      this.viewPassword = this.getResponseProperty(\"ViewPassword\");\n    }\n    this.organizationUseTotp = this.getResponseProperty(\"OrganizationUseTotp\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.deletedDate = this.getResponseProperty(\"DeletedDate\");\n\n    const login = this.getResponseProperty(\"Login\");\n    if (login != null) {\n      this.login = new LoginApi(login);\n    }\n\n    const card = this.getResponseProperty(\"Card\");\n    if (card != null) {\n      this.card = new CardApi(card);\n    }\n\n    const identity = this.getResponseProperty(\"Identity\");\n    if (identity != null) {\n      this.identity = new IdentityApi(identity);\n    }\n\n    const secureNote = this.getResponseProperty(\"SecureNote\");\n    if (secureNote != null) {\n      this.secureNote = new SecureNoteApi(secureNote);\n    }\n\n    const fields = this.getResponseProperty(\"Fields\");\n    if (fields != null) {\n      this.fields = fields.map((f: any) => new FieldApi(f));\n    }\n\n    const attachments = this.getResponseProperty(\"Attachments\");\n    if (attachments != null) {\n      this.attachments = attachments.map((a: any) => new AttachmentResponse(a));\n    }\n\n    const passwordHistory = this.getResponseProperty(\"PasswordHistory\");\n    if (passwordHistory != null) {\n      this.passwordHistory = passwordHistory.map((h: any) => new PasswordHistoryResponse(h));\n    }\n\n    this.reprompt = this.getResponseProperty(\"Reprompt\") || CipherRepromptType.None;\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\n\nexport class AttachmentUploadDataResponse extends BaseResponse {\n  attachmentId: string;\n  fileUploadType: FileUploadType;\n  cipherResponse: CipherResponse;\n  cipherMiniResponse: CipherResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.attachmentId = this.getResponseProperty(\"AttachmentId\");\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const cipherResponse = this.getResponseProperty(\"CipherResponse\");\n    const cipherMiniResponse = this.getResponseProperty(\"CipherMiniResponse\");\n    this.cipherResponse = cipherResponse == null ? null : new CipherResponse(cipherResponse);\n    this.cipherMiniResponse =\n      cipherMiniResponse == null ? null : new CipherResponse(cipherMiniResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { TransactionType } from \"../../enums/transactionType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class BillingResponse extends BaseResponse {\n  balance: number;\n  paymentSource: BillingSourceResponse;\n  invoices: BillingInvoiceResponse[] = [];\n  transactions: BillingTransactionResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.balance = this.getResponseProperty(\"Balance\");\n    const paymentSource = this.getResponseProperty(\"PaymentSource\");\n    const transactions = this.getResponseProperty(\"Transactions\");\n    const invoices = this.getResponseProperty(\"Invoices\");\n    this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n    if (transactions != null) {\n      this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n    }\n    if (invoices != null) {\n      this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n    }\n  }\n}\n\nexport class BillingSourceResponse extends BaseResponse {\n  type: PaymentMethodType;\n  cardBrand: string;\n  description: string;\n  needsVerification: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.cardBrand = this.getResponseProperty(\"CardBrand\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.needsVerification = this.getResponseProperty(\"NeedsVerification\");\n  }\n}\n\nexport class BillingInvoiceResponse extends BaseResponse {\n  url: string;\n  pdfUrl: string;\n  number: string;\n  paid: boolean;\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.url = this.getResponseProperty(\"Url\");\n    this.pdfUrl = this.getResponseProperty(\"PdfUrl\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.paid = this.getResponseProperty(\"Paid\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n\nexport class BillingTransactionResponse extends BaseResponse {\n  createdDate: string;\n  amount: number;\n  refunded: boolean;\n  partiallyRefunded: boolean;\n  refundedAmount: number;\n  type: TransactionType;\n  paymentMethodType: PaymentMethodType;\n  details: string;\n\n  constructor(response: any) {\n    super(response);\n    this.createdDate = this.getResponseProperty(\"CreatedDate\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.refunded = this.getResponseProperty(\"Refunded\");\n    this.partiallyRefunded = this.getResponseProperty(\"PartiallyRefunded\");\n    this.refundedAmount = this.getResponseProperty(\"RefundedAmount\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.paymentMethodType = this.getResponseProperty(\"PaymentMethodType\");\n    this.details = this.getResponseProperty(\"Details\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { BillingInvoiceResponse, BillingTransactionResponse } from \"./billingResponse\";\n\nexport class BillingHistoryResponse extends BaseResponse {\n  invoices: BillingInvoiceResponse[] = [];\n  transactions: BillingTransactionResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const transactions = this.getResponseProperty(\"Transactions\");\n    const invoices = this.getResponseProperty(\"Invoices\");\n    if (transactions != null) {\n      this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n    }\n    if (invoices != null) {\n      this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n    }\n  }\n\n  get hasNoHistory() {\n    return this.invoices.length == 0 && this.transactions.length == 0;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { BillingSourceResponse } from \"./billingResponse\";\n\nexport class BillingPaymentResponse extends BaseResponse {\n  balance: number;\n  paymentSource: BillingSourceResponse;\n\n  constructor(response: any) {\n    super(response);\n    this.balance = this.getResponseProperty(\"Balance\");\n    const paymentSource = this.getResponseProperty(\"PaymentSource\");\n    this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class BreachAccountResponse extends BaseResponse {\n  addedDate: string;\n  breachDate: string;\n  dataClasses: string[];\n  description: string;\n  domain: string;\n  isActive: boolean;\n  isVerified: boolean;\n  logoPath: string;\n  modifiedDate: string;\n  name: string;\n  pwnCount: number;\n  title: string;\n\n  constructor(response: any) {\n    super(response);\n    this.addedDate = this.getResponseProperty(\"AddedDate\");\n    this.breachDate = this.getResponseProperty(\"BreachDate\");\n    this.dataClasses = this.getResponseProperty(\"DataClasses\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.domain = this.getResponseProperty(\"Domain\");\n    this.isActive = this.getResponseProperty(\"IsActive\");\n    this.isVerified = this.getResponseProperty(\"IsVerified\");\n    this.logoPath = this.getResponseProperty(\"LogoPath\");\n    this.modifiedDate = this.getResponseProperty(\"ModifiedDate\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.pwnCount = this.getResponseProperty(\"PwnCount\");\n    this.title = this.getResponseProperty(\"Title\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SelectionReadOnlyResponse extends BaseResponse {\n  id: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.readOnly = this.getResponseProperty(\"ReadOnly\");\n    this.hidePasswords = this.getResponseProperty(\"HidePasswords\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class CollectionResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class CollectionDetailsResponse extends CollectionResponse {\n  readOnly: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.readOnly = this.getResponseProperty(\"ReadOnly\") || false;\n  }\n}\n\nexport class CollectionGroupDetailsResponse extends CollectionResponse {\n  groups: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const groups = this.getResponseProperty(\"Groups\");\n    if (groups != null) {\n      this.groups = groups.map((g: any) => new SelectionReadOnlyResponse(g));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class DeviceVerificationResponse extends BaseResponse {\n  isDeviceVerificationSectionEnabled: boolean;\n  unknownDeviceVerificationEnabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.isDeviceVerificationSectionEnabled = this.getResponseProperty(\n      \"IsDeviceVerificationSectionEnabled\"\n    );\n    this.unknownDeviceVerificationEnabled = this.getResponseProperty(\n      \"UnknownDeviceVerificationEnabled\"\n    );\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class GlobalDomainResponse extends BaseResponse {\n  type: number;\n  domains: string[];\n  excluded: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.domains = this.getResponseProperty(\"Domains\");\n    this.excluded = this.getResponseProperty(\"Excluded\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { GlobalDomainResponse } from \"./globalDomainResponse\";\n\nexport class DomainsResponse extends BaseResponse {\n  equivalentDomains: string[][];\n  globalEquivalentDomains: GlobalDomainResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.equivalentDomains = this.getResponseProperty(\"EquivalentDomains\");\n    const globalEquivalentDomains = this.getResponseProperty(\"GlobalEquivalentDomains\");\n    if (globalEquivalentDomains != null) {\n      this.globalEquivalentDomains = globalEquivalentDomains.map(\n        (d: any) => new GlobalDomainResponse(d)\n      );\n    } else {\n      this.globalEquivalentDomains = [];\n    }\n  }\n}\n","import { EmergencyAccessStatusType } from \"../../enums/emergencyAccessStatusType\";\nimport { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\nimport { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\n\nexport class EmergencyAccessGranteeDetailsResponse extends BaseResponse {\n  id: string;\n  granteeId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.granteeId = this.getResponseProperty(\"GranteeId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessGrantorDetailsResponse extends BaseResponse {\n  id: string;\n  grantorId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.grantorId = this.getResponseProperty(\"GrantorId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessTakeoverResponse extends BaseResponse {\n  keyEncrypted: string;\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n\nexport class EmergencyAccessViewResponse extends BaseResponse {\n  keyEncrypted: string;\n  ciphers: CipherResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n  }\n}\n","import { DeviceType } from \"../../enums/deviceType\";\nimport { EventType } from \"../../enums/eventType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class EventResponse extends BaseResponse {\n  type: EventType;\n  userId: string;\n  organizationId: string;\n  providerId: string;\n  cipherId: string;\n  collectionId: string;\n  groupId: string;\n  policyId: string;\n  organizationUserId: string;\n  providerUserId: string;\n  providerOrganizationId: string;\n  actingUserId: string;\n  date: string;\n  deviceType: DeviceType;\n  ipAddress: string;\n  installationId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.cipherId = this.getResponseProperty(\"CipherId\");\n    this.collectionId = this.getResponseProperty(\"CollectionId\");\n    this.groupId = this.getResponseProperty(\"GroupId\");\n    this.policyId = this.getResponseProperty(\"PolicyId\");\n    this.organizationUserId = this.getResponseProperty(\"OrganizationUserId\");\n    this.providerUserId = this.getResponseProperty(\"ProviderUserId\");\n    this.providerOrganizationId = this.getResponseProperty(\"ProviderOrganizationId\");\n    this.actingUserId = this.getResponseProperty(\"ActingUserId\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.deviceType = this.getResponseProperty(\"DeviceType\");\n    this.ipAddress = this.getResponseProperty(\"IpAddress\");\n    this.installationId = this.getResponseProperty(\"InstallationId\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class GroupResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  accessAll: boolean;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class GroupDetailsResponse extends GroupResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityCaptchaResponse extends BaseResponse {\n  siteKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.siteKey = this.getResponseProperty(\"HCaptcha_SiteKey\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityTokenResponse extends BaseResponse {\n  accessToken: string;\n  expiresIn: number;\n  refreshToken: string;\n  tokenType: string;\n\n  resetMasterPassword: boolean;\n  privateKey: string;\n  key: string;\n  twoFactorToken: string;\n  kdf: KdfType;\n  kdfIterations: number;\n  forcePasswordReset: boolean;\n  apiUseKeyConnector: boolean;\n  keyConnectorUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.accessToken = response.access_token;\n    this.expiresIn = response.expires_in;\n    this.refreshToken = response.refresh_token;\n    this.tokenType = response.token_type;\n\n    this.resetMasterPassword = this.getResponseProperty(\"ResetMasterPassword\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.twoFactorToken = this.getResponseProperty(\"TwoFactorToken\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\");\n    this.apiUseKeyConnector = this.getResponseProperty(\"ApiUseKeyConnector\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityTwoFactorResponse extends BaseResponse {\n  twoFactorProviders: TwoFactorProviderType[];\n  twoFactorProviders2 = new Map<TwoFactorProviderType, { [key: string]: string }>();\n  captchaToken: string;\n\n  constructor(response: any) {\n    super(response);\n    this.captchaToken = this.getResponseProperty(\"CaptchaBypassToken\");\n    this.twoFactorProviders = this.getResponseProperty(\"TwoFactorProviders\");\n    const twoFactorProviders2 = this.getResponseProperty(\"TwoFactorProviders2\");\n    if (twoFactorProviders2 != null) {\n      for (const prop in twoFactorProviders2) {\n        // eslint-disable-next-line\n        if (twoFactorProviders2.hasOwnProperty(prop)) {\n          this.twoFactorProviders2.set(parseInt(prop, null), twoFactorProviders2[prop]);\n        }\n      }\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class KeyConnectorUserKeyResponse extends BaseResponse {\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class ListResponse<T> extends BaseResponse {\n  data: T[];\n  continuationToken: string;\n\n  constructor(response: any, t: new (dataResponse: any) => T) {\n    super(response);\n    const data = this.getResponseProperty(\"Data\");\n    this.data = data == null ? [] : data.map((dr: any) => new t(dr));\n    this.continuationToken = this.getResponseProperty(\"ContinuationToken\");\n  }\n}\n","import {\n  OpenIdConnectRedirectBehavior,\n  Saml2BindingType,\n  Saml2NameIdFormat,\n  Saml2SigningBehavior,\n  SsoType,\n} from \"../../enums/ssoEnums\";\nimport { BaseResponse } from \"../response/baseResponse\";\nimport { SsoConfigView } from \"../view/ssoConfigView\";\n\nexport class SsoConfigApi extends BaseResponse {\n  static fromView(view: SsoConfigView, api = new SsoConfigApi()) {\n    api.configType = view.configType;\n\n    api.keyConnectorEnabled = view.keyConnectorEnabled;\n    api.keyConnectorUrl = view.keyConnectorUrl;\n\n    if (api.configType === SsoType.OpenIdConnect) {\n      api.authority = view.openId.authority;\n      api.clientId = view.openId.clientId;\n      api.clientSecret = view.openId.clientSecret;\n      api.metadataAddress = view.openId.metadataAddress;\n      api.redirectBehavior = view.openId.redirectBehavior;\n      api.getClaimsFromUserInfoEndpoint = view.openId.getClaimsFromUserInfoEndpoint;\n      api.additionalScopes = view.openId.additionalScopes;\n      api.additionalUserIdClaimTypes = view.openId.additionalUserIdClaimTypes;\n      api.additionalEmailClaimTypes = view.openId.additionalEmailClaimTypes;\n      api.additionalNameClaimTypes = view.openId.additionalNameClaimTypes;\n      api.acrValues = view.openId.acrValues;\n      api.expectedReturnAcrValue = view.openId.expectedReturnAcrValue;\n    } else if (api.configType === SsoType.Saml2) {\n      api.spNameIdFormat = view.saml.spNameIdFormat;\n      api.spOutboundSigningAlgorithm = view.saml.spOutboundSigningAlgorithm;\n      api.spSigningBehavior = view.saml.spSigningBehavior;\n      api.spMinIncomingSigningAlgorithm = view.saml.spMinIncomingSigningAlgorithm;\n      api.spWantAssertionsSigned = view.saml.spWantAssertionsSigned;\n      api.spValidateCertificates = view.saml.spValidateCertificates;\n\n      api.idpEntityId = view.saml.idpEntityId;\n      api.idpBindingType = view.saml.idpBindingType;\n      api.idpSingleSignOnServiceUrl = view.saml.idpSingleSignOnServiceUrl;\n      api.idpSingleLogoutServiceUrl = view.saml.idpSingleLogoutServiceUrl;\n      api.idpX509PublicCert = view.saml.idpX509PublicCert;\n      api.idpOutboundSigningAlgorithm = view.saml.idpOutboundSigningAlgorithm;\n      api.idpAllowUnsolicitedAuthnResponse = view.saml.idpAllowUnsolicitedAuthnResponse;\n      api.idpWantAuthnRequestsSigned = view.saml.idpWantAuthnRequestsSigned;\n\n      // Value is inverted in the api model (disable instead of allow)\n      api.idpDisableOutboundLogoutRequests = !view.saml.idpAllowOutboundLogoutRequests;\n    }\n\n    return api;\n  }\n  configType: SsoType;\n\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  // OpenId\n  authority: string;\n  clientId: string;\n  clientSecret: string;\n  metadataAddress: string;\n  redirectBehavior: OpenIdConnectRedirectBehavior;\n  getClaimsFromUserInfoEndpoint: boolean;\n  additionalScopes: string;\n  additionalUserIdClaimTypes: string;\n  additionalEmailClaimTypes: string;\n  additionalNameClaimTypes: string;\n  acrValues: string;\n  expectedReturnAcrValue: string;\n\n  // SAML\n  spNameIdFormat: Saml2NameIdFormat;\n  spOutboundSigningAlgorithm: string;\n  spSigningBehavior: Saml2SigningBehavior;\n  spMinIncomingSigningAlgorithm: boolean;\n  spWantAssertionsSigned: boolean;\n  spValidateCertificates: boolean;\n\n  idpEntityId: string;\n  idpBindingType: Saml2BindingType;\n  idpSingleSignOnServiceUrl: string;\n  idpSingleLogoutServiceUrl: string;\n  idpX509PublicCert: string;\n  idpOutboundSigningAlgorithm: string;\n  idpAllowUnsolicitedAuthnResponse: boolean;\n  idpDisableOutboundLogoutRequests: boolean;\n  idpWantAuthnRequestsSigned: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n\n    this.configType = this.getResponseProperty(\"ConfigType\");\n\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n\n    this.authority = this.getResponseProperty(\"Authority\");\n    this.clientId = this.getResponseProperty(\"ClientId\");\n    this.clientSecret = this.getResponseProperty(\"ClientSecret\");\n    this.metadataAddress = this.getResponseProperty(\"MetadataAddress\");\n    this.redirectBehavior = this.getResponseProperty(\"RedirectBehavior\");\n    this.getClaimsFromUserInfoEndpoint = this.getResponseProperty(\"GetClaimsFromUserInfoEndpoint\");\n    this.additionalScopes = this.getResponseProperty(\"AdditionalScopes\");\n    this.additionalUserIdClaimTypes = this.getResponseProperty(\"AdditionalUserIdClaimTypes\");\n    this.additionalEmailClaimTypes = this.getResponseProperty(\"AdditionalEmailClaimTypes\");\n    this.additionalNameClaimTypes = this.getResponseProperty(\"AdditionalNameClaimTypes\");\n    this.acrValues = this.getResponseProperty(\"AcrValues\");\n    this.expectedReturnAcrValue = this.getResponseProperty(\"ExpectedReturnAcrValue\");\n\n    this.spNameIdFormat = this.getResponseProperty(\"SpNameIdFormat\");\n    this.spOutboundSigningAlgorithm = this.getResponseProperty(\"SpOutboundSigningAlgorithm\");\n    this.spSigningBehavior = this.getResponseProperty(\"SpSigningBehavior\");\n    this.spMinIncomingSigningAlgorithm = this.getResponseProperty(\"SpMinIncomingSigningAlgorithm\");\n    this.spWantAssertionsSigned = this.getResponseProperty(\"SpWantAssertionsSigned\");\n    this.spValidateCertificates = this.getResponseProperty(\"SpValidateCertificates\");\n\n    this.idpEntityId = this.getResponseProperty(\"IdpEntityId\");\n    this.idpBindingType = this.getResponseProperty(\"IdpBindingType\");\n    this.idpSingleSignOnServiceUrl = this.getResponseProperty(\"IdpSingleSignOnServiceUrl\");\n    this.idpSingleLogoutServiceUrl = this.getResponseProperty(\"IdpSingleLogoutServiceUrl\");\n    this.idpX509PublicCert = this.getResponseProperty(\"IdpX509PublicCert\");\n    this.idpOutboundSigningAlgorithm = this.getResponseProperty(\"IdpOutboundSigningAlgorithm\");\n    this.idpAllowUnsolicitedAuthnResponse = this.getResponseProperty(\n      \"IdpAllowUnsolicitedAuthnResponse\"\n    );\n    this.idpDisableOutboundLogoutRequests = this.getResponseProperty(\n      \"IdpDisableOutboundLogoutRequests\"\n    );\n    this.idpWantAuthnRequestsSigned = this.getResponseProperty(\"IdpWantAuthnRequestsSigned\");\n  }\n}\n","import { SsoConfigApi } from \"../../api/ssoConfigApi\";\nimport { BaseResponse } from \"../baseResponse\";\n\nexport class OrganizationSsoResponse extends BaseResponse {\n  enabled: boolean;\n  data: SsoConfigApi;\n  urls: SsoUrls;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.data =\n      this.getResponseProperty(\"Data\") != null\n        ? new SsoConfigApi(this.getResponseProperty(\"Data\"))\n        : null;\n    this.urls = new SsoUrls(this.getResponseProperty(\"Urls\"));\n  }\n}\n\nclass SsoUrls extends BaseResponse {\n  callbackPath: string;\n  signedOutCallbackPath: string;\n  spEntityId: string;\n  spMetadataUrl: string;\n  spAcsUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.callbackPath = this.getResponseProperty(\"CallbackPath\");\n    this.signedOutCallbackPath = this.getResponseProperty(\"SignedOutCallbackPath\");\n    this.spEntityId = this.getResponseProperty(\"SpEntityId\");\n    this.spMetadataUrl = this.getResponseProperty(\"SpMetadataUrl\");\n    this.spAcsUrl = this.getResponseProperty(\"SpAcsUrl\");\n  }\n}\n","import { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationApiKeyInformationResponse extends BaseResponse {\n  keyType: OrganizationApiKeyType;\n\n  constructor(response: any) {\n    super(response);\n    this.keyType = this.getResponseProperty(\"KeyType\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationAutoEnrollStatusResponse extends BaseResponse {\n  id: string;\n  resetPasswordEnabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.resetPasswordEnabled = this.getResponseProperty(\"ResetPasswordEnabled\");\n  }\n}\n","import { OrganizationConnectionType } from \"../../enums/organizationConnectionType\";\nimport { BillingSyncConfigApi } from \"../api/billingSyncConfigApi\";\nimport { ScimConfigApi } from \"../api/scimConfigApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\n/**API response config types for OrganizationConnectionResponse */\nexport type OrganizationConnectionConfigApis = BillingSyncConfigApi | ScimConfigApi;\n\nexport class OrganizationConnectionResponse<\n  TConfig extends OrganizationConnectionConfigApis\n> extends BaseResponse {\n  id: string;\n  type: OrganizationConnectionType;\n  organizationId: string;\n  enabled: boolean;\n  config: TConfig;\n\n  constructor(response: any, configType: { new (response: any): TConfig }) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    const rawConfig = this.getResponseProperty(\"Config\");\n    this.config = rawConfig == null ? null : new configType(rawConfig);\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\nimport { CollectionResponse } from \"./collectionResponse\";\nimport { ListResponse } from \"./listResponse\";\n\nexport class OrganizationExportResponse extends BaseResponse {\n  collections: ListResponse<CollectionResponse>;\n  ciphers: ListResponse<CipherResponse>;\n\n  constructor(response: any) {\n    super(response);\n    this.collections = this.getResponseProperty(\"Collections\");\n    this.ciphers = this.getResponseProperty(\"Ciphers\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class KeysResponse extends BaseResponse {\n  privateKey: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","import { KeysResponse } from \"./keysResponse\";\n\nexport class OrganizationKeysResponse extends KeysResponse {\n  constructor(response: any) {\n    super(response);\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\nimport { ProductType } from \"../../enums/productType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PlanResponse extends BaseResponse {\n  type: PlanType;\n  product: ProductType;\n  name: string;\n  isAnnual: boolean;\n  nameLocalizationKey: string;\n  descriptionLocalizationKey: string;\n  canBeUsedByBusiness: boolean;\n  baseSeats: number;\n  baseStorageGb: number;\n  maxCollections: number;\n  maxUsers: number;\n\n  hasAdditionalSeatsOption: boolean;\n  maxAdditionalSeats: number;\n  hasAdditionalStorageOption: boolean;\n  maxAdditionalStorage: number;\n  hasPremiumAccessOption: boolean;\n  trialPeriodDays: number;\n\n  hasSelfHost: boolean;\n  hasPolicies: boolean;\n  hasGroups: boolean;\n  hasDirectory: boolean;\n  hasEvents: boolean;\n  hasTotp: boolean;\n  has2fa: boolean;\n  hasApi: boolean;\n  hasSso: boolean;\n  hasResetPassword: boolean;\n  usersGetPremium: boolean;\n\n  upgradeSortOrder: number;\n  displaySortOrder: number;\n  legacyYear: number;\n  disabled: boolean;\n\n  stripePlanId: string;\n  stripeSeatPlanId: string;\n  stripeStoragePlanId: string;\n  stripePremiumAccessPlanId: string;\n  basePrice: number;\n  seatPrice: number;\n  additionalStoragePricePerGb: number;\n  premiumAccessOptionPrice: number;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.product = this.getResponseProperty(\"Product\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.isAnnual = this.getResponseProperty(\"IsAnnual\");\n    this.nameLocalizationKey = this.getResponseProperty(\"NameLocalizationKey\");\n    this.descriptionLocalizationKey = this.getResponseProperty(\"DescriptionLocalizationKey\");\n    this.canBeUsedByBusiness = this.getResponseProperty(\"CanBeUsedByBusiness\");\n    this.baseSeats = this.getResponseProperty(\"BaseSeats\");\n    this.baseStorageGb = this.getResponseProperty(\"BaseStorageGb\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxUsers = this.getResponseProperty(\"MaxUsers\");\n    this.hasAdditionalSeatsOption = this.getResponseProperty(\"HasAdditionalSeatsOption\");\n    this.maxAdditionalSeats = this.getResponseProperty(\"MaxAdditionalSeats\");\n    this.hasAdditionalStorageOption = this.getResponseProperty(\"HasAdditionalStorageOption\");\n    this.maxAdditionalStorage = this.getResponseProperty(\"MaxAdditionalStorage\");\n    this.hasPremiumAccessOption = this.getResponseProperty(\"HasPremiumAccessOption\");\n    this.trialPeriodDays = this.getResponseProperty(\"TrialPeriodDays\");\n    this.hasSelfHost = this.getResponseProperty(\"HasSelfHost\");\n    this.hasPolicies = this.getResponseProperty(\"HasPolicies\");\n    this.hasGroups = this.getResponseProperty(\"HasGroups\");\n    this.hasDirectory = this.getResponseProperty(\"HasDirectory\");\n    this.hasEvents = this.getResponseProperty(\"HasEvents\");\n    this.hasTotp = this.getResponseProperty(\"HasTotp\");\n    this.has2fa = this.getResponseProperty(\"Has2fa\");\n    this.hasApi = this.getResponseProperty(\"HasApi\");\n    this.hasSso = this.getResponseProperty(\"HasSso\");\n    this.hasResetPassword = this.getResponseProperty(\"HasResetPassword\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.upgradeSortOrder = this.getResponseProperty(\"UpgradeSortOrder\");\n    this.displaySortOrder = this.getResponseProperty(\"SortOrder\");\n    this.legacyYear = this.getResponseProperty(\"LegacyYear\");\n    this.disabled = this.getResponseProperty(\"Disabled\");\n    this.stripePlanId = this.getResponseProperty(\"StripePlanId\");\n    this.stripeSeatPlanId = this.getResponseProperty(\"StripeSeatPlanId\");\n    this.stripeStoragePlanId = this.getResponseProperty(\"StripeStoragePlanId\");\n    this.stripePremiumAccessPlanId = this.getResponseProperty(\"StripePremiumAccessPlanId\");\n    this.basePrice = this.getResponseProperty(\"BasePrice\");\n    this.seatPrice = this.getResponseProperty(\"SeatPrice\");\n    this.additionalStoragePricePerGb = this.getResponseProperty(\"AdditionalStoragePricePerGb\");\n    this.premiumAccessOptionPrice = this.getResponseProperty(\"PremiumAccessOptionPrice\");\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { PlanResponse } from \"./planResponse\";\n\nexport class OrganizationResponse extends BaseResponse {\n  id: string;\n  identifier: string;\n  name: string;\n  businessName: string;\n  businessAddress1: string;\n  businessAddress2: string;\n  businessAddress3: string;\n  businessCountry: string;\n  businessTaxNumber: string;\n  billingEmail: string;\n  plan: PlanResponse;\n  planType: PlanType;\n  seats: number;\n  maxAutoscaleSeats: number;\n  maxCollections: number;\n  maxStorageGb: number;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useResetPassword: boolean;\n  hasPublicAndPrivateKeys: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.businessAddress1 = this.getResponseProperty(\"BusinessAddress1\");\n    this.businessAddress2 = this.getResponseProperty(\"BusinessAddress2\");\n    this.businessAddress3 = this.getResponseProperty(\"BusinessAddress3\");\n    this.businessCountry = this.getResponseProperty(\"BusinessCountry\");\n    this.businessTaxNumber = this.getResponseProperty(\"BusinessTaxNumber\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n    const plan = this.getResponseProperty(\"Plan\");\n    this.plan = plan == null ? null : new PlanResponse(plan);\n    this.planType = this.getResponseProperty(\"PlanType\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxAutoscaleSeats = this.getResponseProperty(\"MaxAutoscaleSeats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationSponsorshipSyncStatusResponse extends BaseResponse {\n  lastSyncDate?: Date;\n\n  constructor(response: any) {\n    super(response);\n    const lastSyncDate = this.getResponseProperty(\"LastSyncDate\");\n    if (lastSyncDate) {\n      this.lastSyncDate = new Date(lastSyncDate);\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SubscriptionResponse extends BaseResponse {\n  storageName: string;\n  storageGb: number;\n  maxStorageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  license: any;\n  expiration: string;\n  usingInAppPurchase: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.license = this.getResponseProperty(\"License\");\n    this.expiration = this.getResponseProperty(\"Expiration\");\n    this.usingInAppPurchase = this.getResponseProperty(\"UsingInAppPurchase\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n  }\n}\n\nexport class BillingSubscriptionResponse extends BaseResponse {\n  trialStartDate: string;\n  trialEndDate: string;\n  periodStartDate: string;\n  periodEndDate: string;\n  cancelledDate: string;\n  cancelAtEndDate: boolean;\n  status: string;\n  cancelled: boolean;\n  items: BillingSubscriptionItemResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.trialEndDate = this.getResponseProperty(\"TrialStartDate\");\n    this.trialEndDate = this.getResponseProperty(\"TrialEndDate\");\n    this.periodStartDate = this.getResponseProperty(\"PeriodStartDate\");\n    this.periodEndDate = this.getResponseProperty(\"PeriodEndDate\");\n    this.cancelledDate = this.getResponseProperty(\"CancelledDate\");\n    this.cancelAtEndDate = this.getResponseProperty(\"CancelAtEndDate\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.cancelled = this.getResponseProperty(\"Cancelled\");\n    const items = this.getResponseProperty(\"Items\");\n    if (items != null) {\n      this.items = items.map((i: any) => new BillingSubscriptionItemResponse(i));\n    }\n  }\n}\n\nexport class BillingSubscriptionItemResponse extends BaseResponse {\n  name: string;\n  amount: number;\n  quantity: number;\n  interval: string;\n  sponsoredSubscriptionItem: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.quantity = this.getResponseProperty(\"Quantity\");\n    this.interval = this.getResponseProperty(\"Interval\");\n    this.sponsoredSubscriptionItem = this.getResponseProperty(\"SponsoredSubscriptionItem\");\n  }\n}\n\nexport class BillingSubscriptionUpcomingInvoiceResponse extends BaseResponse {\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n","import { OrganizationResponse } from \"./organizationResponse\";\nimport {\n  BillingSubscriptionResponse,\n  BillingSubscriptionUpcomingInvoiceResponse,\n} from \"./subscriptionResponse\";\n\nexport class OrganizationSubscriptionResponse extends OrganizationResponse {\n  storageName: string;\n  storageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  expiration: string;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n    this.expiration = this.getResponseProperty(\"Expiration\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationUserBulkPublicKeyResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class PermissionsApi extends BaseResponse {\n  accessEventLogs: boolean;\n  accessImportExport: boolean;\n  accessReports: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `createNewCollections`, `editAnyCollection`, and\n   * `deleteAnyCollection`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAllCollections: boolean;\n  createNewCollections: boolean;\n  editAnyCollection: boolean;\n  deleteAnyCollection: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `editAssignedCollections` and\n   * `deleteAssignedCollections`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAssignedCollections: boolean;\n  editAssignedCollections: boolean;\n  deleteAssignedCollections: boolean;\n  manageCiphers: boolean;\n  manageGroups: boolean;\n  manageSso: boolean;\n  managePolicies: boolean;\n  manageUsers: boolean;\n  manageResetPassword: boolean;\n  manageScim: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return this;\n    }\n    this.accessEventLogs = this.getResponseProperty(\"AccessEventLogs\");\n    this.accessImportExport = this.getResponseProperty(\"AccessImportExport\");\n    this.accessReports = this.getResponseProperty(\"AccessReports\");\n\n    // For backwards compatibility with Server <= 1.43.0\n    this.manageAllCollections = this.getResponseProperty(\"ManageAllCollections\");\n    this.manageAssignedCollections = this.getResponseProperty(\"ManageAssignedCollections\");\n\n    this.createNewCollections = this.getResponseProperty(\"CreateNewCollections\");\n    this.editAnyCollection = this.getResponseProperty(\"EditAnyCollection\");\n    this.deleteAnyCollection = this.getResponseProperty(\"DeleteAnyCollection\");\n    this.editAssignedCollections = this.getResponseProperty(\"EditAssignedCollections\");\n    this.deleteAssignedCollections = this.getResponseProperty(\"DeleteAssignedCollections\");\n\n    this.manageCiphers = this.getResponseProperty(\"ManageCiphers\");\n    this.manageGroups = this.getResponseProperty(\"ManageGroups\");\n    this.manageSso = this.getResponseProperty(\"ManageSso\");\n    this.managePolicies = this.getResponseProperty(\"ManagePolicies\");\n    this.manageUsers = this.getResponseProperty(\"ManageUsers\");\n    this.manageResetPassword = this.getResponseProperty(\"ManageResetPassword\");\n    this.manageScim = this.getResponseProperty(\"ManageScim\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class OrganizationUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: OrganizationUserType;\n  status: OrganizationUserStatusType;\n  accessAll: boolean;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n  }\n}\n\nexport class OrganizationUserUserDetailsResponse extends OrganizationUserResponse {\n  name: string;\n  email: string;\n  twoFactorEnabled: boolean;\n  usesKeyConnector: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n  }\n}\n\nexport class OrganizationUserDetailsResponse extends OrganizationUserResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n\nexport class OrganizationUserResetPasswordDetailsReponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n  resetPasswordKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.resetPasswordKey = this.getResponseProperty(\"ResetPasswordKey\");\n    this.encryptedPrivateKey = this.getResponseProperty(\"EncryptedPrivateKey\");\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ProfileOrganizationResponse extends BaseResponse {\n  id: string;\n  name: string;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useScim: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  key: string;\n  hasPublicAndPrivateKeys: boolean;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  providerId: string;\n  providerName: string;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.usePolicies = this.getResponseProperty(\"UsePolicies\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useSso = this.getResponseProperty(\"UseSso\");\n    this.useKeyConnector = this.getResponseProperty(\"UseKeyConnector\") ?? false;\n    this.useScim = this.getResponseProperty(\"UseScim\") ?? false;\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.selfHost = this.getResponseProperty(\"SelfHost\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.ssoBound = this.getResponseProperty(\"SsoBound\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.providerName = this.getResponseProperty(\"ProviderName\");\n    this.familySponsorshipFriendlyName = this.getResponseProperty(\"FamilySponsorshipFriendlyName\");\n    this.familySponsorshipAvailable = this.getResponseProperty(\"FamilySponsorshipAvailable\");\n    this.planProductType = this.getResponseProperty(\"PlanProductType\");\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\") ?? false;\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n    const familySponsorshipLastSyncDateString = this.getResponseProperty(\n      \"FamilySponsorshipLastSyncDate\"\n    );\n    if (familySponsorshipLastSyncDateString) {\n      this.familySponsorshipLastSyncDate = new Date(familySponsorshipLastSyncDateString);\n    }\n    const familySponsorshipValidUntilString = this.getResponseProperty(\n      \"FamilySponsorshipValidUntil\"\n    );\n    if (familySponsorshipValidUntilString) {\n      this.familySponsorshipValidUntil = new Date(familySponsorshipValidUntilString);\n    }\n    this.familySponsorshipToDelete = this.getResponseProperty(\"FamilySponsorshipToDelete\");\n  }\n}\n","import { ProfileOrganizationResponse } from \"./profileOrganizationResponse\";\n\nexport class ProfileProviderOrganizationResponse extends ProfileOrganizationResponse {\n  constructor(response: any) {\n    super(response);\n    this.keyConnectorEnabled = false;\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ProfileProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  key: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  permissions: PermissionsApi;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { ProfileOrganizationResponse } from \"./profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"./profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"./profileProviderResponse\";\n\nexport class ProfileResponse extends BaseResponse {\n  id: string;\n  name: string;\n  email: string;\n  emailVerified: boolean;\n  masterPasswordHint: string;\n  premiumPersonally: boolean;\n  premiumFromOrganization: boolean;\n  culture: string;\n  twoFactorEnabled: boolean;\n  key: string;\n  privateKey: string;\n  securityStamp: string;\n  forcePasswordReset: boolean;\n  usesKeyConnector: boolean;\n  organizations: ProfileOrganizationResponse[] = [];\n  providers: ProfileProviderResponse[] = [];\n  providerOrganizations: ProfileProviderOrganizationResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.emailVerified = this.getResponseProperty(\"EmailVerified\");\n    this.masterPasswordHint = this.getResponseProperty(\"MasterPasswordHint\");\n    this.premiumPersonally = this.getResponseProperty(\"Premium\");\n    this.premiumFromOrganization = this.getResponseProperty(\"PremiumFromOrganization\");\n    this.culture = this.getResponseProperty(\"Culture\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.securityStamp = this.getResponseProperty(\"SecurityStamp\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\") ?? false;\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n\n    const organizations = this.getResponseProperty(\"Organizations\");\n    if (organizations != null) {\n      this.organizations = organizations.map((o: any) => new ProfileOrganizationResponse(o));\n    }\n    const providers = this.getResponseProperty(\"Providers\");\n    if (providers != null) {\n      this.providers = providers.map((o: any) => new ProfileProviderResponse(o));\n    }\n    const providerOrganizations = this.getResponseProperty(\"ProviderOrganizations\");\n    if (providerOrganizations != null) {\n      this.providerOrganizations = providerOrganizations.map(\n        (o: any) => new ProfileProviderOrganizationResponse(o)\n      );\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { ProfileResponse } from \"./profileResponse\";\n\nexport class PaymentResponse extends BaseResponse {\n  userProfile: ProfileResponse;\n  paymentIntentClientSecret: string;\n  success: boolean;\n\n  constructor(response: any) {\n    super(response);\n    const userProfile = this.getResponseProperty(\"UserProfile\");\n    if (userProfile != null) {\n      this.userProfile = new ProfileResponse(userProfile);\n    }\n    this.paymentIntentClientSecret = this.getResponseProperty(\"PaymentIntentClientSecret\");\n    this.success = this.getResponseProperty(\"Success\");\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PolicyResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.data = this.getResponseProperty(\"Data\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PreloginResponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderOrganizationResponse extends BaseResponse {\n  id: string;\n  providerId: string;\n  organizationId: string;\n  key: string;\n  settings: string;\n  creationDate: string;\n  revisionDate: string;\n  userCount: number;\n  seats?: number;\n  plan?: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.settings = this.getResponseProperty(\"Settings\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.userCount = this.getResponseProperty(\"UserCount\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.plan = this.getResponseProperty(\"Plan\");\n  }\n}\n\nexport class ProviderOrganizationOrganizationDetailsResponse extends ProviderOrganizationResponse {\n  organizationName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.organizationName = this.getResponseProperty(\"OrganizationName\");\n  }\n}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  businessName: string;\n  billingEmail: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n  }\n}\n","import { OrganizationUserBulkPublicKeyResponse } from \"../organizationUserBulkPublicKeyResponse\";\n\nexport class ProviderUserBulkPublicKeyResponse extends OrganizationUserBulkPublicKeyResponse {}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { ProviderUserStatusType } from \"../../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../../enums/providerUserType\";\nimport { PermissionsApi } from \"../../api/permissionsApi\";\nimport { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: ProviderUserType;\n  status: ProviderUserStatusType;\n  permissions: PermissionsApi;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n  }\n}\n\nexport class ProviderUserUserDetailsResponse extends ProviderUserResponse {\n  name: string;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class SendFileApi extends BaseResponse {\n  id: string;\n  fileName: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.id = this.getResponseProperty(\"Id\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class SendTextApi extends BaseResponse {\n  text: string;\n  hidden: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.text = this.getResponseProperty(\"Text\");\n    this.hidden = this.getResponseProperty(\"Hidden\") || false;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class SendAccessResponse extends BaseResponse {\n  id: string;\n  type: SendType;\n  name: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  expirationDate: Date;\n  creatorIdentifier: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.creatorIdentifier = this.getResponseProperty(\"CreatorIdentifier\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SendFileDownloadDataResponse extends BaseResponse {\n  id: string = null;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class SendResponse extends BaseResponse {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disable: boolean;\n  hideEmail: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.accessId = this.getResponseProperty(\"AccessId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.maxAccessCount = this.getResponseProperty(\"MaxAccessCount\");\n    this.accessCount = this.getResponseProperty(\"AccessCount\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.deletionDate = this.getResponseProperty(\"DeletionDate\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.disable = this.getResponseProperty(\"Disabled\") || false;\n    this.hideEmail = this.getResponseProperty(\"HideEmail\") || false;\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { SendResponse } from \"./sendResponse\";\n\nexport class SendFileUploadDataResponse extends BaseResponse {\n  fileUploadType: FileUploadType;\n  sendResponse: SendResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const sendResponse = this.getResponseProperty(\"SendResponse\");\n    this.sendResponse = sendResponse == null ? null : new SendResponse(sendResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SsoPreValidateResponse extends BaseResponse {\n  token: string;\n\n  constructor(response: any) {\n    super(response);\n    this.token = this.getResponseProperty(\"Token\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class FolderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\nimport { CollectionDetailsResponse } from \"./collectionResponse\";\nimport { DomainsResponse } from \"./domainsResponse\";\nimport { FolderResponse } from \"./folderResponse\";\nimport { PolicyResponse } from \"./policyResponse\";\nimport { ProfileResponse } from \"./profileResponse\";\nimport { SendResponse } from \"./sendResponse\";\n\nexport class SyncResponse extends BaseResponse {\n  profile?: ProfileResponse;\n  folders: FolderResponse[] = [];\n  collections: CollectionDetailsResponse[] = [];\n  ciphers: CipherResponse[] = [];\n  domains?: DomainsResponse;\n  policies?: PolicyResponse[] = [];\n  sends: SendResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    const profile = this.getResponseProperty(\"Profile\");\n    if (profile != null) {\n      this.profile = new ProfileResponse(profile);\n    }\n\n    const folders = this.getResponseProperty(\"Folders\");\n    if (folders != null) {\n      this.folders = folders.map((f: any) => new FolderResponse(f));\n    }\n\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new CollectionDetailsResponse(c));\n    }\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n\n    const domains = this.getResponseProperty(\"Domains\");\n    if (domains != null) {\n      this.domains = new DomainsResponse(domains);\n    }\n\n    const policies = this.getResponseProperty(\"Policies\");\n    if (policies != null) {\n      this.policies = policies.map((p: any) => new PolicyResponse(p));\n    }\n\n    const sends = this.getResponseProperty(\"Sends\");\n    if (sends != null) {\n      this.sends = sends.map((s: any) => new SendResponse(s));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TaxInfoResponse extends BaseResponse {\n  taxId: string;\n  taxIdType: string;\n  line1: string;\n  line2: string;\n  city: string;\n  state: string;\n  country: string;\n  postalCode: string;\n\n  constructor(response: any) {\n    super(response);\n    this.taxId = this.getResponseProperty(\"TaxIdNumber\");\n    this.taxIdType = this.getResponseProperty(\"TaxIdType\");\n    this.line1 = this.getResponseProperty(\"Line1\");\n    this.line2 = this.getResponseProperty(\"Line2\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TaxRateResponse extends BaseResponse {\n  id: string;\n  country: string;\n  state: string;\n  postalCode: string;\n  rate: number;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.rate = this.getResponseProperty(\"Rate\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorAuthenticatorResponse extends BaseResponse {\n  enabled: boolean;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorDuoResponse extends BaseResponse {\n  enabled: boolean;\n  host: string;\n  secretKey: string;\n  integrationKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.host = this.getResponseProperty(\"Host\");\n    this.secretKey = this.getResponseProperty(\"SecretKey\");\n    this.integrationKey = this.getResponseProperty(\"IntegrationKey\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorEmailResponse extends BaseResponse {\n  enabled: boolean;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorProviderResponse extends BaseResponse {\n  enabled: boolean;\n  type: TwoFactorProviderType;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorRecoverResponse extends BaseResponse {\n  code: string;\n\n  constructor(response: any) {\n    super(response);\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorWebAuthnResponse extends BaseResponse {\n  enabled: boolean;\n  keys: KeyResponse[];\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    const keys = this.getResponseProperty(\"Keys\");\n    this.keys = keys == null ? null : keys.map((k: any) => new KeyResponse(k));\n  }\n}\n\nexport class KeyResponse extends BaseResponse {\n  name: string;\n  id: number;\n  migrated: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.id = this.getResponseProperty(\"Id\");\n    this.migrated = this.getResponseProperty(\"Migrated\");\n  }\n}\n\nexport class ChallengeResponse extends BaseResponse implements PublicKeyCredentialCreationOptions {\n  attestation?: AttestationConveyancePreference;\n  authenticatorSelection?: AuthenticatorSelectionCriteria;\n  challenge: BufferSource;\n  excludeCredentials?: PublicKeyCredentialDescriptor[];\n  extensions?: AuthenticationExtensionsClientInputs;\n  pubKeyCredParams: PublicKeyCredentialParameters[];\n  rp: PublicKeyCredentialRpEntity;\n  timeout?: number;\n  user: PublicKeyCredentialUserEntity;\n\n  constructor(response: any) {\n    super(response);\n    this.attestation = this.getResponseProperty(\"attestation\");\n    this.authenticatorSelection = this.getResponseProperty(\"authenticatorSelection\");\n    this.challenge = Utils.fromUrlB64ToArray(this.getResponseProperty(\"challenge\"));\n    this.excludeCredentials = this.getResponseProperty(\"excludeCredentials\").map((c: any) => {\n      c.id = Utils.fromUrlB64ToArray(c.id).buffer;\n      return c;\n    });\n    this.extensions = this.getResponseProperty(\"extensions\");\n    this.pubKeyCredParams = this.getResponseProperty(\"pubKeyCredParams\");\n    this.rp = this.getResponseProperty(\"rp\");\n    this.timeout = this.getResponseProperty(\"timeout\");\n\n    const user = this.getResponseProperty(\"user\");\n    user.id = Utils.fromUrlB64ToArray(user.id);\n\n    this.user = user;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorYubiKeyResponse extends BaseResponse {\n  enabled: boolean;\n  key1: string;\n  key2: string;\n  key3: string;\n  key4: string;\n  key5: string;\n  nfc: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key1 = this.getResponseProperty(\"Key1\");\n    this.key2 = this.getResponseProperty(\"Key2\");\n    this.key3 = this.getResponseProperty(\"Key3\");\n    this.key4 = this.getResponseProperty(\"Key4\");\n    this.key5 = this.getResponseProperty(\"Key5\");\n    this.nfc = this.getResponseProperty(\"Nfc\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class UserKeyResponse extends BaseResponse {\n  userId: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","export enum HtmlStorageLocation {\n  Local = \"local\",\n  Memory = \"memory\",\n  Session = \"session\",\n}\n","import { ApiService as ApiServiceAbstraction } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { DeviceType } from \"../enums/deviceType\";\nimport { OrganizationApiKeyType } from \"../enums/organizationApiKeyType\";\nimport { OrganizationConnectionType } from \"../enums/organizationConnectionType\";\nimport { Utils } from \"../misc/utils\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { BitPayInvoiceRequest } from \"../models/request/bitPayInvoiceRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CollectionRequest } from \"../models/request/collectionRequest\";\nimport { DeleteRecoverRequest } from \"../models/request/deleteRecoverRequest\";\nimport { DeviceRequest } from \"../models/request/deviceRequest\";\nimport { DeviceVerificationRequest } from \"../models/request/deviceVerificationRequest\";\nimport { EmailRequest } from \"../models/request/emailRequest\";\nimport { EmailTokenRequest } from \"../models/request/emailTokenRequest\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergencyAccessAcceptRequest\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergencyAccessConfirmRequest\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergencyAccessInviteRequest\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergencyAccessPasswordRequest\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergencyAccessUpdateRequest\";\nimport { EventRequest } from \"../models/request/eventRequest\";\nimport { GroupRequest } from \"../models/request/groupRequest\";\nimport { IapCheckRequest } from \"../models/request/iapCheckRequest\";\nimport { ApiTokenRequest } from \"../models/request/identityToken/apiTokenRequest\";\nimport { PasswordTokenRequest } from \"../models/request/identityToken/passwordTokenRequest\";\nimport { SsoTokenRequest } from \"../models/request/identityToken/ssoTokenRequest\";\nimport { TokenRequestTwoFactor } from \"../models/request/identityToken/tokenRequestTwoFactor\";\nimport { ImportCiphersRequest } from \"../models/request/importCiphersRequest\";\nimport { ImportDirectoryRequest } from \"../models/request/importDirectoryRequest\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/importOrganizationCiphersRequest\";\nimport { KdfRequest } from \"../models/request/kdfRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organizationSponsorshipCreateRequest\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organizationSponsorshipRedeemRequest\";\nimport { OrganizationSsoRequest } from \"../models/request/organization/organizationSsoRequest\";\nimport { OrganizationApiKeyRequest } from \"../models/request/organizationApiKeyRequest\";\nimport { OrganizationConnectionRequest } from \"../models/request/organizationConnectionRequest\";\nimport { OrganizationCreateRequest } from \"../models/request/organizationCreateRequest\";\nimport { OrganizationImportRequest } from \"../models/request/organizationImportRequest\";\nimport { OrganizationKeysRequest } from \"../models/request/organizationKeysRequest\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../models/request/organizationSubscriptionUpdateRequest\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../models/request/organizationTaxInfoUpdateRequest\";\nimport { OrganizationUpdateRequest } from \"../models/request/organizationUpdateRequest\";\nimport { OrganizationUpgradeRequest } from \"../models/request/organizationUpgradeRequest\";\nimport { OrganizationUserAcceptRequest } from \"../models/request/organizationUserAcceptRequest\";\nimport { OrganizationUserBulkConfirmRequest } from \"../models/request/organizationUserBulkConfirmRequest\";\nimport { OrganizationUserBulkRequest } from \"../models/request/organizationUserBulkRequest\";\nimport { OrganizationUserConfirmRequest } from \"../models/request/organizationUserConfirmRequest\";\nimport { OrganizationUserInviteRequest } from \"../models/request/organizationUserInviteRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"../models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { OrganizationUserResetPasswordRequest } from \"../models/request/organizationUserResetPasswordRequest\";\nimport { OrganizationUserUpdateGroupsRequest } from \"../models/request/organizationUserUpdateGroupsRequest\";\nimport { OrganizationUserUpdateRequest } from \"../models/request/organizationUserUpdateRequest\";\nimport { PasswordHintRequest } from \"../models/request/passwordHintRequest\";\nimport { PasswordRequest } from \"../models/request/passwordRequest\";\nimport { PaymentRequest } from \"../models/request/paymentRequest\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/providerAddOrganizationRequest\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/providerOrganizationCreateRequest\";\nimport { ProviderSetupRequest } from \"../models/request/provider/providerSetupRequest\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/providerUpdateRequest\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/providerUserAcceptRequest\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/providerUserBulkConfirmRequest\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/providerUserBulkRequest\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/providerUserConfirmRequest\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/providerUserInviteRequest\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/providerUserUpdateRequest\";\nimport { RegisterRequest } from \"../models/request/registerRequest\";\nimport { SeatRequest } from \"../models/request/seatRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selectionReadOnlyRequest\";\nimport { SendAccessRequest } from \"../models/request/sendAccessRequest\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { SetPasswordRequest } from \"../models/request/setPasswordRequest\";\nimport { StorageRequest } from \"../models/request/storageRequest\";\nimport { TaxInfoUpdateRequest } from \"../models/request/taxInfoUpdateRequest\";\nimport { TwoFactorEmailRequest } from \"../models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviderRequest } from \"../models/request/twoFactorProviderRequest\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/twoFactorRecoveryRequest\";\nimport { UpdateDomainsRequest } from \"../models/request/updateDomainsRequest\";\nimport { UpdateKeyRequest } from \"../models/request/updateKeyRequest\";\nimport { UpdateProfileRequest } from \"../models/request/updateProfileRequest\";\nimport { UpdateTempPasswordRequest } from \"../models/request/updateTempPasswordRequest\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/updateTwoFactorAuthenticatorRequest\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/updateTwoFactorDuoRequest\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/updateTwoFactorEmailRequest\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/updateTwoFactorWebAuthnDeleteRequest\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/updateTwoFactorWebAuthnRequest\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/updateTwoFactorYubioOtpRequest\";\nimport { VerifyBankRequest } from \"../models/request/verifyBankRequest\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verifyDeleteRecoverRequest\";\nimport { VerifyEmailRequest } from \"../models/request/verifyEmailRequest\";\nimport { ApiKeyResponse } from \"../models/response/apiKeyResponse\";\nimport { AttachmentResponse } from \"../models/response/attachmentResponse\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { BillingHistoryResponse } from \"../models/response/billingHistoryResponse\";\nimport { BillingPaymentResponse } from \"../models/response/billingPaymentResponse\";\nimport { BillingResponse } from \"../models/response/billingResponse\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport {\n  CollectionGroupDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collectionResponse\";\nimport { DeviceVerificationResponse } from \"../models/response/deviceVerificationResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergencyAccessResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { EventResponse } from \"../models/response/eventResponse\";\nimport { GroupDetailsResponse, GroupResponse } from \"../models/response/groupResponse\";\nimport { IdentityCaptchaResponse } from \"../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/keyConnectorUserKeyResponse\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { OrganizationSsoResponse } from \"../models/response/organization/organizationSsoResponse\";\nimport { OrganizationApiKeyInformationResponse } from \"../models/response/organizationApiKeyInformationResponse\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../models/response/organizationAutoEnrollStatusResponse\";\nimport {\n  OrganizationConnectionConfigApis,\n  OrganizationConnectionResponse,\n} from \"../models/response/organizationConnectionResponse\";\nimport { OrganizationExportResponse } from \"../models/response/organizationExportResponse\";\nimport { OrganizationKeysResponse } from \"../models/response/organizationKeysResponse\";\nimport { OrganizationResponse } from \"../models/response/organizationResponse\";\nimport { OrganizationSponsorshipSyncStatusResponse } from \"../models/response/organizationSponsorshipSyncStatusResponse\";\nimport { OrganizationSubscriptionResponse } from \"../models/response/organizationSubscriptionResponse\";\nimport { OrganizationUserBulkPublicKeyResponse } from \"../models/response/organizationUserBulkPublicKeyResponse\";\nimport { OrganizationUserBulkResponse } from \"../models/response/organizationUserBulkResponse\";\nimport {\n  OrganizationUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n  OrganizationUserUserDetailsResponse,\n} from \"../models/response/organizationUserResponse\";\nimport { PaymentResponse } from \"../models/response/paymentResponse\";\nimport { PlanResponse } from \"../models/response/planResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { PreloginResponse } from \"../models/response/preloginResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/providerOrganizationResponse\";\nimport { ProviderResponse } from \"../models/response/provider/providerResponse\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/providerUserBulkPublicKeyResponse\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/providerUserBulkResponse\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/providerUserResponse\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selectionReadOnlyResponse\";\nimport { SendAccessResponse } from \"../models/response/sendAccessResponse\";\nimport { SendFileDownloadDataResponse } from \"../models/response/sendFileDownloadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SsoPreValidateResponse } from \"../models/response/ssoPreValidateResponse\";\nimport { SubscriptionResponse } from \"../models/response/subscriptionResponse\";\nimport { SyncResponse } from \"../models/response/syncResponse\";\nimport { TaxInfoResponse } from \"../models/response/taxInfoResponse\";\nimport { TaxRateResponse } from \"../models/response/taxRateResponse\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/twoFactorAuthenticatorResponse\";\nimport { TwoFactorDuoResponse } from \"../models/response/twoFactorDuoResponse\";\nimport { TwoFactorEmailResponse } from \"../models/response/twoFactorEmailResponse\";\nimport { TwoFactorProviderResponse } from \"../models/response/twoFactorProviderResponse\";\nimport { TwoFactorRecoverResponse } from \"../models/response/twoFactorRescoverResponse\";\nimport {\n  TwoFactorWebAuthnResponse,\n  ChallengeResponse,\n} from \"../models/response/twoFactorWebAuthnResponse\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/twoFactorYubiKeyResponse\";\nimport { UserKeyResponse } from \"../models/response/userKeyResponse\";\nimport { SendAccessView } from \"../models/view/sendAccessView\";\n\nexport class ApiService implements ApiServiceAbstraction {\n  private device: DeviceType;\n  private deviceType: string;\n  private isWebClient = false;\n  private isDesktopClient = false;\n\n  constructor(\n    private tokenService: TokenService,\n    private platformUtilsService: PlatformUtilsService,\n    private environmentService: EnvironmentService,\n    private appIdService: AppIdService,\n    private logoutCallback: (expired: boolean) => Promise<void>,\n    private customUserAgent: string = null\n  ) {\n    this.device = platformUtilsService.getDevice();\n    this.deviceType = this.device.toString();\n    this.isWebClient =\n      this.device === DeviceType.IEBrowser ||\n      this.device === DeviceType.ChromeBrowser ||\n      this.device === DeviceType.EdgeBrowser ||\n      this.device === DeviceType.FirefoxBrowser ||\n      this.device === DeviceType.OperaBrowser ||\n      this.device === DeviceType.SafariBrowser ||\n      this.device === DeviceType.UnknownBrowser ||\n      this.device === DeviceType.VivaldiBrowser;\n    this.isDesktopClient =\n      this.device === DeviceType.WindowsDesktop ||\n      this.device === DeviceType.MacOsDesktop ||\n      this.device === DeviceType.LinuxDesktop;\n  }\n\n  // Auth APIs\n\n  async postIdentityToken(\n    request: ApiTokenRequest | PasswordTokenRequest | SsoTokenRequest\n  ): Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse> {\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    request.alterIdentityTokenHeaders(headers);\n\n    const identityToken =\n      request instanceof ApiTokenRequest\n        ? request.toIdentityToken()\n        : request.toIdentityToken(this.platformUtilsService.getClientType());\n\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify(identityToken),\n        credentials: this.getCredentials(),\n        cache: \"no-store\",\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    }\n\n    if (responseJson != null) {\n      if (response.status === 200) {\n        return new IdentityTokenResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.TwoFactorProviders2 &&\n        Object.keys(responseJson.TwoFactorProviders2).length\n      ) {\n        await this.tokenService.clearTwoFactorToken();\n        return new IdentityTwoFactorResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.HCaptcha_SiteKey &&\n        Object.keys(responseJson.HCaptcha_SiteKey).length\n      ) {\n        return new IdentityCaptchaResponse(responseJson);\n      }\n    }\n\n    return Promise.reject(new ErrorResponse(responseJson, response.status, true));\n  }\n\n  async refreshIdentityToken(): Promise<any> {\n    try {\n      await this.doAuthRefresh();\n    } catch (e) {\n      return Promise.reject(null);\n    }\n  }\n\n  // Account APIs\n\n  async getProfile(): Promise<ProfileResponse> {\n    const r = await this.send(\"GET\", \"/accounts/profile\", null, true, true);\n    return new ProfileResponse(r);\n  }\n\n  async getUserSubscription(): Promise<SubscriptionResponse> {\n    const r = await this.send(\"GET\", \"/accounts/subscription\", null, true, true);\n    return new SubscriptionResponse(r);\n  }\n\n  async getTaxInfo(): Promise<TaxInfoResponse> {\n    const r = await this.send(\"GET\", \"/accounts/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async putProfile(request: UpdateProfileRequest): Promise<ProfileResponse> {\n    const r = await this.send(\"PUT\", \"/accounts/profile\", request, true, true);\n    return new ProfileResponse(r);\n  }\n\n  putTaxInfo(request: TaxInfoUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/tax\", request, true, false);\n  }\n\n  async postPrelogin(request: PreloginRequest): Promise<PreloginResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/accounts/prelogin\",\n      request,\n      false,\n      true,\n      this.platformUtilsService.isDev()\n        ? this.environmentService.getIdentityUrl()\n        : this.environmentService.getApiUrl()\n    );\n    return new PreloginResponse(r);\n  }\n\n  postEmailToken(request: EmailTokenRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email-token\", request, true, false);\n  }\n\n  postEmail(request: EmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email\", request, true, false);\n  }\n\n  postPassword(request: PasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password\", request, true, false);\n  }\n\n  setPassword(request: SetPasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-password\", request, true, false);\n  }\n\n  postSetKeyConnectorKey(request: SetKeyConnectorKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-key-connector-key\", request, true, false);\n  }\n\n  postSecurityStamp(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/security-stamp\", request, true, false);\n  }\n\n  async getAccountRevisionDate(): Promise<number> {\n    const r = await this.send(\"GET\", \"/accounts/revision-date\", null, true, true);\n    return r as number;\n  }\n\n  postPasswordHint(request: PasswordHintRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password-hint\", request, false, false);\n  }\n\n  postRegister(request: RegisterRequest): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/accounts/register\",\n      request,\n      false,\n      false,\n      this.platformUtilsService.isDev()\n        ? this.environmentService.getIdentityUrl()\n        : this.environmentService.getApiUrl()\n    );\n  }\n\n  async postPremium(data: FormData): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/premium\", data, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postIapCheck(request: IapCheckRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/iap-check\", request, true, false);\n  }\n\n  postReinstatePremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/reinstate-premium\", null, true, false);\n  }\n\n  postCancelPremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/cancel-premium\", null, true, false);\n  }\n\n  async postAccountStorage(request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/storage\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  postAccountPayment(request: PaymentRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/payment\", request, true, false);\n  }\n\n  postAccountLicense(data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/accounts/license\", data, true, false);\n  }\n\n  postAccountKeys(request: KeysRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/keys\", request, true, false);\n  }\n\n  postAccountKey(request: UpdateKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/key\", request, true, false);\n  }\n\n  postAccountVerifyEmail(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email\", null, true, false);\n  }\n\n  postAccountVerifyEmailToken(request: VerifyEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email-token\", request, false, false);\n  }\n\n  postAccountVerifyPassword(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-password\", request, true, false);\n  }\n\n  postAccountRecoverDelete(request: DeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover\", request, false, false);\n  }\n\n  postAccountRecoverDeleteToken(request: VerifyDeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover-token\", request, false, false);\n  }\n\n  postAccountKdf(request: KdfRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/kdf\", request, true, false);\n  }\n\n  async deleteSsoUser(organizationId: string): Promise<any> {\n    return this.send(\"DELETE\", \"/accounts/sso/\" + organizationId, null, true, false);\n  }\n\n  async getSsoUserIdentifier(): Promise<string> {\n    return this.send(\"GET\", \"/accounts/sso/user-identifier\", null, true, true);\n  }\n\n  async postUserApiKey(id: string, request: SecretVerificationRequest): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  async postUserRotateApiKey(\n    id: string,\n    request: SecretVerificationRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/rotate-api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  putUpdateTempPassword(request: UpdateTempPasswordRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/update-temp-password\", request, true, false);\n  }\n\n  postConvertToKeyConnector(): Promise<void> {\n    return this.send(\"POST\", \"/accounts/convert-to-key-connector\", null, true, false);\n  }\n\n  // Account Billing APIs\n\n  async getUserBillingHistory(): Promise<BillingHistoryResponse> {\n    const r = await this.send(\"GET\", \"/accounts/billing/history\", null, true, true);\n    return new BillingHistoryResponse(r);\n  }\n\n  async getUserBillingPayment(): Promise<BillingPaymentResponse> {\n    const r = await this.send(\"GET\", \"/accounts/billing/payment-method\", null, true, true);\n    return new BillingPaymentResponse(r);\n  }\n\n  // Send APIs\n\n  async getSend(id: string): Promise<SendResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + id, null, true, true);\n    return new SendResponse(r);\n  }\n\n  async postSendAccess(\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendAccessResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/access/\" + id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendAccessResponse(r);\n  }\n\n  async getSendFileDownloadData(\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendFileDownloadDataResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", send.id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/\" + send.id + \"/access/file/\" + send.file.id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendFileDownloadDataResponse(r);\n  }\n\n  async getSends(): Promise<ListResponse<SendResponse>> {\n    const r = await this.send(\"GET\", \"/sends\", null, true, true);\n    return new ListResponse(r, SendResponse);\n  }\n\n  async postSend(request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends\", request, true, true);\n    return new SendResponse(r);\n  }\n\n  async postFileTypeSend(request: SendRequest): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/sends/file/v2\", request, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  async renewSendFileUploadUrl(\n    sendId: string,\n    fileId: string\n  ): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + sendId + \"/file/\" + fileId, null, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  postSendFile(sendId: string, fileId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/sends/\" + sendId + \"/file/\" + fileId, data, true, false);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postSendFileLegacy(data: FormData): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends/file\", data, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSend(id: string, request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id, request, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSendRemovePassword(id: string): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id + \"/remove-password\", null, true, true);\n    return new SendResponse(r);\n  }\n\n  deleteSend(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/sends/\" + id, null, true, false);\n  }\n\n  // Cipher APIs\n\n  async getCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id, null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getFullCipherDetails(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id + \"/details\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id + \"/admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCiphersOrganization(organizationId: string): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/organization-details?organizationId=\" + organizationId,\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CipherResponse);\n  }\n\n  async postCipher(request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherCreate(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/create\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherAdmin(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipher(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id, request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipherAdmin(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipher(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id, null, true, false);\n  }\n\n  deleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/admin\", null, true, false);\n  }\n\n  deleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers\", request, true, false);\n  }\n\n  deleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/admin\", request, true, false);\n  }\n\n  putMoveCiphers(request: CipherBulkMoveRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/move\", request, true, false);\n  }\n\n  async putShareCipher(id: string, request: CipherShareRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/share\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  putShareCiphers(request: CipherBulkShareRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/share\", request, true, false);\n  }\n\n  putCipherCollections(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections\", request, true, false);\n  }\n\n  putCipherCollectionsAdmin(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections-admin\", request, true, false);\n  }\n\n  postPurgeCiphers(\n    request: SecretVerificationRequest,\n    organizationId: string = null\n  ): Promise<any> {\n    let path = \"/ciphers/purge\";\n    if (organizationId != null) {\n      path += \"?organizationId=\" + organizationId;\n    }\n    return this.send(\"POST\", path, request, true, false);\n  }\n\n  postImportCiphers(request: ImportCiphersRequest): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/import\", request, true, false);\n  }\n\n  postImportOrganizationCiphers(\n    organizationId: string,\n    request: ImportOrganizationCiphersRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/import-organization?organizationId=\" + organizationId,\n      request,\n      true,\n      false\n    );\n  }\n\n  putDeleteCipher(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete\", null, true, false);\n  }\n\n  putDeleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete-admin\", null, true, false);\n  }\n\n  putDeleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete\", request, true, false);\n  }\n\n  putDeleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete-admin\", request, true, false);\n  }\n\n  async putRestoreCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore-admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreManyCiphers(\n    request: CipherBulkDeleteRequest\n  ): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\"PUT\", \"/ciphers/restore\", request, true, true);\n    return new ListResponse<CipherResponse>(r, CipherResponse);\n  }\n\n  // Attachments APIs\n\n  async getAttachmentData(\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ): Promise<AttachmentResponse> {\n    const path =\n      (emergencyAccessId != null ? \"/emergency-access/\" + emergencyAccessId + \"/\" : \"/ciphers/\") +\n      cipherId +\n      \"/attachment/\" +\n      attachmentId;\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new AttachmentResponse(r);\n  }\n\n  async postCipherAttachment(\n    id: string,\n    request: AttachmentRequest\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/v2\", request, true, true);\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentAdminLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment-admin\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipherAttachment(id: string, attachmentId: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, null, true, false);\n  }\n\n  deleteCipherAttachmentAdmin(id: string, attachmentId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/admin\",\n      null,\n      true,\n      false\n    );\n  }\n\n  postShareCipherAttachment(\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/share?organizationId=\" + organizationId,\n      data,\n      true,\n      false\n    );\n  }\n\n  async renewAttachmentUploadUrl(\n    id: string,\n    attachmentId: string\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/renew\",\n      null,\n      true,\n      true\n    );\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  postAttachmentFile(id: string, attachmentId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, data, true, false);\n  }\n\n  // Collections APIs\n\n  async getCollectionDetails(\n    organizationId: string,\n    id: string\n  ): Promise<CollectionGroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new CollectionGroupDetailsResponse(r);\n  }\n\n  async getUserCollections(): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\"GET\", \"/collections\", null, true, true);\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollections(organizationId: string): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollectionUsers(\n    organizationId: string,\n    id: string\n  ): Promise<SelectionReadOnlyResponse[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r.map((dr: any) => new SelectionReadOnlyResponse(dr));\n  }\n\n  async postCollection(\n    organizationId: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollection(\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollectionUsers(\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteCollection(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteCollectionUser(\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Groups APIs\n\n  async getGroupDetails(organizationId: string, id: string): Promise<GroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new GroupDetailsResponse(r);\n  }\n\n  async getGroups(organizationId: string): Promise<ListResponse<GroupResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, GroupResponse);\n  }\n\n  async getGroupUsers(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async postGroup(organizationId: string, request: GroupRequest): Promise<GroupResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroup(\n    organizationId: string,\n    id: string,\n    request: GroupRequest\n  ): Promise<GroupResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroupUsers(organizationId: string, id: string, request: string[]): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteGroup(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteGroupUser(organizationId: string, id: string, organizationUserId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Organization User APIs\n\n  async getOrganizationUser(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserDetailsResponse(r);\n  }\n\n  async getOrganizationUserGroups(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async getOrganizationUsers(\n    organizationId: string\n  ): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserUserDetailsResponse);\n  }\n\n  async getOrganizationUserResetPasswordDetails(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserResetPasswordDetailsReponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password-details\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserResetPasswordDetailsReponse(r);\n  }\n\n  async getOrganizationAutoEnrollStatus(\n    identifier: string\n  ): Promise<OrganizationAutoEnrollStatusResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + identifier + \"/auto-enroll-status\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationAutoEnrollStatusResponse(r);\n  }\n\n  postOrganizationUserInvite(\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/invite\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserReinvite(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyOrganizationUserReinvite(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  postOrganizationUserAccept(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserConfirm(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postOrganizationUsersPublicKey(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkPublicKeyResponse);\n  }\n\n  async postOrganizationUserBulkConfirm(\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  putOrganizationUser(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserGroups(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateGroupsRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPasswordEnrollment(\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + userId + \"/reset-password-enrollment\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPassword(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteManyOrganizationUsers(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  revokeOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/revoke\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async revokeManyOrganizationUsers(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/revoke\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  restoreOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/restore\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async restoreManyOrganizationUsers(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/restore\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  // Plan APIs\n\n  async getPlans(): Promise<ListResponse<PlanResponse>> {\n    const r = await this.send(\"GET\", \"/plans/\", null, false, true);\n    return new ListResponse(r, PlanResponse);\n  }\n\n  async postImportDirectory(organizationId: string, request: ImportDirectoryRequest): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + organizationId + \"/import\", request, true, false);\n  }\n\n  async postPublicImportDirectory(request: OrganizationImportRequest): Promise<any> {\n    return this.send(\"POST\", \"/public/organization/import\", request, true, false);\n  }\n\n  async getTaxRates(): Promise<ListResponse<TaxRateResponse>> {\n    const r = await this.send(\"GET\", \"/plans/sales-tax-rates/\", null, true, true);\n    return new ListResponse(r, TaxRateResponse);\n  }\n\n  // Settings APIs\n\n  async getSettingsDomains(): Promise<DomainsResponse> {\n    const r = await this.send(\"GET\", \"/settings/domains\", null, true, true);\n    return new DomainsResponse(r);\n  }\n\n  async putSettingsDomains(request: UpdateDomainsRequest): Promise<DomainsResponse> {\n    const r = await this.send(\"PUT\", \"/settings/domains\", request, true, true);\n    return new DomainsResponse(r);\n  }\n\n  // Sync APIs\n\n  async getSync(): Promise<SyncResponse> {\n    const path = this.isDesktopClient || this.isWebClient ? \"/sync?excludeDomains=true\" : \"/sync\";\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new SyncResponse(r);\n  }\n\n  // Two-factor APIs\n\n  async getTwoFactorProviders(): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\"GET\", \"/two-factor\", null, true, true);\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorOrganizationProviders(\n    organizationId: string\n  ): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/two-factor\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorAuthenticator(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async getTwoFactorEmail(request: SecretVerificationRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async getTwoFactorDuo(request: SecretVerificationRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/two-factor/get-duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorYubiKey(request: SecretVerificationRequest): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async getTwoFactorWebAuthn(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async getTwoFactorWebAuthnChallenge(\n    request: SecretVerificationRequest\n  ): Promise<ChallengeResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn-challenge\", request, true, true);\n    return new ChallengeResponse(r);\n  }\n\n  async getTwoFactorRecover(request: SecretVerificationRequest): Promise<TwoFactorRecoverResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-recover\", request, true, true);\n    return new TwoFactorRecoverResponse(r);\n  }\n\n  async putTwoFactorAuthenticator(\n    request: UpdateTwoFactorAuthenticatorRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async putTwoFactorEmail(request: UpdateTwoFactorEmailRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async putTwoFactorDuo(request: UpdateTwoFactorDuoRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorYubiKey(\n    request: UpdateTwoFactorYubioOtpRequest\n  ): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async putTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const response = request.deviceResponse.response as AuthenticatorAttestationResponse;\n    const data: any = Object.assign({}, request);\n\n    data.deviceResponse = {\n      id: request.deviceResponse.id,\n      rawId: btoa(request.deviceResponse.id),\n      type: request.deviceResponse.type,\n      extensions: request.deviceResponse.getClientExtensionResults(),\n      response: {\n        AttestationObject: Utils.fromBufferToB64(response.attestationObject),\n        clientDataJson: Utils.fromBufferToB64(response.clientDataJSON),\n      },\n    };\n\n    const r = await this.send(\"PUT\", \"/two-factor/webauthn\", data, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async deleteTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"DELETE\", \"/two-factor/webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async putTwoFactorDisable(request: TwoFactorProviderRequest): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/disable\", request, true, true);\n    return new TwoFactorProviderResponse(r);\n  }\n\n  async putTwoFactorOrganizationDisable(\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/disable\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorProviderResponse(r);\n  }\n\n  postTwoFactorRecover(request: TwoFactorRecoveryRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/recover\", request, false, false);\n  }\n\n  postTwoFactorEmailSetup(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email\", request, true, false);\n  }\n\n  postTwoFactorEmail(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email-login\", request, false, false);\n  }\n\n  async getDeviceVerificationSettings(): Promise<DeviceVerificationResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/two-factor/get-device-verification-settings\",\n      null,\n      true,\n      true\n    );\n    return new DeviceVerificationResponse(r);\n  }\n\n  async putDeviceVerificationSettings(\n    request: DeviceVerificationRequest\n  ): Promise<DeviceVerificationResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/two-factor/device-verification-settings\",\n      request,\n      true,\n      true\n    );\n    return new DeviceVerificationResponse(r);\n  }\n\n  // Emergency Access APIs\n\n  async getEmergencyAccessTrusted(): Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/trusted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGranteeDetailsResponse);\n  }\n\n  async getEmergencyAccessGranted(): Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/granted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGrantorDetailsResponse);\n  }\n\n  async getEmergencyAccess(id: string): Promise<EmergencyAccessGranteeDetailsResponse> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id, null, true, true);\n    return new EmergencyAccessGranteeDetailsResponse(r);\n  }\n\n  async getEmergencyGrantorPolicies(id: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id + \"/policies\", null, true, true);\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  putEmergencyAccess(id: string, request: EmergencyAccessUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/emergency-access/\" + id, request, true, false);\n  }\n\n  deleteEmergencyAccess(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/emergency-access/\" + id, null, true, false);\n  }\n\n  postEmergencyAccessInvite(request: EmergencyAccessInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/invite\", request, true, false);\n  }\n\n  postEmergencyAccessReinvite(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reinvite\", null, true, false);\n  }\n\n  postEmergencyAccessAccept(id: string, request: EmergencyAccessAcceptRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/accept\", request, true, false);\n  }\n\n  postEmergencyAccessConfirm(id: string, request: EmergencyAccessConfirmRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/confirm\", request, true, false);\n  }\n\n  postEmergencyAccessInitiate(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/initiate\", null, true, false);\n  }\n\n  postEmergencyAccessApprove(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/approve\", null, true, false);\n  }\n\n  postEmergencyAccessReject(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reject\", null, true, false);\n  }\n\n  async postEmergencyAccessTakeover(id: string): Promise<EmergencyAccessTakeoverResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/takeover\", null, true, true);\n    return new EmergencyAccessTakeoverResponse(r);\n  }\n\n  async postEmergencyAccessPassword(\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ): Promise<any> {\n    await this.send(\"POST\", \"/emergency-access/\" + id + \"/password\", request, true, true);\n  }\n\n  async postEmergencyAccessView(id: string): Promise<EmergencyAccessViewResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/view\", null, true, true);\n    return new EmergencyAccessViewResponse(r);\n  }\n\n  // Organization APIs\n\n  async getOrganization(id: string): Promise<OrganizationResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id, null, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async getOrganizationBilling(id: string): Promise<BillingResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/billing\", null, true, true);\n    return new BillingResponse(r);\n  }\n\n  async getOrganizationSubscription(id: string): Promise<OrganizationSubscriptionResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/subscription\", null, true, true);\n    return new OrganizationSubscriptionResponse(r);\n  }\n\n  async getCloudCommunicationsEnabled(): Promise<boolean> {\n    const r = await this.send(\"GET\", \"/organizations/connections/enabled\", null, true, true);\n    return r as boolean;\n  }\n\n  async getOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    id: string,\n    type: OrganizationConnectionType,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\"GET\", `/organizations/connections/${id}/${type}`, null, true, true);\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async createOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\"POST\", \"/organizations/connections/\", request, true, true);\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async updateOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig },\n    organizationConnectionId?: string\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/connections/\" + organizationConnectionId,\n      request,\n      true,\n      true\n    );\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async deleteOrganizationConnection(id: string): Promise<void> {\n    return this.send(\"DELETE\", \"/organizations/connections/\" + id, null, true, false);\n  }\n\n  async getOrganizationLicense(id: string, installationId: string): Promise<any> {\n    return this.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/license?installationId=\" + installationId,\n      null,\n      true,\n      true\n    );\n  }\n\n  async getOrganizationTaxInfo(id: string): Promise<TaxInfoResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async getOrganizationSso(id: string): Promise<OrganizationSsoResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/sso\", null, true, true);\n    return new OrganizationSsoResponse(r);\n  }\n\n  async postOrganization(request: OrganizationCreateRequest): Promise<OrganizationResponse> {\n    const r = await this.send(\"POST\", \"/organizations\", request, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async putOrganization(\n    id: string,\n    request: OrganizationUpdateRequest\n  ): Promise<OrganizationResponse> {\n    const r = await this.send(\"PUT\", \"/organizations/\" + id, request, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async putOrganizationTaxInfo(\n    id: string,\n    request: OrganizationTaxInfoUpdateRequest\n  ): Promise<any> {\n    return this.send(\"PUT\", \"/organizations/\" + id + \"/tax\", request, true, false);\n  }\n\n  postLeaveOrganization(id: string): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/leave\", null, true, false);\n  }\n\n  async postOrganizationLicense(data: FormData): Promise<OrganizationResponse> {\n    const r = await this.send(\"POST\", \"/organizations/license\", data, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async postOrganizationLicenseUpdate(id: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/license\", data, true, false);\n  }\n\n  async postOrganizationApiKey(\n    id: string,\n    request: OrganizationApiKeyRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  async getOrganizationApiKeyInformation(\n    id: string,\n    type: OrganizationApiKeyType = null\n  ): Promise<ListResponse<OrganizationApiKeyInformationResponse>> {\n    const uri =\n      type === null\n        ? \"/organizations/\" + id + \"/api-key-information\"\n        : \"/organizations/\" + id + \"/api-key-information/\" + type;\n    const r = await this.send(\"GET\", uri, null, true, true);\n    return new ListResponse(r, OrganizationApiKeyInformationResponse);\n  }\n\n  async postOrganizationRotateApiKey(\n    id: string,\n    request: OrganizationApiKeyRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/rotate-api-key\",\n      request,\n      true,\n      true\n    );\n    return new ApiKeyResponse(r);\n  }\n\n  async postOrganizationSso(\n    id: string,\n    request: OrganizationSsoRequest\n  ): Promise<OrganizationSsoResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/sso\", request, true, true);\n    return new OrganizationSsoResponse(r);\n  }\n\n  async postOrganizationUpgrade(\n    id: string,\n    request: OrganizationUpgradeRequest\n  ): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/upgrade\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postOrganizationUpdateSubscription(\n    id: string,\n    request: OrganizationSubscriptionUpdateRequest\n  ): Promise<void> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/subscription\", request, true, false);\n  }\n\n  async postOrganizationSeat(id: string, request: SeatRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/seat\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postOrganizationStorage(id: string, request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/storage\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  postOrganizationPayment(id: string, request: PaymentRequest): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/payment\", request, true, false);\n  }\n\n  postOrganizationVerifyBank(id: string, request: VerifyBankRequest): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/verify-bank\", request, true, false);\n  }\n\n  postOrganizationCancel(id: string): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/cancel\", null, true, false);\n  }\n\n  postOrganizationReinstate(id: string): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/reinstate\", null, true, false);\n  }\n\n  deleteOrganization(id: string, request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/organizations/\" + id, request, true, false);\n  }\n\n  async getOrganizationKeys(id: string): Promise<OrganizationKeysResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/keys\", null, true, true);\n    return new OrganizationKeysResponse(r);\n  }\n\n  async postOrganizationKeys(\n    id: string,\n    request: OrganizationKeysRequest\n  ): Promise<OrganizationKeysResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/keys\", request, true, true);\n    return new OrganizationKeysResponse(r);\n  }\n\n  // Provider APIs\n\n  async postProviderSetup(id: string, request: ProviderSetupRequest) {\n    const r = await this.send(\"POST\", \"/providers/\" + id + \"/setup\", request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async getProvider(id: string) {\n    const r = await this.send(\"GET\", \"/providers/\" + id, null, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async putProvider(id: string, request: ProviderUpdateRequest) {\n    const r = await this.send(\"PUT\", \"/providers/\" + id, request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  // Provider User APIs\n\n  async getProviderUsers(\n    providerId: string\n  ): Promise<ListResponse<ProviderUserUserDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users\", null, true, true);\n    return new ListResponse(r, ProviderUserUserDetailsResponse);\n  }\n\n  async getProviderUser(providerId: string, id: string): Promise<ProviderUserResponse> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users/\" + id, null, true, true);\n    return new ProviderUserResponse(r);\n  }\n\n  postProviderUserInvite(providerId: string, request: ProviderUserInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/providers/\" + providerId + \"/users/invite\", request, true, false);\n  }\n\n  postProviderUserReinvite(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyProviderUserReinvite(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async postProviderUserBulkConfirm(\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async deleteManyProviderUsers(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\"DELETE\", \"/providers/\" + providerId + \"/users\", request, true, true);\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  postProviderUserAccept(\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postProviderUserConfirm(\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderUsersPublicKey(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkPublicKeyResponse);\n  }\n\n  putProviderUser(\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\"PUT\", \"/providers/\" + providerId + \"/users/\" + id, request, true, false);\n  }\n\n  deleteProviderUser(providerId: string, id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/providers/\" + providerId + \"/users/\" + id, null, true, false);\n  }\n\n  // Provider Organization APIs\n\n  async getProviderClients(\n    providerId: string\n  ): Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/providers/\" + providerId + \"/organizations\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderOrganizationOrganizationDetailsResponse);\n  }\n\n  postProviderAddOrganization(\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations/add\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderCreateOrganization(\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ): Promise<ProviderOrganizationResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations\",\n      request,\n      true,\n      true\n    );\n    return new ProviderOrganizationResponse(r);\n  }\n\n  deleteProviderOrganization(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/providers/\" + providerId + \"/organizations/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Event APIs\n\n  async getEvents(start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsCipher(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/ciphers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganization(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/organizations/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganizationUser(\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/organizations/\" + organizationId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProvider(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/providers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProviderUser(\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/providers/\" + providerId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async postEventsCollect(request: EventRequest[]): Promise<any> {\n    const authHeader = await this.getActiveBearerToken();\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n      Authorization: \"Bearer \" + authHeader,\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    const response = await this.fetch(\n      new Request(this.environmentService.getEventsUrl() + \"/collect\", {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        method: \"POST\",\n        body: JSON.stringify(request),\n        headers: headers,\n      })\n    );\n    if (response.status !== 200) {\n      return Promise.reject(\"Event post failed.\");\n    }\n  }\n\n  // User APIs\n\n  async getUserPublicKey(id: string): Promise<UserKeyResponse> {\n    const r = await this.send(\"GET\", \"/users/\" + id + \"/public-key\", null, true, true);\n    return new UserKeyResponse(r);\n  }\n\n  // HIBP APIs\n\n  async getHibpBreach(username: string): Promise<BreachAccountResponse[]> {\n    const r = await this.send(\"GET\", \"/hibp/breach?username=\" + username, null, true, true);\n    return r.map((a: any) => new BreachAccountResponse(a));\n  }\n\n  // Misc\n\n  async postBitPayInvoice(request: BitPayInvoiceRequest): Promise<string> {\n    const r = await this.send(\"POST\", \"/bitpay-invoice\", request, true, true);\n    return r as string;\n  }\n\n  async postSetupPayment(): Promise<string> {\n    const r = await this.send(\"POST\", \"/setup-payment\", null, true, true);\n    return r as string;\n  }\n\n  // Key Connector\n\n  async getUserKeyFromKeyConnector(keyConnectorUrl: string): Promise<KeyConnectorUserKeyResponse> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n\n    return new KeyConnectorUserKeyResponse(await response.json());\n  }\n\n  async postUserKeyToKeyConnector(\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ): Promise<void> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"POST\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n        body: JSON.stringify(request),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async getKeyConnectorAlive(keyConnectorUrl: string) {\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/alive\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async getOrganizationExport(organizationId: string): Promise<OrganizationExportResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/export\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationExportResponse(r);\n  }\n\n  // Helpers\n\n  async getActiveBearerToken(): Promise<string> {\n    let accessToken = await this.tokenService.getToken();\n    if (await this.tokenService.tokenNeedsRefresh()) {\n      await this.doAuthRefresh();\n      accessToken = await this.tokenService.getToken();\n    }\n    return accessToken;\n  }\n\n  async fetch(request: Request): Promise<Response> {\n    if (request.method === \"GET\") {\n      request.headers.set(\"Cache-Control\", \"no-store\");\n      request.headers.set(\"Pragma\", \"no-cache\");\n    }\n    request.headers.set(\"Bitwarden-Client-Name\", this.platformUtilsService.getClientType());\n    request.headers.set(\n      \"Bitwarden-Client-Version\",\n      await this.platformUtilsService.getApplicationVersion()\n    );\n    return this.nativeFetch(request);\n  }\n\n  nativeFetch(request: Request): Promise<Response> {\n    return fetch(request);\n  }\n\n  async preValidateSso(identifier: string): Promise<SsoPreValidateResponse> {\n    if (identifier == null || identifier === \"\") {\n      throw new Error(\"Organization Identifier was not provided.\");\n    }\n    const headers = new Headers({\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const path = `/account/prevalidate?domainHint=${encodeURIComponent(identifier)}`;\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + path, {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"GET\",\n      })\n    );\n\n    if (response.status === 200) {\n      const body = await response.json();\n      return new SsoPreValidateResponse(body);\n    } else {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async postCreateSponsorship(\n    sponsoredOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" +\n        (this.platformUtilsService.isSelfHost() ? \"self-hosted/\" : \"\") +\n        sponsoredOrgId +\n        \"/families-for-enterprise\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async getSponsorshipSyncStatus(\n    sponsoredOrgId: string\n  ): Promise<OrganizationSponsorshipSyncStatusResponse> {\n    const response = await this.send(\n      \"GET\",\n      \"/organization/sponsorship/\" + sponsoredOrgId + \"/sync-status\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationSponsorshipSyncStatusResponse(response);\n  }\n\n  async deleteRevokeSponsorship(sponsoringOrganizationId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/\" +\n        (this.platformUtilsService.isSelfHost() ? \"self-hosted/\" : \"\") +\n        sponsoringOrganizationId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteRemoveSponsorship(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/sponsored/\" + sponsoringOrgId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async postPreValidateSponsorshipToken(sponsorshipToken: string): Promise<boolean> {\n    const r = await this.send(\n      \"POST\",\n      \"/organization/sponsorship/validate-token?sponsorshipToken=\" +\n        encodeURIComponent(sponsorshipToken),\n      null,\n      true,\n      true\n    );\n    return r as boolean;\n  }\n\n  async postRedeemSponsorship(\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/redeem?sponsorshipToken=\" + encodeURIComponent(sponsorshipToken),\n      request,\n      true,\n      false\n    );\n  }\n\n  async postResendSponsorshipOffer(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" + sponsoringOrgId + \"/families-for-enterprise/resend\",\n      null,\n      true,\n      false\n    );\n  }\n\n  protected async doAuthRefresh(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken != null && refreshToken !== \"\") {\n      return this.doRefreshToken();\n    }\n\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n    if (!Utils.isNullOrWhitespace(clientId) && !Utils.isNullOrWhitespace(clientSecret)) {\n      return this.doApiTokenRefresh();\n    }\n\n    throw new Error(\"Cannot refresh token, no refresh token or api keys are stored\");\n  }\n\n  protected async doRefreshToken(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken == null || refreshToken === \"\") {\n      throw new Error();\n    }\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const decodedToken = await this.tokenService.decodeToken();\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify({\n          grant_type: \"refresh_token\",\n          client_id: decodedToken.client_id,\n          refresh_token: refreshToken,\n        }),\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    if (response.status === 200) {\n      const responseJson = await response.json();\n      const tokenResponse = new IdentityTokenResponse(responseJson);\n      await this.tokenService.setTokens(\n        tokenResponse.accessToken,\n        tokenResponse.refreshToken,\n        null\n      );\n    } else {\n      const error = await this.handleError(response, true, true);\n      return Promise.reject(error);\n    }\n  }\n\n  protected async doApiTokenRefresh(): Promise<void> {\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n\n    const appId = await this.appIdService.getAppId();\n    const deviceRequest = new DeviceRequest(appId, this.platformUtilsService);\n\n    const tokenRequest = new ApiTokenRequest(\n      clientId,\n      clientSecret,\n      new TokenRequestTwoFactor(),\n      deviceRequest\n    );\n\n    const response = await this.postIdentityToken(tokenRequest);\n    if (!(response instanceof IdentityTokenResponse)) {\n      throw new Error(\"Invalid response received when refreshing api token\");\n    }\n\n    await this.tokenService.setToken(response.accessToken);\n  }\n\n  async send(\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n    path: string,\n    body: any,\n    authed: boolean,\n    hasResponse: boolean,\n    apiUrl?: string,\n    alterHeaders?: (headers: Headers) => void\n  ): Promise<any> {\n    apiUrl = Utils.isNullOrWhitespace(apiUrl) ? this.environmentService.getApiUrl() : apiUrl;\n\n    const requestUrl = apiUrl + path;\n    // Prevent directory traversal from malicious paths\n    if (new URL(requestUrl).href !== requestUrl) {\n      return Promise.reject(\"Invalid request url path.\");\n    }\n\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const requestInit: RequestInit = {\n      cache: \"no-store\",\n      credentials: this.getCredentials(),\n      method: method,\n    };\n\n    if (authed) {\n      const authHeader = await this.getActiveBearerToken();\n      headers.set(\"Authorization\", \"Bearer \" + authHeader);\n    }\n    if (body != null) {\n      if (typeof body === \"string\") {\n        requestInit.body = body;\n        headers.set(\"Content-Type\", \"application/x-www-form-urlencoded; charset=utf-8\");\n      } else if (typeof body === \"object\") {\n        if (body instanceof FormData) {\n          requestInit.body = body;\n        } else {\n          headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n          requestInit.body = JSON.stringify(body);\n        }\n      }\n    }\n    if (hasResponse) {\n      headers.set(\"Accept\", \"application/json\");\n    }\n    if (alterHeaders != null) {\n      alterHeaders(headers);\n    }\n\n    requestInit.headers = headers;\n    const response = await this.fetch(new Request(requestUrl, requestInit));\n\n    if (hasResponse && response.status === 200) {\n      const responseJson = await response.json();\n      return responseJson;\n    } else if (response.status !== 200) {\n      const error = await this.handleError(response, false, authed);\n      return Promise.reject(error);\n    }\n  }\n\n  private async handleError(\n    response: Response,\n    tokenError: boolean,\n    authed: boolean\n  ): Promise<ErrorResponse> {\n    if (\n      authed &&\n      ((tokenError && response.status === 400) ||\n        response.status === 401 ||\n        response.status === 403)\n    ) {\n      await this.logoutCallback(true);\n      return null;\n    }\n\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    } else if (this.isTextResponse(response)) {\n      responseJson = { Message: await response.text() };\n    }\n\n    return new ErrorResponse(responseJson, response.status, tokenError);\n  }\n\n  private qsStringify(params: any): string {\n    return Object.keys(params)\n      .map((key) => {\n        return encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key]);\n      })\n      .join(\"&\");\n  }\n\n  private getCredentials(): RequestCredentials {\n    if (!this.isWebClient || this.environmentService.hasBaseUrl()) {\n      return \"include\";\n    }\n    return undefined;\n  }\n\n  private addEventParameters(base: string, start: string, end: string, token: string) {\n    if (start != null) {\n      base += \"?start=\" + start;\n    }\n    if (end != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"end=\" + end;\n    }\n    if (token != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"continuationToken=\" + token;\n    }\n    return base;\n  }\n\n  private isJsonResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"application/json\") > -1;\n  }\n\n  private isTextResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"text\") > -1;\n  }\n}\n","import { AppIdService as AppIdServiceAbstraction } from \"../abstractions/appId.service\";\nimport { AbstractStorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { Utils } from \"../misc/utils\";\n\nexport class AppIdService implements AppIdServiceAbstraction {\n  constructor(private storageService: AbstractStorageService) {}\n\n  getAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"appId\");\n  }\n\n  getAnonymousAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"anonymousAppId\");\n  }\n\n  private async makeAndGetAppId(key: string) {\n    const existingId = await this.storageService.get<string>(key, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    if (existingId != null) {\n      return existingId;\n    }\n\n    const guid = Utils.newGuid();\n    await this.storageService.save(key, guid, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    return guid;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { AuditService as AuditServiceAbstraction } from \"../abstractions/audit.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { throttle } from \"../misc/throttle\";\nimport { Utils } from \"../misc/utils\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\n\nconst PwnedPasswordsApi = \"https://api.pwnedpasswords.com/range/\";\n\nexport class AuditService implements AuditServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService\n  ) {}\n\n  @throttle(100, () => \"passwordLeaked\")\n  async passwordLeaked(password: string): Promise<number> {\n    const hashBytes = await this.cryptoFunctionService.hash(password, \"sha1\");\n    const hash = Utils.fromBufferToHex(hashBytes).toUpperCase();\n    const hashStart = hash.substr(0, 5);\n    const hashEnding = hash.substr(5);\n\n    const response = await this.apiService.nativeFetch(new Request(PwnedPasswordsApi + hashStart));\n    const leakedHashes = await response.text();\n    const match = leakedHashes.split(/\\r?\\n/).find((v) => {\n      return v.split(\":\")[0] === hashEnding;\n    });\n\n    return match != null ? parseInt(match.split(\":\")[1], 10) : 0;\n  }\n\n  async breachedAccounts(username: string): Promise<BreachAccountResponse[]> {\n    try {\n      return await this.apiService.getHibpBreach(username);\n    } catch (e) {\n      const error = e as ErrorResponse;\n      if (error.statusCode === 404) {\n        return [];\n      }\n      throw new Error();\n    }\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will limit how many times the function can be\n * in-flight at a time.\n *\n * Calls beyond the limit will be queued, and run when one of the active calls finishes\n */\nexport function throttle(limit: number, throttleKey: (args: any[]) => string) {\n  return <T>(\n    target: any,\n    propertyKey: string | symbol,\n    descriptor: TypedPropertyDescriptor<(...args: any[]) => Promise<T>>\n  ) => {\n    const originalMethod: () => Promise<T> = descriptor.value;\n    const allThrottles = new Map<any, Map<string, (() => void)[]>>();\n\n    const getThrottles = (obj: any) => {\n      let throttles = allThrottles.get(obj);\n      if (throttles != null) {\n        return throttles;\n      }\n      throttles = new Map<string, (() => void)[]>();\n      allThrottles.set(obj, throttles);\n      return throttles;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const throttles = getThrottles(this);\n        const argsThrottleKey = throttleKey(args);\n        let queue = throttles.get(argsThrottleKey);\n        if (queue == null) {\n          queue = [];\n          throttles.set(argsThrottleKey, queue);\n        }\n\n        return new Promise<T>((resolve, reject) => {\n          const exec = () => {\n            const onFinally = () => {\n              queue.splice(queue.indexOf(exec), 1);\n              if (queue.length >= limit) {\n                queue[limit - 1]();\n              } else if (queue.length === 0) {\n                throttles.delete(argsThrottleKey);\n                if (throttles.size === 0) {\n                  allThrottles.delete(this);\n                }\n              }\n            };\n            originalMethod\n              .apply(this, args)\n              .then((val: any) => {\n                onFinally();\n                return val;\n              })\n              .catch((err: any) => {\n                onFinally();\n                throw err;\n              })\n              .then(resolve, reject);\n          };\n          queue.push(exec);\n          if (queue.length <= limit) {\n            exec();\n          }\n        });\n      },\n    };\n  };\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\nimport { Utils } from \"../../misc/utils\";\n\nexport class AuthResult {\n  captchaSiteKey = \"\";\n  resetMasterPassword = false;\n  forcePasswordReset = false;\n  twoFactorProviders: Map<TwoFactorProviderType, { [key: string]: string }> = null;\n\n  get requiresCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  get requiresTwoFactor() {\n    return this.twoFactorProviders != null;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\nimport { Account, AccountProfile, AccountTokens } from \"../../models/domain/account\";\nimport { AuthResult } from \"../../models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n} from \"../../models/domain/logInCredentials\";\nimport { DeviceRequest } from \"../../models/request/deviceRequest\";\nimport { ApiTokenRequest } from \"../../models/request/identityToken/apiTokenRequest\";\nimport { PasswordTokenRequest } from \"../../models/request/identityToken/passwordTokenRequest\";\nimport { SsoTokenRequest } from \"../../models/request/identityToken/ssoTokenRequest\";\nimport { TokenRequestTwoFactor } from \"../../models/request/identityToken/tokenRequestTwoFactor\";\nimport { KeysRequest } from \"../../models/request/keysRequest\";\nimport { IdentityCaptchaResponse } from \"../../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../../models/response/identityTwoFactorResponse\";\n\nexport abstract class LogInStrategy {\n  protected abstract tokenRequest: ApiTokenRequest | PasswordTokenRequest | SsoTokenRequest;\n  protected captchaBypassToken: string = null;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService\n  ) {}\n\n  abstract logIn(\n    credentials: ApiLogInCredentials | PasswordLogInCredentials | SsoLogInCredentials\n  ): Promise<AuthResult>;\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string = null\n  ): Promise<AuthResult> {\n    this.tokenRequest.setTwoFactor(twoFactor);\n    return this.startLogIn();\n  }\n\n  protected async startLogIn(): Promise<AuthResult> {\n    this.twoFactorService.clearSelectedProvider();\n\n    const response = await this.apiService.postIdentityToken(this.tokenRequest);\n\n    if (response instanceof IdentityTwoFactorResponse) {\n      return this.processTwoFactorResponse(response);\n    } else if (response instanceof IdentityCaptchaResponse) {\n      return this.processCaptchaResponse(response);\n    } else if (response instanceof IdentityTokenResponse) {\n      return this.processTokenResponse(response);\n    }\n\n    throw new Error(\"Invalid response object.\");\n  }\n\n  protected onSuccessfulLogin(response: IdentityTokenResponse): Promise<void> {\n    // Implemented in subclass if required\n    return null;\n  }\n\n  protected async buildDeviceRequest() {\n    const appId = await this.appIdService.getAppId();\n    return new DeviceRequest(appId, this.platformUtilsService);\n  }\n\n  protected async buildTwoFactor(userProvidedTwoFactor?: TokenRequestTwoFactor) {\n    if (userProvidedTwoFactor != null) {\n      return userProvidedTwoFactor;\n    }\n\n    const storedTwoFactorToken = await this.tokenService.getTwoFactorToken();\n    if (storedTwoFactorToken != null) {\n      return new TokenRequestTwoFactor(TwoFactorProviderType.Remember, storedTwoFactorToken, false);\n    }\n\n    return new TokenRequestTwoFactor();\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    const accountInformation = await this.tokenService.decodeToken(tokenResponse.accessToken);\n    await this.stateService.addAccount(\n      new Account({\n        profile: {\n          ...new AccountProfile(),\n          ...{\n            userId: accountInformation.sub,\n            email: accountInformation.email,\n            hasPremiumPersonally: accountInformation.premium,\n            kdfIterations: tokenResponse.kdfIterations,\n            kdfType: tokenResponse.kdf,\n          },\n        },\n        tokens: {\n          ...new AccountTokens(),\n          ...{\n            accessToken: tokenResponse.accessToken,\n            refreshToken: tokenResponse.refreshToken,\n          },\n        },\n      })\n    );\n  }\n\n  protected async processTokenResponse(response: IdentityTokenResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.resetMasterPassword = response.resetMasterPassword;\n    result.forcePasswordReset = response.forcePasswordReset;\n\n    await this.saveAccountInformation(response);\n\n    if (response.twoFactorToken != null) {\n      await this.tokenService.setTwoFactorToken(response);\n    }\n\n    const newSsoUser = response.key == null;\n    if (!newSsoUser) {\n      await this.cryptoService.setEncKey(response.key);\n      await this.cryptoService.setEncPrivateKey(\n        response.privateKey ?? (await this.createKeyPairForOldAccount())\n      );\n    }\n\n    await this.onSuccessfulLogin(response);\n\n    this.messagingService.send(\"loggedIn\");\n\n    return result;\n  }\n\n  private async processTwoFactorResponse(response: IdentityTwoFactorResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.twoFactorProviders = response.twoFactorProviders2;\n    this.twoFactorService.setProviders(response);\n    this.captchaBypassToken = response.captchaToken ?? null;\n    return result;\n  }\n\n  private async processCaptchaResponse(response: IdentityCaptchaResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.captchaSiteKey = response.siteKey;\n    return result;\n  }\n\n  private async createKeyPairForOldAccount() {\n    try {\n      const [publicKey, privateKey] = await this.cryptoService.makeKeyPair();\n      await this.apiService.postAccountKeys(new KeysRequest(publicKey, privateKey.encryptedString));\n      return privateKey.encryptedString;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EnvironmentService } from \"../../abstractions/environment.service\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { ApiLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { ApiTokenRequest } from \"../../models/request/identityToken/apiTokenRequest\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class ApiLogInStrategy extends LogInStrategy {\n  tokenRequest: ApiTokenRequest;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private environmentService: EnvironmentService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin(tokenResponse: IdentityTokenResponse) {\n    if (tokenResponse.apiUseKeyConnector) {\n      const keyConnectorUrl = this.environmentService.getKeyConnectorUrl();\n      await this.keyConnectorService.getAndSetKey(keyConnectorUrl);\n    }\n  }\n\n  async logIn(credentials: ApiLogInCredentials) {\n    this.tokenRequest = new ApiTokenRequest(\n      credentials.clientId,\n      credentials.clientSecret,\n      await this.buildTwoFactor(),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    await super.saveAccountInformation(tokenResponse);\n    await this.stateService.setApiKeyClientId(this.tokenRequest.clientId);\n    await this.stateService.setApiKeyClientSecret(this.tokenRequest.clientSecret);\n  }\n}\n","import { ClientType } from \"../../../enums/clientType\";\nimport { Utils } from \"../../../misc/utils\";\nimport { CaptchaProtectedRequest } from \"../captchaProtectedRequest\";\nimport { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest } from \"./tokenRequest\";\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport class PasswordTokenRequest extends TokenRequest implements CaptchaProtectedRequest {\n  constructor(\n    public email: string,\n    public masterPasswordHash: string,\n    public captchaResponse: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: ClientType) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"password\";\n    obj.username = this.email;\n    obj.password = this.masterPasswordHash;\n\n    if (this.captchaResponse != null) {\n      obj.captchaResponse = this.captchaResponse;\n    }\n\n    return obj;\n  }\n\n  alterIdentityTokenHeaders(headers: Headers) {\n    headers.set(\"Auth-Email\", Utils.fromUtf8ToUrlB64(this.email));\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { AuthService } from \"../../abstractions/auth.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { HashPurpose } from \"../../enums/hashPurpose\";\nimport { AuthResult } from \"../../models/domain/authResult\";\nimport { PasswordLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetricCryptoKey\";\nimport { PasswordTokenRequest } from \"../../models/request/identityToken/passwordTokenRequest\";\nimport { TokenRequestTwoFactor } from \"../../models/request/identityToken/tokenRequestTwoFactor\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class PasswordLogInStrategy extends LogInStrategy {\n  get email() {\n    return this.tokenRequest.email;\n  }\n\n  get masterPasswordHash() {\n    return this.tokenRequest.masterPasswordHash;\n  }\n\n  tokenRequest: PasswordTokenRequest;\n\n  private localHashedPassword: string;\n  private key: SymmetricCryptoKey;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private authService: AuthService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin() {\n    await this.cryptoService.setKey(this.key);\n    await this.cryptoService.setKeyHash(this.localHashedPassword);\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    this.tokenRequest.captchaResponse = captchaResponse ?? this.captchaBypassToken;\n    return super.logInTwoFactor(twoFactor);\n  }\n\n  async logIn(credentials: PasswordLogInCredentials) {\n    const { email, masterPassword, captchaToken, twoFactor } = credentials;\n\n    this.key = await this.authService.makePreloginKey(masterPassword, email);\n\n    // Hash the password early (before authentication) so we don't persist it in memory in plaintext\n    this.localHashedPassword = await this.cryptoService.hashPassword(\n      masterPassword,\n      this.key,\n      HashPurpose.LocalAuthorization\n    );\n    const hashedPassword = await this.cryptoService.hashPassword(masterPassword, this.key);\n\n    this.tokenRequest = new PasswordTokenRequest(\n      email,\n      hashedPassword,\n      captchaToken,\n      await this.buildTwoFactor(twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","import { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest } from \"./tokenRequest\";\nimport { TokenRequestTwoFactor } from \"./tokenRequestTwoFactor\";\n\nexport class SsoTokenRequest extends TokenRequest {\n  constructor(\n    public code: string,\n    public codeVerifier: string,\n    public redirectUri: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: string) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"authorization_code\";\n    obj.code = this.code;\n    obj.code_verifier = this.codeVerifier;\n    obj.redirect_uri = this.redirectUri;\n\n    return obj;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { SsoLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { SsoTokenRequest } from \"../../models/request/identityToken/ssoTokenRequest\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class SsoLogInStrategy extends LogInStrategy {\n  tokenRequest: SsoTokenRequest;\n  orgId: string;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin(tokenResponse: IdentityTokenResponse) {\n    const newSsoUser = tokenResponse.key == null;\n\n    if (tokenResponse.keyConnectorUrl != null) {\n      if (!newSsoUser) {\n        await this.keyConnectorService.getAndSetKey(tokenResponse.keyConnectorUrl);\n      } else {\n        await this.keyConnectorService.convertNewSsoUserToKeyConnector(tokenResponse, this.orgId);\n      }\n    }\n  }\n\n  async logIn(credentials: SsoLogInCredentials) {\n    this.orgId = credentials.orgId;\n    this.tokenRequest = new SsoTokenRequest(\n      credentials.code,\n      credentials.codeVerifier,\n      credentials.redirectUrl,\n      await this.buildTwoFactor(credentials.twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","export class PreloginRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { AuthService as AuthServiceAbstraction } from \"../abstractions/auth.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { TwoFactorService } from \"../abstractions/twoFactor.service\";\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { AuthenticationType } from \"../enums/authenticationType\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { ApiLogInStrategy } from \"../misc/logInStrategies/apiLogin.strategy\";\nimport { PasswordLogInStrategy } from \"../misc/logInStrategies/passwordLogin.strategy\";\nimport { SsoLogInStrategy } from \"../misc/logInStrategies/ssoLogin.strategy\";\nimport { AuthResult } from \"../models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n} from \"../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TokenRequestTwoFactor } from \"../models/request/identityToken/tokenRequestTwoFactor\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\n\nconst sessionTimeoutLength = 2 * 60 * 1000; // 2 minutes\n\nexport class AuthService implements AuthServiceAbstraction {\n  get email(): string {\n    return this.logInStrategy instanceof PasswordLogInStrategy ? this.logInStrategy.email : null;\n  }\n\n  get masterPasswordHash(): string {\n    return this.logInStrategy instanceof PasswordLogInStrategy\n      ? this.logInStrategy.masterPasswordHash\n      : null;\n  }\n\n  private logInStrategy: ApiLogInStrategy | PasswordLogInStrategy | SsoLogInStrategy;\n  private sessionTimeout: any;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected keyConnectorService: KeyConnectorService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService,\n    protected i18nService: I18nService\n  ) {}\n\n  async logIn(\n    credentials: ApiLogInCredentials | PasswordLogInCredentials | SsoLogInCredentials\n  ): Promise<AuthResult> {\n    this.clearState();\n\n    let strategy: ApiLogInStrategy | PasswordLogInStrategy | SsoLogInStrategy;\n\n    if (credentials.type === AuthenticationType.Password) {\n      strategy = new PasswordLogInStrategy(\n        this.cryptoService,\n        this.apiService,\n        this.tokenService,\n        this.appIdService,\n        this.platformUtilsService,\n        this.messagingService,\n        this.logService,\n        this.stateService,\n        this.twoFactorService,\n        this\n      );\n    } else if (credentials.type === AuthenticationType.Sso) {\n      strategy = new SsoLogInStrategy(\n        this.cryptoService,\n        this.apiService,\n        this.tokenService,\n        this.appIdService,\n        this.platformUtilsService,\n        this.messagingService,\n        this.logService,\n        this.stateService,\n        this.twoFactorService,\n        this.keyConnectorService\n      );\n    } else if (credentials.type === AuthenticationType.Api) {\n      strategy = new ApiLogInStrategy(\n        this.cryptoService,\n        this.apiService,\n        this.tokenService,\n        this.appIdService,\n        this.platformUtilsService,\n        this.messagingService,\n        this.logService,\n        this.stateService,\n        this.twoFactorService,\n        this.environmentService,\n        this.keyConnectorService\n      );\n    }\n\n    const result = await strategy.logIn(credentials as any);\n\n    if (result?.requiresTwoFactor) {\n      this.saveState(strategy);\n    }\n    return result;\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    if (this.logInStrategy == null) {\n      throw new Error(this.i18nService.t(\"sessionTimeout\"));\n    }\n\n    try {\n      const result = await this.logInStrategy.logInTwoFactor(twoFactor, captchaResponse);\n\n      // Only clear state if 2FA token has been accepted, otherwise we need to be able to try again\n      if (!result.requiresTwoFactor && !result.requiresCaptcha) {\n        this.clearState();\n      }\n      return result;\n    } catch (e) {\n      // API exceptions are okay, but if there are any unhandled client-side errors then clear state to be safe\n      if (!(e instanceof ErrorResponse)) {\n        this.clearState();\n      }\n      throw e;\n    }\n  }\n\n  logOut(callback: () => void) {\n    callback();\n    this.messagingService.send(\"loggedOut\");\n  }\n\n  authingWithApiKey(): boolean {\n    return this.logInStrategy instanceof ApiLogInStrategy;\n  }\n\n  authingWithSso(): boolean {\n    return this.logInStrategy instanceof SsoLogInStrategy;\n  }\n\n  authingWithPassword(): boolean {\n    return this.logInStrategy instanceof PasswordLogInStrategy;\n  }\n\n  async getAuthStatus(userId?: string): Promise<AuthenticationStatus> {\n    const isAuthenticated = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!isAuthenticated) {\n      return AuthenticationStatus.LoggedOut;\n    }\n\n    // Keys aren't stored for a device that is locked or logged out\n    // Make sure we're logged in before checking this, otherwise we could mix up those states\n    const neverLock =\n      (await this.cryptoService.hasKeyStored(KeySuffixOptions.Auto, userId)) &&\n      !(await this.stateService.getEverBeenUnlocked({ userId: userId }));\n    if (neverLock) {\n      // TODO: This also _sets_ the key so when we check memory in the next line it finds a key.\n      // We should refactor here.\n      await this.cryptoService.getKey(KeySuffixOptions.Auto, userId);\n    }\n\n    const hasKeyInMemory = await this.cryptoService.hasKeyInMemory(userId);\n    if (!hasKeyInMemory) {\n      return AuthenticationStatus.Locked;\n    }\n\n    return AuthenticationStatus.Unlocked;\n  }\n\n  async makePreloginKey(masterPassword: string, email: string): Promise<SymmetricCryptoKey> {\n    email = email.trim().toLowerCase();\n    let kdf: KdfType = null;\n    let kdfIterations: number = null;\n    try {\n      const preloginResponse = await this.apiService.postPrelogin(new PreloginRequest(email));\n      if (preloginResponse != null) {\n        kdf = preloginResponse.kdf;\n        kdfIterations = preloginResponse.kdfIterations;\n      }\n    } catch (e) {\n      if (e == null || e.statusCode !== 404) {\n        throw e;\n      }\n    }\n    return this.cryptoService.makeKey(masterPassword, email, kdf, kdfIterations);\n  }\n\n  private saveState(strategy: ApiLogInStrategy | PasswordLogInStrategy | SsoLogInStrategy) {\n    this.logInStrategy = strategy;\n    this.startSessionTimeout();\n  }\n\n  private clearState() {\n    this.logInStrategy = null;\n    this.clearSessionTimeout();\n  }\n\n  private startSessionTimeout() {\n    this.clearSessionTimeout();\n    this.sessionTimeout = setTimeout(() => this.clearState(), sessionTimeoutLength);\n  }\n\n  private clearSessionTimeout() {\n    if (this.sessionTimeout != null) {\n      clearTimeout(this.sessionTimeout);\n    }\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will prevent multiple 'active' calls as the same time\n *\n * If a promise was returned from a previous call to this function, that hasn't yet resolved it will\n * be returned, instead of calling the original function again\n *\n * Results are not cached, once the promise has returned, the next call will result in a fresh call\n *\n * Read more at https://github.com/bitwarden/jslib/pull/7\n */\nexport function sequentialize(cacheKey: (args: any[]) => string) {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod: () => Promise<any> = descriptor.value;\n    const caches = new Map<any, Map<string, Promise<any>>>();\n\n    const getCache = (obj: any) => {\n      let cache = caches.get(obj);\n      if (cache != null) {\n        return cache;\n      }\n      cache = new Map<string, Promise<any>>();\n      caches.set(obj, cache);\n      return cache;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const cache = getCache(this);\n        const argsCacheKey = cacheKey(args);\n        let response = cache.get(argsCacheKey);\n        if (response != null) {\n          return response;\n        }\n\n        const onFinally = () => {\n          cache.delete(argsCacheKey);\n          if (cache.size === 0) {\n            caches.delete(this);\n          }\n        };\n        response = originalMethod\n          .apply(this, args)\n          .then((val: any) => {\n            onFinally();\n            return val;\n          })\n          .catch((err: any) => {\n            onFinally();\n            throw err;\n          });\n\n        cache.set(argsCacheKey, response);\n        return response;\n      },\n    };\n  };\n}\n","import { AttachmentResponse } from \"../response/attachmentResponse\";\n\nexport class AttachmentData {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response?: AttachmentResponse) {\n    if (response == null) {\n      return;\n    }\n    this.id = response.id;\n    this.url = response.url;\n    this.fileName = response.fileName;\n    this.key = response.key;\n    this.size = response.size;\n    this.sizeName = response.sizeName;\n  }\n}\n","import { CardApi } from \"../api/cardApi\";\n\nexport class CardData {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data?: CardApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.cardholderName = data.cardholderName;\n    this.brand = data.brand;\n    this.number = data.number;\n    this.expMonth = data.expMonth;\n    this.expYear = data.expYear;\n    this.code = data.code;\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { FieldApi } from \"../api/fieldApi\";\n\nexport class FieldData {\n  type: FieldType;\n  name: string;\n  value: string;\n  linkedId: LinkedIdType;\n\n  constructor(response?: FieldApi) {\n    if (response == null) {\n      return;\n    }\n    this.type = response.type;\n    this.name = response.name;\n    this.value = response.value;\n    this.linkedId = response.linkedId;\n  }\n}\n","import { IdentityApi } from \"../api/identityApi\";\n\nexport class IdentityData {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data?: IdentityApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.title = data.title;\n    this.firstName = data.firstName;\n    this.middleName = data.middleName;\n    this.lastName = data.lastName;\n    this.address1 = data.address1;\n    this.address2 = data.address2;\n    this.address3 = data.address3;\n    this.city = data.city;\n    this.state = data.state;\n    this.postalCode = data.postalCode;\n    this.country = data.country;\n    this.company = data.company;\n    this.email = data.email;\n    this.phone = data.phone;\n    this.ssn = data.ssn;\n    this.username = data.username;\n    this.passportNumber = data.passportNumber;\n    this.licenseNumber = data.licenseNumber;\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { LoginUriApi } from \"../api/loginUriApi\";\n\nexport class LoginUriData {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data?: LoginUriApi) {\n    if (data == null) {\n      return;\n    }\n    this.uri = data.uri;\n    this.match = data.match;\n  }\n}\n","import { LoginApi } from \"../api/loginApi\";\n\nimport { LoginUriData } from \"./loginUriData\";\n\nexport class LoginData {\n  uris: LoginUriData[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data?: LoginApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.username = data.username;\n    this.password = data.password;\n    this.passwordRevisionDate = data.passwordRevisionDate;\n    this.totp = data.totp;\n    this.autofillOnPageLoad = data.autofillOnPageLoad;\n\n    if (data.uris) {\n      this.uris = data.uris.map((u) => new LoginUriData(u));\n    }\n  }\n}\n","import { PasswordHistoryResponse } from \"../response/passwordHistoryResponse\";\n\nexport class PasswordHistoryData {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response?: PasswordHistoryResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.password = response.password;\n    this.lastUsedDate = response.lastUsedDate;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\n\nexport class SecureNoteData {\n  type: SecureNoteType;\n\n  constructor(data?: SecureNoteApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.type = data.type;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CipherResponse } from \"../response/cipherResponse\";\n\nimport { AttachmentData } from \"./attachmentData\";\nimport { CardData } from \"./cardData\";\nimport { FieldData } from \"./fieldData\";\nimport { IdentityData } from \"./identityData\";\nimport { LoginData } from \"./loginData\";\nimport { PasswordHistoryData } from \"./passwordHistoryData\";\nimport { SecureNoteData } from \"./secureNoteData\";\n\nexport class CipherData {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  favorite: boolean;\n  revisionDate: string;\n  type: CipherType;\n  name: string;\n  notes: string;\n  login?: LoginData;\n  secureNote?: SecureNoteData;\n  card?: CardData;\n  identity?: IdentityData;\n  fields?: FieldData[];\n  attachments?: AttachmentData[];\n  passwordHistory?: PasswordHistoryData[];\n  collectionIds?: string[];\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response?: CipherResponse, collectionIds?: string[]) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.folderId = response.folderId;\n    this.edit = response.edit;\n    this.viewPassword = response.viewPassword;\n    this.organizationUseTotp = response.organizationUseTotp;\n    this.favorite = response.favorite;\n    this.revisionDate = response.revisionDate;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.collectionIds = collectionIds != null ? collectionIds : response.collectionIds;\n    this.deletedDate = response.deletedDate;\n    this.reprompt = response.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginData(response.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteData(response.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardData(response.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityData(response.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (response.fields != null) {\n      this.fields = response.fields.map((f) => new FieldData(f));\n    }\n    if (response.attachments != null) {\n      this.attachments = response.attachments.map((a) => new AttachmentData(a));\n    }\n    if (response.passwordHistory != null) {\n      this.passwordHistory = response.passwordHistory.map((ph) => new PasswordHistoryData(ph));\n    }\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { Utils } from \"../../misc/utils\";\nimport { AttachmentData } from \"../data/attachmentData\";\nimport { AttachmentView } from \"../view/attachmentView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Attachment extends Domain {\n  id: string;\n  url: string;\n  size: string;\n  sizeName: string; // Readable size, ex: \"4.2 KB\" or \"1.43 GB\"\n  key: EncString;\n  fileName: EncString;\n\n  constructor(obj?: AttachmentData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<AttachmentView> {\n    const view = await this.decryptObj(\n      new AttachmentView(this),\n      {\n        fileName: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.key != null) {\n      let cryptoService: CryptoService;\n      const containerService = Utils.global.bitwardenContainerService;\n      if (containerService) {\n        cryptoService = containerService.getCryptoService();\n      } else {\n        throw new Error(\"global bitwardenContainerService not initialized.\");\n      }\n\n      try {\n        const orgKey = await cryptoService.getOrgKey(orgId);\n        const decValue = await cryptoService.decryptToBytes(this.key, orgKey ?? encKey);\n        view.key = new SymmetricCryptoKey(decValue);\n      } catch (e) {\n        // TODO: error?\n      }\n    }\n\n    return view;\n  }\n\n  toAttachmentData(): AttachmentData {\n    const a = new AttachmentData();\n    a.size = this.size;\n    this.buildDataModel(\n      this,\n      a,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n    return a;\n  }\n}\n","import { CardData } from \"../data/cardData\";\nimport { CardView } from \"../view/cardView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Card extends Domain {\n  cardholderName: EncString;\n  brand: EncString;\n  number: EncString;\n  expMonth: EncString;\n  expYear: EncString;\n  code: EncString;\n\n  constructor(obj?: CardData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<CardView> {\n    return this.decryptObj(\n      new CardView(),\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toCardData(): CardData {\n    const c = new CardData();\n    this.buildDataModel(this, c, {\n      cardholderName: null,\n      brand: null,\n      number: null,\n      expMonth: null,\n      expYear: null,\n      code: null,\n    });\n    return c;\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { FieldData } from \"../data/fieldData\";\nimport { FieldView } from \"../view/fieldView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Field extends Domain {\n  name: EncString;\n  value: EncString;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(obj?: FieldData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n    this.linkedId = obj.linkedId;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        name: null,\n        value: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<FieldView> {\n    return this.decryptObj(\n      new FieldView(this),\n      {\n        name: null,\n        value: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toFieldData(): FieldData {\n    const f = new FieldData();\n    this.buildDataModel(\n      this,\n      f,\n      {\n        name: null,\n        value: null,\n        type: null,\n        linkedId: null,\n      },\n      [\"type\", \"linkedId\"]\n    );\n    return f;\n  }\n}\n","import { IdentityData } from \"../data/identityData\";\nimport { IdentityView } from \"../view/identityView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Identity extends Domain {\n  title: EncString;\n  firstName: EncString;\n  middleName: EncString;\n  lastName: EncString;\n  address1: EncString;\n  address2: EncString;\n  address3: EncString;\n  city: EncString;\n  state: EncString;\n  postalCode: EncString;\n  country: EncString;\n  company: EncString;\n  email: EncString;\n  phone: EncString;\n  ssn: EncString;\n  username: EncString;\n  passportNumber: EncString;\n  licenseNumber: EncString;\n\n  constructor(obj?: IdentityData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<IdentityView> {\n    return this.decryptObj(\n      new IdentityView(),\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toIdentityData(): IdentityData {\n    const i = new IdentityData();\n    this.buildDataModel(this, i, {\n      title: null,\n      firstName: null,\n      middleName: null,\n      lastName: null,\n      address1: null,\n      address2: null,\n      address3: null,\n      city: null,\n      state: null,\n      postalCode: null,\n      country: null,\n      company: null,\n      email: null,\n      phone: null,\n      ssn: null,\n      username: null,\n      passportNumber: null,\n      licenseNumber: null,\n    });\n    return i;\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { LoginUriData } from \"../data/loginUriData\";\nimport { LoginUriView } from \"../view/loginUriView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class LoginUri extends Domain {\n  uri: EncString;\n  match: UriMatchType;\n\n  constructor(obj?: LoginUriData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.match = obj.match;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        uri: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginUriView> {\n    return this.decryptObj(\n      new LoginUriView(this),\n      {\n        uri: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toLoginUriData(): LoginUriData {\n    const u = new LoginUriData();\n    this.buildDataModel(\n      this,\n      u,\n      {\n        uri: null,\n        match: null,\n      },\n      [\"match\"]\n    );\n    return u;\n  }\n}\n","import { LoginData } from \"../data/loginData\";\nimport { LoginView } from \"../view/loginView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { LoginUri } from \"./loginUri\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Login extends Domain {\n  uris: LoginUri[];\n  username: EncString;\n  password: EncString;\n  passwordRevisionDate?: Date;\n  totp: EncString;\n  autofillOnPageLoad: boolean;\n\n  constructor(obj?: LoginData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.passwordRevisionDate =\n      obj.passwordRevisionDate != null ? new Date(obj.passwordRevisionDate) : null;\n    this.autofillOnPageLoad = obj.autofillOnPageLoad;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      []\n    );\n\n    if (obj.uris) {\n      this.uris = [];\n      obj.uris.forEach((u) => {\n        this.uris.push(new LoginUri(u));\n      });\n    }\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginView> {\n    const view = await this.decryptObj(\n      new LoginView(this),\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.uris != null) {\n      view.uris = [];\n      for (let i = 0; i < this.uris.length; i++) {\n        const uri = await this.uris[i].decrypt(orgId, encKey);\n        view.uris.push(uri);\n      }\n    }\n\n    return view;\n  }\n\n  toLoginData(): LoginData {\n    const l = new LoginData();\n    l.passwordRevisionDate =\n      this.passwordRevisionDate != null ? this.passwordRevisionDate.toISOString() : null;\n    l.autofillOnPageLoad = this.autofillOnPageLoad;\n    this.buildDataModel(this, l, {\n      username: null,\n      password: null,\n      totp: null,\n    });\n\n    if (this.uris != null && this.uris.length > 0) {\n      l.uris = [];\n      this.uris.forEach((u) => {\n        l.uris.push(u.toLoginUriData());\n      });\n    }\n\n    return l;\n  }\n}\n","import { PasswordHistoryData } from \"../data/passwordHistoryData\";\nimport { PasswordHistoryView } from \"../view/passwordHistoryView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Password extends Domain {\n  password: EncString;\n  lastUsedDate: Date;\n\n  constructor(obj?: PasswordHistoryData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(this, obj, {\n      password: null,\n    });\n    this.lastUsedDate = new Date(obj.lastUsedDate);\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<PasswordHistoryView> {\n    return this.decryptObj(\n      new PasswordHistoryView(this),\n      {\n        password: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toPasswordHistoryData(): PasswordHistoryData {\n    const ph = new PasswordHistoryData();\n    ph.lastUsedDate = this.lastUsedDate.toISOString();\n    this.buildDataModel(this, ph, {\n      password: null,\n    });\n    return ph;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNoteData } from \"../data/secureNoteData\";\nimport { SecureNoteView } from \"../view/secureNoteView\";\n\nimport Domain from \"./domainBase\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SecureNote extends Domain {\n  type: SecureNoteType;\n\n  constructor(obj?: SecureNoteData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<SecureNoteView> {\n    return Promise.resolve(new SecureNoteView(this));\n  }\n\n  toSecureNoteData(): SecureNoteData {\n    const n = new SecureNoteData();\n    n.type = this.type;\n    return n;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CipherData } from \"../data/cipherData\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { Attachment } from \"./attachment\";\nimport { Card } from \"./card\";\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { Field } from \"./field\";\nimport { Identity } from \"./identity\";\nimport { Login } from \"./login\";\nimport { Password } from \"./password\";\nimport { SecureNote } from \"./secureNote\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Cipher extends Domain {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  name: EncString;\n  notes: EncString;\n  type: CipherType;\n  favorite: boolean;\n  organizationUseTotp: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  revisionDate: Date;\n  localData: any;\n  login: Login;\n  identity: Identity;\n  card: Card;\n  secureNote: SecureNote;\n  attachments: Attachment[];\n  fields: Field[];\n  passwordHistory: Password[];\n  collectionIds: string[];\n  deletedDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(obj?: CipherData, localData: any = null) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        folderId: null,\n        name: null,\n        notes: null,\n      },\n      [\"id\", \"organizationId\", \"folderId\"]\n    );\n\n    this.type = obj.type;\n    this.favorite = obj.favorite;\n    this.organizationUseTotp = obj.organizationUseTotp;\n    this.edit = obj.edit;\n    if (obj.viewPassword != null) {\n      this.viewPassword = obj.viewPassword;\n    } else {\n      this.viewPassword = true; // Default for already synced Ciphers without viewPassword\n    }\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.collectionIds = obj.collectionIds;\n    this.localData = localData;\n    this.deletedDate = obj.deletedDate != null ? new Date(obj.deletedDate) : null;\n    this.reprompt = obj.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new Login(obj.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNote(obj.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new Card(obj.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new Identity(obj.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (obj.attachments != null) {\n      this.attachments = obj.attachments.map((a) => new Attachment(a));\n    } else {\n      this.attachments = null;\n    }\n\n    if (obj.fields != null) {\n      this.fields = obj.fields.map((f) => new Field(f));\n    } else {\n      this.fields = null;\n    }\n\n    if (obj.passwordHistory != null) {\n      this.passwordHistory = obj.passwordHistory.map((ph) => new Password(ph));\n    } else {\n      this.passwordHistory = null;\n    }\n  }\n\n  async decrypt(encKey?: SymmetricCryptoKey): Promise<CipherView> {\n    const model = new CipherView(this);\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      this.organizationId,\n      encKey\n    );\n\n    switch (this.type) {\n      case CipherType.Login:\n        model.login = await this.login.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.SecureNote:\n        model.secureNote = await this.secureNote.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Card:\n        model.card = await this.card.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Identity:\n        model.identity = await this.identity.decrypt(this.organizationId, encKey);\n        break;\n      default:\n        break;\n    }\n\n    const orgId = this.organizationId;\n\n    if (this.attachments != null && this.attachments.length > 0) {\n      const attachments: any[] = [];\n      await this.attachments.reduce((promise, attachment) => {\n        return promise\n          .then(() => {\n            return attachment.decrypt(orgId, encKey);\n          })\n          .then((decAttachment) => {\n            attachments.push(decAttachment);\n          });\n      }, Promise.resolve());\n      model.attachments = attachments;\n    }\n\n    if (this.fields != null && this.fields.length > 0) {\n      const fields: any[] = [];\n      await this.fields.reduce((promise, field) => {\n        return promise\n          .then(() => {\n            return field.decrypt(orgId, encKey);\n          })\n          .then((decField) => {\n            fields.push(decField);\n          });\n      }, Promise.resolve());\n      model.fields = fields;\n    }\n\n    if (this.passwordHistory != null && this.passwordHistory.length > 0) {\n      const passwordHistory: any[] = [];\n      await this.passwordHistory.reduce((promise, ph) => {\n        return promise\n          .then(() => {\n            return ph.decrypt(orgId, encKey);\n          })\n          .then((decPh) => {\n            passwordHistory.push(decPh);\n          });\n      }, Promise.resolve());\n      model.passwordHistory = passwordHistory;\n    }\n\n    return model;\n  }\n\n  toCipherData(): CipherData {\n    const c = new CipherData();\n    c.id = this.id;\n    c.organizationId = this.organizationId;\n    c.folderId = this.folderId;\n    c.edit = this.edit;\n    c.viewPassword = this.viewPassword;\n    c.organizationUseTotp = this.organizationUseTotp;\n    c.favorite = this.favorite;\n    c.revisionDate = this.revisionDate != null ? this.revisionDate.toISOString() : null;\n    c.type = this.type;\n    c.collectionIds = this.collectionIds;\n    c.deletedDate = this.deletedDate != null ? this.deletedDate.toISOString() : null;\n    c.reprompt = this.reprompt;\n\n    this.buildDataModel(this, c, {\n      name: null,\n      notes: null,\n    });\n\n    switch (c.type) {\n      case CipherType.Login:\n        c.login = this.login.toLoginData();\n        break;\n      case CipherType.SecureNote:\n        c.secureNote = this.secureNote.toSecureNoteData();\n        break;\n      case CipherType.Card:\n        c.card = this.card.toCardData();\n        break;\n      case CipherType.Identity:\n        c.identity = this.identity.toIdentityData();\n        break;\n      default:\n        break;\n    }\n\n    if (this.fields != null) {\n      c.fields = this.fields.map((f) => f.toFieldData());\n    }\n    if (this.attachments != null) {\n      c.attachments = this.attachments.map((a) => a.toAttachmentData());\n    }\n    if (this.passwordHistory != null) {\n      c.passwordHistory = this.passwordHistory.map((ph) => ph.toPasswordHistoryData());\n    }\n    return c;\n  }\n}\n","import { CipherView } from \"../view/cipherView\";\n\nconst CacheTTL = 3000;\n\nexport class SortedCiphersCache {\n  private readonly sortedCiphersByUrl: Map<string, Ciphers> = new Map<string, Ciphers>();\n  private readonly timeouts: Map<string, any> = new Map<string, any>();\n\n  constructor(private readonly comparator: (a: CipherView, b: CipherView) => number) {}\n\n  isCached(url: string) {\n    return this.sortedCiphersByUrl.has(url);\n  }\n\n  addCiphers(url: string, ciphers: CipherView[]) {\n    ciphers.sort(this.comparator);\n    this.sortedCiphersByUrl.set(url, new Ciphers(ciphers));\n    this.resetTimer(url);\n  }\n\n  getLastUsed(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastUsed() : null;\n  }\n\n  getLastLaunched(url: string) {\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastLaunched() : null;\n  }\n\n  getNext(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getNext() : null;\n  }\n\n  updateLastUsedIndex(url: string) {\n    if (this.isCached(url)) {\n      this.sortedCiphersByUrl.get(url).updateLastUsedIndex();\n    }\n  }\n\n  clear() {\n    this.sortedCiphersByUrl.clear();\n    this.timeouts.clear();\n  }\n\n  private resetTimer(url: string) {\n    clearTimeout(this.timeouts.get(url));\n    this.timeouts.set(\n      url,\n      setTimeout(() => {\n        this.sortedCiphersByUrl.delete(url);\n        this.timeouts.delete(url);\n      }, CacheTTL)\n    );\n  }\n}\n\nclass Ciphers {\n  lastUsedIndex = -1;\n\n  constructor(private readonly ciphers: CipherView[]) {}\n\n  getLastUsed() {\n    this.lastUsedIndex = Math.max(this.lastUsedIndex, 0);\n    return this.ciphers[this.lastUsedIndex];\n  }\n\n  getLastLaunched() {\n    const usedCiphers = this.ciphers.filter((cipher) => cipher.localData?.lastLaunched);\n    const sortedCiphers = usedCiphers.sort(\n      (x, y) => y.localData.lastLaunched.valueOf() - x.localData.lastLaunched.valueOf()\n    );\n    return sortedCiphers[0];\n  }\n\n  getNextIndex() {\n    return (this.lastUsedIndex + 1) % this.ciphers.length;\n  }\n\n  getNext() {\n    return this.ciphers[this.getNextIndex()];\n  }\n\n  updateLastUsedIndex() {\n    this.lastUsedIndex = this.getNextIndex();\n  }\n}\n","export class CipherBulkDeleteRequest {\n  ids: string[];\n  organizationId: string;\n\n  constructor(ids: string[], organizationId?: string) {\n    this.ids = ids == null ? [] : ids;\n    this.organizationId = organizationId;\n  }\n}\n","export class CipherBulkMoveRequest {\n  ids: string[];\n  folderId: string;\n\n  constructor(ids: string[], folderId: string) {\n    this.ids = ids == null ? [] : ids;\n    this.folderId = folderId;\n  }\n}\n","export class CipherBulkRestoreRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","export class AttachmentRequest {\n  fileName: string;\n  key: string;\n  fileSize: number;\n  adminRequest: boolean;\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CardApi } from \"../api/cardApi\";\nimport { FieldApi } from \"../api/fieldApi\";\nimport { IdentityApi } from \"../api/identityApi\";\nimport { LoginApi } from \"../api/loginApi\";\nimport { LoginUriApi } from \"../api/loginUriApi\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentRequest } from \"./attachmentRequest\";\nimport { PasswordHistoryRequest } from \"./passwordHistoryRequest\";\n\nexport class CipherRequest {\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  name: string;\n  notes: string;\n  favorite: boolean;\n  login: LoginApi;\n  secureNote: SecureNoteApi;\n  card: CardApi;\n  identity: IdentityApi;\n  fields: FieldApi[];\n  passwordHistory: PasswordHistoryRequest[];\n  // Deprecated, remove at some point and rename attachments2 to attachments\n  attachments: { [id: string]: string };\n  attachments2: { [id: string]: AttachmentRequest };\n  lastKnownRevisionDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(cipher: Cipher) {\n    this.type = cipher.type;\n    this.folderId = cipher.folderId;\n    this.organizationId = cipher.organizationId;\n    this.name = cipher.name ? cipher.name.encryptedString : null;\n    this.notes = cipher.notes ? cipher.notes.encryptedString : null;\n    this.favorite = cipher.favorite;\n    this.lastKnownRevisionDate = cipher.revisionDate;\n    this.reprompt = cipher.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginApi();\n        this.login.uris = null;\n        this.login.username = cipher.login.username ? cipher.login.username.encryptedString : null;\n        this.login.password = cipher.login.password ? cipher.login.password.encryptedString : null;\n        this.login.passwordRevisionDate =\n          cipher.login.passwordRevisionDate != null\n            ? cipher.login.passwordRevisionDate.toISOString()\n            : null;\n        this.login.totp = cipher.login.totp ? cipher.login.totp.encryptedString : null;\n        this.login.autofillOnPageLoad = cipher.login.autofillOnPageLoad;\n\n        if (cipher.login.uris != null) {\n          this.login.uris = cipher.login.uris.map((u) => {\n            const uri = new LoginUriApi();\n            uri.uri = u.uri != null ? u.uri.encryptedString : null;\n            uri.match = u.match != null ? u.match : null;\n            return uri;\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteApi();\n        this.secureNote.type = cipher.secureNote.type;\n        break;\n      case CipherType.Card:\n        this.card = new CardApi();\n        this.card.cardholderName =\n          cipher.card.cardholderName != null ? cipher.card.cardholderName.encryptedString : null;\n        this.card.brand = cipher.card.brand != null ? cipher.card.brand.encryptedString : null;\n        this.card.number = cipher.card.number != null ? cipher.card.number.encryptedString : null;\n        this.card.expMonth =\n          cipher.card.expMonth != null ? cipher.card.expMonth.encryptedString : null;\n        this.card.expYear =\n          cipher.card.expYear != null ? cipher.card.expYear.encryptedString : null;\n        this.card.code = cipher.card.code != null ? cipher.card.code.encryptedString : null;\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityApi();\n        this.identity.title =\n          cipher.identity.title != null ? cipher.identity.title.encryptedString : null;\n        this.identity.firstName =\n          cipher.identity.firstName != null ? cipher.identity.firstName.encryptedString : null;\n        this.identity.middleName =\n          cipher.identity.middleName != null ? cipher.identity.middleName.encryptedString : null;\n        this.identity.lastName =\n          cipher.identity.lastName != null ? cipher.identity.lastName.encryptedString : null;\n        this.identity.address1 =\n          cipher.identity.address1 != null ? cipher.identity.address1.encryptedString : null;\n        this.identity.address2 =\n          cipher.identity.address2 != null ? cipher.identity.address2.encryptedString : null;\n        this.identity.address3 =\n          cipher.identity.address3 != null ? cipher.identity.address3.encryptedString : null;\n        this.identity.city =\n          cipher.identity.city != null ? cipher.identity.city.encryptedString : null;\n        this.identity.state =\n          cipher.identity.state != null ? cipher.identity.state.encryptedString : null;\n        this.identity.postalCode =\n          cipher.identity.postalCode != null ? cipher.identity.postalCode.encryptedString : null;\n        this.identity.country =\n          cipher.identity.country != null ? cipher.identity.country.encryptedString : null;\n        this.identity.company =\n          cipher.identity.company != null ? cipher.identity.company.encryptedString : null;\n        this.identity.email =\n          cipher.identity.email != null ? cipher.identity.email.encryptedString : null;\n        this.identity.phone =\n          cipher.identity.phone != null ? cipher.identity.phone.encryptedString : null;\n        this.identity.ssn =\n          cipher.identity.ssn != null ? cipher.identity.ssn.encryptedString : null;\n        this.identity.username =\n          cipher.identity.username != null ? cipher.identity.username.encryptedString : null;\n        this.identity.passportNumber =\n          cipher.identity.passportNumber != null\n            ? cipher.identity.passportNumber.encryptedString\n            : null;\n        this.identity.licenseNumber =\n          cipher.identity.licenseNumber != null\n            ? cipher.identity.licenseNumber.encryptedString\n            : null;\n        break;\n      default:\n        break;\n    }\n\n    if (cipher.fields != null) {\n      this.fields = cipher.fields.map((f) => {\n        const field = new FieldApi();\n        field.type = f.type;\n        field.name = f.name ? f.name.encryptedString : null;\n        field.value = f.value ? f.value.encryptedString : null;\n        field.linkedId = f.linkedId;\n        return field;\n      });\n    }\n\n    if (cipher.passwordHistory != null) {\n      this.passwordHistory = [];\n      cipher.passwordHistory.forEach((ph) => {\n        this.passwordHistory.push({\n          lastUsedDate: ph.lastUsedDate,\n          password: ph.password ? ph.password.encryptedString : null,\n        });\n      });\n    }\n\n    if (cipher.attachments != null) {\n      this.attachments = {};\n      this.attachments2 = {};\n      cipher.attachments.forEach((attachment) => {\n        const fileName = attachment.fileName ? attachment.fileName.encryptedString : null;\n        this.attachments[attachment.id] = fileName;\n        const attachmentRequest = new AttachmentRequest();\n        attachmentRequest.fileName = fileName;\n        if (attachment.key != null) {\n          attachmentRequest.key = attachment.key.encryptedString;\n        }\n        this.attachments2[attachment.id] = attachmentRequest;\n      });\n    }\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherWithIdRequest extends CipherRequest {\n  id: string;\n\n  constructor(cipher: Cipher) {\n    super(cipher);\n    this.id = cipher.id;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherWithIdRequest } from \"./cipherWithIdRequest\";\n\nexport class CipherBulkShareRequest {\n  ciphers: CipherWithIdRequest[];\n  collectionIds: string[];\n\n  constructor(ciphers: Cipher[], collectionIds: string[]) {\n    if (ciphers != null) {\n      this.ciphers = [];\n      ciphers.forEach((c) => {\n        this.ciphers.push(new CipherWithIdRequest(c));\n      });\n    }\n    this.collectionIds = collectionIds;\n  }\n}\n","export class CipherCollectionsRequest {\n  collectionIds: string[];\n\n  constructor(collectionIds: string[]) {\n    this.collectionIds = collectionIds == null ? [] : collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherCreateRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherShareRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService as CipherServiceAbstraction } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService } from \"../abstractions/search.service\";\nimport { SettingsService } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { Attachment } from \"../models/domain/attachment\";\nimport { Card } from \"../models/domain/card\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport Domain from \"../models/domain/domainBase\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { Field } from \"../models/domain/field\";\nimport { Identity } from \"../models/domain/identity\";\nimport { Login } from \"../models/domain/login\";\nimport { LoginUri } from \"../models/domain/loginUri\";\nimport { Password } from \"../models/domain/password\";\nimport { SecureNote } from \"../models/domain/secureNote\";\nimport { SortedCiphersCache } from \"../models/domain/sortedCiphersCache\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipherBulkRestoreRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { AttachmentView } from \"../models/view/attachmentView\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { FieldView } from \"../models/view/fieldView\";\nimport { PasswordHistoryView } from \"../models/view/passwordHistoryView\";\nimport { View } from \"../models/view/view\";\n\nconst DomainMatchBlacklist = new Map<string, Set<string>>([\n  [\"google.com\", new Set([\"script.google.com\"])],\n]);\n\nexport class CipherService implements CipherServiceAbstraction {\n  private sortedCiphersCache: SortedCiphersCache = new SortedCiphersCache(\n    this.sortCiphersByLastUsed\n  );\n\n  constructor(\n    private cryptoService: CryptoService,\n    private settingsService: SettingsService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private searchService: () => SearchService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async getDecryptedCipherCache(): Promise<CipherView[]> {\n    const decryptedCiphers = await this.stateService.getDecryptedCiphers();\n    return decryptedCiphers;\n  }\n\n  async setDecryptedCipherCache(value: CipherView[]) {\n    await this.stateService.setDecryptedCiphers(value);\n    if (this.searchService != null) {\n      if (value == null) {\n        this.searchService().clearIndex();\n      } else {\n        this.searchService().indexCiphers();\n      }\n    }\n  }\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.clearDecryptedCiphersState(userId);\n  }\n\n  async encrypt(\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher: Cipher = null\n  ): Promise<Cipher> {\n    // Adjust password history\n    if (model.id != null) {\n      if (originalCipher == null) {\n        originalCipher = await this.get(model.id);\n      }\n      if (originalCipher != null) {\n        const existingCipher = await originalCipher.decrypt();\n        model.passwordHistory = existingCipher.passwordHistory || [];\n        if (model.type === CipherType.Login && existingCipher.type === CipherType.Login) {\n          if (\n            existingCipher.login.password != null &&\n            existingCipher.login.password !== \"\" &&\n            existingCipher.login.password !== model.login.password\n          ) {\n            const ph = new PasswordHistoryView();\n            ph.password = existingCipher.login.password;\n            ph.lastUsedDate = model.login.passwordRevisionDate = new Date();\n            model.passwordHistory.splice(0, 0, ph);\n          } else {\n            model.login.passwordRevisionDate = existingCipher.login.passwordRevisionDate;\n          }\n        }\n        if (existingCipher.hasFields) {\n          const existingHiddenFields = existingCipher.fields.filter(\n            (f) =>\n              f.type === FieldType.Hidden &&\n              f.name != null &&\n              f.name !== \"\" &&\n              f.value != null &&\n              f.value !== \"\"\n          );\n          const hiddenFields =\n            model.fields == null\n              ? []\n              : model.fields.filter(\n                  (f) => f.type === FieldType.Hidden && f.name != null && f.name !== \"\"\n                );\n          existingHiddenFields.forEach((ef) => {\n            const matchedField = hiddenFields.find((f) => f.name === ef.name);\n            if (matchedField == null || matchedField.value !== ef.value) {\n              const ph = new PasswordHistoryView();\n              ph.password = ef.name + \": \" + ef.value;\n              ph.lastUsedDate = new Date();\n              model.passwordHistory.splice(0, 0, ph);\n            }\n          });\n        }\n      }\n      if (model.passwordHistory != null && model.passwordHistory.length === 0) {\n        model.passwordHistory = null;\n      } else if (model.passwordHistory != null && model.passwordHistory.length > 5) {\n        // only save last 5 history\n        model.passwordHistory = model.passwordHistory.slice(0, 5);\n      }\n    }\n\n    const cipher = new Cipher();\n    cipher.id = model.id;\n    cipher.folderId = model.folderId;\n    cipher.favorite = model.favorite;\n    cipher.organizationId = model.organizationId;\n    cipher.type = model.type;\n    cipher.collectionIds = model.collectionIds;\n    cipher.revisionDate = model.revisionDate;\n    cipher.reprompt = model.reprompt;\n\n    if (key == null && cipher.organizationId != null) {\n      key = await this.cryptoService.getOrgKey(cipher.organizationId);\n      if (key == null) {\n        throw new Error(\"Cannot encrypt cipher for organization. No key.\");\n      }\n    }\n    await Promise.all([\n      this.encryptObjProperty(\n        model,\n        cipher,\n        {\n          name: null,\n          notes: null,\n        },\n        key\n      ),\n      this.encryptCipherData(cipher, model, key),\n      this.encryptFields(model.fields, key).then((fields) => {\n        cipher.fields = fields;\n      }),\n      this.encryptPasswordHistories(model.passwordHistory, key).then((ph) => {\n        cipher.passwordHistory = ph;\n      }),\n      this.encryptAttachments(model.attachments, key).then((attachments) => {\n        cipher.attachments = attachments;\n      }),\n    ]);\n\n    return cipher;\n  }\n\n  async encryptAttachments(\n    attachmentsModel: AttachmentView[],\n    key: SymmetricCryptoKey\n  ): Promise<Attachment[]> {\n    if (attachmentsModel == null || attachmentsModel.length === 0) {\n      return null;\n    }\n\n    const promises: Promise<any>[] = [];\n    const encAttachments: Attachment[] = [];\n    attachmentsModel.forEach(async (model) => {\n      const attachment = new Attachment();\n      attachment.id = model.id;\n      attachment.size = model.size;\n      attachment.sizeName = model.sizeName;\n      attachment.url = model.url;\n      const promise = this.encryptObjProperty(\n        model,\n        attachment,\n        {\n          fileName: null,\n        },\n        key\n      ).then(async () => {\n        if (model.key != null) {\n          attachment.key = await this.cryptoService.encrypt(model.key.key, key);\n        }\n        encAttachments.push(attachment);\n      });\n      promises.push(promise);\n    });\n\n    await Promise.all(promises);\n    return encAttachments;\n  }\n\n  async encryptFields(fieldsModel: FieldView[], key: SymmetricCryptoKey): Promise<Field[]> {\n    if (!fieldsModel || !fieldsModel.length) {\n      return null;\n    }\n\n    const self = this;\n    const encFields: Field[] = [];\n    await fieldsModel.reduce(async (promise, field) => {\n      await promise;\n      const encField = await self.encryptField(field, key);\n      encFields.push(encField);\n    }, Promise.resolve());\n\n    return encFields;\n  }\n\n  async encryptField(fieldModel: FieldView, key: SymmetricCryptoKey): Promise<Field> {\n    const field = new Field();\n    field.type = fieldModel.type;\n    field.linkedId = fieldModel.linkedId;\n    // normalize boolean type field values\n    if (fieldModel.type === FieldType.Boolean && fieldModel.value !== \"true\") {\n      fieldModel.value = \"false\";\n    }\n\n    await this.encryptObjProperty(\n      fieldModel,\n      field,\n      {\n        name: null,\n        value: null,\n      },\n      key\n    );\n\n    return field;\n  }\n\n  async encryptPasswordHistories(\n    phModels: PasswordHistoryView[],\n    key: SymmetricCryptoKey\n  ): Promise<Password[]> {\n    if (!phModels || !phModels.length) {\n      return null;\n    }\n\n    const self = this;\n    const encPhs: Password[] = [];\n    await phModels.reduce(async (promise, ph) => {\n      await promise;\n      const encPh = await self.encryptPasswordHistory(ph, key);\n      encPhs.push(encPh);\n    }, Promise.resolve());\n\n    return encPhs;\n  }\n\n  async encryptPasswordHistory(\n    phModel: PasswordHistoryView,\n    key: SymmetricCryptoKey\n  ): Promise<Password> {\n    const ph = new Password();\n    ph.lastUsedDate = phModel.lastUsedDate;\n\n    await this.encryptObjProperty(\n      phModel,\n      ph,\n      {\n        password: null,\n      },\n      key\n    );\n\n    return ph;\n  }\n\n  async get(id: string): Promise<Cipher> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    const localData = await this.stateService.getLocalData();\n    return new Cipher(ciphers[id], localData ? localData[id] : null);\n  }\n\n  async getAll(): Promise<Cipher[]> {\n    const localData = await this.stateService.getLocalData();\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    const response: Cipher[] = [];\n    for (const id in ciphers) {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        response.push(new Cipher(ciphers[id], localData ? localData[id] : null));\n      }\n    }\n    return response;\n  }\n\n  @sequentialize(() => \"getAllDecrypted\")\n  async getAllDecrypted(): Promise<CipherView[]> {\n    const userId = await this.stateService.getUserId();\n    if ((await this.getDecryptedCipherCache()) != null) {\n      if (\n        this.searchService != null &&\n        (this.searchService().indexedEntityId ?? userId) !== userId\n      ) {\n        await this.searchService().indexCiphers(userId, await this.getDecryptedCipherCache());\n      }\n      return await this.getDecryptedCipherCache();\n    }\n\n    const decCiphers: CipherView[] = [];\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const promises: Promise<number>[] = [];\n    const ciphers = await this.getAll();\n    ciphers.forEach(async (cipher) => {\n      promises.push(cipher.decrypt().then((c) => decCiphers.push(c)));\n    });\n\n    await Promise.all(promises);\n    decCiphers.sort(this.getLocaleSortingFunction());\n    await this.setDecryptedCipherCache(decCiphers);\n    return decCiphers;\n  }\n\n  async getAllDecryptedForGrouping(groupingId: string, folder = true): Promise<CipherView[]> {\n    const ciphers = await this.getAllDecrypted();\n\n    return ciphers.filter((cipher) => {\n      if (cipher.isDeleted) {\n        return false;\n      }\n      if (folder && cipher.folderId === groupingId) {\n        return true;\n      } else if (\n        !folder &&\n        cipher.collectionIds != null &&\n        cipher.collectionIds.indexOf(groupingId) > -1\n      ) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  async getAllDecryptedForUrl(\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch: UriMatchType = null\n  ): Promise<CipherView[]> {\n    if (url == null && includeOtherTypes == null) {\n      return Promise.resolve([]);\n    }\n\n    const domain = Utils.getDomain(url);\n    const eqDomainsPromise =\n      domain == null\n        ? Promise.resolve([])\n        : this.settingsService.getEquivalentDomains().then((eqDomains: any[][]) => {\n            let matches: any[] = [];\n            eqDomains.forEach((eqDomain) => {\n              if (eqDomain.length && eqDomain.indexOf(domain) >= 0) {\n                matches = matches.concat(eqDomain);\n              }\n            });\n\n            if (!matches.length) {\n              matches.push(domain);\n            }\n\n            return matches;\n          });\n\n    const result = await Promise.all([eqDomainsPromise, this.getAllDecrypted()]);\n    const matchingDomains = result[0];\n    const ciphers = result[1];\n\n    if (defaultMatch == null) {\n      defaultMatch = await this.stateService.getDefaultUriMatch();\n      if (defaultMatch == null) {\n        defaultMatch = UriMatchType.Domain;\n      }\n    }\n\n    return ciphers.filter((cipher) => {\n      if (cipher.deletedDate != null) {\n        return false;\n      }\n      if (includeOtherTypes != null && includeOtherTypes.indexOf(cipher.type) > -1) {\n        return true;\n      }\n\n      if (url != null && cipher.type === CipherType.Login && cipher.login.uris != null) {\n        for (let i = 0; i < cipher.login.uris.length; i++) {\n          const u = cipher.login.uris[i];\n          if (u.uri == null) {\n            continue;\n          }\n\n          const match = u.match == null ? defaultMatch : u.match;\n          switch (match) {\n            case UriMatchType.Domain:\n              if (domain != null && u.domain != null && matchingDomains.indexOf(u.domain) > -1) {\n                if (DomainMatchBlacklist.has(u.domain)) {\n                  const domainUrlHost = Utils.getHost(url);\n                  if (!DomainMatchBlacklist.get(u.domain).has(domainUrlHost)) {\n                    return true;\n                  }\n                } else {\n                  return true;\n                }\n              }\n              break;\n            case UriMatchType.Host: {\n              const urlHost = Utils.getHost(url);\n              if (urlHost != null && urlHost === Utils.getHost(u.uri)) {\n                return true;\n              }\n              break;\n            }\n            case UriMatchType.Exact:\n              if (url === u.uri) {\n                return true;\n              }\n              break;\n            case UriMatchType.StartsWith:\n              if (url.startsWith(u.uri)) {\n                return true;\n              }\n              break;\n            case UriMatchType.RegularExpression:\n              try {\n                const regex = new RegExp(u.uri, \"i\");\n                if (regex.test(url)) {\n                  return true;\n                }\n              } catch (e) {\n                this.logService.error(e);\n              }\n              break;\n            case UriMatchType.Never:\n            default:\n              break;\n          }\n        }\n      }\n\n      return false;\n    });\n  }\n\n  async getAllFromApiForOrganization(organizationId: string): Promise<CipherView[]> {\n    const ciphers = await this.apiService.getCiphersOrganization(organizationId);\n    if (ciphers != null && ciphers.data != null && ciphers.data.length) {\n      const decCiphers: CipherView[] = [];\n      const promises: any[] = [];\n      ciphers.data.forEach((r) => {\n        const data = new CipherData(r);\n        const cipher = new Cipher(data);\n        promises.push(cipher.decrypt().then((c) => decCiphers.push(c)));\n      });\n      await Promise.all(promises);\n      decCiphers.sort(this.getLocaleSortingFunction());\n      return decCiphers;\n    } else {\n      return [];\n    }\n  }\n\n  async getLastUsedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, true, false, autofillOnPageLoad);\n  }\n\n  async getLastLaunchedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, true, autofillOnPageLoad);\n  }\n\n  async getNextCipherForUrl(url: string): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, false, false);\n  }\n\n  updateLastUsedIndexForUrl(url: string) {\n    this.sortedCiphersCache.updateLastUsedIndex(url);\n  }\n\n  async updateLastUsedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastUsedDate = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async updateLastLaunchedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastLaunched = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async saveNeverDomain(domain: string): Promise<void> {\n    if (domain == null) {\n      return;\n    }\n\n    let domains = await this.stateService.getNeverDomains();\n    if (!domains) {\n      domains = {};\n    }\n    domains[domain] = null;\n    await this.stateService.setNeverDomains(domains);\n  }\n\n  async saveWithServer(cipher: Cipher): Promise<any> {\n    let response: CipherResponse;\n    if (cipher.id == null) {\n      if (cipher.collectionIds != null) {\n        const request = new CipherCreateRequest(cipher);\n        response = await this.apiService.postCipherCreate(request);\n      } else {\n        const request = new CipherRequest(cipher);\n        response = await this.apiService.postCipher(request);\n      }\n      cipher.id = response.id;\n    } else {\n      const request = new CipherRequest(cipher);\n      response = await this.apiService.putCipher(cipher.id, request);\n    }\n\n    const data = new CipherData(response, cipher.collectionIds);\n    await this.upsert(data);\n  }\n\n  async shareWithServer(\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const attachmentPromises: Promise<any>[] = [];\n    if (cipher.attachments != null) {\n      cipher.attachments.forEach((attachment) => {\n        if (attachment.key == null) {\n          attachmentPromises.push(\n            this.shareAttachmentWithServer(attachment, cipher.id, organizationId)\n          );\n        }\n      });\n    }\n    await Promise.all(attachmentPromises);\n\n    cipher.organizationId = organizationId;\n    cipher.collectionIds = collectionIds;\n    const encCipher = await this.encrypt(cipher);\n    const request = new CipherShareRequest(encCipher);\n    const response = await this.apiService.putShareCipher(cipher.id, request);\n    const data = new CipherData(response, collectionIds);\n    await this.upsert(data);\n  }\n\n  async shareManyWithServer(\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const promises: Promise<any>[] = [];\n    const encCiphers: Cipher[] = [];\n    for (const cipher of ciphers) {\n      cipher.organizationId = organizationId;\n      cipher.collectionIds = collectionIds;\n      promises.push(\n        this.encrypt(cipher).then((c) => {\n          encCiphers.push(c);\n        })\n      );\n    }\n    await Promise.all(promises);\n    const request = new CipherBulkShareRequest(encCiphers, collectionIds);\n    try {\n      await this.apiService.putShareCiphers(request);\n    } catch (e) {\n      for (const cipher of ciphers) {\n        cipher.organizationId = null;\n        cipher.collectionIds = null;\n      }\n      throw e;\n    }\n    await this.upsert(encCiphers.map((c) => c.toCipherData()));\n  }\n\n  saveAttachmentWithServer(cipher: Cipher, unencryptedFile: any, admin = false): Promise<Cipher> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(unencryptedFile);\n      reader.onload = async (evt: any) => {\n        try {\n          const cData = await this.saveAttachmentRawWithServer(\n            cipher,\n            unencryptedFile.name,\n            evt.target.result,\n            admin\n          );\n          resolve(cData);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  async saveAttachmentRawWithServer(\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin = false\n  ): Promise<Cipher> {\n    const key = await this.cryptoService.getOrgKey(cipher.organizationId);\n    const encFileName = await this.cryptoService.encrypt(filename, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(data, dataEncKey[0]);\n\n    const request: AttachmentRequest = {\n      key: dataEncKey[1].encryptedString,\n      fileName: encFileName.encryptedString,\n      fileSize: encData.buffer.byteLength,\n      adminRequest: admin,\n    };\n\n    let response: CipherResponse;\n    try {\n      const uploadDataResponse = await this.apiService.postCipherAttachment(cipher.id, request);\n      response = admin ? uploadDataResponse.cipherMiniResponse : uploadDataResponse.cipherResponse;\n      await this.fileUploadService.uploadCipherAttachment(\n        admin,\n        uploadDataResponse,\n        encFileName,\n        encData\n      );\n    } catch (e) {\n      if (\n        (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) ||\n        (e as ErrorResponse).statusCode === 405\n      ) {\n        response = await this.legacyServerAttachmentFileUpload(\n          admin,\n          cipher.id,\n          encFileName,\n          encData,\n          dataEncKey[1]\n        );\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    const cData = new CipherData(response, cipher.collectionIds);\n    if (!admin) {\n      await this.upsert(cData);\n    }\n    return new Cipher(cData);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerAttachmentFileUpload(\n    admin: boolean,\n    cipherId: string,\n    encFileName: EncString,\n    encData: EncArrayBuffer,\n    key: EncString\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", key.encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", key.encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    let response: CipherResponse;\n    try {\n      if (admin) {\n        response = await this.apiService.postCipherAttachmentAdminLegacy(cipherId, fd);\n      } else {\n        response = await this.apiService.postCipherAttachmentLegacy(cipherId, fd);\n      }\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n\n    return response;\n  }\n\n  async saveCollectionsWithServer(cipher: Cipher): Promise<any> {\n    const request = new CipherCollectionsRequest(cipher.collectionIds);\n    await this.apiService.putCipherCollections(cipher.id, request);\n    const data = cipher.toCipherData();\n    await this.upsert(data);\n  }\n\n  async upsert(cipher: CipherData | CipherData[]): Promise<any> {\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    if (cipher instanceof CipherData) {\n      const c = cipher as CipherData;\n      ciphers[c.id] = c;\n    } else {\n      (cipher as CipherData[]).forEach((c) => {\n        ciphers[c.id] = c;\n      });\n    }\n\n    await this.replace(ciphers);\n  }\n\n  async replace(ciphers: { [id: string]: CipherData }): Promise<any> {\n    await this.clearDecryptedCiphersState();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearEncryptedCiphersState(userId);\n    await this.clearCache(userId);\n  }\n\n  async moveManyWithServer(ids: string[], folderId: string): Promise<any> {\n    await this.apiService.putMoveCiphers(new CipherBulkMoveRequest(ids, folderId));\n\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    ids.forEach((id) => {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        ciphers[id].folderId = folderId;\n      }\n    });\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (ciphers[id] == null) {\n        return;\n      }\n      delete ciphers[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete ciphers[i];\n      });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteCipher(id);\n    await this.delete(id);\n  }\n\n  async deleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.deleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.delete(ids);\n  }\n\n  async deleteAttachment(id: string, attachmentId: string): Promise<void> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id) || ciphers[id].attachments == null) {\n      return;\n    }\n\n    for (let i = 0; i < ciphers[id].attachments.length; i++) {\n      if (ciphers[id].attachments[i].id === attachmentId) {\n        ciphers[id].attachments.splice(i, 1);\n      }\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteAttachmentWithServer(id: string, attachmentId: string): Promise<void> {\n    try {\n      await this.apiService.deleteCipherAttachment(id, attachmentId);\n    } catch (e) {\n      return Promise.reject((e as ErrorResponse).getSingleMessage());\n    }\n    await this.deleteAttachment(id, attachmentId);\n  }\n\n  sortCiphersByLastUsed(a: CipherView, b: CipherView): number {\n    const aLastUsed =\n      a.localData && a.localData.lastUsedDate ? (a.localData.lastUsedDate as number) : null;\n    const bLastUsed =\n      b.localData && b.localData.lastUsedDate ? (b.localData.lastUsedDate as number) : null;\n\n    const bothNotNull = aLastUsed != null && bLastUsed != null;\n    if (bothNotNull && aLastUsed < bLastUsed) {\n      return 1;\n    }\n    if (aLastUsed != null && bLastUsed == null) {\n      return -1;\n    }\n\n    if (bothNotNull && aLastUsed > bLastUsed) {\n      return -1;\n    }\n    if (bLastUsed != null && aLastUsed == null) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  sortCiphersByLastUsedThenName(a: CipherView, b: CipherView): number {\n    const result = this.sortCiphersByLastUsed(a, b);\n    if (result !== 0) {\n      return result;\n    }\n\n    return this.getLocaleSortingFunction()(a, b);\n  }\n\n  getLocaleSortingFunction(): (a: CipherView, b: CipherView) => number {\n    return (a, b) => {\n      let aName = a.name;\n      let bName = b.name;\n\n      if (aName == null && bName != null) {\n        return -1;\n      }\n      if (aName != null && bName == null) {\n        return 1;\n      }\n      if (aName == null && bName == null) {\n        return 0;\n      }\n\n      const result = this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n\n      if (result !== 0 || a.type !== CipherType.Login || b.type !== CipherType.Login) {\n        return result;\n      }\n\n      if (a.login.username != null) {\n        aName += a.login.username;\n      }\n\n      if (b.login.username != null) {\n        bName += b.login.username;\n      }\n\n      return this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n    };\n  }\n\n  async softDelete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const setDeletedDate = (cipherId: string) => {\n      if (ciphers[cipherId] == null) {\n        return;\n      }\n      ciphers[cipherId].deletedDate = new Date().toISOString();\n    };\n\n    if (typeof id === \"string\") {\n      setDeletedDate(id);\n    } else {\n      (id as string[]).forEach(setDeletedDate);\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async softDeleteWithServer(id: string): Promise<any> {\n    await this.apiService.putDeleteCipher(id);\n    await this.softDelete(id);\n  }\n\n  async softDeleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.putDeleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.softDelete(ids);\n  }\n\n  async restore(\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const clearDeletedDate = (c: { id: string; revisionDate: string }) => {\n      if (ciphers[c.id] == null) {\n        return;\n      }\n      ciphers[c.id].deletedDate = null;\n      ciphers[c.id].revisionDate = c.revisionDate;\n    };\n\n    if (cipher.constructor.name === Array.name) {\n      (cipher as { id: string; revisionDate: string }[]).forEach(clearDeletedDate);\n    } else {\n      clearDeletedDate(cipher as { id: string; revisionDate: string });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async restoreWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putRestoreCipher(id);\n    await this.restore({ id: id, revisionDate: response.revisionDate });\n  }\n\n  async restoreManyWithServer(ids: string[]): Promise<any> {\n    const response = await this.apiService.putRestoreManyCiphers(new CipherBulkRestoreRequest(ids));\n    const restores: { id: string; revisionDate: string }[] = [];\n    for (const cipher of response.data) {\n      restores.push({ id: cipher.id, revisionDate: cipher.revisionDate });\n    }\n    await this.restore(restores);\n  }\n\n  // Helpers\n\n  private async shareAttachmentWithServer(\n    attachmentView: AttachmentView,\n    cipherId: string,\n    organizationId: string\n  ): Promise<any> {\n    const attachmentResponse = await this.apiService.nativeFetch(\n      new Request(attachmentView.url, { cache: \"no-store\" })\n    );\n    if (attachmentResponse.status !== 200) {\n      throw Error(\"Failed to download attachment: \" + attachmentResponse.status.toString());\n    }\n\n    const encBuf = await EncArrayBuffer.fromResponse(attachmentResponse);\n    const decBuf = await this.cryptoService.decryptFromBytes(encBuf, null);\n    const key = await this.cryptoService.getOrgKey(organizationId);\n    const encFileName = await this.cryptoService.encrypt(attachmentView.fileName, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(decBuf, dataEncKey[0]);\n\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", dataEncKey[1].encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", dataEncKey[1].encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    try {\n      await this.apiService.postShareCipherAttachment(\n        cipherId,\n        attachmentView.id,\n        fd,\n        organizationId\n      );\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n  }\n\n  private async encryptObjProperty<V extends View, D extends Domain>(\n    model: V,\n    obj: D,\n    map: any,\n    key: SymmetricCryptoKey\n  ): Promise<void> {\n    const promises = [];\n    const self = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp, theObj) {\n        const p = Promise.resolve()\n          .then(() => {\n            const modelProp = (model as any)[map[theProp] || theProp];\n            if (modelProp && modelProp !== \"\") {\n              return self.cryptoService.encrypt(modelProp, key);\n            }\n            return null;\n          })\n          .then((val: EncString) => {\n            (theObj as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop, obj);\n    }\n\n    await Promise.all(promises);\n  }\n\n  private async encryptCipherData(cipher: Cipher, model: CipherView, key: SymmetricCryptoKey) {\n    switch (cipher.type) {\n      case CipherType.Login:\n        cipher.login = new Login();\n        cipher.login.passwordRevisionDate = model.login.passwordRevisionDate;\n        cipher.login.autofillOnPageLoad = model.login.autofillOnPageLoad;\n        await this.encryptObjProperty(\n          model.login,\n          cipher.login,\n          {\n            username: null,\n            password: null,\n            totp: null,\n          },\n          key\n        );\n\n        if (model.login.uris != null) {\n          cipher.login.uris = [];\n          for (let i = 0; i < model.login.uris.length; i++) {\n            const loginUri = new LoginUri();\n            loginUri.match = model.login.uris[i].match;\n            await this.encryptObjProperty(\n              model.login.uris[i],\n              loginUri,\n              {\n                uri: null,\n              },\n              key\n            );\n            cipher.login.uris.push(loginUri);\n          }\n        }\n        return;\n      case CipherType.SecureNote:\n        cipher.secureNote = new SecureNote();\n        cipher.secureNote.type = model.secureNote.type;\n        return;\n      case CipherType.Card:\n        cipher.card = new Card();\n        await this.encryptObjProperty(\n          model.card,\n          cipher.card,\n          {\n            cardholderName: null,\n            brand: null,\n            number: null,\n            expMonth: null,\n            expYear: null,\n            code: null,\n          },\n          key\n        );\n        return;\n      case CipherType.Identity:\n        cipher.identity = new Identity();\n        await this.encryptObjProperty(\n          model.identity,\n          cipher.identity,\n          {\n            title: null,\n            firstName: null,\n            middleName: null,\n            lastName: null,\n            address1: null,\n            address2: null,\n            address3: null,\n            city: null,\n            state: null,\n            postalCode: null,\n            country: null,\n            company: null,\n            email: null,\n            phone: null,\n            ssn: null,\n            username: null,\n            passportNumber: null,\n            licenseNumber: null,\n          },\n          key\n        );\n        return;\n      default:\n        throw new Error(\"Unknown cipher type.\");\n    }\n  }\n\n  private async getCipherForUrl(\n    url: string,\n    lastUsed: boolean,\n    lastLaunched: boolean,\n    autofillOnPageLoad: boolean\n  ): Promise<CipherView> {\n    const cacheKey = autofillOnPageLoad ? \"autofillOnPageLoad-\" + url : url;\n\n    if (!this.sortedCiphersCache.isCached(cacheKey)) {\n      let ciphers = await this.getAllDecryptedForUrl(url);\n      if (!ciphers) {\n        return null;\n      }\n\n      if (autofillOnPageLoad) {\n        const autofillOnPageLoadDefault = await this.stateService.getAutoFillOnPageLoadDefault();\n        ciphers = ciphers.filter(\n          (cipher) =>\n            cipher.login.autofillOnPageLoad ||\n            (cipher.login.autofillOnPageLoad == null && autofillOnPageLoadDefault !== false)\n        );\n        if (ciphers.length === 0) {\n          return null;\n        }\n      }\n\n      this.sortedCiphersCache.addCiphers(cacheKey, ciphers);\n    }\n\n    if (lastLaunched) {\n      return this.sortedCiphersCache.getLastLaunched(cacheKey);\n    } else if (lastUsed) {\n      return this.sortedCiphersCache.getLastUsed(cacheKey);\n    } else {\n      return this.sortedCiphersCache.getNext(cacheKey);\n    }\n  }\n\n  private async clearEncryptedCiphersState(userId?: string) {\n    await this.stateService.setEncryptedCiphers(null, { userId: userId });\n  }\n\n  private async clearDecryptedCiphersState(userId?: string) {\n    await this.stateService.setDecryptedCiphers(null, { userId: userId });\n    this.clearSortedCiphers();\n  }\n\n  private clearSortedCiphers() {\n    this.sortedCiphersCache.clear();\n  }\n}\n","import { CollectionDetailsResponse } from \"../response/collectionResponse\";\n\nexport class CollectionData {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n  readOnly: boolean;\n\n  constructor(response: CollectionDetailsResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.name = response.name;\n    this.externalId = response.externalId;\n    this.readOnly = response.readOnly;\n  }\n}\n","import { Collection } from \"../domain/collection\";\nimport { ITreeNodeObject } from \"../domain/treeNode\";\nimport { CollectionGroupDetailsResponse } from \"../response/collectionResponse\";\n\nimport { View } from \"./view\";\n\nexport class CollectionView implements View, ITreeNodeObject {\n  id: string = null;\n  organizationId: string = null;\n  name: string = null;\n  externalId: string = null;\n  readOnly: boolean = null;\n  hidePasswords: boolean = null;\n\n  constructor(c?: Collection | CollectionGroupDetailsResponse) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.externalId = c.externalId;\n    if (c instanceof Collection) {\n      this.readOnly = c.readOnly;\n      this.hidePasswords = c.hidePasswords;\n    }\n  }\n}\n","import { CollectionData } from \"../data/collectionData\";\nimport { CollectionView } from \"../view/collectionView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\n\nexport class Collection extends Domain {\n  id: string;\n  organizationId: string;\n  name: EncString;\n  externalId: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(obj?: CollectionData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        name: null,\n        externalId: null,\n        readOnly: null,\n        hidePasswords: null,\n      },\n      [\"id\", \"organizationId\", \"externalId\", \"readOnly\", \"hidePasswords\"]\n    );\n  }\n\n  decrypt(): Promise<CollectionView> {\n    return this.decryptObj(\n      new CollectionView(this),\n      {\n        name: null,\n      },\n      this.organizationId\n    );\n  }\n}\n","import { CollectionService as CollectionServiceAbstraction } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ServiceUtils } from \"../misc/serviceUtils\";\nimport { Utils } from \"../misc/utils\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/treeNode\";\nimport { CollectionView } from \"../models/view/collectionView\";\n\nconst NestingDelimiter = \"/\";\n\nexport class CollectionService implements CollectionServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCollections(null, { userId: userId });\n  }\n\n  async encrypt(model: CollectionView): Promise<Collection> {\n    if (model.organizationId == null) {\n      throw new Error(\"Collection has no organization id.\");\n    }\n    const key = await this.cryptoService.getOrgKey(model.organizationId);\n    if (key == null) {\n      throw new Error(\"No key for this collection's organization.\");\n    }\n    const collection = new Collection();\n    collection.id = model.id;\n    collection.organizationId = model.organizationId;\n    collection.readOnly = model.readOnly;\n    collection.name = await this.cryptoService.encrypt(model.name, key);\n    return collection;\n  }\n\n  async decryptMany(collections: Collection[]): Promise<CollectionView[]> {\n    if (collections == null) {\n      return [];\n    }\n    const decCollections: CollectionView[] = [];\n    const promises: Promise<any>[] = [];\n    collections.forEach((collection) => {\n      promises.push(collection.decrypt().then((c) => decCollections.push(c)));\n    });\n    await Promise.all(promises);\n    return decCollections.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  async get(id: string): Promise<Collection> {\n    const collections = await this.stateService.getEncryptedCollections();\n    // eslint-disable-next-line\n    if (collections == null || !collections.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Collection(collections[id]);\n  }\n\n  async getAll(): Promise<Collection[]> {\n    const collections = await this.stateService.getEncryptedCollections();\n    const response: Collection[] = [];\n    for (const id in collections) {\n      // eslint-disable-next-line\n      if (collections.hasOwnProperty(id)) {\n        response.push(new Collection(collections[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<CollectionView[]> {\n    let decryptedCollections = await this.stateService.getDecryptedCollections();\n    if (decryptedCollections != null) {\n      return decryptedCollections;\n    }\n\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const collections = await this.getAll();\n    decryptedCollections = await this.decryptMany(collections);\n\n    await this.stateService.setDecryptedCollections(decryptedCollections);\n    return decryptedCollections;\n  }\n\n  async getAllNested(collections: CollectionView[] = null): Promise<TreeNode<CollectionView>[]> {\n    if (collections == null) {\n      collections = await this.getAllDecrypted();\n    }\n    const nodes: TreeNode<CollectionView>[] = [];\n    collections.forEach((c) => {\n      const collectionCopy = new CollectionView();\n      collectionCopy.id = c.id;\n      collectionCopy.organizationId = c.organizationId;\n      const parts = c.name != null ? c.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, collectionCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getNested(id: string): Promise<TreeNode<CollectionView>> {\n    const collections = await this.getAllNested();\n    return ServiceUtils.getTreeNodeObject(collections, id) as TreeNode<CollectionView>;\n  }\n\n  async upsert(collection: CollectionData | CollectionData[]): Promise<any> {\n    let collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      collections = {};\n    }\n\n    if (collection instanceof CollectionData) {\n      const c = collection as CollectionData;\n      collections[c.id] = c;\n    } else {\n      (collection as CollectionData[]).forEach((c) => {\n        collections[c.id] = c;\n      });\n    }\n\n    await this.replace(collections);\n  }\n\n  async replace(collections: { [id: string]: CollectionData }): Promise<any> {\n    await this.clearCache();\n    await this.stateService.setEncryptedCollections(collections);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearCache(userId);\n    await this.stateService.setEncryptedCollections(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      delete collections[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete collections[i];\n      });\n    }\n\n    await this.replace(collections);\n  }\n}\n","export enum LogLevelType {\n  Debug,\n  Info,\n  Warning,\n  Error,\n}\n","import { LogService as LogServiceAbstraction } from \"../abstractions/log.service\";\nimport { LogLevelType } from \"../enums/logLevelType\";\n\nexport class ConsoleLogService implements LogServiceAbstraction {\n  protected timersMap: Map<string, [number, number]> = new Map();\n\n  constructor(\n    protected isDev: boolean,\n    protected filter: (level: LogLevelType) => boolean = null\n  ) {}\n\n  debug(message: string) {\n    if (!this.isDev) {\n      return;\n    }\n    this.write(LogLevelType.Debug, message);\n  }\n\n  info(message: string) {\n    this.write(LogLevelType.Info, message);\n  }\n\n  warning(message: string) {\n    this.write(LogLevelType.Warning, message);\n  }\n\n  error(message: string) {\n    this.write(LogLevelType.Error, message);\n  }\n\n  write(level: LogLevelType, message: string) {\n    if (this.filter != null && this.filter(level)) {\n      return;\n    }\n\n    switch (level) {\n      case LogLevelType.Debug:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Info:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Warning:\n        // eslint-disable-next-line\n        console.warn(message);\n        break;\n      case LogLevelType.Error:\n        // eslint-disable-next-line\n        console.error(message);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","// EFF's Long Wordlist from https://www.eff.org/dice\nexport const EEFLongWordList = [\n  \"abacus\",\n  \"abdomen\",\n  \"abdominal\",\n  \"abide\",\n  \"abiding\",\n  \"ability\",\n  \"ablaze\",\n  \"able\",\n  \"abnormal\",\n  \"abrasion\",\n  \"abrasive\",\n  \"abreast\",\n  \"abridge\",\n  \"abroad\",\n  \"abruptly\",\n  \"absence\",\n  \"absentee\",\n  \"absently\",\n  \"absinthe\",\n  \"absolute\",\n  \"absolve\",\n  \"abstain\",\n  \"abstract\",\n  \"absurd\",\n  \"accent\",\n  \"acclaim\",\n  \"acclimate\",\n  \"accompany\",\n  \"account\",\n  \"accuracy\",\n  \"accurate\",\n  \"accustom\",\n  \"acetone\",\n  \"achiness\",\n  \"aching\",\n  \"acid\",\n  \"acorn\",\n  \"acquaint\",\n  \"acquire\",\n  \"acre\",\n  \"acrobat\",\n  \"acronym\",\n  \"acting\",\n  \"action\",\n  \"activate\",\n  \"activator\",\n  \"active\",\n  \"activism\",\n  \"activist\",\n  \"activity\",\n  \"actress\",\n  \"acts\",\n  \"acutely\",\n  \"acuteness\",\n  \"aeration\",\n  \"aerobics\",\n  \"aerosol\",\n  \"aerospace\",\n  \"afar\",\n  \"affair\",\n  \"affected\",\n  \"affecting\",\n  \"affection\",\n  \"affidavit\",\n  \"affiliate\",\n  \"affirm\",\n  \"affix\",\n  \"afflicted\",\n  \"affluent\",\n  \"afford\",\n  \"affront\",\n  \"aflame\",\n  \"afloat\",\n  \"aflutter\",\n  \"afoot\",\n  \"afraid\",\n  \"afterglow\",\n  \"afterlife\",\n  \"aftermath\",\n  \"aftermost\",\n  \"afternoon\",\n  \"aged\",\n  \"ageless\",\n  \"agency\",\n  \"agenda\",\n  \"agent\",\n  \"aggregate\",\n  \"aghast\",\n  \"agile\",\n  \"agility\",\n  \"aging\",\n  \"agnostic\",\n  \"agonize\",\n  \"agonizing\",\n  \"agony\",\n  \"agreeable\",\n  \"agreeably\",\n  \"agreed\",\n  \"agreeing\",\n  \"agreement\",\n  \"aground\",\n  \"ahead\",\n  \"ahoy\",\n  \"aide\",\n  \"aids\",\n  \"aim\",\n  \"ajar\",\n  \"alabaster\",\n  \"alarm\",\n  \"albatross\",\n  \"album\",\n  \"alfalfa\",\n  \"algebra\",\n  \"algorithm\",\n  \"alias\",\n  \"alibi\",\n  \"alienable\",\n  \"alienate\",\n  \"aliens\",\n  \"alike\",\n  \"alive\",\n  \"alkaline\",\n  \"alkalize\",\n  \"almanac\",\n  \"almighty\",\n  \"almost\",\n  \"aloe\",\n  \"aloft\",\n  \"aloha\",\n  \"alone\",\n  \"alongside\",\n  \"aloof\",\n  \"alphabet\",\n  \"alright\",\n  \"although\",\n  \"altitude\",\n  \"alto\",\n  \"aluminum\",\n  \"alumni\",\n  \"always\",\n  \"amaretto\",\n  \"amaze\",\n  \"amazingly\",\n  \"amber\",\n  \"ambiance\",\n  \"ambiguity\",\n  \"ambiguous\",\n  \"ambition\",\n  \"ambitious\",\n  \"ambulance\",\n  \"ambush\",\n  \"amendable\",\n  \"amendment\",\n  \"amends\",\n  \"amenity\",\n  \"amiable\",\n  \"amicably\",\n  \"amid\",\n  \"amigo\",\n  \"amino\",\n  \"amiss\",\n  \"ammonia\",\n  \"ammonium\",\n  \"amnesty\",\n  \"amniotic\",\n  \"among\",\n  \"amount\",\n  \"amperage\",\n  \"ample\",\n  \"amplifier\",\n  \"amplify\",\n  \"amply\",\n  \"amuck\",\n  \"amulet\",\n  \"amusable\",\n  \"amused\",\n  \"amusement\",\n  \"amuser\",\n  \"amusing\",\n  \"anaconda\",\n  \"anaerobic\",\n  \"anagram\",\n  \"anatomist\",\n  \"anatomy\",\n  \"anchor\",\n  \"anchovy\",\n  \"ancient\",\n  \"android\",\n  \"anemia\",\n  \"anemic\",\n  \"aneurism\",\n  \"anew\",\n  \"angelfish\",\n  \"angelic\",\n  \"anger\",\n  \"angled\",\n  \"angler\",\n  \"angles\",\n  \"angling\",\n  \"angrily\",\n  \"angriness\",\n  \"anguished\",\n  \"angular\",\n  \"animal\",\n  \"animate\",\n  \"animating\",\n  \"animation\",\n  \"animator\",\n  \"anime\",\n  \"animosity\",\n  \"ankle\",\n  \"annex\",\n  \"annotate\",\n  \"announcer\",\n  \"annoying\",\n  \"annually\",\n  \"annuity\",\n  \"anointer\",\n  \"another\",\n  \"answering\",\n  \"antacid\",\n  \"antarctic\",\n  \"anteater\",\n  \"antelope\",\n  \"antennae\",\n  \"anthem\",\n  \"anthill\",\n  \"anthology\",\n  \"antibody\",\n  \"antics\",\n  \"antidote\",\n  \"antihero\",\n  \"antiquely\",\n  \"antiques\",\n  \"antiquity\",\n  \"antirust\",\n  \"antitoxic\",\n  \"antitrust\",\n  \"antiviral\",\n  \"antivirus\",\n  \"antler\",\n  \"antonym\",\n  \"antsy\",\n  \"anvil\",\n  \"anybody\",\n  \"anyhow\",\n  \"anymore\",\n  \"anyone\",\n  \"anyplace\",\n  \"anything\",\n  \"anytime\",\n  \"anyway\",\n  \"anywhere\",\n  \"aorta\",\n  \"apache\",\n  \"apostle\",\n  \"appealing\",\n  \"appear\",\n  \"appease\",\n  \"appeasing\",\n  \"appendage\",\n  \"appendix\",\n  \"appetite\",\n  \"appetizer\",\n  \"applaud\",\n  \"applause\",\n  \"apple\",\n  \"appliance\",\n  \"applicant\",\n  \"applied\",\n  \"apply\",\n  \"appointee\",\n  \"appraisal\",\n  \"appraiser\",\n  \"apprehend\",\n  \"approach\",\n  \"approval\",\n  \"approve\",\n  \"apricot\",\n  \"april\",\n  \"apron\",\n  \"aptitude\",\n  \"aptly\",\n  \"aqua\",\n  \"aqueduct\",\n  \"arbitrary\",\n  \"arbitrate\",\n  \"ardently\",\n  \"area\",\n  \"arena\",\n  \"arguable\",\n  \"arguably\",\n  \"argue\",\n  \"arise\",\n  \"armadillo\",\n  \"armband\",\n  \"armchair\",\n  \"armed\",\n  \"armful\",\n  \"armhole\",\n  \"arming\",\n  \"armless\",\n  \"armoire\",\n  \"armored\",\n  \"armory\",\n  \"armrest\",\n  \"army\",\n  \"aroma\",\n  \"arose\",\n  \"around\",\n  \"arousal\",\n  \"arrange\",\n  \"array\",\n  \"arrest\",\n  \"arrival\",\n  \"arrive\",\n  \"arrogance\",\n  \"arrogant\",\n  \"arson\",\n  \"art\",\n  \"ascend\",\n  \"ascension\",\n  \"ascent\",\n  \"ascertain\",\n  \"ashamed\",\n  \"ashen\",\n  \"ashes\",\n  \"ashy\",\n  \"aside\",\n  \"askew\",\n  \"asleep\",\n  \"asparagus\",\n  \"aspect\",\n  \"aspirate\",\n  \"aspire\",\n  \"aspirin\",\n  \"astonish\",\n  \"astound\",\n  \"astride\",\n  \"astrology\",\n  \"astronaut\",\n  \"astronomy\",\n  \"astute\",\n  \"atlantic\",\n  \"atlas\",\n  \"atom\",\n  \"atonable\",\n  \"atop\",\n  \"atrium\",\n  \"atrocious\",\n  \"atrophy\",\n  \"attach\",\n  \"attain\",\n  \"attempt\",\n  \"attendant\",\n  \"attendee\",\n  \"attention\",\n  \"attentive\",\n  \"attest\",\n  \"attic\",\n  \"attire\",\n  \"attitude\",\n  \"attractor\",\n  \"attribute\",\n  \"atypical\",\n  \"auction\",\n  \"audacious\",\n  \"audacity\",\n  \"audible\",\n  \"audibly\",\n  \"audience\",\n  \"audio\",\n  \"audition\",\n  \"augmented\",\n  \"august\",\n  \"authentic\",\n  \"author\",\n  \"autism\",\n  \"autistic\",\n  \"autograph\",\n  \"automaker\",\n  \"automated\",\n  \"automatic\",\n  \"autopilot\",\n  \"available\",\n  \"avalanche\",\n  \"avatar\",\n  \"avenge\",\n  \"avenging\",\n  \"avenue\",\n  \"average\",\n  \"aversion\",\n  \"avert\",\n  \"aviation\",\n  \"aviator\",\n  \"avid\",\n  \"avoid\",\n  \"await\",\n  \"awaken\",\n  \"award\",\n  \"aware\",\n  \"awhile\",\n  \"awkward\",\n  \"awning\",\n  \"awoke\",\n  \"awry\",\n  \"axis\",\n  \"babble\",\n  \"babbling\",\n  \"babied\",\n  \"baboon\",\n  \"backache\",\n  \"backboard\",\n  \"backboned\",\n  \"backdrop\",\n  \"backed\",\n  \"backer\",\n  \"backfield\",\n  \"backfire\",\n  \"backhand\",\n  \"backing\",\n  \"backlands\",\n  \"backlash\",\n  \"backless\",\n  \"backlight\",\n  \"backlit\",\n  \"backlog\",\n  \"backpack\",\n  \"backpedal\",\n  \"backrest\",\n  \"backroom\",\n  \"backshift\",\n  \"backside\",\n  \"backslid\",\n  \"backspace\",\n  \"backspin\",\n  \"backstab\",\n  \"backstage\",\n  \"backtalk\",\n  \"backtrack\",\n  \"backup\",\n  \"backward\",\n  \"backwash\",\n  \"backwater\",\n  \"backyard\",\n  \"bacon\",\n  \"bacteria\",\n  \"bacterium\",\n  \"badass\",\n  \"badge\",\n  \"badland\",\n  \"badly\",\n  \"badness\",\n  \"baffle\",\n  \"baffling\",\n  \"bagel\",\n  \"bagful\",\n  \"baggage\",\n  \"bagged\",\n  \"baggie\",\n  \"bagginess\",\n  \"bagging\",\n  \"baggy\",\n  \"bagpipe\",\n  \"baguette\",\n  \"baked\",\n  \"bakery\",\n  \"bakeshop\",\n  \"baking\",\n  \"balance\",\n  \"balancing\",\n  \"balcony\",\n  \"balmy\",\n  \"balsamic\",\n  \"bamboo\",\n  \"banana\",\n  \"banish\",\n  \"banister\",\n  \"banjo\",\n  \"bankable\",\n  \"bankbook\",\n  \"banked\",\n  \"banker\",\n  \"banking\",\n  \"banknote\",\n  \"bankroll\",\n  \"banner\",\n  \"bannister\",\n  \"banshee\",\n  \"banter\",\n  \"barbecue\",\n  \"barbed\",\n  \"barbell\",\n  \"barber\",\n  \"barcode\",\n  \"barge\",\n  \"bargraph\",\n  \"barista\",\n  \"baritone\",\n  \"barley\",\n  \"barmaid\",\n  \"barman\",\n  \"barn\",\n  \"barometer\",\n  \"barrack\",\n  \"barracuda\",\n  \"barrel\",\n  \"barrette\",\n  \"barricade\",\n  \"barrier\",\n  \"barstool\",\n  \"bartender\",\n  \"barterer\",\n  \"bash\",\n  \"basically\",\n  \"basics\",\n  \"basil\",\n  \"basin\",\n  \"basis\",\n  \"basket\",\n  \"batboy\",\n  \"batch\",\n  \"bath\",\n  \"baton\",\n  \"bats\",\n  \"battalion\",\n  \"battered\",\n  \"battering\",\n  \"battery\",\n  \"batting\",\n  \"battle\",\n  \"bauble\",\n  \"bazooka\",\n  \"blabber\",\n  \"bladder\",\n  \"blade\",\n  \"blah\",\n  \"blame\",\n  \"blaming\",\n  \"blanching\",\n  \"blandness\",\n  \"blank\",\n  \"blaspheme\",\n  \"blasphemy\",\n  \"blast\",\n  \"blatancy\",\n  \"blatantly\",\n  \"blazer\",\n  \"blazing\",\n  \"bleach\",\n  \"bleak\",\n  \"bleep\",\n  \"blemish\",\n  \"blend\",\n  \"bless\",\n  \"blighted\",\n  \"blimp\",\n  \"bling\",\n  \"blinked\",\n  \"blinker\",\n  \"blinking\",\n  \"blinks\",\n  \"blip\",\n  \"blissful\",\n  \"blitz\",\n  \"blizzard\",\n  \"bloated\",\n  \"bloating\",\n  \"blob\",\n  \"blog\",\n  \"bloomers\",\n  \"blooming\",\n  \"blooper\",\n  \"blot\",\n  \"blouse\",\n  \"blubber\",\n  \"bluff\",\n  \"bluish\",\n  \"blunderer\",\n  \"blunt\",\n  \"blurb\",\n  \"blurred\",\n  \"blurry\",\n  \"blurt\",\n  \"blush\",\n  \"blustery\",\n  \"boaster\",\n  \"boastful\",\n  \"boasting\",\n  \"boat\",\n  \"bobbed\",\n  \"bobbing\",\n  \"bobble\",\n  \"bobcat\",\n  \"bobsled\",\n  \"bobtail\",\n  \"bodacious\",\n  \"body\",\n  \"bogged\",\n  \"boggle\",\n  \"bogus\",\n  \"boil\",\n  \"bok\",\n  \"bolster\",\n  \"bolt\",\n  \"bonanza\",\n  \"bonded\",\n  \"bonding\",\n  \"bondless\",\n  \"boned\",\n  \"bonehead\",\n  \"boneless\",\n  \"bonelike\",\n  \"boney\",\n  \"bonfire\",\n  \"bonnet\",\n  \"bonsai\",\n  \"bonus\",\n  \"bony\",\n  \"boogeyman\",\n  \"boogieman\",\n  \"book\",\n  \"boondocks\",\n  \"booted\",\n  \"booth\",\n  \"bootie\",\n  \"booting\",\n  \"bootlace\",\n  \"bootleg\",\n  \"boots\",\n  \"boozy\",\n  \"borax\",\n  \"boring\",\n  \"borough\",\n  \"borrower\",\n  \"borrowing\",\n  \"boss\",\n  \"botanical\",\n  \"botanist\",\n  \"botany\",\n  \"botch\",\n  \"both\",\n  \"bottle\",\n  \"bottling\",\n  \"bottom\",\n  \"bounce\",\n  \"bouncing\",\n  \"bouncy\",\n  \"bounding\",\n  \"boundless\",\n  \"bountiful\",\n  \"bovine\",\n  \"boxcar\",\n  \"boxer\",\n  \"boxing\",\n  \"boxlike\",\n  \"boxy\",\n  \"breach\",\n  \"breath\",\n  \"breeches\",\n  \"breeching\",\n  \"breeder\",\n  \"breeding\",\n  \"breeze\",\n  \"breezy\",\n  \"brethren\",\n  \"brewery\",\n  \"brewing\",\n  \"briar\",\n  \"bribe\",\n  \"brick\",\n  \"bride\",\n  \"bridged\",\n  \"brigade\",\n  \"bright\",\n  \"brilliant\",\n  \"brim\",\n  \"bring\",\n  \"brink\",\n  \"brisket\",\n  \"briskly\",\n  \"briskness\",\n  \"bristle\",\n  \"brittle\",\n  \"broadband\",\n  \"broadcast\",\n  \"broaden\",\n  \"broadly\",\n  \"broadness\",\n  \"broadside\",\n  \"broadways\",\n  \"broiler\",\n  \"broiling\",\n  \"broken\",\n  \"broker\",\n  \"bronchial\",\n  \"bronco\",\n  \"bronze\",\n  \"bronzing\",\n  \"brook\",\n  \"broom\",\n  \"brought\",\n  \"browbeat\",\n  \"brownnose\",\n  \"browse\",\n  \"browsing\",\n  \"bruising\",\n  \"brunch\",\n  \"brunette\",\n  \"brunt\",\n  \"brush\",\n  \"brussels\",\n  \"brute\",\n  \"brutishly\",\n  \"bubble\",\n  \"bubbling\",\n  \"bubbly\",\n  \"buccaneer\",\n  \"bucked\",\n  \"bucket\",\n  \"buckle\",\n  \"buckshot\",\n  \"buckskin\",\n  \"bucktooth\",\n  \"buckwheat\",\n  \"buddhism\",\n  \"buddhist\",\n  \"budding\",\n  \"buddy\",\n  \"budget\",\n  \"buffalo\",\n  \"buffed\",\n  \"buffer\",\n  \"buffing\",\n  \"buffoon\",\n  \"buggy\",\n  \"bulb\",\n  \"bulge\",\n  \"bulginess\",\n  \"bulgur\",\n  \"bulk\",\n  \"bulldog\",\n  \"bulldozer\",\n  \"bullfight\",\n  \"bullfrog\",\n  \"bullhorn\",\n  \"bullion\",\n  \"bullish\",\n  \"bullpen\",\n  \"bullring\",\n  \"bullseye\",\n  \"bullwhip\",\n  \"bully\",\n  \"bunch\",\n  \"bundle\",\n  \"bungee\",\n  \"bunion\",\n  \"bunkbed\",\n  \"bunkhouse\",\n  \"bunkmate\",\n  \"bunny\",\n  \"bunt\",\n  \"busboy\",\n  \"bush\",\n  \"busily\",\n  \"busload\",\n  \"bust\",\n  \"busybody\",\n  \"buzz\",\n  \"cabana\",\n  \"cabbage\",\n  \"cabbie\",\n  \"cabdriver\",\n  \"cable\",\n  \"caboose\",\n  \"cache\",\n  \"cackle\",\n  \"cacti\",\n  \"cactus\",\n  \"caddie\",\n  \"caddy\",\n  \"cadet\",\n  \"cadillac\",\n  \"cadmium\",\n  \"cage\",\n  \"cahoots\",\n  \"cake\",\n  \"calamari\",\n  \"calamity\",\n  \"calcium\",\n  \"calculate\",\n  \"calculus\",\n  \"caliber\",\n  \"calibrate\",\n  \"calm\",\n  \"caloric\",\n  \"calorie\",\n  \"calzone\",\n  \"camcorder\",\n  \"cameo\",\n  \"camera\",\n  \"camisole\",\n  \"camper\",\n  \"campfire\",\n  \"camping\",\n  \"campsite\",\n  \"campus\",\n  \"canal\",\n  \"canary\",\n  \"cancel\",\n  \"candied\",\n  \"candle\",\n  \"candy\",\n  \"cane\",\n  \"canine\",\n  \"canister\",\n  \"cannabis\",\n  \"canned\",\n  \"canning\",\n  \"cannon\",\n  \"cannot\",\n  \"canola\",\n  \"canon\",\n  \"canopener\",\n  \"canopy\",\n  \"canteen\",\n  \"canyon\",\n  \"capable\",\n  \"capably\",\n  \"capacity\",\n  \"cape\",\n  \"capillary\",\n  \"capital\",\n  \"capitol\",\n  \"capped\",\n  \"capricorn\",\n  \"capsize\",\n  \"capsule\",\n  \"caption\",\n  \"captivate\",\n  \"captive\",\n  \"captivity\",\n  \"capture\",\n  \"caramel\",\n  \"carat\",\n  \"caravan\",\n  \"carbon\",\n  \"cardboard\",\n  \"carded\",\n  \"cardiac\",\n  \"cardigan\",\n  \"cardinal\",\n  \"cardstock\",\n  \"carefully\",\n  \"caregiver\",\n  \"careless\",\n  \"caress\",\n  \"caretaker\",\n  \"cargo\",\n  \"caring\",\n  \"carless\",\n  \"carload\",\n  \"carmaker\",\n  \"carnage\",\n  \"carnation\",\n  \"carnival\",\n  \"carnivore\",\n  \"carol\",\n  \"carpenter\",\n  \"carpentry\",\n  \"carpool\",\n  \"carport\",\n  \"carried\",\n  \"carrot\",\n  \"carrousel\",\n  \"carry\",\n  \"cartel\",\n  \"cartload\",\n  \"carton\",\n  \"cartoon\",\n  \"cartridge\",\n  \"cartwheel\",\n  \"carve\",\n  \"carving\",\n  \"carwash\",\n  \"cascade\",\n  \"case\",\n  \"cash\",\n  \"casing\",\n  \"casino\",\n  \"casket\",\n  \"cassette\",\n  \"casually\",\n  \"casualty\",\n  \"catacomb\",\n  \"catalog\",\n  \"catalyst\",\n  \"catalyze\",\n  \"catapult\",\n  \"cataract\",\n  \"catatonic\",\n  \"catcall\",\n  \"catchable\",\n  \"catcher\",\n  \"catching\",\n  \"catchy\",\n  \"caterer\",\n  \"catering\",\n  \"catfight\",\n  \"catfish\",\n  \"cathedral\",\n  \"cathouse\",\n  \"catlike\",\n  \"catnap\",\n  \"catnip\",\n  \"catsup\",\n  \"cattail\",\n  \"cattishly\",\n  \"cattle\",\n  \"catty\",\n  \"catwalk\",\n  \"caucasian\",\n  \"caucus\",\n  \"causal\",\n  \"causation\",\n  \"cause\",\n  \"causing\",\n  \"cauterize\",\n  \"caution\",\n  \"cautious\",\n  \"cavalier\",\n  \"cavalry\",\n  \"caviar\",\n  \"cavity\",\n  \"cedar\",\n  \"celery\",\n  \"celestial\",\n  \"celibacy\",\n  \"celibate\",\n  \"celtic\",\n  \"cement\",\n  \"census\",\n  \"ceramics\",\n  \"ceremony\",\n  \"certainly\",\n  \"certainty\",\n  \"certified\",\n  \"certify\",\n  \"cesarean\",\n  \"cesspool\",\n  \"chafe\",\n  \"chaffing\",\n  \"chain\",\n  \"chair\",\n  \"chalice\",\n  \"challenge\",\n  \"chamber\",\n  \"chamomile\",\n  \"champion\",\n  \"chance\",\n  \"change\",\n  \"channel\",\n  \"chant\",\n  \"chaos\",\n  \"chaperone\",\n  \"chaplain\",\n  \"chapped\",\n  \"chaps\",\n  \"chapter\",\n  \"character\",\n  \"charbroil\",\n  \"charcoal\",\n  \"charger\",\n  \"charging\",\n  \"chariot\",\n  \"charity\",\n  \"charm\",\n  \"charred\",\n  \"charter\",\n  \"charting\",\n  \"chase\",\n  \"chasing\",\n  \"chaste\",\n  \"chastise\",\n  \"chastity\",\n  \"chatroom\",\n  \"chatter\",\n  \"chatting\",\n  \"chatty\",\n  \"cheating\",\n  \"cheddar\",\n  \"cheek\",\n  \"cheer\",\n  \"cheese\",\n  \"cheesy\",\n  \"chef\",\n  \"chemicals\",\n  \"chemist\",\n  \"chemo\",\n  \"cherisher\",\n  \"cherub\",\n  \"chess\",\n  \"chest\",\n  \"chevron\",\n  \"chevy\",\n  \"chewable\",\n  \"chewer\",\n  \"chewing\",\n  \"chewy\",\n  \"chief\",\n  \"chihuahua\",\n  \"childcare\",\n  \"childhood\",\n  \"childish\",\n  \"childless\",\n  \"childlike\",\n  \"chili\",\n  \"chill\",\n  \"chimp\",\n  \"chip\",\n  \"chirping\",\n  \"chirpy\",\n  \"chitchat\",\n  \"chivalry\",\n  \"chive\",\n  \"chloride\",\n  \"chlorine\",\n  \"choice\",\n  \"chokehold\",\n  \"choking\",\n  \"chomp\",\n  \"chooser\",\n  \"choosing\",\n  \"choosy\",\n  \"chop\",\n  \"chosen\",\n  \"chowder\",\n  \"chowtime\",\n  \"chrome\",\n  \"chubby\",\n  \"chuck\",\n  \"chug\",\n  \"chummy\",\n  \"chump\",\n  \"chunk\",\n  \"churn\",\n  \"chute\",\n  \"cider\",\n  \"cilantro\",\n  \"cinch\",\n  \"cinema\",\n  \"cinnamon\",\n  \"circle\",\n  \"circling\",\n  \"circular\",\n  \"circulate\",\n  \"circus\",\n  \"citable\",\n  \"citadel\",\n  \"citation\",\n  \"citizen\",\n  \"citric\",\n  \"citrus\",\n  \"city\",\n  \"civic\",\n  \"civil\",\n  \"clad\",\n  \"claim\",\n  \"clambake\",\n  \"clammy\",\n  \"clamor\",\n  \"clamp\",\n  \"clamshell\",\n  \"clang\",\n  \"clanking\",\n  \"clapped\",\n  \"clapper\",\n  \"clapping\",\n  \"clarify\",\n  \"clarinet\",\n  \"clarity\",\n  \"clash\",\n  \"clasp\",\n  \"class\",\n  \"clatter\",\n  \"clause\",\n  \"clavicle\",\n  \"claw\",\n  \"clay\",\n  \"clean\",\n  \"clear\",\n  \"cleat\",\n  \"cleaver\",\n  \"cleft\",\n  \"clench\",\n  \"clergyman\",\n  \"clerical\",\n  \"clerk\",\n  \"clever\",\n  \"clicker\",\n  \"client\",\n  \"climate\",\n  \"climatic\",\n  \"cling\",\n  \"clinic\",\n  \"clinking\",\n  \"clip\",\n  \"clique\",\n  \"cloak\",\n  \"clobber\",\n  \"clock\",\n  \"clone\",\n  \"cloning\",\n  \"closable\",\n  \"closure\",\n  \"clothes\",\n  \"clothing\",\n  \"cloud\",\n  \"clover\",\n  \"clubbed\",\n  \"clubbing\",\n  \"clubhouse\",\n  \"clump\",\n  \"clumsily\",\n  \"clumsy\",\n  \"clunky\",\n  \"clustered\",\n  \"clutch\",\n  \"clutter\",\n  \"coach\",\n  \"coagulant\",\n  \"coastal\",\n  \"coaster\",\n  \"coasting\",\n  \"coastland\",\n  \"coastline\",\n  \"coat\",\n  \"coauthor\",\n  \"cobalt\",\n  \"cobbler\",\n  \"cobweb\",\n  \"cocoa\",\n  \"coconut\",\n  \"cod\",\n  \"coeditor\",\n  \"coerce\",\n  \"coexist\",\n  \"coffee\",\n  \"cofounder\",\n  \"cognition\",\n  \"cognitive\",\n  \"cogwheel\",\n  \"coherence\",\n  \"coherent\",\n  \"cohesive\",\n  \"coil\",\n  \"coke\",\n  \"cola\",\n  \"cold\",\n  \"coleslaw\",\n  \"coliseum\",\n  \"collage\",\n  \"collapse\",\n  \"collar\",\n  \"collected\",\n  \"collector\",\n  \"collide\",\n  \"collie\",\n  \"collision\",\n  \"colonial\",\n  \"colonist\",\n  \"colonize\",\n  \"colony\",\n  \"colossal\",\n  \"colt\",\n  \"coma\",\n  \"come\",\n  \"comfort\",\n  \"comfy\",\n  \"comic\",\n  \"coming\",\n  \"comma\",\n  \"commence\",\n  \"commend\",\n  \"comment\",\n  \"commerce\",\n  \"commode\",\n  \"commodity\",\n  \"commodore\",\n  \"common\",\n  \"commotion\",\n  \"commute\",\n  \"commuting\",\n  \"compacted\",\n  \"compacter\",\n  \"compactly\",\n  \"compactor\",\n  \"companion\",\n  \"company\",\n  \"compare\",\n  \"compel\",\n  \"compile\",\n  \"comply\",\n  \"component\",\n  \"composed\",\n  \"composer\",\n  \"composite\",\n  \"compost\",\n  \"composure\",\n  \"compound\",\n  \"compress\",\n  \"comprised\",\n  \"computer\",\n  \"computing\",\n  \"comrade\",\n  \"concave\",\n  \"conceal\",\n  \"conceded\",\n  \"concept\",\n  \"concerned\",\n  \"concert\",\n  \"conch\",\n  \"concierge\",\n  \"concise\",\n  \"conclude\",\n  \"concrete\",\n  \"concur\",\n  \"condense\",\n  \"condiment\",\n  \"condition\",\n  \"condone\",\n  \"conducive\",\n  \"conductor\",\n  \"conduit\",\n  \"cone\",\n  \"confess\",\n  \"confetti\",\n  \"confidant\",\n  \"confident\",\n  \"confider\",\n  \"confiding\",\n  \"configure\",\n  \"confined\",\n  \"confining\",\n  \"confirm\",\n  \"conflict\",\n  \"conform\",\n  \"confound\",\n  \"confront\",\n  \"confused\",\n  \"confusing\",\n  \"confusion\",\n  \"congenial\",\n  \"congested\",\n  \"congrats\",\n  \"congress\",\n  \"conical\",\n  \"conjoined\",\n  \"conjure\",\n  \"conjuror\",\n  \"connected\",\n  \"connector\",\n  \"consensus\",\n  \"consent\",\n  \"console\",\n  \"consoling\",\n  \"consonant\",\n  \"constable\",\n  \"constant\",\n  \"constrain\",\n  \"constrict\",\n  \"construct\",\n  \"consult\",\n  \"consumer\",\n  \"consuming\",\n  \"contact\",\n  \"container\",\n  \"contempt\",\n  \"contend\",\n  \"contented\",\n  \"contently\",\n  \"contents\",\n  \"contest\",\n  \"context\",\n  \"contort\",\n  \"contour\",\n  \"contrite\",\n  \"control\",\n  \"contusion\",\n  \"convene\",\n  \"convent\",\n  \"copartner\",\n  \"cope\",\n  \"copied\",\n  \"copier\",\n  \"copilot\",\n  \"coping\",\n  \"copious\",\n  \"copper\",\n  \"copy\",\n  \"coral\",\n  \"cork\",\n  \"cornball\",\n  \"cornbread\",\n  \"corncob\",\n  \"cornea\",\n  \"corned\",\n  \"corner\",\n  \"cornfield\",\n  \"cornflake\",\n  \"cornhusk\",\n  \"cornmeal\",\n  \"cornstalk\",\n  \"corny\",\n  \"coronary\",\n  \"coroner\",\n  \"corporal\",\n  \"corporate\",\n  \"corral\",\n  \"correct\",\n  \"corridor\",\n  \"corrode\",\n  \"corroding\",\n  \"corrosive\",\n  \"corsage\",\n  \"corset\",\n  \"cortex\",\n  \"cosigner\",\n  \"cosmetics\",\n  \"cosmic\",\n  \"cosmos\",\n  \"cosponsor\",\n  \"cost\",\n  \"cottage\",\n  \"cotton\",\n  \"couch\",\n  \"cough\",\n  \"could\",\n  \"countable\",\n  \"countdown\",\n  \"counting\",\n  \"countless\",\n  \"country\",\n  \"county\",\n  \"courier\",\n  \"covenant\",\n  \"cover\",\n  \"coveted\",\n  \"coveting\",\n  \"coyness\",\n  \"cozily\",\n  \"coziness\",\n  \"cozy\",\n  \"crabbing\",\n  \"crabgrass\",\n  \"crablike\",\n  \"crabmeat\",\n  \"cradle\",\n  \"cradling\",\n  \"crafter\",\n  \"craftily\",\n  \"craftsman\",\n  \"craftwork\",\n  \"crafty\",\n  \"cramp\",\n  \"cranberry\",\n  \"crane\",\n  \"cranial\",\n  \"cranium\",\n  \"crank\",\n  \"crate\",\n  \"crave\",\n  \"craving\",\n  \"crawfish\",\n  \"crawlers\",\n  \"crawling\",\n  \"crayfish\",\n  \"crayon\",\n  \"crazed\",\n  \"crazily\",\n  \"craziness\",\n  \"crazy\",\n  \"creamed\",\n  \"creamer\",\n  \"creamlike\",\n  \"crease\",\n  \"creasing\",\n  \"creatable\",\n  \"create\",\n  \"creation\",\n  \"creative\",\n  \"creature\",\n  \"credible\",\n  \"credibly\",\n  \"credit\",\n  \"creed\",\n  \"creme\",\n  \"creole\",\n  \"crepe\",\n  \"crept\",\n  \"crescent\",\n  \"crested\",\n  \"cresting\",\n  \"crestless\",\n  \"crevice\",\n  \"crewless\",\n  \"crewman\",\n  \"crewmate\",\n  \"crib\",\n  \"cricket\",\n  \"cried\",\n  \"crier\",\n  \"crimp\",\n  \"crimson\",\n  \"cringe\",\n  \"cringing\",\n  \"crinkle\",\n  \"crinkly\",\n  \"crisped\",\n  \"crisping\",\n  \"crisply\",\n  \"crispness\",\n  \"crispy\",\n  \"criteria\",\n  \"critter\",\n  \"croak\",\n  \"crock\",\n  \"crook\",\n  \"croon\",\n  \"crop\",\n  \"cross\",\n  \"crouch\",\n  \"crouton\",\n  \"crowbar\",\n  \"crowd\",\n  \"crown\",\n  \"crucial\",\n  \"crudely\",\n  \"crudeness\",\n  \"cruelly\",\n  \"cruelness\",\n  \"cruelty\",\n  \"crumb\",\n  \"crummiest\",\n  \"crummy\",\n  \"crumpet\",\n  \"crumpled\",\n  \"cruncher\",\n  \"crunching\",\n  \"crunchy\",\n  \"crusader\",\n  \"crushable\",\n  \"crushed\",\n  \"crusher\",\n  \"crushing\",\n  \"crust\",\n  \"crux\",\n  \"crying\",\n  \"cryptic\",\n  \"crystal\",\n  \"cubbyhole\",\n  \"cube\",\n  \"cubical\",\n  \"cubicle\",\n  \"cucumber\",\n  \"cuddle\",\n  \"cuddly\",\n  \"cufflink\",\n  \"culinary\",\n  \"culminate\",\n  \"culpable\",\n  \"culprit\",\n  \"cultivate\",\n  \"cultural\",\n  \"culture\",\n  \"cupbearer\",\n  \"cupcake\",\n  \"cupid\",\n  \"cupped\",\n  \"cupping\",\n  \"curable\",\n  \"curator\",\n  \"curdle\",\n  \"cure\",\n  \"curfew\",\n  \"curing\",\n  \"curled\",\n  \"curler\",\n  \"curliness\",\n  \"curling\",\n  \"curly\",\n  \"curry\",\n  \"curse\",\n  \"cursive\",\n  \"cursor\",\n  \"curtain\",\n  \"curtly\",\n  \"curtsy\",\n  \"curvature\",\n  \"curve\",\n  \"curvy\",\n  \"cushy\",\n  \"cusp\",\n  \"cussed\",\n  \"custard\",\n  \"custodian\",\n  \"custody\",\n  \"customary\",\n  \"customer\",\n  \"customize\",\n  \"customs\",\n  \"cut\",\n  \"cycle\",\n  \"cyclic\",\n  \"cycling\",\n  \"cyclist\",\n  \"cylinder\",\n  \"cymbal\",\n  \"cytoplasm\",\n  \"cytoplast\",\n  \"dab\",\n  \"dad\",\n  \"daffodil\",\n  \"dagger\",\n  \"daily\",\n  \"daintily\",\n  \"dainty\",\n  \"dairy\",\n  \"daisy\",\n  \"dallying\",\n  \"dance\",\n  \"dancing\",\n  \"dandelion\",\n  \"dander\",\n  \"dandruff\",\n  \"dandy\",\n  \"danger\",\n  \"dangle\",\n  \"dangling\",\n  \"daredevil\",\n  \"dares\",\n  \"daringly\",\n  \"darkened\",\n  \"darkening\",\n  \"darkish\",\n  \"darkness\",\n  \"darkroom\",\n  \"darling\",\n  \"darn\",\n  \"dart\",\n  \"darwinism\",\n  \"dash\",\n  \"dastardly\",\n  \"data\",\n  \"datebook\",\n  \"dating\",\n  \"daughter\",\n  \"daunting\",\n  \"dawdler\",\n  \"dawn\",\n  \"daybed\",\n  \"daybreak\",\n  \"daycare\",\n  \"daydream\",\n  \"daylight\",\n  \"daylong\",\n  \"dayroom\",\n  \"daytime\",\n  \"dazzler\",\n  \"dazzling\",\n  \"deacon\",\n  \"deafening\",\n  \"deafness\",\n  \"dealer\",\n  \"dealing\",\n  \"dealmaker\",\n  \"dealt\",\n  \"dean\",\n  \"debatable\",\n  \"debate\",\n  \"debating\",\n  \"debit\",\n  \"debrief\",\n  \"debtless\",\n  \"debtor\",\n  \"debug\",\n  \"debunk\",\n  \"decade\",\n  \"decaf\",\n  \"decal\",\n  \"decathlon\",\n  \"decay\",\n  \"deceased\",\n  \"deceit\",\n  \"deceiver\",\n  \"deceiving\",\n  \"december\",\n  \"decency\",\n  \"decent\",\n  \"deception\",\n  \"deceptive\",\n  \"decibel\",\n  \"decidable\",\n  \"decimal\",\n  \"decimeter\",\n  \"decipher\",\n  \"deck\",\n  \"declared\",\n  \"decline\",\n  \"decode\",\n  \"decompose\",\n  \"decorated\",\n  \"decorator\",\n  \"decoy\",\n  \"decrease\",\n  \"decree\",\n  \"dedicate\",\n  \"dedicator\",\n  \"deduce\",\n  \"deduct\",\n  \"deed\",\n  \"deem\",\n  \"deepen\",\n  \"deeply\",\n  \"deepness\",\n  \"deface\",\n  \"defacing\",\n  \"defame\",\n  \"default\",\n  \"defeat\",\n  \"defection\",\n  \"defective\",\n  \"defendant\",\n  \"defender\",\n  \"defense\",\n  \"defensive\",\n  \"deferral\",\n  \"deferred\",\n  \"defiance\",\n  \"defiant\",\n  \"defile\",\n  \"defiling\",\n  \"define\",\n  \"definite\",\n  \"deflate\",\n  \"deflation\",\n  \"deflator\",\n  \"deflected\",\n  \"deflector\",\n  \"defog\",\n  \"deforest\",\n  \"defraud\",\n  \"defrost\",\n  \"deftly\",\n  \"defuse\",\n  \"defy\",\n  \"degraded\",\n  \"degrading\",\n  \"degrease\",\n  \"degree\",\n  \"dehydrate\",\n  \"deity\",\n  \"dejected\",\n  \"delay\",\n  \"delegate\",\n  \"delegator\",\n  \"delete\",\n  \"deletion\",\n  \"delicacy\",\n  \"delicate\",\n  \"delicious\",\n  \"delighted\",\n  \"delirious\",\n  \"delirium\",\n  \"deliverer\",\n  \"delivery\",\n  \"delouse\",\n  \"delta\",\n  \"deluge\",\n  \"delusion\",\n  \"deluxe\",\n  \"demanding\",\n  \"demeaning\",\n  \"demeanor\",\n  \"demise\",\n  \"democracy\",\n  \"democrat\",\n  \"demote\",\n  \"demotion\",\n  \"demystify\",\n  \"denatured\",\n  \"deniable\",\n  \"denial\",\n  \"denim\",\n  \"denote\",\n  \"dense\",\n  \"density\",\n  \"dental\",\n  \"dentist\",\n  \"denture\",\n  \"deny\",\n  \"deodorant\",\n  \"deodorize\",\n  \"departed\",\n  \"departure\",\n  \"depict\",\n  \"deplete\",\n  \"depletion\",\n  \"deplored\",\n  \"deploy\",\n  \"deport\",\n  \"depose\",\n  \"depraved\",\n  \"depravity\",\n  \"deprecate\",\n  \"depress\",\n  \"deprive\",\n  \"depth\",\n  \"deputize\",\n  \"deputy\",\n  \"derail\",\n  \"deranged\",\n  \"derby\",\n  \"derived\",\n  \"desecrate\",\n  \"deserve\",\n  \"deserving\",\n  \"designate\",\n  \"designed\",\n  \"designer\",\n  \"designing\",\n  \"deskbound\",\n  \"desktop\",\n  \"deskwork\",\n  \"desolate\",\n  \"despair\",\n  \"despise\",\n  \"despite\",\n  \"destiny\",\n  \"destitute\",\n  \"destruct\",\n  \"detached\",\n  \"detail\",\n  \"detection\",\n  \"detective\",\n  \"detector\",\n  \"detention\",\n  \"detergent\",\n  \"detest\",\n  \"detonate\",\n  \"detonator\",\n  \"detoxify\",\n  \"detract\",\n  \"deuce\",\n  \"devalue\",\n  \"deviancy\",\n  \"deviant\",\n  \"deviate\",\n  \"deviation\",\n  \"deviator\",\n  \"device\",\n  \"devious\",\n  \"devotedly\",\n  \"devotee\",\n  \"devotion\",\n  \"devourer\",\n  \"devouring\",\n  \"devoutly\",\n  \"dexterity\",\n  \"dexterous\",\n  \"diabetes\",\n  \"diabetic\",\n  \"diabolic\",\n  \"diagnoses\",\n  \"diagnosis\",\n  \"diagram\",\n  \"dial\",\n  \"diameter\",\n  \"diaper\",\n  \"diaphragm\",\n  \"diary\",\n  \"dice\",\n  \"dicing\",\n  \"dictate\",\n  \"dictation\",\n  \"dictator\",\n  \"difficult\",\n  \"diffused\",\n  \"diffuser\",\n  \"diffusion\",\n  \"diffusive\",\n  \"dig\",\n  \"dilation\",\n  \"diligence\",\n  \"diligent\",\n  \"dill\",\n  \"dilute\",\n  \"dime\",\n  \"diminish\",\n  \"dimly\",\n  \"dimmed\",\n  \"dimmer\",\n  \"dimness\",\n  \"dimple\",\n  \"diner\",\n  \"dingbat\",\n  \"dinghy\",\n  \"dinginess\",\n  \"dingo\",\n  \"dingy\",\n  \"dining\",\n  \"dinner\",\n  \"diocese\",\n  \"dioxide\",\n  \"diploma\",\n  \"dipped\",\n  \"dipper\",\n  \"dipping\",\n  \"directed\",\n  \"direction\",\n  \"directive\",\n  \"directly\",\n  \"directory\",\n  \"direness\",\n  \"dirtiness\",\n  \"disabled\",\n  \"disagree\",\n  \"disallow\",\n  \"disarm\",\n  \"disarray\",\n  \"disaster\",\n  \"disband\",\n  \"disbelief\",\n  \"disburse\",\n  \"discard\",\n  \"discern\",\n  \"discharge\",\n  \"disclose\",\n  \"discolor\",\n  \"discount\",\n  \"discourse\",\n  \"discover\",\n  \"discuss\",\n  \"disdain\",\n  \"disengage\",\n  \"disfigure\",\n  \"disgrace\",\n  \"dish\",\n  \"disinfect\",\n  \"disjoin\",\n  \"disk\",\n  \"dislike\",\n  \"disliking\",\n  \"dislocate\",\n  \"dislodge\",\n  \"disloyal\",\n  \"dismantle\",\n  \"dismay\",\n  \"dismiss\",\n  \"dismount\",\n  \"disobey\",\n  \"disorder\",\n  \"disown\",\n  \"disparate\",\n  \"disparity\",\n  \"dispatch\",\n  \"dispense\",\n  \"dispersal\",\n  \"dispersed\",\n  \"disperser\",\n  \"displace\",\n  \"display\",\n  \"displease\",\n  \"disposal\",\n  \"dispose\",\n  \"disprove\",\n  \"dispute\",\n  \"disregard\",\n  \"disrupt\",\n  \"dissuade\",\n  \"distance\",\n  \"distant\",\n  \"distaste\",\n  \"distill\",\n  \"distinct\",\n  \"distort\",\n  \"distract\",\n  \"distress\",\n  \"district\",\n  \"distrust\",\n  \"ditch\",\n  \"ditto\",\n  \"ditzy\",\n  \"dividable\",\n  \"divided\",\n  \"dividend\",\n  \"dividers\",\n  \"dividing\",\n  \"divinely\",\n  \"diving\",\n  \"divinity\",\n  \"divisible\",\n  \"divisibly\",\n  \"division\",\n  \"divisive\",\n  \"divorcee\",\n  \"dizziness\",\n  \"dizzy\",\n  \"doable\",\n  \"docile\",\n  \"dock\",\n  \"doctrine\",\n  \"document\",\n  \"dodge\",\n  \"dodgy\",\n  \"doily\",\n  \"doing\",\n  \"dole\",\n  \"dollar\",\n  \"dollhouse\",\n  \"dollop\",\n  \"dolly\",\n  \"dolphin\",\n  \"domain\",\n  \"domelike\",\n  \"domestic\",\n  \"dominion\",\n  \"dominoes\",\n  \"donated\",\n  \"donation\",\n  \"donator\",\n  \"donor\",\n  \"donut\",\n  \"doodle\",\n  \"doorbell\",\n  \"doorframe\",\n  \"doorknob\",\n  \"doorman\",\n  \"doormat\",\n  \"doornail\",\n  \"doorpost\",\n  \"doorstep\",\n  \"doorstop\",\n  \"doorway\",\n  \"doozy\",\n  \"dork\",\n  \"dormitory\",\n  \"dorsal\",\n  \"dosage\",\n  \"dose\",\n  \"dotted\",\n  \"doubling\",\n  \"douche\",\n  \"dove\",\n  \"down\",\n  \"dowry\",\n  \"doze\",\n  \"drab\",\n  \"dragging\",\n  \"dragonfly\",\n  \"dragonish\",\n  \"dragster\",\n  \"drainable\",\n  \"drainage\",\n  \"drained\",\n  \"drainer\",\n  \"drainpipe\",\n  \"dramatic\",\n  \"dramatize\",\n  \"drank\",\n  \"drapery\",\n  \"drastic\",\n  \"draw\",\n  \"dreaded\",\n  \"dreadful\",\n  \"dreadlock\",\n  \"dreamboat\",\n  \"dreamily\",\n  \"dreamland\",\n  \"dreamless\",\n  \"dreamlike\",\n  \"dreamt\",\n  \"dreamy\",\n  \"drearily\",\n  \"dreary\",\n  \"drench\",\n  \"dress\",\n  \"drew\",\n  \"dribble\",\n  \"dried\",\n  \"drier\",\n  \"drift\",\n  \"driller\",\n  \"drilling\",\n  \"drinkable\",\n  \"drinking\",\n  \"dripping\",\n  \"drippy\",\n  \"drivable\",\n  \"driven\",\n  \"driver\",\n  \"driveway\",\n  \"driving\",\n  \"drizzle\",\n  \"drizzly\",\n  \"drone\",\n  \"drool\",\n  \"droop\",\n  \"drop-down\",\n  \"dropbox\",\n  \"dropkick\",\n  \"droplet\",\n  \"dropout\",\n  \"dropper\",\n  \"drove\",\n  \"drown\",\n  \"drowsily\",\n  \"drudge\",\n  \"drum\",\n  \"dry\",\n  \"dubbed\",\n  \"dubiously\",\n  \"duchess\",\n  \"duckbill\",\n  \"ducking\",\n  \"duckling\",\n  \"ducktail\",\n  \"ducky\",\n  \"duct\",\n  \"dude\",\n  \"duffel\",\n  \"dugout\",\n  \"duh\",\n  \"duke\",\n  \"duller\",\n  \"dullness\",\n  \"duly\",\n  \"dumping\",\n  \"dumpling\",\n  \"dumpster\",\n  \"duo\",\n  \"dupe\",\n  \"duplex\",\n  \"duplicate\",\n  \"duplicity\",\n  \"durable\",\n  \"durably\",\n  \"duration\",\n  \"duress\",\n  \"during\",\n  \"dusk\",\n  \"dust\",\n  \"dutiful\",\n  \"duty\",\n  \"duvet\",\n  \"dwarf\",\n  \"dweeb\",\n  \"dwelled\",\n  \"dweller\",\n  \"dwelling\",\n  \"dwindle\",\n  \"dwindling\",\n  \"dynamic\",\n  \"dynamite\",\n  \"dynasty\",\n  \"dyslexia\",\n  \"dyslexic\",\n  \"each\",\n  \"eagle\",\n  \"earache\",\n  \"eardrum\",\n  \"earflap\",\n  \"earful\",\n  \"earlobe\",\n  \"early\",\n  \"earmark\",\n  \"earmuff\",\n  \"earphone\",\n  \"earpiece\",\n  \"earplugs\",\n  \"earring\",\n  \"earshot\",\n  \"earthen\",\n  \"earthlike\",\n  \"earthling\",\n  \"earthly\",\n  \"earthworm\",\n  \"earthy\",\n  \"earwig\",\n  \"easeful\",\n  \"easel\",\n  \"easiest\",\n  \"easily\",\n  \"easiness\",\n  \"easing\",\n  \"eastbound\",\n  \"eastcoast\",\n  \"easter\",\n  \"eastward\",\n  \"eatable\",\n  \"eaten\",\n  \"eatery\",\n  \"eating\",\n  \"eats\",\n  \"ebay\",\n  \"ebony\",\n  \"ebook\",\n  \"ecard\",\n  \"eccentric\",\n  \"echo\",\n  \"eclair\",\n  \"eclipse\",\n  \"ecologist\",\n  \"ecology\",\n  \"economic\",\n  \"economist\",\n  \"economy\",\n  \"ecosphere\",\n  \"ecosystem\",\n  \"edge\",\n  \"edginess\",\n  \"edging\",\n  \"edgy\",\n  \"edition\",\n  \"editor\",\n  \"educated\",\n  \"education\",\n  \"educator\",\n  \"eel\",\n  \"effective\",\n  \"effects\",\n  \"efficient\",\n  \"effort\",\n  \"eggbeater\",\n  \"egging\",\n  \"eggnog\",\n  \"eggplant\",\n  \"eggshell\",\n  \"egomaniac\",\n  \"egotism\",\n  \"egotistic\",\n  \"either\",\n  \"eject\",\n  \"elaborate\",\n  \"elastic\",\n  \"elated\",\n  \"elbow\",\n  \"eldercare\",\n  \"elderly\",\n  \"eldest\",\n  \"electable\",\n  \"election\",\n  \"elective\",\n  \"elephant\",\n  \"elevate\",\n  \"elevating\",\n  \"elevation\",\n  \"elevator\",\n  \"eleven\",\n  \"elf\",\n  \"eligible\",\n  \"eligibly\",\n  \"eliminate\",\n  \"elite\",\n  \"elitism\",\n  \"elixir\",\n  \"elk\",\n  \"ellipse\",\n  \"elliptic\",\n  \"elm\",\n  \"elongated\",\n  \"elope\",\n  \"eloquence\",\n  \"eloquent\",\n  \"elsewhere\",\n  \"elude\",\n  \"elusive\",\n  \"elves\",\n  \"email\",\n  \"embargo\",\n  \"embark\",\n  \"embassy\",\n  \"embattled\",\n  \"embellish\",\n  \"ember\",\n  \"embezzle\",\n  \"emblaze\",\n  \"emblem\",\n  \"embody\",\n  \"embolism\",\n  \"emboss\",\n  \"embroider\",\n  \"emcee\",\n  \"emerald\",\n  \"emergency\",\n  \"emission\",\n  \"emit\",\n  \"emote\",\n  \"emoticon\",\n  \"emotion\",\n  \"empathic\",\n  \"empathy\",\n  \"emperor\",\n  \"emphases\",\n  \"emphasis\",\n  \"emphasize\",\n  \"emphatic\",\n  \"empirical\",\n  \"employed\",\n  \"employee\",\n  \"employer\",\n  \"emporium\",\n  \"empower\",\n  \"emptier\",\n  \"emptiness\",\n  \"empty\",\n  \"emu\",\n  \"enable\",\n  \"enactment\",\n  \"enamel\",\n  \"enchanted\",\n  \"enchilada\",\n  \"encircle\",\n  \"enclose\",\n  \"enclosure\",\n  \"encode\",\n  \"encore\",\n  \"encounter\",\n  \"encourage\",\n  \"encroach\",\n  \"encrust\",\n  \"encrypt\",\n  \"endanger\",\n  \"endeared\",\n  \"endearing\",\n  \"ended\",\n  \"ending\",\n  \"endless\",\n  \"endnote\",\n  \"endocrine\",\n  \"endorphin\",\n  \"endorse\",\n  \"endowment\",\n  \"endpoint\",\n  \"endurable\",\n  \"endurance\",\n  \"enduring\",\n  \"energetic\",\n  \"energize\",\n  \"energy\",\n  \"enforced\",\n  \"enforcer\",\n  \"engaged\",\n  \"engaging\",\n  \"engine\",\n  \"engorge\",\n  \"engraved\",\n  \"engraver\",\n  \"engraving\",\n  \"engross\",\n  \"engulf\",\n  \"enhance\",\n  \"enigmatic\",\n  \"enjoyable\",\n  \"enjoyably\",\n  \"enjoyer\",\n  \"enjoying\",\n  \"enjoyment\",\n  \"enlarged\",\n  \"enlarging\",\n  \"enlighten\",\n  \"enlisted\",\n  \"enquirer\",\n  \"enrage\",\n  \"enrich\",\n  \"enroll\",\n  \"enslave\",\n  \"ensnare\",\n  \"ensure\",\n  \"entail\",\n  \"entangled\",\n  \"entering\",\n  \"entertain\",\n  \"enticing\",\n  \"entire\",\n  \"entitle\",\n  \"entity\",\n  \"entomb\",\n  \"entourage\",\n  \"entrap\",\n  \"entree\",\n  \"entrench\",\n  \"entrust\",\n  \"entryway\",\n  \"entwine\",\n  \"enunciate\",\n  \"envelope\",\n  \"enviable\",\n  \"enviably\",\n  \"envious\",\n  \"envision\",\n  \"envoy\",\n  \"envy\",\n  \"enzyme\",\n  \"epic\",\n  \"epidemic\",\n  \"epidermal\",\n  \"epidermis\",\n  \"epidural\",\n  \"epilepsy\",\n  \"epileptic\",\n  \"epilogue\",\n  \"epiphany\",\n  \"episode\",\n  \"equal\",\n  \"equate\",\n  \"equation\",\n  \"equator\",\n  \"equinox\",\n  \"equipment\",\n  \"equity\",\n  \"equivocal\",\n  \"eradicate\",\n  \"erasable\",\n  \"erased\",\n  \"eraser\",\n  \"erasure\",\n  \"ergonomic\",\n  \"errand\",\n  \"errant\",\n  \"erratic\",\n  \"error\",\n  \"erupt\",\n  \"escalate\",\n  \"escalator\",\n  \"escapable\",\n  \"escapade\",\n  \"escapist\",\n  \"escargot\",\n  \"eskimo\",\n  \"esophagus\",\n  \"espionage\",\n  \"espresso\",\n  \"esquire\",\n  \"essay\",\n  \"essence\",\n  \"essential\",\n  \"establish\",\n  \"estate\",\n  \"esteemed\",\n  \"estimate\",\n  \"estimator\",\n  \"estranged\",\n  \"estrogen\",\n  \"etching\",\n  \"eternal\",\n  \"eternity\",\n  \"ethanol\",\n  \"ether\",\n  \"ethically\",\n  \"ethics\",\n  \"euphemism\",\n  \"evacuate\",\n  \"evacuee\",\n  \"evade\",\n  \"evaluate\",\n  \"evaluator\",\n  \"evaporate\",\n  \"evasion\",\n  \"evasive\",\n  \"even\",\n  \"everglade\",\n  \"evergreen\",\n  \"everybody\",\n  \"everyday\",\n  \"everyone\",\n  \"evict\",\n  \"evidence\",\n  \"evident\",\n  \"evil\",\n  \"evoke\",\n  \"evolution\",\n  \"evolve\",\n  \"exact\",\n  \"exalted\",\n  \"example\",\n  \"excavate\",\n  \"excavator\",\n  \"exceeding\",\n  \"exception\",\n  \"excess\",\n  \"exchange\",\n  \"excitable\",\n  \"exciting\",\n  \"exclaim\",\n  \"exclude\",\n  \"excluding\",\n  \"exclusion\",\n  \"exclusive\",\n  \"excretion\",\n  \"excretory\",\n  \"excursion\",\n  \"excusable\",\n  \"excusably\",\n  \"excuse\",\n  \"exemplary\",\n  \"exemplify\",\n  \"exemption\",\n  \"exerciser\",\n  \"exert\",\n  \"exes\",\n  \"exfoliate\",\n  \"exhale\",\n  \"exhaust\",\n  \"exhume\",\n  \"exile\",\n  \"existing\",\n  \"exit\",\n  \"exodus\",\n  \"exonerate\",\n  \"exorcism\",\n  \"exorcist\",\n  \"expand\",\n  \"expanse\",\n  \"expansion\",\n  \"expansive\",\n  \"expectant\",\n  \"expedited\",\n  \"expediter\",\n  \"expel\",\n  \"expend\",\n  \"expenses\",\n  \"expensive\",\n  \"expert\",\n  \"expire\",\n  \"expiring\",\n  \"explain\",\n  \"expletive\",\n  \"explicit\",\n  \"explode\",\n  \"exploit\",\n  \"explore\",\n  \"exploring\",\n  \"exponent\",\n  \"exporter\",\n  \"exposable\",\n  \"expose\",\n  \"exposure\",\n  \"express\",\n  \"expulsion\",\n  \"exquisite\",\n  \"extended\",\n  \"extending\",\n  \"extent\",\n  \"extenuate\",\n  \"exterior\",\n  \"external\",\n  \"extinct\",\n  \"extortion\",\n  \"extradite\",\n  \"extras\",\n  \"extrovert\",\n  \"extrude\",\n  \"extruding\",\n  \"exuberant\",\n  \"fable\",\n  \"fabric\",\n  \"fabulous\",\n  \"facebook\",\n  \"facecloth\",\n  \"facedown\",\n  \"faceless\",\n  \"facelift\",\n  \"faceplate\",\n  \"faceted\",\n  \"facial\",\n  \"facility\",\n  \"facing\",\n  \"facsimile\",\n  \"faction\",\n  \"factoid\",\n  \"factor\",\n  \"factsheet\",\n  \"factual\",\n  \"faculty\",\n  \"fade\",\n  \"fading\",\n  \"failing\",\n  \"falcon\",\n  \"fall\",\n  \"false\",\n  \"falsify\",\n  \"fame\",\n  \"familiar\",\n  \"family\",\n  \"famine\",\n  \"famished\",\n  \"fanatic\",\n  \"fancied\",\n  \"fanciness\",\n  \"fancy\",\n  \"fanfare\",\n  \"fang\",\n  \"fanning\",\n  \"fantasize\",\n  \"fantastic\",\n  \"fantasy\",\n  \"fascism\",\n  \"fastball\",\n  \"faster\",\n  \"fasting\",\n  \"fastness\",\n  \"faucet\",\n  \"favorable\",\n  \"favorably\",\n  \"favored\",\n  \"favoring\",\n  \"favorite\",\n  \"fax\",\n  \"feast\",\n  \"federal\",\n  \"fedora\",\n  \"feeble\",\n  \"feed\",\n  \"feel\",\n  \"feisty\",\n  \"feline\",\n  \"felt-tip\",\n  \"feminine\",\n  \"feminism\",\n  \"feminist\",\n  \"feminize\",\n  \"femur\",\n  \"fence\",\n  \"fencing\",\n  \"fender\",\n  \"ferment\",\n  \"fernlike\",\n  \"ferocious\",\n  \"ferocity\",\n  \"ferret\",\n  \"ferris\",\n  \"ferry\",\n  \"fervor\",\n  \"fester\",\n  \"festival\",\n  \"festive\",\n  \"festivity\",\n  \"fetal\",\n  \"fetch\",\n  \"fever\",\n  \"fiber\",\n  \"fiction\",\n  \"fiddle\",\n  \"fiddling\",\n  \"fidelity\",\n  \"fidgeting\",\n  \"fidgety\",\n  \"fifteen\",\n  \"fifth\",\n  \"fiftieth\",\n  \"fifty\",\n  \"figment\",\n  \"figure\",\n  \"figurine\",\n  \"filing\",\n  \"filled\",\n  \"filler\",\n  \"filling\",\n  \"film\",\n  \"filter\",\n  \"filth\",\n  \"filtrate\",\n  \"finale\",\n  \"finalist\",\n  \"finalize\",\n  \"finally\",\n  \"finance\",\n  \"financial\",\n  \"finch\",\n  \"fineness\",\n  \"finer\",\n  \"finicky\",\n  \"finished\",\n  \"finisher\",\n  \"finishing\",\n  \"finite\",\n  \"finless\",\n  \"finlike\",\n  \"fiscally\",\n  \"fit\",\n  \"five\",\n  \"flaccid\",\n  \"flagman\",\n  \"flagpole\",\n  \"flagship\",\n  \"flagstick\",\n  \"flagstone\",\n  \"flail\",\n  \"flakily\",\n  \"flaky\",\n  \"flame\",\n  \"flammable\",\n  \"flanked\",\n  \"flanking\",\n  \"flannels\",\n  \"flap\",\n  \"flaring\",\n  \"flashback\",\n  \"flashbulb\",\n  \"flashcard\",\n  \"flashily\",\n  \"flashing\",\n  \"flashy\",\n  \"flask\",\n  \"flatbed\",\n  \"flatfoot\",\n  \"flatly\",\n  \"flatness\",\n  \"flatten\",\n  \"flattered\",\n  \"flatterer\",\n  \"flattery\",\n  \"flattop\",\n  \"flatware\",\n  \"flatworm\",\n  \"flavored\",\n  \"flavorful\",\n  \"flavoring\",\n  \"flaxseed\",\n  \"fled\",\n  \"fleshed\",\n  \"fleshy\",\n  \"flick\",\n  \"flier\",\n  \"flight\",\n  \"flinch\",\n  \"fling\",\n  \"flint\",\n  \"flip\",\n  \"flirt\",\n  \"float\",\n  \"flock\",\n  \"flogging\",\n  \"flop\",\n  \"floral\",\n  \"florist\",\n  \"floss\",\n  \"flounder\",\n  \"flyable\",\n  \"flyaway\",\n  \"flyer\",\n  \"flying\",\n  \"flyover\",\n  \"flypaper\",\n  \"foam\",\n  \"foe\",\n  \"fog\",\n  \"foil\",\n  \"folic\",\n  \"folk\",\n  \"follicle\",\n  \"follow\",\n  \"fondling\",\n  \"fondly\",\n  \"fondness\",\n  \"fondue\",\n  \"font\",\n  \"food\",\n  \"fool\",\n  \"footage\",\n  \"football\",\n  \"footbath\",\n  \"footboard\",\n  \"footer\",\n  \"footgear\",\n  \"foothill\",\n  \"foothold\",\n  \"footing\",\n  \"footless\",\n  \"footman\",\n  \"footnote\",\n  \"footpad\",\n  \"footpath\",\n  \"footprint\",\n  \"footrest\",\n  \"footsie\",\n  \"footsore\",\n  \"footwear\",\n  \"footwork\",\n  \"fossil\",\n  \"foster\",\n  \"founder\",\n  \"founding\",\n  \"fountain\",\n  \"fox\",\n  \"foyer\",\n  \"fraction\",\n  \"fracture\",\n  \"fragile\",\n  \"fragility\",\n  \"fragment\",\n  \"fragrance\",\n  \"fragrant\",\n  \"frail\",\n  \"frame\",\n  \"framing\",\n  \"frantic\",\n  \"fraternal\",\n  \"frayed\",\n  \"fraying\",\n  \"frays\",\n  \"freckled\",\n  \"freckles\",\n  \"freebase\",\n  \"freebee\",\n  \"freebie\",\n  \"freedom\",\n  \"freefall\",\n  \"freehand\",\n  \"freeing\",\n  \"freeload\",\n  \"freely\",\n  \"freemason\",\n  \"freeness\",\n  \"freestyle\",\n  \"freeware\",\n  \"freeway\",\n  \"freewill\",\n  \"freezable\",\n  \"freezing\",\n  \"freight\",\n  \"french\",\n  \"frenzied\",\n  \"frenzy\",\n  \"frequency\",\n  \"frequent\",\n  \"fresh\",\n  \"fretful\",\n  \"fretted\",\n  \"friction\",\n  \"friday\",\n  \"fridge\",\n  \"fried\",\n  \"friend\",\n  \"frighten\",\n  \"frightful\",\n  \"frigidity\",\n  \"frigidly\",\n  \"frill\",\n  \"fringe\",\n  \"frisbee\",\n  \"frisk\",\n  \"fritter\",\n  \"frivolous\",\n  \"frolic\",\n  \"from\",\n  \"front\",\n  \"frostbite\",\n  \"frosted\",\n  \"frostily\",\n  \"frosting\",\n  \"frostlike\",\n  \"frosty\",\n  \"froth\",\n  \"frown\",\n  \"frozen\",\n  \"fructose\",\n  \"frugality\",\n  \"frugally\",\n  \"fruit\",\n  \"frustrate\",\n  \"frying\",\n  \"gab\",\n  \"gaffe\",\n  \"gag\",\n  \"gainfully\",\n  \"gaining\",\n  \"gains\",\n  \"gala\",\n  \"gallantly\",\n  \"galleria\",\n  \"gallery\",\n  \"galley\",\n  \"gallon\",\n  \"gallows\",\n  \"gallstone\",\n  \"galore\",\n  \"galvanize\",\n  \"gambling\",\n  \"game\",\n  \"gaming\",\n  \"gamma\",\n  \"gander\",\n  \"gangly\",\n  \"gangrene\",\n  \"gangway\",\n  \"gap\",\n  \"garage\",\n  \"garbage\",\n  \"garden\",\n  \"gargle\",\n  \"garland\",\n  \"garlic\",\n  \"garment\",\n  \"garnet\",\n  \"garnish\",\n  \"garter\",\n  \"gas\",\n  \"gatherer\",\n  \"gathering\",\n  \"gating\",\n  \"gauging\",\n  \"gauntlet\",\n  \"gauze\",\n  \"gave\",\n  \"gawk\",\n  \"gazing\",\n  \"gear\",\n  \"gecko\",\n  \"geek\",\n  \"geiger\",\n  \"gem\",\n  \"gender\",\n  \"generic\",\n  \"generous\",\n  \"genetics\",\n  \"genre\",\n  \"gentile\",\n  \"gentleman\",\n  \"gently\",\n  \"gents\",\n  \"geography\",\n  \"geologic\",\n  \"geologist\",\n  \"geology\",\n  \"geometric\",\n  \"geometry\",\n  \"geranium\",\n  \"gerbil\",\n  \"geriatric\",\n  \"germicide\",\n  \"germinate\",\n  \"germless\",\n  \"germproof\",\n  \"gestate\",\n  \"gestation\",\n  \"gesture\",\n  \"getaway\",\n  \"getting\",\n  \"getup\",\n  \"giant\",\n  \"gibberish\",\n  \"giblet\",\n  \"giddily\",\n  \"giddiness\",\n  \"giddy\",\n  \"gift\",\n  \"gigabyte\",\n  \"gigahertz\",\n  \"gigantic\",\n  \"giggle\",\n  \"giggling\",\n  \"giggly\",\n  \"gigolo\",\n  \"gilled\",\n  \"gills\",\n  \"gimmick\",\n  \"girdle\",\n  \"giveaway\",\n  \"given\",\n  \"giver\",\n  \"giving\",\n  \"gizmo\",\n  \"gizzard\",\n  \"glacial\",\n  \"glacier\",\n  \"glade\",\n  \"gladiator\",\n  \"gladly\",\n  \"glamorous\",\n  \"glamour\",\n  \"glance\",\n  \"glancing\",\n  \"glandular\",\n  \"glare\",\n  \"glaring\",\n  \"glass\",\n  \"glaucoma\",\n  \"glazing\",\n  \"gleaming\",\n  \"gleeful\",\n  \"glider\",\n  \"gliding\",\n  \"glimmer\",\n  \"glimpse\",\n  \"glisten\",\n  \"glitch\",\n  \"glitter\",\n  \"glitzy\",\n  \"gloater\",\n  \"gloating\",\n  \"gloomily\",\n  \"gloomy\",\n  \"glorified\",\n  \"glorifier\",\n  \"glorify\",\n  \"glorious\",\n  \"glory\",\n  \"gloss\",\n  \"glove\",\n  \"glowing\",\n  \"glowworm\",\n  \"glucose\",\n  \"glue\",\n  \"gluten\",\n  \"glutinous\",\n  \"glutton\",\n  \"gnarly\",\n  \"gnat\",\n  \"goal\",\n  \"goatskin\",\n  \"goes\",\n  \"goggles\",\n  \"going\",\n  \"goldfish\",\n  \"goldmine\",\n  \"goldsmith\",\n  \"golf\",\n  \"goliath\",\n  \"gonad\",\n  \"gondola\",\n  \"gone\",\n  \"gong\",\n  \"good\",\n  \"gooey\",\n  \"goofball\",\n  \"goofiness\",\n  \"goofy\",\n  \"google\",\n  \"goon\",\n  \"gopher\",\n  \"gore\",\n  \"gorged\",\n  \"gorgeous\",\n  \"gory\",\n  \"gosling\",\n  \"gossip\",\n  \"gothic\",\n  \"gotten\",\n  \"gout\",\n  \"gown\",\n  \"grab\",\n  \"graceful\",\n  \"graceless\",\n  \"gracious\",\n  \"gradation\",\n  \"graded\",\n  \"grader\",\n  \"gradient\",\n  \"grading\",\n  \"gradually\",\n  \"graduate\",\n  \"graffiti\",\n  \"grafted\",\n  \"grafting\",\n  \"grain\",\n  \"granddad\",\n  \"grandkid\",\n  \"grandly\",\n  \"grandma\",\n  \"grandpa\",\n  \"grandson\",\n  \"granite\",\n  \"granny\",\n  \"granola\",\n  \"grant\",\n  \"granular\",\n  \"grape\",\n  \"graph\",\n  \"grapple\",\n  \"grappling\",\n  \"grasp\",\n  \"grass\",\n  \"gratified\",\n  \"gratify\",\n  \"grating\",\n  \"gratitude\",\n  \"gratuity\",\n  \"gravel\",\n  \"graveness\",\n  \"graves\",\n  \"graveyard\",\n  \"gravitate\",\n  \"gravity\",\n  \"gravy\",\n  \"gray\",\n  \"grazing\",\n  \"greasily\",\n  \"greedily\",\n  \"greedless\",\n  \"greedy\",\n  \"green\",\n  \"greeter\",\n  \"greeting\",\n  \"grew\",\n  \"greyhound\",\n  \"grid\",\n  \"grief\",\n  \"grievance\",\n  \"grieving\",\n  \"grievous\",\n  \"grill\",\n  \"grimace\",\n  \"grimacing\",\n  \"grime\",\n  \"griminess\",\n  \"grimy\",\n  \"grinch\",\n  \"grinning\",\n  \"grip\",\n  \"gristle\",\n  \"grit\",\n  \"groggily\",\n  \"groggy\",\n  \"groin\",\n  \"groom\",\n  \"groove\",\n  \"grooving\",\n  \"groovy\",\n  \"grope\",\n  \"ground\",\n  \"grouped\",\n  \"grout\",\n  \"grove\",\n  \"grower\",\n  \"growing\",\n  \"growl\",\n  \"grub\",\n  \"grudge\",\n  \"grudging\",\n  \"grueling\",\n  \"gruffly\",\n  \"grumble\",\n  \"grumbling\",\n  \"grumbly\",\n  \"grumpily\",\n  \"grunge\",\n  \"grunt\",\n  \"guacamole\",\n  \"guidable\",\n  \"guidance\",\n  \"guide\",\n  \"guiding\",\n  \"guileless\",\n  \"guise\",\n  \"gulf\",\n  \"gullible\",\n  \"gully\",\n  \"gulp\",\n  \"gumball\",\n  \"gumdrop\",\n  \"gumminess\",\n  \"gumming\",\n  \"gummy\",\n  \"gurgle\",\n  \"gurgling\",\n  \"guru\",\n  \"gush\",\n  \"gusto\",\n  \"gusty\",\n  \"gutless\",\n  \"guts\",\n  \"gutter\",\n  \"guy\",\n  \"guzzler\",\n  \"gyration\",\n  \"habitable\",\n  \"habitant\",\n  \"habitat\",\n  \"habitual\",\n  \"hacked\",\n  \"hacker\",\n  \"hacking\",\n  \"hacksaw\",\n  \"had\",\n  \"haggler\",\n  \"haiku\",\n  \"half\",\n  \"halogen\",\n  \"halt\",\n  \"halved\",\n  \"halves\",\n  \"hamburger\",\n  \"hamlet\",\n  \"hammock\",\n  \"hamper\",\n  \"hamster\",\n  \"hamstring\",\n  \"handbag\",\n  \"handball\",\n  \"handbook\",\n  \"handbrake\",\n  \"handcart\",\n  \"handclap\",\n  \"handclasp\",\n  \"handcraft\",\n  \"handcuff\",\n  \"handed\",\n  \"handful\",\n  \"handgrip\",\n  \"handgun\",\n  \"handheld\",\n  \"handiness\",\n  \"handiwork\",\n  \"handlebar\",\n  \"handled\",\n  \"handler\",\n  \"handling\",\n  \"handmade\",\n  \"handoff\",\n  \"handpick\",\n  \"handprint\",\n  \"handrail\",\n  \"handsaw\",\n  \"handset\",\n  \"handsfree\",\n  \"handshake\",\n  \"handstand\",\n  \"handwash\",\n  \"handwork\",\n  \"handwoven\",\n  \"handwrite\",\n  \"handyman\",\n  \"hangnail\",\n  \"hangout\",\n  \"hangover\",\n  \"hangup\",\n  \"hankering\",\n  \"hankie\",\n  \"hanky\",\n  \"haphazard\",\n  \"happening\",\n  \"happier\",\n  \"happiest\",\n  \"happily\",\n  \"happiness\",\n  \"happy\",\n  \"harbor\",\n  \"hardcopy\",\n  \"hardcore\",\n  \"hardcover\",\n  \"harddisk\",\n  \"hardened\",\n  \"hardener\",\n  \"hardening\",\n  \"hardhat\",\n  \"hardhead\",\n  \"hardiness\",\n  \"hardly\",\n  \"hardness\",\n  \"hardship\",\n  \"hardware\",\n  \"hardwired\",\n  \"hardwood\",\n  \"hardy\",\n  \"harmful\",\n  \"harmless\",\n  \"harmonica\",\n  \"harmonics\",\n  \"harmonize\",\n  \"harmony\",\n  \"harness\",\n  \"harpist\",\n  \"harsh\",\n  \"harvest\",\n  \"hash\",\n  \"hassle\",\n  \"haste\",\n  \"hastily\",\n  \"hastiness\",\n  \"hasty\",\n  \"hatbox\",\n  \"hatchback\",\n  \"hatchery\",\n  \"hatchet\",\n  \"hatching\",\n  \"hatchling\",\n  \"hate\",\n  \"hatless\",\n  \"hatred\",\n  \"haunt\",\n  \"haven\",\n  \"hazard\",\n  \"hazelnut\",\n  \"hazily\",\n  \"haziness\",\n  \"hazing\",\n  \"hazy\",\n  \"headache\",\n  \"headband\",\n  \"headboard\",\n  \"headcount\",\n  \"headdress\",\n  \"headed\",\n  \"header\",\n  \"headfirst\",\n  \"headgear\",\n  \"heading\",\n  \"headlamp\",\n  \"headless\",\n  \"headlock\",\n  \"headphone\",\n  \"headpiece\",\n  \"headrest\",\n  \"headroom\",\n  \"headscarf\",\n  \"headset\",\n  \"headsman\",\n  \"headstand\",\n  \"headstone\",\n  \"headway\",\n  \"headwear\",\n  \"heap\",\n  \"heat\",\n  \"heave\",\n  \"heavily\",\n  \"heaviness\",\n  \"heaving\",\n  \"hedge\",\n  \"hedging\",\n  \"heftiness\",\n  \"hefty\",\n  \"helium\",\n  \"helmet\",\n  \"helper\",\n  \"helpful\",\n  \"helping\",\n  \"helpless\",\n  \"helpline\",\n  \"hemlock\",\n  \"hemstitch\",\n  \"hence\",\n  \"henchman\",\n  \"henna\",\n  \"herald\",\n  \"herbal\",\n  \"herbicide\",\n  \"herbs\",\n  \"heritage\",\n  \"hermit\",\n  \"heroics\",\n  \"heroism\",\n  \"herring\",\n  \"herself\",\n  \"hertz\",\n  \"hesitancy\",\n  \"hesitant\",\n  \"hesitate\",\n  \"hexagon\",\n  \"hexagram\",\n  \"hubcap\",\n  \"huddle\",\n  \"huddling\",\n  \"huff\",\n  \"hug\",\n  \"hula\",\n  \"hulk\",\n  \"hull\",\n  \"human\",\n  \"humble\",\n  \"humbling\",\n  \"humbly\",\n  \"humid\",\n  \"humiliate\",\n  \"humility\",\n  \"humming\",\n  \"hummus\",\n  \"humongous\",\n  \"humorist\",\n  \"humorless\",\n  \"humorous\",\n  \"humpback\",\n  \"humped\",\n  \"humvee\",\n  \"hunchback\",\n  \"hundredth\",\n  \"hunger\",\n  \"hungrily\",\n  \"hungry\",\n  \"hunk\",\n  \"hunter\",\n  \"hunting\",\n  \"huntress\",\n  \"huntsman\",\n  \"hurdle\",\n  \"hurled\",\n  \"hurler\",\n  \"hurling\",\n  \"hurray\",\n  \"hurricane\",\n  \"hurried\",\n  \"hurry\",\n  \"hurt\",\n  \"husband\",\n  \"hush\",\n  \"husked\",\n  \"huskiness\",\n  \"hut\",\n  \"hybrid\",\n  \"hydrant\",\n  \"hydrated\",\n  \"hydration\",\n  \"hydrogen\",\n  \"hydroxide\",\n  \"hyperlink\",\n  \"hypertext\",\n  \"hyphen\",\n  \"hypnoses\",\n  \"hypnosis\",\n  \"hypnotic\",\n  \"hypnotism\",\n  \"hypnotist\",\n  \"hypnotize\",\n  \"hypocrisy\",\n  \"hypocrite\",\n  \"ibuprofen\",\n  \"ice\",\n  \"iciness\",\n  \"icing\",\n  \"icky\",\n  \"icon\",\n  \"icy\",\n  \"idealism\",\n  \"idealist\",\n  \"idealize\",\n  \"ideally\",\n  \"idealness\",\n  \"identical\",\n  \"identify\",\n  \"identity\",\n  \"ideology\",\n  \"idiocy\",\n  \"idiom\",\n  \"idly\",\n  \"igloo\",\n  \"ignition\",\n  \"ignore\",\n  \"iguana\",\n  \"illicitly\",\n  \"illusion\",\n  \"illusive\",\n  \"image\",\n  \"imaginary\",\n  \"imagines\",\n  \"imaging\",\n  \"imbecile\",\n  \"imitate\",\n  \"imitation\",\n  \"immature\",\n  \"immerse\",\n  \"immersion\",\n  \"imminent\",\n  \"immobile\",\n  \"immodest\",\n  \"immorally\",\n  \"immortal\",\n  \"immovable\",\n  \"immovably\",\n  \"immunity\",\n  \"immunize\",\n  \"impaired\",\n  \"impale\",\n  \"impart\",\n  \"impatient\",\n  \"impeach\",\n  \"impeding\",\n  \"impending\",\n  \"imperfect\",\n  \"imperial\",\n  \"impish\",\n  \"implant\",\n  \"implement\",\n  \"implicate\",\n  \"implicit\",\n  \"implode\",\n  \"implosion\",\n  \"implosive\",\n  \"imply\",\n  \"impolite\",\n  \"important\",\n  \"importer\",\n  \"impose\",\n  \"imposing\",\n  \"impotence\",\n  \"impotency\",\n  \"impotent\",\n  \"impound\",\n  \"imprecise\",\n  \"imprint\",\n  \"imprison\",\n  \"impromptu\",\n  \"improper\",\n  \"improve\",\n  \"improving\",\n  \"improvise\",\n  \"imprudent\",\n  \"impulse\",\n  \"impulsive\",\n  \"impure\",\n  \"impurity\",\n  \"iodine\",\n  \"iodize\",\n  \"ion\",\n  \"ipad\",\n  \"iphone\",\n  \"ipod\",\n  \"irate\",\n  \"irk\",\n  \"iron\",\n  \"irregular\",\n  \"irrigate\",\n  \"irritable\",\n  \"irritably\",\n  \"irritant\",\n  \"irritate\",\n  \"islamic\",\n  \"islamist\",\n  \"isolated\",\n  \"isolating\",\n  \"isolation\",\n  \"isotope\",\n  \"issue\",\n  \"issuing\",\n  \"italicize\",\n  \"italics\",\n  \"item\",\n  \"itinerary\",\n  \"itunes\",\n  \"ivory\",\n  \"ivy\",\n  \"jab\",\n  \"jackal\",\n  \"jacket\",\n  \"jackknife\",\n  \"jackpot\",\n  \"jailbird\",\n  \"jailbreak\",\n  \"jailer\",\n  \"jailhouse\",\n  \"jalapeno\",\n  \"jam\",\n  \"janitor\",\n  \"january\",\n  \"jargon\",\n  \"jarring\",\n  \"jasmine\",\n  \"jaundice\",\n  \"jaunt\",\n  \"java\",\n  \"jawed\",\n  \"jawless\",\n  \"jawline\",\n  \"jaws\",\n  \"jaybird\",\n  \"jaywalker\",\n  \"jazz\",\n  \"jeep\",\n  \"jeeringly\",\n  \"jellied\",\n  \"jelly\",\n  \"jersey\",\n  \"jester\",\n  \"jet\",\n  \"jiffy\",\n  \"jigsaw\",\n  \"jimmy\",\n  \"jingle\",\n  \"jingling\",\n  \"jinx\",\n  \"jitters\",\n  \"jittery\",\n  \"job\",\n  \"jockey\",\n  \"jockstrap\",\n  \"jogger\",\n  \"jogging\",\n  \"john\",\n  \"joining\",\n  \"jokester\",\n  \"jokingly\",\n  \"jolliness\",\n  \"jolly\",\n  \"jolt\",\n  \"jot\",\n  \"jovial\",\n  \"joyfully\",\n  \"joylessly\",\n  \"joyous\",\n  \"joyride\",\n  \"joystick\",\n  \"jubilance\",\n  \"jubilant\",\n  \"judge\",\n  \"judgingly\",\n  \"judicial\",\n  \"judiciary\",\n  \"judo\",\n  \"juggle\",\n  \"juggling\",\n  \"jugular\",\n  \"juice\",\n  \"juiciness\",\n  \"juicy\",\n  \"jujitsu\",\n  \"jukebox\",\n  \"july\",\n  \"jumble\",\n  \"jumbo\",\n  \"jump\",\n  \"junction\",\n  \"juncture\",\n  \"june\",\n  \"junior\",\n  \"juniper\",\n  \"junkie\",\n  \"junkman\",\n  \"junkyard\",\n  \"jurist\",\n  \"juror\",\n  \"jury\",\n  \"justice\",\n  \"justifier\",\n  \"justify\",\n  \"justly\",\n  \"justness\",\n  \"juvenile\",\n  \"kabob\",\n  \"kangaroo\",\n  \"karaoke\",\n  \"karate\",\n  \"karma\",\n  \"kebab\",\n  \"keenly\",\n  \"keenness\",\n  \"keep\",\n  \"keg\",\n  \"kelp\",\n  \"kennel\",\n  \"kept\",\n  \"kerchief\",\n  \"kerosene\",\n  \"kettle\",\n  \"kick\",\n  \"kiln\",\n  \"kilobyte\",\n  \"kilogram\",\n  \"kilometer\",\n  \"kilowatt\",\n  \"kilt\",\n  \"kimono\",\n  \"kindle\",\n  \"kindling\",\n  \"kindly\",\n  \"kindness\",\n  \"kindred\",\n  \"kinetic\",\n  \"kinfolk\",\n  \"king\",\n  \"kinship\",\n  \"kinsman\",\n  \"kinswoman\",\n  \"kissable\",\n  \"kisser\",\n  \"kissing\",\n  \"kitchen\",\n  \"kite\",\n  \"kitten\",\n  \"kitty\",\n  \"kiwi\",\n  \"kleenex\",\n  \"knapsack\",\n  \"knee\",\n  \"knelt\",\n  \"knickers\",\n  \"knoll\",\n  \"koala\",\n  \"kooky\",\n  \"kosher\",\n  \"krypton\",\n  \"kudos\",\n  \"kung\",\n  \"labored\",\n  \"laborer\",\n  \"laboring\",\n  \"laborious\",\n  \"labrador\",\n  \"ladder\",\n  \"ladies\",\n  \"ladle\",\n  \"ladybug\",\n  \"ladylike\",\n  \"lagged\",\n  \"lagging\",\n  \"lagoon\",\n  \"lair\",\n  \"lake\",\n  \"lance\",\n  \"landed\",\n  \"landfall\",\n  \"landfill\",\n  \"landing\",\n  \"landlady\",\n  \"landless\",\n  \"landline\",\n  \"landlord\",\n  \"landmark\",\n  \"landmass\",\n  \"landmine\",\n  \"landowner\",\n  \"landscape\",\n  \"landside\",\n  \"landslide\",\n  \"language\",\n  \"lankiness\",\n  \"lanky\",\n  \"lantern\",\n  \"lapdog\",\n  \"lapel\",\n  \"lapped\",\n  \"lapping\",\n  \"laptop\",\n  \"lard\",\n  \"large\",\n  \"lark\",\n  \"lash\",\n  \"lasso\",\n  \"last\",\n  \"latch\",\n  \"late\",\n  \"lather\",\n  \"latitude\",\n  \"latrine\",\n  \"latter\",\n  \"latticed\",\n  \"launch\",\n  \"launder\",\n  \"laundry\",\n  \"laurel\",\n  \"lavender\",\n  \"lavish\",\n  \"laxative\",\n  \"lazily\",\n  \"laziness\",\n  \"lazy\",\n  \"lecturer\",\n  \"left\",\n  \"legacy\",\n  \"legal\",\n  \"legend\",\n  \"legged\",\n  \"leggings\",\n  \"legible\",\n  \"legibly\",\n  \"legislate\",\n  \"lego\",\n  \"legroom\",\n  \"legume\",\n  \"legwarmer\",\n  \"legwork\",\n  \"lemon\",\n  \"lend\",\n  \"length\",\n  \"lens\",\n  \"lent\",\n  \"leotard\",\n  \"lesser\",\n  \"letdown\",\n  \"lethargic\",\n  \"lethargy\",\n  \"letter\",\n  \"lettuce\",\n  \"level\",\n  \"leverage\",\n  \"levers\",\n  \"levitate\",\n  \"levitator\",\n  \"liability\",\n  \"liable\",\n  \"liberty\",\n  \"librarian\",\n  \"library\",\n  \"licking\",\n  \"licorice\",\n  \"lid\",\n  \"life\",\n  \"lifter\",\n  \"lifting\",\n  \"liftoff\",\n  \"ligament\",\n  \"likely\",\n  \"likeness\",\n  \"likewise\",\n  \"liking\",\n  \"lilac\",\n  \"lilly\",\n  \"lily\",\n  \"limb\",\n  \"limeade\",\n  \"limelight\",\n  \"limes\",\n  \"limit\",\n  \"limping\",\n  \"limpness\",\n  \"line\",\n  \"lingo\",\n  \"linguini\",\n  \"linguist\",\n  \"lining\",\n  \"linked\",\n  \"linoleum\",\n  \"linseed\",\n  \"lint\",\n  \"lion\",\n  \"lip\",\n  \"liquefy\",\n  \"liqueur\",\n  \"liquid\",\n  \"lisp\",\n  \"list\",\n  \"litigate\",\n  \"litigator\",\n  \"litmus\",\n  \"litter\",\n  \"little\",\n  \"livable\",\n  \"lived\",\n  \"lively\",\n  \"liver\",\n  \"livestock\",\n  \"lividly\",\n  \"living\",\n  \"lizard\",\n  \"lubricant\",\n  \"lubricate\",\n  \"lucid\",\n  \"luckily\",\n  \"luckiness\",\n  \"luckless\",\n  \"lucrative\",\n  \"ludicrous\",\n  \"lugged\",\n  \"lukewarm\",\n  \"lullaby\",\n  \"lumber\",\n  \"luminance\",\n  \"luminous\",\n  \"lumpiness\",\n  \"lumping\",\n  \"lumpish\",\n  \"lunacy\",\n  \"lunar\",\n  \"lunchbox\",\n  \"luncheon\",\n  \"lunchroom\",\n  \"lunchtime\",\n  \"lung\",\n  \"lurch\",\n  \"lure\",\n  \"luridness\",\n  \"lurk\",\n  \"lushly\",\n  \"lushness\",\n  \"luster\",\n  \"lustfully\",\n  \"lustily\",\n  \"lustiness\",\n  \"lustrous\",\n  \"lusty\",\n  \"luxurious\",\n  \"luxury\",\n  \"lying\",\n  \"lyrically\",\n  \"lyricism\",\n  \"lyricist\",\n  \"lyrics\",\n  \"macarena\",\n  \"macaroni\",\n  \"macaw\",\n  \"mace\",\n  \"machine\",\n  \"machinist\",\n  \"magazine\",\n  \"magenta\",\n  \"maggot\",\n  \"magical\",\n  \"magician\",\n  \"magma\",\n  \"magnesium\",\n  \"magnetic\",\n  \"magnetism\",\n  \"magnetize\",\n  \"magnifier\",\n  \"magnify\",\n  \"magnitude\",\n  \"magnolia\",\n  \"mahogany\",\n  \"maimed\",\n  \"majestic\",\n  \"majesty\",\n  \"majorette\",\n  \"majority\",\n  \"makeover\",\n  \"maker\",\n  \"makeshift\",\n  \"making\",\n  \"malformed\",\n  \"malt\",\n  \"mama\",\n  \"mammal\",\n  \"mammary\",\n  \"mammogram\",\n  \"manager\",\n  \"managing\",\n  \"manatee\",\n  \"mandarin\",\n  \"mandate\",\n  \"mandatory\",\n  \"mandolin\",\n  \"manger\",\n  \"mangle\",\n  \"mango\",\n  \"mangy\",\n  \"manhandle\",\n  \"manhole\",\n  \"manhood\",\n  \"manhunt\",\n  \"manicotti\",\n  \"manicure\",\n  \"manifesto\",\n  \"manila\",\n  \"mankind\",\n  \"manlike\",\n  \"manliness\",\n  \"manly\",\n  \"manmade\",\n  \"manned\",\n  \"mannish\",\n  \"manor\",\n  \"manpower\",\n  \"mantis\",\n  \"mantra\",\n  \"manual\",\n  \"many\",\n  \"map\",\n  \"marathon\",\n  \"marauding\",\n  \"marbled\",\n  \"marbles\",\n  \"marbling\",\n  \"march\",\n  \"mardi\",\n  \"margarine\",\n  \"margarita\",\n  \"margin\",\n  \"marigold\",\n  \"marina\",\n  \"marine\",\n  \"marital\",\n  \"maritime\",\n  \"marlin\",\n  \"marmalade\",\n  \"maroon\",\n  \"married\",\n  \"marrow\",\n  \"marry\",\n  \"marshland\",\n  \"marshy\",\n  \"marsupial\",\n  \"marvelous\",\n  \"marxism\",\n  \"mascot\",\n  \"masculine\",\n  \"mashed\",\n  \"mashing\",\n  \"massager\",\n  \"masses\",\n  \"massive\",\n  \"mastiff\",\n  \"matador\",\n  \"matchbook\",\n  \"matchbox\",\n  \"matcher\",\n  \"matching\",\n  \"matchless\",\n  \"material\",\n  \"maternal\",\n  \"maternity\",\n  \"math\",\n  \"mating\",\n  \"matriarch\",\n  \"matrimony\",\n  \"matrix\",\n  \"matron\",\n  \"matted\",\n  \"matter\",\n  \"maturely\",\n  \"maturing\",\n  \"maturity\",\n  \"mauve\",\n  \"maverick\",\n  \"maximize\",\n  \"maximum\",\n  \"maybe\",\n  \"mayday\",\n  \"mayflower\",\n  \"moaner\",\n  \"moaning\",\n  \"mobile\",\n  \"mobility\",\n  \"mobilize\",\n  \"mobster\",\n  \"mocha\",\n  \"mocker\",\n  \"mockup\",\n  \"modified\",\n  \"modify\",\n  \"modular\",\n  \"modulator\",\n  \"module\",\n  \"moisten\",\n  \"moistness\",\n  \"moisture\",\n  \"molar\",\n  \"molasses\",\n  \"mold\",\n  \"molecular\",\n  \"molecule\",\n  \"molehill\",\n  \"mollusk\",\n  \"mom\",\n  \"monastery\",\n  \"monday\",\n  \"monetary\",\n  \"monetize\",\n  \"moneybags\",\n  \"moneyless\",\n  \"moneywise\",\n  \"mongoose\",\n  \"mongrel\",\n  \"monitor\",\n  \"monkhood\",\n  \"monogamy\",\n  \"monogram\",\n  \"monologue\",\n  \"monopoly\",\n  \"monorail\",\n  \"monotone\",\n  \"monotype\",\n  \"monoxide\",\n  \"monsieur\",\n  \"monsoon\",\n  \"monstrous\",\n  \"monthly\",\n  \"monument\",\n  \"moocher\",\n  \"moodiness\",\n  \"moody\",\n  \"mooing\",\n  \"moonbeam\",\n  \"mooned\",\n  \"moonlight\",\n  \"moonlike\",\n  \"moonlit\",\n  \"moonrise\",\n  \"moonscape\",\n  \"moonshine\",\n  \"moonstone\",\n  \"moonwalk\",\n  \"mop\",\n  \"morale\",\n  \"morality\",\n  \"morally\",\n  \"morbidity\",\n  \"morbidly\",\n  \"morphine\",\n  \"morphing\",\n  \"morse\",\n  \"mortality\",\n  \"mortally\",\n  \"mortician\",\n  \"mortified\",\n  \"mortify\",\n  \"mortuary\",\n  \"mosaic\",\n  \"mossy\",\n  \"most\",\n  \"mothball\",\n  \"mothproof\",\n  \"motion\",\n  \"motivate\",\n  \"motivator\",\n  \"motive\",\n  \"motocross\",\n  \"motor\",\n  \"motto\",\n  \"mountable\",\n  \"mountain\",\n  \"mounted\",\n  \"mounting\",\n  \"mourner\",\n  \"mournful\",\n  \"mouse\",\n  \"mousiness\",\n  \"moustache\",\n  \"mousy\",\n  \"mouth\",\n  \"movable\",\n  \"move\",\n  \"movie\",\n  \"moving\",\n  \"mower\",\n  \"mowing\",\n  \"much\",\n  \"muck\",\n  \"mud\",\n  \"mug\",\n  \"mulberry\",\n  \"mulch\",\n  \"mule\",\n  \"mulled\",\n  \"mullets\",\n  \"multiple\",\n  \"multiply\",\n  \"multitask\",\n  \"multitude\",\n  \"mumble\",\n  \"mumbling\",\n  \"mumbo\",\n  \"mummified\",\n  \"mummify\",\n  \"mummy\",\n  \"mumps\",\n  \"munchkin\",\n  \"mundane\",\n  \"municipal\",\n  \"muppet\",\n  \"mural\",\n  \"murkiness\",\n  \"murky\",\n  \"murmuring\",\n  \"muscular\",\n  \"museum\",\n  \"mushily\",\n  \"mushiness\",\n  \"mushroom\",\n  \"mushy\",\n  \"music\",\n  \"musket\",\n  \"muskiness\",\n  \"musky\",\n  \"mustang\",\n  \"mustard\",\n  \"muster\",\n  \"mustiness\",\n  \"musty\",\n  \"mutable\",\n  \"mutate\",\n  \"mutation\",\n  \"mute\",\n  \"mutilated\",\n  \"mutilator\",\n  \"mutiny\",\n  \"mutt\",\n  \"mutual\",\n  \"muzzle\",\n  \"myself\",\n  \"myspace\",\n  \"mystified\",\n  \"mystify\",\n  \"myth\",\n  \"nacho\",\n  \"nag\",\n  \"nail\",\n  \"name\",\n  \"naming\",\n  \"nanny\",\n  \"nanometer\",\n  \"nape\",\n  \"napkin\",\n  \"napped\",\n  \"napping\",\n  \"nappy\",\n  \"narrow\",\n  \"nastily\",\n  \"nastiness\",\n  \"national\",\n  \"native\",\n  \"nativity\",\n  \"natural\",\n  \"nature\",\n  \"naturist\",\n  \"nautical\",\n  \"navigate\",\n  \"navigator\",\n  \"navy\",\n  \"nearby\",\n  \"nearest\",\n  \"nearly\",\n  \"nearness\",\n  \"neatly\",\n  \"neatness\",\n  \"nebula\",\n  \"nebulizer\",\n  \"nectar\",\n  \"negate\",\n  \"negation\",\n  \"negative\",\n  \"neglector\",\n  \"negligee\",\n  \"negligent\",\n  \"negotiate\",\n  \"nemeses\",\n  \"nemesis\",\n  \"neon\",\n  \"nephew\",\n  \"nerd\",\n  \"nervous\",\n  \"nervy\",\n  \"nest\",\n  \"net\",\n  \"neurology\",\n  \"neuron\",\n  \"neurosis\",\n  \"neurotic\",\n  \"neuter\",\n  \"neutron\",\n  \"never\",\n  \"next\",\n  \"nibble\",\n  \"nickname\",\n  \"nicotine\",\n  \"niece\",\n  \"nifty\",\n  \"nimble\",\n  \"nimbly\",\n  \"nineteen\",\n  \"ninetieth\",\n  \"ninja\",\n  \"nintendo\",\n  \"ninth\",\n  \"nuclear\",\n  \"nuclei\",\n  \"nucleus\",\n  \"nugget\",\n  \"nullify\",\n  \"number\",\n  \"numbing\",\n  \"numbly\",\n  \"numbness\",\n  \"numeral\",\n  \"numerate\",\n  \"numerator\",\n  \"numeric\",\n  \"numerous\",\n  \"nuptials\",\n  \"nursery\",\n  \"nursing\",\n  \"nurture\",\n  \"nutcase\",\n  \"nutlike\",\n  \"nutmeg\",\n  \"nutrient\",\n  \"nutshell\",\n  \"nuttiness\",\n  \"nutty\",\n  \"nuzzle\",\n  \"nylon\",\n  \"oaf\",\n  \"oak\",\n  \"oasis\",\n  \"oat\",\n  \"obedience\",\n  \"obedient\",\n  \"obituary\",\n  \"object\",\n  \"obligate\",\n  \"obliged\",\n  \"oblivion\",\n  \"oblivious\",\n  \"oblong\",\n  \"obnoxious\",\n  \"oboe\",\n  \"obscure\",\n  \"obscurity\",\n  \"observant\",\n  \"observer\",\n  \"observing\",\n  \"obsessed\",\n  \"obsession\",\n  \"obsessive\",\n  \"obsolete\",\n  \"obstacle\",\n  \"obstinate\",\n  \"obstruct\",\n  \"obtain\",\n  \"obtrusive\",\n  \"obtuse\",\n  \"obvious\",\n  \"occultist\",\n  \"occupancy\",\n  \"occupant\",\n  \"occupier\",\n  \"occupy\",\n  \"ocean\",\n  \"ocelot\",\n  \"octagon\",\n  \"octane\",\n  \"october\",\n  \"octopus\",\n  \"ogle\",\n  \"oil\",\n  \"oink\",\n  \"ointment\",\n  \"okay\",\n  \"old\",\n  \"olive\",\n  \"olympics\",\n  \"omega\",\n  \"omen\",\n  \"ominous\",\n  \"omission\",\n  \"omit\",\n  \"omnivore\",\n  \"onboard\",\n  \"oncoming\",\n  \"ongoing\",\n  \"onion\",\n  \"online\",\n  \"onlooker\",\n  \"only\",\n  \"onscreen\",\n  \"onset\",\n  \"onshore\",\n  \"onslaught\",\n  \"onstage\",\n  \"onto\",\n  \"onward\",\n  \"onyx\",\n  \"oops\",\n  \"ooze\",\n  \"oozy\",\n  \"opacity\",\n  \"opal\",\n  \"open\",\n  \"operable\",\n  \"operate\",\n  \"operating\",\n  \"operation\",\n  \"operative\",\n  \"operator\",\n  \"opium\",\n  \"opossum\",\n  \"opponent\",\n  \"oppose\",\n  \"opposing\",\n  \"opposite\",\n  \"oppressed\",\n  \"oppressor\",\n  \"opt\",\n  \"opulently\",\n  \"osmosis\",\n  \"other\",\n  \"otter\",\n  \"ouch\",\n  \"ought\",\n  \"ounce\",\n  \"outage\",\n  \"outback\",\n  \"outbid\",\n  \"outboard\",\n  \"outbound\",\n  \"outbreak\",\n  \"outburst\",\n  \"outcast\",\n  \"outclass\",\n  \"outcome\",\n  \"outdated\",\n  \"outdoors\",\n  \"outer\",\n  \"outfield\",\n  \"outfit\",\n  \"outflank\",\n  \"outgoing\",\n  \"outgrow\",\n  \"outhouse\",\n  \"outing\",\n  \"outlast\",\n  \"outlet\",\n  \"outline\",\n  \"outlook\",\n  \"outlying\",\n  \"outmatch\",\n  \"outmost\",\n  \"outnumber\",\n  \"outplayed\",\n  \"outpost\",\n  \"outpour\",\n  \"output\",\n  \"outrage\",\n  \"outrank\",\n  \"outreach\",\n  \"outright\",\n  \"outscore\",\n  \"outsell\",\n  \"outshine\",\n  \"outshoot\",\n  \"outsider\",\n  \"outskirts\",\n  \"outsmart\",\n  \"outsource\",\n  \"outspoken\",\n  \"outtakes\",\n  \"outthink\",\n  \"outward\",\n  \"outweigh\",\n  \"outwit\",\n  \"oval\",\n  \"ovary\",\n  \"oven\",\n  \"overact\",\n  \"overall\",\n  \"overarch\",\n  \"overbid\",\n  \"overbill\",\n  \"overbite\",\n  \"overblown\",\n  \"overboard\",\n  \"overbook\",\n  \"overbuilt\",\n  \"overcast\",\n  \"overcoat\",\n  \"overcome\",\n  \"overcook\",\n  \"overcrowd\",\n  \"overdraft\",\n  \"overdrawn\",\n  \"overdress\",\n  \"overdrive\",\n  \"overdue\",\n  \"overeager\",\n  \"overeater\",\n  \"overexert\",\n  \"overfed\",\n  \"overfeed\",\n  \"overfill\",\n  \"overflow\",\n  \"overfull\",\n  \"overgrown\",\n  \"overhand\",\n  \"overhang\",\n  \"overhaul\",\n  \"overhead\",\n  \"overhear\",\n  \"overheat\",\n  \"overhung\",\n  \"overjoyed\",\n  \"overkill\",\n  \"overlabor\",\n  \"overlaid\",\n  \"overlap\",\n  \"overlay\",\n  \"overload\",\n  \"overlook\",\n  \"overlord\",\n  \"overlying\",\n  \"overnight\",\n  \"overpass\",\n  \"overpay\",\n  \"overplant\",\n  \"overplay\",\n  \"overpower\",\n  \"overprice\",\n  \"overrate\",\n  \"overreach\",\n  \"overreact\",\n  \"override\",\n  \"overripe\",\n  \"overrule\",\n  \"overrun\",\n  \"overshoot\",\n  \"overshot\",\n  \"oversight\",\n  \"oversized\",\n  \"oversleep\",\n  \"oversold\",\n  \"overspend\",\n  \"overstate\",\n  \"overstay\",\n  \"overstep\",\n  \"overstock\",\n  \"overstuff\",\n  \"oversweet\",\n  \"overtake\",\n  \"overthrow\",\n  \"overtime\",\n  \"overtly\",\n  \"overtone\",\n  \"overture\",\n  \"overturn\",\n  \"overuse\",\n  \"overvalue\",\n  \"overview\",\n  \"overwrite\",\n  \"owl\",\n  \"oxford\",\n  \"oxidant\",\n  \"oxidation\",\n  \"oxidize\",\n  \"oxidizing\",\n  \"oxygen\",\n  \"oxymoron\",\n  \"oyster\",\n  \"ozone\",\n  \"paced\",\n  \"pacemaker\",\n  \"pacific\",\n  \"pacifier\",\n  \"pacifism\",\n  \"pacifist\",\n  \"pacify\",\n  \"padded\",\n  \"padding\",\n  \"paddle\",\n  \"paddling\",\n  \"padlock\",\n  \"pagan\",\n  \"pager\",\n  \"paging\",\n  \"pajamas\",\n  \"palace\",\n  \"palatable\",\n  \"palm\",\n  \"palpable\",\n  \"palpitate\",\n  \"paltry\",\n  \"pampered\",\n  \"pamperer\",\n  \"pampers\",\n  \"pamphlet\",\n  \"panama\",\n  \"pancake\",\n  \"pancreas\",\n  \"panda\",\n  \"pandemic\",\n  \"pang\",\n  \"panhandle\",\n  \"panic\",\n  \"panning\",\n  \"panorama\",\n  \"panoramic\",\n  \"panther\",\n  \"pantomime\",\n  \"pantry\",\n  \"pants\",\n  \"pantyhose\",\n  \"paparazzi\",\n  \"papaya\",\n  \"paper\",\n  \"paprika\",\n  \"papyrus\",\n  \"parabola\",\n  \"parachute\",\n  \"parade\",\n  \"paradox\",\n  \"paragraph\",\n  \"parakeet\",\n  \"paralegal\",\n  \"paralyses\",\n  \"paralysis\",\n  \"paralyze\",\n  \"paramedic\",\n  \"parameter\",\n  \"paramount\",\n  \"parasail\",\n  \"parasite\",\n  \"parasitic\",\n  \"parcel\",\n  \"parched\",\n  \"parchment\",\n  \"pardon\",\n  \"parish\",\n  \"parka\",\n  \"parking\",\n  \"parkway\",\n  \"parlor\",\n  \"parmesan\",\n  \"parole\",\n  \"parrot\",\n  \"parsley\",\n  \"parsnip\",\n  \"partake\",\n  \"parted\",\n  \"parting\",\n  \"partition\",\n  \"partly\",\n  \"partner\",\n  \"partridge\",\n  \"party\",\n  \"passable\",\n  \"passably\",\n  \"passage\",\n  \"passcode\",\n  \"passenger\",\n  \"passerby\",\n  \"passing\",\n  \"passion\",\n  \"passive\",\n  \"passivism\",\n  \"passover\",\n  \"passport\",\n  \"password\",\n  \"pasta\",\n  \"pasted\",\n  \"pastel\",\n  \"pastime\",\n  \"pastor\",\n  \"pastrami\",\n  \"pasture\",\n  \"pasty\",\n  \"patchwork\",\n  \"patchy\",\n  \"paternal\",\n  \"paternity\",\n  \"path\",\n  \"patience\",\n  \"patient\",\n  \"patio\",\n  \"patriarch\",\n  \"patriot\",\n  \"patrol\",\n  \"patronage\",\n  \"patronize\",\n  \"pauper\",\n  \"pavement\",\n  \"paver\",\n  \"pavestone\",\n  \"pavilion\",\n  \"paving\",\n  \"pawing\",\n  \"payable\",\n  \"payback\",\n  \"paycheck\",\n  \"payday\",\n  \"payee\",\n  \"payer\",\n  \"paying\",\n  \"payment\",\n  \"payphone\",\n  \"payroll\",\n  \"pebble\",\n  \"pebbly\",\n  \"pecan\",\n  \"pectin\",\n  \"peculiar\",\n  \"peddling\",\n  \"pediatric\",\n  \"pedicure\",\n  \"pedigree\",\n  \"pedometer\",\n  \"pegboard\",\n  \"pelican\",\n  \"pellet\",\n  \"pelt\",\n  \"pelvis\",\n  \"penalize\",\n  \"penalty\",\n  \"pencil\",\n  \"pendant\",\n  \"pending\",\n  \"penholder\",\n  \"penknife\",\n  \"pennant\",\n  \"penniless\",\n  \"penny\",\n  \"penpal\",\n  \"pension\",\n  \"pentagon\",\n  \"pentagram\",\n  \"pep\",\n  \"perceive\",\n  \"percent\",\n  \"perch\",\n  \"percolate\",\n  \"perennial\",\n  \"perfected\",\n  \"perfectly\",\n  \"perfume\",\n  \"periscope\",\n  \"perish\",\n  \"perjurer\",\n  \"perjury\",\n  \"perkiness\",\n  \"perky\",\n  \"perm\",\n  \"peroxide\",\n  \"perpetual\",\n  \"perplexed\",\n  \"persecute\",\n  \"persevere\",\n  \"persuaded\",\n  \"persuader\",\n  \"pesky\",\n  \"peso\",\n  \"pessimism\",\n  \"pessimist\",\n  \"pester\",\n  \"pesticide\",\n  \"petal\",\n  \"petite\",\n  \"petition\",\n  \"petri\",\n  \"petroleum\",\n  \"petted\",\n  \"petticoat\",\n  \"pettiness\",\n  \"petty\",\n  \"petunia\",\n  \"phantom\",\n  \"phobia\",\n  \"phoenix\",\n  \"phonebook\",\n  \"phoney\",\n  \"phonics\",\n  \"phoniness\",\n  \"phony\",\n  \"phosphate\",\n  \"photo\",\n  \"phrase\",\n  \"phrasing\",\n  \"placard\",\n  \"placate\",\n  \"placidly\",\n  \"plank\",\n  \"planner\",\n  \"plant\",\n  \"plasma\",\n  \"plaster\",\n  \"plastic\",\n  \"plated\",\n  \"platform\",\n  \"plating\",\n  \"platinum\",\n  \"platonic\",\n  \"platter\",\n  \"platypus\",\n  \"plausible\",\n  \"plausibly\",\n  \"playable\",\n  \"playback\",\n  \"player\",\n  \"playful\",\n  \"playgroup\",\n  \"playhouse\",\n  \"playing\",\n  \"playlist\",\n  \"playmaker\",\n  \"playmate\",\n  \"playoff\",\n  \"playpen\",\n  \"playroom\",\n  \"playset\",\n  \"plaything\",\n  \"playtime\",\n  \"plaza\",\n  \"pleading\",\n  \"pleat\",\n  \"pledge\",\n  \"plentiful\",\n  \"plenty\",\n  \"plethora\",\n  \"plexiglas\",\n  \"pliable\",\n  \"plod\",\n  \"plop\",\n  \"plot\",\n  \"plow\",\n  \"ploy\",\n  \"pluck\",\n  \"plug\",\n  \"plunder\",\n  \"plunging\",\n  \"plural\",\n  \"plus\",\n  \"plutonium\",\n  \"plywood\",\n  \"poach\",\n  \"pod\",\n  \"poem\",\n  \"poet\",\n  \"pogo\",\n  \"pointed\",\n  \"pointer\",\n  \"pointing\",\n  \"pointless\",\n  \"pointy\",\n  \"poise\",\n  \"poison\",\n  \"poker\",\n  \"poking\",\n  \"polar\",\n  \"police\",\n  \"policy\",\n  \"polio\",\n  \"polish\",\n  \"politely\",\n  \"polka\",\n  \"polo\",\n  \"polyester\",\n  \"polygon\",\n  \"polygraph\",\n  \"polymer\",\n  \"poncho\",\n  \"pond\",\n  \"pony\",\n  \"popcorn\",\n  \"pope\",\n  \"poplar\",\n  \"popper\",\n  \"poppy\",\n  \"popsicle\",\n  \"populace\",\n  \"popular\",\n  \"populate\",\n  \"porcupine\",\n  \"pork\",\n  \"porous\",\n  \"porridge\",\n  \"portable\",\n  \"portal\",\n  \"portfolio\",\n  \"porthole\",\n  \"portion\",\n  \"portly\",\n  \"portside\",\n  \"poser\",\n  \"posh\",\n  \"posing\",\n  \"possible\",\n  \"possibly\",\n  \"possum\",\n  \"postage\",\n  \"postal\",\n  \"postbox\",\n  \"postcard\",\n  \"posted\",\n  \"poster\",\n  \"posting\",\n  \"postnasal\",\n  \"posture\",\n  \"postwar\",\n  \"pouch\",\n  \"pounce\",\n  \"pouncing\",\n  \"pound\",\n  \"pouring\",\n  \"pout\",\n  \"powdered\",\n  \"powdering\",\n  \"powdery\",\n  \"power\",\n  \"powwow\",\n  \"pox\",\n  \"praising\",\n  \"prance\",\n  \"prancing\",\n  \"pranker\",\n  \"prankish\",\n  \"prankster\",\n  \"prayer\",\n  \"praying\",\n  \"preacher\",\n  \"preaching\",\n  \"preachy\",\n  \"preamble\",\n  \"precinct\",\n  \"precise\",\n  \"precision\",\n  \"precook\",\n  \"precut\",\n  \"predator\",\n  \"predefine\",\n  \"predict\",\n  \"preface\",\n  \"prefix\",\n  \"preflight\",\n  \"preformed\",\n  \"pregame\",\n  \"pregnancy\",\n  \"pregnant\",\n  \"preheated\",\n  \"prelaunch\",\n  \"prelaw\",\n  \"prelude\",\n  \"premiere\",\n  \"premises\",\n  \"premium\",\n  \"prenatal\",\n  \"preoccupy\",\n  \"preorder\",\n  \"prepaid\",\n  \"prepay\",\n  \"preplan\",\n  \"preppy\",\n  \"preschool\",\n  \"prescribe\",\n  \"preseason\",\n  \"preset\",\n  \"preshow\",\n  \"president\",\n  \"presoak\",\n  \"press\",\n  \"presume\",\n  \"presuming\",\n  \"preteen\",\n  \"pretended\",\n  \"pretender\",\n  \"pretense\",\n  \"pretext\",\n  \"pretty\",\n  \"pretzel\",\n  \"prevail\",\n  \"prevalent\",\n  \"prevent\",\n  \"preview\",\n  \"previous\",\n  \"prewar\",\n  \"prewashed\",\n  \"prideful\",\n  \"pried\",\n  \"primal\",\n  \"primarily\",\n  \"primary\",\n  \"primate\",\n  \"primer\",\n  \"primp\",\n  \"princess\",\n  \"print\",\n  \"prior\",\n  \"prism\",\n  \"prison\",\n  \"prissy\",\n  \"pristine\",\n  \"privacy\",\n  \"private\",\n  \"privatize\",\n  \"prize\",\n  \"proactive\",\n  \"probable\",\n  \"probably\",\n  \"probation\",\n  \"probe\",\n  \"probing\",\n  \"probiotic\",\n  \"problem\",\n  \"procedure\",\n  \"process\",\n  \"proclaim\",\n  \"procreate\",\n  \"procurer\",\n  \"prodigal\",\n  \"prodigy\",\n  \"produce\",\n  \"product\",\n  \"profane\",\n  \"profanity\",\n  \"professed\",\n  \"professor\",\n  \"profile\",\n  \"profound\",\n  \"profusely\",\n  \"progeny\",\n  \"prognosis\",\n  \"program\",\n  \"progress\",\n  \"projector\",\n  \"prologue\",\n  \"prolonged\",\n  \"promenade\",\n  \"prominent\",\n  \"promoter\",\n  \"promotion\",\n  \"prompter\",\n  \"promptly\",\n  \"prone\",\n  \"prong\",\n  \"pronounce\",\n  \"pronto\",\n  \"proofing\",\n  \"proofread\",\n  \"proofs\",\n  \"propeller\",\n  \"properly\",\n  \"property\",\n  \"proponent\",\n  \"proposal\",\n  \"propose\",\n  \"props\",\n  \"prorate\",\n  \"protector\",\n  \"protegee\",\n  \"proton\",\n  \"prototype\",\n  \"protozoan\",\n  \"protract\",\n  \"protrude\",\n  \"proud\",\n  \"provable\",\n  \"proved\",\n  \"proven\",\n  \"provided\",\n  \"provider\",\n  \"providing\",\n  \"province\",\n  \"proving\",\n  \"provoke\",\n  \"provoking\",\n  \"provolone\",\n  \"prowess\",\n  \"prowler\",\n  \"prowling\",\n  \"proximity\",\n  \"proxy\",\n  \"prozac\",\n  \"prude\",\n  \"prudishly\",\n  \"prune\",\n  \"pruning\",\n  \"pry\",\n  \"psychic\",\n  \"public\",\n  \"publisher\",\n  \"pucker\",\n  \"pueblo\",\n  \"pug\",\n  \"pull\",\n  \"pulmonary\",\n  \"pulp\",\n  \"pulsate\",\n  \"pulse\",\n  \"pulverize\",\n  \"puma\",\n  \"pumice\",\n  \"pummel\",\n  \"punch\",\n  \"punctual\",\n  \"punctuate\",\n  \"punctured\",\n  \"pungent\",\n  \"punisher\",\n  \"punk\",\n  \"pupil\",\n  \"puppet\",\n  \"puppy\",\n  \"purchase\",\n  \"pureblood\",\n  \"purebred\",\n  \"purely\",\n  \"pureness\",\n  \"purgatory\",\n  \"purge\",\n  \"purging\",\n  \"purifier\",\n  \"purify\",\n  \"purist\",\n  \"puritan\",\n  \"purity\",\n  \"purple\",\n  \"purplish\",\n  \"purposely\",\n  \"purr\",\n  \"purse\",\n  \"pursuable\",\n  \"pursuant\",\n  \"pursuit\",\n  \"purveyor\",\n  \"pushcart\",\n  \"pushchair\",\n  \"pusher\",\n  \"pushiness\",\n  \"pushing\",\n  \"pushover\",\n  \"pushpin\",\n  \"pushup\",\n  \"pushy\",\n  \"putdown\",\n  \"putt\",\n  \"puzzle\",\n  \"puzzling\",\n  \"pyramid\",\n  \"pyromania\",\n  \"python\",\n  \"quack\",\n  \"quadrant\",\n  \"quail\",\n  \"quaintly\",\n  \"quake\",\n  \"quaking\",\n  \"qualified\",\n  \"qualifier\",\n  \"qualify\",\n  \"quality\",\n  \"qualm\",\n  \"quantum\",\n  \"quarrel\",\n  \"quarry\",\n  \"quartered\",\n  \"quarterly\",\n  \"quarters\",\n  \"quartet\",\n  \"quench\",\n  \"query\",\n  \"quicken\",\n  \"quickly\",\n  \"quickness\",\n  \"quicksand\",\n  \"quickstep\",\n  \"quiet\",\n  \"quill\",\n  \"quilt\",\n  \"quintet\",\n  \"quintuple\",\n  \"quirk\",\n  \"quit\",\n  \"quiver\",\n  \"quizzical\",\n  \"quotable\",\n  \"quotation\",\n  \"quote\",\n  \"rabid\",\n  \"race\",\n  \"racing\",\n  \"racism\",\n  \"rack\",\n  \"racoon\",\n  \"radar\",\n  \"radial\",\n  \"radiance\",\n  \"radiantly\",\n  \"radiated\",\n  \"radiation\",\n  \"radiator\",\n  \"radio\",\n  \"radish\",\n  \"raffle\",\n  \"raft\",\n  \"rage\",\n  \"ragged\",\n  \"raging\",\n  \"ragweed\",\n  \"raider\",\n  \"railcar\",\n  \"railing\",\n  \"railroad\",\n  \"railway\",\n  \"raisin\",\n  \"rake\",\n  \"raking\",\n  \"rally\",\n  \"ramble\",\n  \"rambling\",\n  \"ramp\",\n  \"ramrod\",\n  \"ranch\",\n  \"rancidity\",\n  \"random\",\n  \"ranged\",\n  \"ranger\",\n  \"ranging\",\n  \"ranked\",\n  \"ranking\",\n  \"ransack\",\n  \"ranting\",\n  \"rants\",\n  \"rare\",\n  \"rarity\",\n  \"rascal\",\n  \"rash\",\n  \"rasping\",\n  \"ravage\",\n  \"raven\",\n  \"ravine\",\n  \"raving\",\n  \"ravioli\",\n  \"ravishing\",\n  \"reabsorb\",\n  \"reach\",\n  \"reacquire\",\n  \"reaction\",\n  \"reactive\",\n  \"reactor\",\n  \"reaffirm\",\n  \"ream\",\n  \"reanalyze\",\n  \"reappear\",\n  \"reapply\",\n  \"reappoint\",\n  \"reapprove\",\n  \"rearrange\",\n  \"rearview\",\n  \"reason\",\n  \"reassign\",\n  \"reassure\",\n  \"reattach\",\n  \"reawake\",\n  \"rebalance\",\n  \"rebate\",\n  \"rebel\",\n  \"rebirth\",\n  \"reboot\",\n  \"reborn\",\n  \"rebound\",\n  \"rebuff\",\n  \"rebuild\",\n  \"rebuilt\",\n  \"reburial\",\n  \"rebuttal\",\n  \"recall\",\n  \"recant\",\n  \"recapture\",\n  \"recast\",\n  \"recede\",\n  \"recent\",\n  \"recess\",\n  \"recharger\",\n  \"recipient\",\n  \"recital\",\n  \"recite\",\n  \"reckless\",\n  \"reclaim\",\n  \"recliner\",\n  \"reclining\",\n  \"recluse\",\n  \"reclusive\",\n  \"recognize\",\n  \"recoil\",\n  \"recollect\",\n  \"recolor\",\n  \"reconcile\",\n  \"reconfirm\",\n  \"reconvene\",\n  \"recopy\",\n  \"record\",\n  \"recount\",\n  \"recoup\",\n  \"recovery\",\n  \"recreate\",\n  \"rectal\",\n  \"rectangle\",\n  \"rectified\",\n  \"rectify\",\n  \"recycled\",\n  \"recycler\",\n  \"recycling\",\n  \"reemerge\",\n  \"reenact\",\n  \"reenter\",\n  \"reentry\",\n  \"reexamine\",\n  \"referable\",\n  \"referee\",\n  \"reference\",\n  \"refill\",\n  \"refinance\",\n  \"refined\",\n  \"refinery\",\n  \"refining\",\n  \"refinish\",\n  \"reflected\",\n  \"reflector\",\n  \"reflex\",\n  \"reflux\",\n  \"refocus\",\n  \"refold\",\n  \"reforest\",\n  \"reformat\",\n  \"reformed\",\n  \"reformer\",\n  \"reformist\",\n  \"refract\",\n  \"refrain\",\n  \"refreeze\",\n  \"refresh\",\n  \"refried\",\n  \"refueling\",\n  \"refund\",\n  \"refurbish\",\n  \"refurnish\",\n  \"refusal\",\n  \"refuse\",\n  \"refusing\",\n  \"refutable\",\n  \"refute\",\n  \"regain\",\n  \"regalia\",\n  \"regally\",\n  \"reggae\",\n  \"regime\",\n  \"region\",\n  \"register\",\n  \"registrar\",\n  \"registry\",\n  \"regress\",\n  \"regretful\",\n  \"regroup\",\n  \"regular\",\n  \"regulate\",\n  \"regulator\",\n  \"rehab\",\n  \"reheat\",\n  \"rehire\",\n  \"rehydrate\",\n  \"reimburse\",\n  \"reissue\",\n  \"reiterate\",\n  \"rejoice\",\n  \"rejoicing\",\n  \"rejoin\",\n  \"rekindle\",\n  \"relapse\",\n  \"relapsing\",\n  \"relatable\",\n  \"related\",\n  \"relation\",\n  \"relative\",\n  \"relax\",\n  \"relay\",\n  \"relearn\",\n  \"release\",\n  \"relenting\",\n  \"reliable\",\n  \"reliably\",\n  \"reliance\",\n  \"reliant\",\n  \"relic\",\n  \"relieve\",\n  \"relieving\",\n  \"relight\",\n  \"relish\",\n  \"relive\",\n  \"reload\",\n  \"relocate\",\n  \"relock\",\n  \"reluctant\",\n  \"rely\",\n  \"remake\",\n  \"remark\",\n  \"remarry\",\n  \"rematch\",\n  \"remedial\",\n  \"remedy\",\n  \"remember\",\n  \"reminder\",\n  \"remindful\",\n  \"remission\",\n  \"remix\",\n  \"remnant\",\n  \"remodeler\",\n  \"remold\",\n  \"remorse\",\n  \"remote\",\n  \"removable\",\n  \"removal\",\n  \"removed\",\n  \"remover\",\n  \"removing\",\n  \"rename\",\n  \"renderer\",\n  \"rendering\",\n  \"rendition\",\n  \"renegade\",\n  \"renewable\",\n  \"renewably\",\n  \"renewal\",\n  \"renewed\",\n  \"renounce\",\n  \"renovate\",\n  \"renovator\",\n  \"rentable\",\n  \"rental\",\n  \"rented\",\n  \"renter\",\n  \"reoccupy\",\n  \"reoccur\",\n  \"reopen\",\n  \"reorder\",\n  \"repackage\",\n  \"repacking\",\n  \"repaint\",\n  \"repair\",\n  \"repave\",\n  \"repaying\",\n  \"repayment\",\n  \"repeal\",\n  \"repeated\",\n  \"repeater\",\n  \"repent\",\n  \"rephrase\",\n  \"replace\",\n  \"replay\",\n  \"replica\",\n  \"reply\",\n  \"reporter\",\n  \"repose\",\n  \"repossess\",\n  \"repost\",\n  \"repressed\",\n  \"reprimand\",\n  \"reprint\",\n  \"reprise\",\n  \"reproach\",\n  \"reprocess\",\n  \"reproduce\",\n  \"reprogram\",\n  \"reps\",\n  \"reptile\",\n  \"reptilian\",\n  \"repugnant\",\n  \"repulsion\",\n  \"repulsive\",\n  \"repurpose\",\n  \"reputable\",\n  \"reputably\",\n  \"request\",\n  \"require\",\n  \"requisite\",\n  \"reroute\",\n  \"rerun\",\n  \"resale\",\n  \"resample\",\n  \"rescuer\",\n  \"reseal\",\n  \"research\",\n  \"reselect\",\n  \"reseller\",\n  \"resemble\",\n  \"resend\",\n  \"resent\",\n  \"reset\",\n  \"reshape\",\n  \"reshoot\",\n  \"reshuffle\",\n  \"residence\",\n  \"residency\",\n  \"resident\",\n  \"residual\",\n  \"residue\",\n  \"resigned\",\n  \"resilient\",\n  \"resistant\",\n  \"resisting\",\n  \"resize\",\n  \"resolute\",\n  \"resolved\",\n  \"resonant\",\n  \"resonate\",\n  \"resort\",\n  \"resource\",\n  \"respect\",\n  \"resubmit\",\n  \"result\",\n  \"resume\",\n  \"resupply\",\n  \"resurface\",\n  \"resurrect\",\n  \"retail\",\n  \"retainer\",\n  \"retaining\",\n  \"retake\",\n  \"retaliate\",\n  \"retention\",\n  \"rethink\",\n  \"retinal\",\n  \"retired\",\n  \"retiree\",\n  \"retiring\",\n  \"retold\",\n  \"retool\",\n  \"retorted\",\n  \"retouch\",\n  \"retrace\",\n  \"retract\",\n  \"retrain\",\n  \"retread\",\n  \"retreat\",\n  \"retrial\",\n  \"retrieval\",\n  \"retriever\",\n  \"retry\",\n  \"return\",\n  \"retying\",\n  \"retype\",\n  \"reunion\",\n  \"reunite\",\n  \"reusable\",\n  \"reuse\",\n  \"reveal\",\n  \"reveler\",\n  \"revenge\",\n  \"revenue\",\n  \"reverb\",\n  \"revered\",\n  \"reverence\",\n  \"reverend\",\n  \"reversal\",\n  \"reverse\",\n  \"reversing\",\n  \"reversion\",\n  \"revert\",\n  \"revisable\",\n  \"revise\",\n  \"revision\",\n  \"revisit\",\n  \"revivable\",\n  \"revival\",\n  \"reviver\",\n  \"reviving\",\n  \"revocable\",\n  \"revoke\",\n  \"revolt\",\n  \"revolver\",\n  \"revolving\",\n  \"reward\",\n  \"rewash\",\n  \"rewind\",\n  \"rewire\",\n  \"reword\",\n  \"rework\",\n  \"rewrap\",\n  \"rewrite\",\n  \"rhyme\",\n  \"ribbon\",\n  \"ribcage\",\n  \"rice\",\n  \"riches\",\n  \"richly\",\n  \"richness\",\n  \"rickety\",\n  \"ricotta\",\n  \"riddance\",\n  \"ridden\",\n  \"ride\",\n  \"riding\",\n  \"rifling\",\n  \"rift\",\n  \"rigging\",\n  \"rigid\",\n  \"rigor\",\n  \"rimless\",\n  \"rimmed\",\n  \"rind\",\n  \"rink\",\n  \"rinse\",\n  \"rinsing\",\n  \"riot\",\n  \"ripcord\",\n  \"ripeness\",\n  \"ripening\",\n  \"ripping\",\n  \"ripple\",\n  \"rippling\",\n  \"riptide\",\n  \"rise\",\n  \"rising\",\n  \"risk\",\n  \"risotto\",\n  \"ritalin\",\n  \"ritzy\",\n  \"rival\",\n  \"riverbank\",\n  \"riverbed\",\n  \"riverboat\",\n  \"riverside\",\n  \"riveter\",\n  \"riveting\",\n  \"roamer\",\n  \"roaming\",\n  \"roast\",\n  \"robbing\",\n  \"robe\",\n  \"robin\",\n  \"robotics\",\n  \"robust\",\n  \"rockband\",\n  \"rocker\",\n  \"rocket\",\n  \"rockfish\",\n  \"rockiness\",\n  \"rocking\",\n  \"rocklike\",\n  \"rockslide\",\n  \"rockstar\",\n  \"rocky\",\n  \"rogue\",\n  \"roman\",\n  \"romp\",\n  \"rope\",\n  \"roping\",\n  \"roster\",\n  \"rosy\",\n  \"rotten\",\n  \"rotting\",\n  \"rotunda\",\n  \"roulette\",\n  \"rounding\",\n  \"roundish\",\n  \"roundness\",\n  \"roundup\",\n  \"roundworm\",\n  \"routine\",\n  \"routing\",\n  \"rover\",\n  \"roving\",\n  \"royal\",\n  \"rubbed\",\n  \"rubber\",\n  \"rubbing\",\n  \"rubble\",\n  \"rubdown\",\n  \"ruby\",\n  \"ruckus\",\n  \"rudder\",\n  \"rug\",\n  \"ruined\",\n  \"rule\",\n  \"rumble\",\n  \"rumbling\",\n  \"rummage\",\n  \"rumor\",\n  \"runaround\",\n  \"rundown\",\n  \"runner\",\n  \"running\",\n  \"runny\",\n  \"runt\",\n  \"runway\",\n  \"rupture\",\n  \"rural\",\n  \"ruse\",\n  \"rush\",\n  \"rust\",\n  \"rut\",\n  \"sabbath\",\n  \"sabotage\",\n  \"sacrament\",\n  \"sacred\",\n  \"sacrifice\",\n  \"sadden\",\n  \"saddlebag\",\n  \"saddled\",\n  \"saddling\",\n  \"sadly\",\n  \"sadness\",\n  \"safari\",\n  \"safeguard\",\n  \"safehouse\",\n  \"safely\",\n  \"safeness\",\n  \"saffron\",\n  \"saga\",\n  \"sage\",\n  \"sagging\",\n  \"saggy\",\n  \"said\",\n  \"saint\",\n  \"sake\",\n  \"salad\",\n  \"salami\",\n  \"salaried\",\n  \"salary\",\n  \"saline\",\n  \"salon\",\n  \"saloon\",\n  \"salsa\",\n  \"salt\",\n  \"salutary\",\n  \"salute\",\n  \"salvage\",\n  \"salvaging\",\n  \"salvation\",\n  \"same\",\n  \"sample\",\n  \"sampling\",\n  \"sanction\",\n  \"sanctity\",\n  \"sanctuary\",\n  \"sandal\",\n  \"sandbag\",\n  \"sandbank\",\n  \"sandbar\",\n  \"sandblast\",\n  \"sandbox\",\n  \"sanded\",\n  \"sandfish\",\n  \"sanding\",\n  \"sandlot\",\n  \"sandpaper\",\n  \"sandpit\",\n  \"sandstone\",\n  \"sandstorm\",\n  \"sandworm\",\n  \"sandy\",\n  \"sanitary\",\n  \"sanitizer\",\n  \"sank\",\n  \"santa\",\n  \"sapling\",\n  \"sappiness\",\n  \"sappy\",\n  \"sarcasm\",\n  \"sarcastic\",\n  \"sardine\",\n  \"sash\",\n  \"sasquatch\",\n  \"sassy\",\n  \"satchel\",\n  \"satiable\",\n  \"satin\",\n  \"satirical\",\n  \"satisfied\",\n  \"satisfy\",\n  \"saturate\",\n  \"saturday\",\n  \"sauciness\",\n  \"saucy\",\n  \"sauna\",\n  \"savage\",\n  \"savanna\",\n  \"saved\",\n  \"savings\",\n  \"savior\",\n  \"savor\",\n  \"saxophone\",\n  \"say\",\n  \"scabbed\",\n  \"scabby\",\n  \"scalded\",\n  \"scalding\",\n  \"scale\",\n  \"scaling\",\n  \"scallion\",\n  \"scallop\",\n  \"scalping\",\n  \"scam\",\n  \"scandal\",\n  \"scanner\",\n  \"scanning\",\n  \"scant\",\n  \"scapegoat\",\n  \"scarce\",\n  \"scarcity\",\n  \"scarecrow\",\n  \"scared\",\n  \"scarf\",\n  \"scarily\",\n  \"scariness\",\n  \"scarring\",\n  \"scary\",\n  \"scavenger\",\n  \"scenic\",\n  \"schedule\",\n  \"schematic\",\n  \"scheme\",\n  \"scheming\",\n  \"schilling\",\n  \"schnapps\",\n  \"scholar\",\n  \"science\",\n  \"scientist\",\n  \"scion\",\n  \"scoff\",\n  \"scolding\",\n  \"scone\",\n  \"scoop\",\n  \"scooter\",\n  \"scope\",\n  \"scorch\",\n  \"scorebook\",\n  \"scorecard\",\n  \"scored\",\n  \"scoreless\",\n  \"scorer\",\n  \"scoring\",\n  \"scorn\",\n  \"scorpion\",\n  \"scotch\",\n  \"scoundrel\",\n  \"scoured\",\n  \"scouring\",\n  \"scouting\",\n  \"scouts\",\n  \"scowling\",\n  \"scrabble\",\n  \"scraggly\",\n  \"scrambled\",\n  \"scrambler\",\n  \"scrap\",\n  \"scratch\",\n  \"scrawny\",\n  \"screen\",\n  \"scribble\",\n  \"scribe\",\n  \"scribing\",\n  \"scrimmage\",\n  \"script\",\n  \"scroll\",\n  \"scrooge\",\n  \"scrounger\",\n  \"scrubbed\",\n  \"scrubber\",\n  \"scruffy\",\n  \"scrunch\",\n  \"scrutiny\",\n  \"scuba\",\n  \"scuff\",\n  \"sculptor\",\n  \"sculpture\",\n  \"scurvy\",\n  \"scuttle\",\n  \"secluded\",\n  \"secluding\",\n  \"seclusion\",\n  \"second\",\n  \"secrecy\",\n  \"secret\",\n  \"sectional\",\n  \"sector\",\n  \"secular\",\n  \"securely\",\n  \"security\",\n  \"sedan\",\n  \"sedate\",\n  \"sedation\",\n  \"sedative\",\n  \"sediment\",\n  \"seduce\",\n  \"seducing\",\n  \"segment\",\n  \"seismic\",\n  \"seizing\",\n  \"seldom\",\n  \"selected\",\n  \"selection\",\n  \"selective\",\n  \"selector\",\n  \"self\",\n  \"seltzer\",\n  \"semantic\",\n  \"semester\",\n  \"semicolon\",\n  \"semifinal\",\n  \"seminar\",\n  \"semisoft\",\n  \"semisweet\",\n  \"senate\",\n  \"senator\",\n  \"send\",\n  \"senior\",\n  \"senorita\",\n  \"sensation\",\n  \"sensitive\",\n  \"sensitize\",\n  \"sensually\",\n  \"sensuous\",\n  \"sepia\",\n  \"september\",\n  \"septic\",\n  \"septum\",\n  \"sequel\",\n  \"sequence\",\n  \"sequester\",\n  \"series\",\n  \"sermon\",\n  \"serotonin\",\n  \"serpent\",\n  \"serrated\",\n  \"serve\",\n  \"service\",\n  \"serving\",\n  \"sesame\",\n  \"sessions\",\n  \"setback\",\n  \"setting\",\n  \"settle\",\n  \"settling\",\n  \"setup\",\n  \"sevenfold\",\n  \"seventeen\",\n  \"seventh\",\n  \"seventy\",\n  \"severity\",\n  \"shabby\",\n  \"shack\",\n  \"shaded\",\n  \"shadily\",\n  \"shadiness\",\n  \"shading\",\n  \"shadow\",\n  \"shady\",\n  \"shaft\",\n  \"shakable\",\n  \"shakily\",\n  \"shakiness\",\n  \"shaking\",\n  \"shaky\",\n  \"shale\",\n  \"shallot\",\n  \"shallow\",\n  \"shame\",\n  \"shampoo\",\n  \"shamrock\",\n  \"shank\",\n  \"shanty\",\n  \"shape\",\n  \"shaping\",\n  \"share\",\n  \"sharpener\",\n  \"sharper\",\n  \"sharpie\",\n  \"sharply\",\n  \"sharpness\",\n  \"shawl\",\n  \"sheath\",\n  \"shed\",\n  \"sheep\",\n  \"sheet\",\n  \"shelf\",\n  \"shell\",\n  \"shelter\",\n  \"shelve\",\n  \"shelving\",\n  \"sherry\",\n  \"shield\",\n  \"shifter\",\n  \"shifting\",\n  \"shiftless\",\n  \"shifty\",\n  \"shimmer\",\n  \"shimmy\",\n  \"shindig\",\n  \"shine\",\n  \"shingle\",\n  \"shininess\",\n  \"shining\",\n  \"shiny\",\n  \"ship\",\n  \"shirt\",\n  \"shivering\",\n  \"shock\",\n  \"shone\",\n  \"shoplift\",\n  \"shopper\",\n  \"shopping\",\n  \"shoptalk\",\n  \"shore\",\n  \"shortage\",\n  \"shortcake\",\n  \"shortcut\",\n  \"shorten\",\n  \"shorter\",\n  \"shorthand\",\n  \"shortlist\",\n  \"shortly\",\n  \"shortness\",\n  \"shorts\",\n  \"shortwave\",\n  \"shorty\",\n  \"shout\",\n  \"shove\",\n  \"showbiz\",\n  \"showcase\",\n  \"showdown\",\n  \"shower\",\n  \"showgirl\",\n  \"showing\",\n  \"showman\",\n  \"shown\",\n  \"showoff\",\n  \"showpiece\",\n  \"showplace\",\n  \"showroom\",\n  \"showy\",\n  \"shrank\",\n  \"shrapnel\",\n  \"shredder\",\n  \"shredding\",\n  \"shrewdly\",\n  \"shriek\",\n  \"shrill\",\n  \"shrimp\",\n  \"shrine\",\n  \"shrink\",\n  \"shrivel\",\n  \"shrouded\",\n  \"shrubbery\",\n  \"shrubs\",\n  \"shrug\",\n  \"shrunk\",\n  \"shucking\",\n  \"shudder\",\n  \"shuffle\",\n  \"shuffling\",\n  \"shun\",\n  \"shush\",\n  \"shut\",\n  \"shy\",\n  \"siamese\",\n  \"siberian\",\n  \"sibling\",\n  \"siding\",\n  \"sierra\",\n  \"siesta\",\n  \"sift\",\n  \"sighing\",\n  \"silenced\",\n  \"silencer\",\n  \"silent\",\n  \"silica\",\n  \"silicon\",\n  \"silk\",\n  \"silliness\",\n  \"silly\",\n  \"silo\",\n  \"silt\",\n  \"silver\",\n  \"similarly\",\n  \"simile\",\n  \"simmering\",\n  \"simple\",\n  \"simplify\",\n  \"simply\",\n  \"sincere\",\n  \"sincerity\",\n  \"singer\",\n  \"singing\",\n  \"single\",\n  \"singular\",\n  \"sinister\",\n  \"sinless\",\n  \"sinner\",\n  \"sinuous\",\n  \"sip\",\n  \"siren\",\n  \"sister\",\n  \"sitcom\",\n  \"sitter\",\n  \"sitting\",\n  \"situated\",\n  \"situation\",\n  \"sixfold\",\n  \"sixteen\",\n  \"sixth\",\n  \"sixties\",\n  \"sixtieth\",\n  \"sixtyfold\",\n  \"sizable\",\n  \"sizably\",\n  \"size\",\n  \"sizing\",\n  \"sizzle\",\n  \"sizzling\",\n  \"skater\",\n  \"skating\",\n  \"skedaddle\",\n  \"skeletal\",\n  \"skeleton\",\n  \"skeptic\",\n  \"sketch\",\n  \"skewed\",\n  \"skewer\",\n  \"skid\",\n  \"skied\",\n  \"skier\",\n  \"skies\",\n  \"skiing\",\n  \"skilled\",\n  \"skillet\",\n  \"skillful\",\n  \"skimmed\",\n  \"skimmer\",\n  \"skimming\",\n  \"skimpily\",\n  \"skincare\",\n  \"skinhead\",\n  \"skinless\",\n  \"skinning\",\n  \"skinny\",\n  \"skintight\",\n  \"skipper\",\n  \"skipping\",\n  \"skirmish\",\n  \"skirt\",\n  \"skittle\",\n  \"skydiver\",\n  \"skylight\",\n  \"skyline\",\n  \"skype\",\n  \"skyrocket\",\n  \"skyward\",\n  \"slab\",\n  \"slacked\",\n  \"slacker\",\n  \"slacking\",\n  \"slackness\",\n  \"slacks\",\n  \"slain\",\n  \"slam\",\n  \"slander\",\n  \"slang\",\n  \"slapping\",\n  \"slapstick\",\n  \"slashed\",\n  \"slashing\",\n  \"slate\",\n  \"slather\",\n  \"slaw\",\n  \"sled\",\n  \"sleek\",\n  \"sleep\",\n  \"sleet\",\n  \"sleeve\",\n  \"slept\",\n  \"sliceable\",\n  \"sliced\",\n  \"slicer\",\n  \"slicing\",\n  \"slick\",\n  \"slider\",\n  \"slideshow\",\n  \"sliding\",\n  \"slighted\",\n  \"slighting\",\n  \"slightly\",\n  \"slimness\",\n  \"slimy\",\n  \"slinging\",\n  \"slingshot\",\n  \"slinky\",\n  \"slip\",\n  \"slit\",\n  \"sliver\",\n  \"slobbery\",\n  \"slogan\",\n  \"sloped\",\n  \"sloping\",\n  \"sloppily\",\n  \"sloppy\",\n  \"slot\",\n  \"slouching\",\n  \"slouchy\",\n  \"sludge\",\n  \"slug\",\n  \"slum\",\n  \"slurp\",\n  \"slush\",\n  \"sly\",\n  \"small\",\n  \"smartly\",\n  \"smartness\",\n  \"smasher\",\n  \"smashing\",\n  \"smashup\",\n  \"smell\",\n  \"smelting\",\n  \"smile\",\n  \"smilingly\",\n  \"smirk\",\n  \"smite\",\n  \"smith\",\n  \"smitten\",\n  \"smock\",\n  \"smog\",\n  \"smoked\",\n  \"smokeless\",\n  \"smokiness\",\n  \"smoking\",\n  \"smoky\",\n  \"smolder\",\n  \"smooth\",\n  \"smother\",\n  \"smudge\",\n  \"smudgy\",\n  \"smuggler\",\n  \"smuggling\",\n  \"smugly\",\n  \"smugness\",\n  \"snack\",\n  \"snagged\",\n  \"snaking\",\n  \"snap\",\n  \"snare\",\n  \"snarl\",\n  \"snazzy\",\n  \"sneak\",\n  \"sneer\",\n  \"sneeze\",\n  \"sneezing\",\n  \"snide\",\n  \"sniff\",\n  \"snippet\",\n  \"snipping\",\n  \"snitch\",\n  \"snooper\",\n  \"snooze\",\n  \"snore\",\n  \"snoring\",\n  \"snorkel\",\n  \"snort\",\n  \"snout\",\n  \"snowbird\",\n  \"snowboard\",\n  \"snowbound\",\n  \"snowcap\",\n  \"snowdrift\",\n  \"snowdrop\",\n  \"snowfall\",\n  \"snowfield\",\n  \"snowflake\",\n  \"snowiness\",\n  \"snowless\",\n  \"snowman\",\n  \"snowplow\",\n  \"snowshoe\",\n  \"snowstorm\",\n  \"snowsuit\",\n  \"snowy\",\n  \"snub\",\n  \"snuff\",\n  \"snuggle\",\n  \"snugly\",\n  \"snugness\",\n  \"speak\",\n  \"spearfish\",\n  \"spearhead\",\n  \"spearman\",\n  \"spearmint\",\n  \"species\",\n  \"specimen\",\n  \"specked\",\n  \"speckled\",\n  \"specks\",\n  \"spectacle\",\n  \"spectator\",\n  \"spectrum\",\n  \"speculate\",\n  \"speech\",\n  \"speed\",\n  \"spellbind\",\n  \"speller\",\n  \"spelling\",\n  \"spendable\",\n  \"spender\",\n  \"spending\",\n  \"spent\",\n  \"spew\",\n  \"sphere\",\n  \"spherical\",\n  \"sphinx\",\n  \"spider\",\n  \"spied\",\n  \"spiffy\",\n  \"spill\",\n  \"spilt\",\n  \"spinach\",\n  \"spinal\",\n  \"spindle\",\n  \"spinner\",\n  \"spinning\",\n  \"spinout\",\n  \"spinster\",\n  \"spiny\",\n  \"spiral\",\n  \"spirited\",\n  \"spiritism\",\n  \"spirits\",\n  \"spiritual\",\n  \"splashed\",\n  \"splashing\",\n  \"splashy\",\n  \"splatter\",\n  \"spleen\",\n  \"splendid\",\n  \"splendor\",\n  \"splice\",\n  \"splicing\",\n  \"splinter\",\n  \"splotchy\",\n  \"splurge\",\n  \"spoilage\",\n  \"spoiled\",\n  \"spoiler\",\n  \"spoiling\",\n  \"spoils\",\n  \"spoken\",\n  \"spokesman\",\n  \"sponge\",\n  \"spongy\",\n  \"sponsor\",\n  \"spoof\",\n  \"spookily\",\n  \"spooky\",\n  \"spool\",\n  \"spoon\",\n  \"spore\",\n  \"sporting\",\n  \"sports\",\n  \"sporty\",\n  \"spotless\",\n  \"spotlight\",\n  \"spotted\",\n  \"spotter\",\n  \"spotting\",\n  \"spotty\",\n  \"spousal\",\n  \"spouse\",\n  \"spout\",\n  \"sprain\",\n  \"sprang\",\n  \"sprawl\",\n  \"spray\",\n  \"spree\",\n  \"sprig\",\n  \"spring\",\n  \"sprinkled\",\n  \"sprinkler\",\n  \"sprint\",\n  \"sprite\",\n  \"sprout\",\n  \"spruce\",\n  \"sprung\",\n  \"spry\",\n  \"spud\",\n  \"spur\",\n  \"sputter\",\n  \"spyglass\",\n  \"squabble\",\n  \"squad\",\n  \"squall\",\n  \"squander\",\n  \"squash\",\n  \"squatted\",\n  \"squatter\",\n  \"squatting\",\n  \"squeak\",\n  \"squealer\",\n  \"squealing\",\n  \"squeamish\",\n  \"squeegee\",\n  \"squeeze\",\n  \"squeezing\",\n  \"squid\",\n  \"squiggle\",\n  \"squiggly\",\n  \"squint\",\n  \"squire\",\n  \"squirt\",\n  \"squishier\",\n  \"squishy\",\n  \"stability\",\n  \"stabilize\",\n  \"stable\",\n  \"stack\",\n  \"stadium\",\n  \"staff\",\n  \"stage\",\n  \"staging\",\n  \"stagnant\",\n  \"stagnate\",\n  \"stainable\",\n  \"stained\",\n  \"staining\",\n  \"stainless\",\n  \"stalemate\",\n  \"staleness\",\n  \"stalling\",\n  \"stallion\",\n  \"stamina\",\n  \"stammer\",\n  \"stamp\",\n  \"stand\",\n  \"stank\",\n  \"staple\",\n  \"stapling\",\n  \"starboard\",\n  \"starch\",\n  \"stardom\",\n  \"stardust\",\n  \"starfish\",\n  \"stargazer\",\n  \"staring\",\n  \"stark\",\n  \"starless\",\n  \"starlet\",\n  \"starlight\",\n  \"starlit\",\n  \"starring\",\n  \"starry\",\n  \"starship\",\n  \"starter\",\n  \"starting\",\n  \"startle\",\n  \"startling\",\n  \"startup\",\n  \"starved\",\n  \"starving\",\n  \"stash\",\n  \"state\",\n  \"static\",\n  \"statistic\",\n  \"statue\",\n  \"stature\",\n  \"status\",\n  \"statute\",\n  \"statutory\",\n  \"staunch\",\n  \"stays\",\n  \"steadfast\",\n  \"steadier\",\n  \"steadily\",\n  \"steadying\",\n  \"steam\",\n  \"steed\",\n  \"steep\",\n  \"steerable\",\n  \"steering\",\n  \"steersman\",\n  \"stegosaur\",\n  \"stellar\",\n  \"stem\",\n  \"stench\",\n  \"stencil\",\n  \"step\",\n  \"stereo\",\n  \"sterile\",\n  \"sterility\",\n  \"sterilize\",\n  \"sterling\",\n  \"sternness\",\n  \"sternum\",\n  \"stew\",\n  \"stick\",\n  \"stiffen\",\n  \"stiffly\",\n  \"stiffness\",\n  \"stifle\",\n  \"stifling\",\n  \"stillness\",\n  \"stilt\",\n  \"stimulant\",\n  \"stimulate\",\n  \"stimuli\",\n  \"stimulus\",\n  \"stinger\",\n  \"stingily\",\n  \"stinging\",\n  \"stingray\",\n  \"stingy\",\n  \"stinking\",\n  \"stinky\",\n  \"stipend\",\n  \"stipulate\",\n  \"stir\",\n  \"stitch\",\n  \"stock\",\n  \"stoic\",\n  \"stoke\",\n  \"stole\",\n  \"stomp\",\n  \"stonewall\",\n  \"stoneware\",\n  \"stonework\",\n  \"stoning\",\n  \"stony\",\n  \"stood\",\n  \"stooge\",\n  \"stool\",\n  \"stoop\",\n  \"stoplight\",\n  \"stoppable\",\n  \"stoppage\",\n  \"stopped\",\n  \"stopper\",\n  \"stopping\",\n  \"stopwatch\",\n  \"storable\",\n  \"storage\",\n  \"storeroom\",\n  \"storewide\",\n  \"storm\",\n  \"stout\",\n  \"stove\",\n  \"stowaway\",\n  \"stowing\",\n  \"straddle\",\n  \"straggler\",\n  \"strained\",\n  \"strainer\",\n  \"straining\",\n  \"strangely\",\n  \"stranger\",\n  \"strangle\",\n  \"strategic\",\n  \"strategy\",\n  \"stratus\",\n  \"straw\",\n  \"stray\",\n  \"streak\",\n  \"stream\",\n  \"street\",\n  \"strength\",\n  \"strenuous\",\n  \"strep\",\n  \"stress\",\n  \"stretch\",\n  \"strewn\",\n  \"stricken\",\n  \"strict\",\n  \"stride\",\n  \"strife\",\n  \"strike\",\n  \"striking\",\n  \"strive\",\n  \"striving\",\n  \"strobe\",\n  \"strode\",\n  \"stroller\",\n  \"strongbox\",\n  \"strongly\",\n  \"strongman\",\n  \"struck\",\n  \"structure\",\n  \"strudel\",\n  \"struggle\",\n  \"strum\",\n  \"strung\",\n  \"strut\",\n  \"stubbed\",\n  \"stubble\",\n  \"stubbly\",\n  \"stubborn\",\n  \"stucco\",\n  \"stuck\",\n  \"student\",\n  \"studied\",\n  \"studio\",\n  \"study\",\n  \"stuffed\",\n  \"stuffing\",\n  \"stuffy\",\n  \"stumble\",\n  \"stumbling\",\n  \"stump\",\n  \"stung\",\n  \"stunned\",\n  \"stunner\",\n  \"stunning\",\n  \"stunt\",\n  \"stupor\",\n  \"sturdily\",\n  \"sturdy\",\n  \"styling\",\n  \"stylishly\",\n  \"stylist\",\n  \"stylized\",\n  \"stylus\",\n  \"suave\",\n  \"subarctic\",\n  \"subatomic\",\n  \"subdivide\",\n  \"subdued\",\n  \"subduing\",\n  \"subfloor\",\n  \"subgroup\",\n  \"subheader\",\n  \"subject\",\n  \"sublease\",\n  \"sublet\",\n  \"sublevel\",\n  \"sublime\",\n  \"submarine\",\n  \"submerge\",\n  \"submersed\",\n  \"submitter\",\n  \"subpanel\",\n  \"subpar\",\n  \"subplot\",\n  \"subprime\",\n  \"subscribe\",\n  \"subscript\",\n  \"subsector\",\n  \"subside\",\n  \"subsiding\",\n  \"subsidize\",\n  \"subsidy\",\n  \"subsoil\",\n  \"subsonic\",\n  \"substance\",\n  \"subsystem\",\n  \"subtext\",\n  \"subtitle\",\n  \"subtly\",\n  \"subtotal\",\n  \"subtract\",\n  \"subtype\",\n  \"suburb\",\n  \"subway\",\n  \"subwoofer\",\n  \"subzero\",\n  \"succulent\",\n  \"such\",\n  \"suction\",\n  \"sudden\",\n  \"sudoku\",\n  \"suds\",\n  \"sufferer\",\n  \"suffering\",\n  \"suffice\",\n  \"suffix\",\n  \"suffocate\",\n  \"suffrage\",\n  \"sugar\",\n  \"suggest\",\n  \"suing\",\n  \"suitable\",\n  \"suitably\",\n  \"suitcase\",\n  \"suitor\",\n  \"sulfate\",\n  \"sulfide\",\n  \"sulfite\",\n  \"sulfur\",\n  \"sulk\",\n  \"sullen\",\n  \"sulphate\",\n  \"sulphuric\",\n  \"sultry\",\n  \"superbowl\",\n  \"superglue\",\n  \"superhero\",\n  \"superior\",\n  \"superjet\",\n  \"superman\",\n  \"supermom\",\n  \"supernova\",\n  \"supervise\",\n  \"supper\",\n  \"supplier\",\n  \"supply\",\n  \"support\",\n  \"supremacy\",\n  \"supreme\",\n  \"surcharge\",\n  \"surely\",\n  \"sureness\",\n  \"surface\",\n  \"surfacing\",\n  \"surfboard\",\n  \"surfer\",\n  \"surgery\",\n  \"surgical\",\n  \"surging\",\n  \"surname\",\n  \"surpass\",\n  \"surplus\",\n  \"surprise\",\n  \"surreal\",\n  \"surrender\",\n  \"surrogate\",\n  \"surround\",\n  \"survey\",\n  \"survival\",\n  \"survive\",\n  \"surviving\",\n  \"survivor\",\n  \"sushi\",\n  \"suspect\",\n  \"suspend\",\n  \"suspense\",\n  \"sustained\",\n  \"sustainer\",\n  \"swab\",\n  \"swaddling\",\n  \"swagger\",\n  \"swampland\",\n  \"swan\",\n  \"swapping\",\n  \"swarm\",\n  \"sway\",\n  \"swear\",\n  \"sweat\",\n  \"sweep\",\n  \"swell\",\n  \"swept\",\n  \"swerve\",\n  \"swifter\",\n  \"swiftly\",\n  \"swiftness\",\n  \"swimmable\",\n  \"swimmer\",\n  \"swimming\",\n  \"swimsuit\",\n  \"swimwear\",\n  \"swinger\",\n  \"swinging\",\n  \"swipe\",\n  \"swirl\",\n  \"switch\",\n  \"swivel\",\n  \"swizzle\",\n  \"swooned\",\n  \"swoop\",\n  \"swoosh\",\n  \"swore\",\n  \"sworn\",\n  \"swung\",\n  \"sycamore\",\n  \"sympathy\",\n  \"symphonic\",\n  \"symphony\",\n  \"symptom\",\n  \"synapse\",\n  \"syndrome\",\n  \"synergy\",\n  \"synopses\",\n  \"synopsis\",\n  \"synthesis\",\n  \"synthetic\",\n  \"syrup\",\n  \"system\",\n  \"t-shirt\",\n  \"tabasco\",\n  \"tabby\",\n  \"tableful\",\n  \"tables\",\n  \"tablet\",\n  \"tableware\",\n  \"tabloid\",\n  \"tackiness\",\n  \"tacking\",\n  \"tackle\",\n  \"tackling\",\n  \"tacky\",\n  \"taco\",\n  \"tactful\",\n  \"tactical\",\n  \"tactics\",\n  \"tactile\",\n  \"tactless\",\n  \"tadpole\",\n  \"taekwondo\",\n  \"tag\",\n  \"tainted\",\n  \"take\",\n  \"taking\",\n  \"talcum\",\n  \"talisman\",\n  \"tall\",\n  \"talon\",\n  \"tamale\",\n  \"tameness\",\n  \"tamer\",\n  \"tamper\",\n  \"tank\",\n  \"tanned\",\n  \"tannery\",\n  \"tanning\",\n  \"tantrum\",\n  \"tapeless\",\n  \"tapered\",\n  \"tapering\",\n  \"tapestry\",\n  \"tapioca\",\n  \"tapping\",\n  \"taps\",\n  \"tarantula\",\n  \"target\",\n  \"tarmac\",\n  \"tarnish\",\n  \"tarot\",\n  \"tartar\",\n  \"tartly\",\n  \"tartness\",\n  \"task\",\n  \"tassel\",\n  \"taste\",\n  \"tastiness\",\n  \"tasting\",\n  \"tasty\",\n  \"tattered\",\n  \"tattle\",\n  \"tattling\",\n  \"tattoo\",\n  \"taunt\",\n  \"tavern\",\n  \"thank\",\n  \"that\",\n  \"thaw\",\n  \"theater\",\n  \"theatrics\",\n  \"thee\",\n  \"theft\",\n  \"theme\",\n  \"theology\",\n  \"theorize\",\n  \"thermal\",\n  \"thermos\",\n  \"thesaurus\",\n  \"these\",\n  \"thesis\",\n  \"thespian\",\n  \"thicken\",\n  \"thicket\",\n  \"thickness\",\n  \"thieving\",\n  \"thievish\",\n  \"thigh\",\n  \"thimble\",\n  \"thing\",\n  \"think\",\n  \"thinly\",\n  \"thinner\",\n  \"thinness\",\n  \"thinning\",\n  \"thirstily\",\n  \"thirsting\",\n  \"thirsty\",\n  \"thirteen\",\n  \"thirty\",\n  \"thong\",\n  \"thorn\",\n  \"those\",\n  \"thousand\",\n  \"thrash\",\n  \"thread\",\n  \"threaten\",\n  \"threefold\",\n  \"thrift\",\n  \"thrill\",\n  \"thrive\",\n  \"thriving\",\n  \"throat\",\n  \"throbbing\",\n  \"throng\",\n  \"throttle\",\n  \"throwaway\",\n  \"throwback\",\n  \"thrower\",\n  \"throwing\",\n  \"thud\",\n  \"thumb\",\n  \"thumping\",\n  \"thursday\",\n  \"thus\",\n  \"thwarting\",\n  \"thyself\",\n  \"tiara\",\n  \"tibia\",\n  \"tidal\",\n  \"tidbit\",\n  \"tidiness\",\n  \"tidings\",\n  \"tidy\",\n  \"tiger\",\n  \"tighten\",\n  \"tightly\",\n  \"tightness\",\n  \"tightrope\",\n  \"tightwad\",\n  \"tigress\",\n  \"tile\",\n  \"tiling\",\n  \"till\",\n  \"tilt\",\n  \"timid\",\n  \"timing\",\n  \"timothy\",\n  \"tinderbox\",\n  \"tinfoil\",\n  \"tingle\",\n  \"tingling\",\n  \"tingly\",\n  \"tinker\",\n  \"tinkling\",\n  \"tinsel\",\n  \"tinsmith\",\n  \"tint\",\n  \"tinwork\",\n  \"tiny\",\n  \"tipoff\",\n  \"tipped\",\n  \"tipper\",\n  \"tipping\",\n  \"tiptoeing\",\n  \"tiptop\",\n  \"tiring\",\n  \"tissue\",\n  \"trace\",\n  \"tracing\",\n  \"track\",\n  \"traction\",\n  \"tractor\",\n  \"trade\",\n  \"trading\",\n  \"tradition\",\n  \"traffic\",\n  \"tragedy\",\n  \"trailing\",\n  \"trailside\",\n  \"train\",\n  \"traitor\",\n  \"trance\",\n  \"tranquil\",\n  \"transfer\",\n  \"transform\",\n  \"translate\",\n  \"transpire\",\n  \"transport\",\n  \"transpose\",\n  \"trapdoor\",\n  \"trapeze\",\n  \"trapezoid\",\n  \"trapped\",\n  \"trapper\",\n  \"trapping\",\n  \"traps\",\n  \"trash\",\n  \"travel\",\n  \"traverse\",\n  \"travesty\",\n  \"tray\",\n  \"treachery\",\n  \"treading\",\n  \"treadmill\",\n  \"treason\",\n  \"treat\",\n  \"treble\",\n  \"tree\",\n  \"trekker\",\n  \"tremble\",\n  \"trembling\",\n  \"tremor\",\n  \"trench\",\n  \"trend\",\n  \"trespass\",\n  \"triage\",\n  \"trial\",\n  \"triangle\",\n  \"tribesman\",\n  \"tribunal\",\n  \"tribune\",\n  \"tributary\",\n  \"tribute\",\n  \"triceps\",\n  \"trickery\",\n  \"trickily\",\n  \"tricking\",\n  \"trickle\",\n  \"trickster\",\n  \"tricky\",\n  \"tricolor\",\n  \"tricycle\",\n  \"trident\",\n  \"tried\",\n  \"trifle\",\n  \"trifocals\",\n  \"trillion\",\n  \"trilogy\",\n  \"trimester\",\n  \"trimmer\",\n  \"trimming\",\n  \"trimness\",\n  \"trinity\",\n  \"trio\",\n  \"tripod\",\n  \"tripping\",\n  \"triumph\",\n  \"trivial\",\n  \"trodden\",\n  \"trolling\",\n  \"trombone\",\n  \"trophy\",\n  \"tropical\",\n  \"tropics\",\n  \"trouble\",\n  \"troubling\",\n  \"trough\",\n  \"trousers\",\n  \"trout\",\n  \"trowel\",\n  \"truce\",\n  \"truck\",\n  \"truffle\",\n  \"trump\",\n  \"trunks\",\n  \"trustable\",\n  \"trustee\",\n  \"trustful\",\n  \"trusting\",\n  \"trustless\",\n  \"truth\",\n  \"try\",\n  \"tubby\",\n  \"tubeless\",\n  \"tubular\",\n  \"tucking\",\n  \"tuesday\",\n  \"tug\",\n  \"tuition\",\n  \"tulip\",\n  \"tumble\",\n  \"tumbling\",\n  \"tummy\",\n  \"turban\",\n  \"turbine\",\n  \"turbofan\",\n  \"turbojet\",\n  \"turbulent\",\n  \"turf\",\n  \"turkey\",\n  \"turmoil\",\n  \"turret\",\n  \"turtle\",\n  \"tusk\",\n  \"tutor\",\n  \"tutu\",\n  \"tux\",\n  \"tweak\",\n  \"tweed\",\n  \"tweet\",\n  \"tweezers\",\n  \"twelve\",\n  \"twentieth\",\n  \"twenty\",\n  \"twerp\",\n  \"twice\",\n  \"twiddle\",\n  \"twiddling\",\n  \"twig\",\n  \"twilight\",\n  \"twine\",\n  \"twins\",\n  \"twirl\",\n  \"twistable\",\n  \"twisted\",\n  \"twister\",\n  \"twisting\",\n  \"twisty\",\n  \"twitch\",\n  \"twitter\",\n  \"tycoon\",\n  \"tying\",\n  \"tyke\",\n  \"udder\",\n  \"ultimate\",\n  \"ultimatum\",\n  \"ultra\",\n  \"umbilical\",\n  \"umbrella\",\n  \"umpire\",\n  \"unabashed\",\n  \"unable\",\n  \"unadorned\",\n  \"unadvised\",\n  \"unafraid\",\n  \"unaired\",\n  \"unaligned\",\n  \"unaltered\",\n  \"unarmored\",\n  \"unashamed\",\n  \"unaudited\",\n  \"unawake\",\n  \"unaware\",\n  \"unbaked\",\n  \"unbalance\",\n  \"unbeaten\",\n  \"unbend\",\n  \"unbent\",\n  \"unbiased\",\n  \"unbitten\",\n  \"unblended\",\n  \"unblessed\",\n  \"unblock\",\n  \"unbolted\",\n  \"unbounded\",\n  \"unboxed\",\n  \"unbraided\",\n  \"unbridle\",\n  \"unbroken\",\n  \"unbuckled\",\n  \"unbundle\",\n  \"unburned\",\n  \"unbutton\",\n  \"uncanny\",\n  \"uncapped\",\n  \"uncaring\",\n  \"uncertain\",\n  \"unchain\",\n  \"unchanged\",\n  \"uncharted\",\n  \"uncheck\",\n  \"uncivil\",\n  \"unclad\",\n  \"unclaimed\",\n  \"unclamped\",\n  \"unclasp\",\n  \"uncle\",\n  \"unclip\",\n  \"uncloak\",\n  \"unclog\",\n  \"unclothed\",\n  \"uncoated\",\n  \"uncoiled\",\n  \"uncolored\",\n  \"uncombed\",\n  \"uncommon\",\n  \"uncooked\",\n  \"uncork\",\n  \"uncorrupt\",\n  \"uncounted\",\n  \"uncouple\",\n  \"uncouth\",\n  \"uncover\",\n  \"uncross\",\n  \"uncrown\",\n  \"uncrushed\",\n  \"uncured\",\n  \"uncurious\",\n  \"uncurled\",\n  \"uncut\",\n  \"undamaged\",\n  \"undated\",\n  \"undaunted\",\n  \"undead\",\n  \"undecided\",\n  \"undefined\",\n  \"underage\",\n  \"underarm\",\n  \"undercoat\",\n  \"undercook\",\n  \"undercut\",\n  \"underdog\",\n  \"underdone\",\n  \"underfed\",\n  \"underfeed\",\n  \"underfoot\",\n  \"undergo\",\n  \"undergrad\",\n  \"underhand\",\n  \"underline\",\n  \"underling\",\n  \"undermine\",\n  \"undermost\",\n  \"underpaid\",\n  \"underpass\",\n  \"underpay\",\n  \"underrate\",\n  \"undertake\",\n  \"undertone\",\n  \"undertook\",\n  \"undertow\",\n  \"underuse\",\n  \"underwear\",\n  \"underwent\",\n  \"underwire\",\n  \"undesired\",\n  \"undiluted\",\n  \"undivided\",\n  \"undocked\",\n  \"undoing\",\n  \"undone\",\n  \"undrafted\",\n  \"undress\",\n  \"undrilled\",\n  \"undusted\",\n  \"undying\",\n  \"unearned\",\n  \"unearth\",\n  \"unease\",\n  \"uneasily\",\n  \"uneasy\",\n  \"uneatable\",\n  \"uneaten\",\n  \"unedited\",\n  \"unelected\",\n  \"unending\",\n  \"unengaged\",\n  \"unenvied\",\n  \"unequal\",\n  \"unethical\",\n  \"uneven\",\n  \"unexpired\",\n  \"unexposed\",\n  \"unfailing\",\n  \"unfair\",\n  \"unfasten\",\n  \"unfazed\",\n  \"unfeeling\",\n  \"unfiled\",\n  \"unfilled\",\n  \"unfitted\",\n  \"unfitting\",\n  \"unfixable\",\n  \"unfixed\",\n  \"unflawed\",\n  \"unfocused\",\n  \"unfold\",\n  \"unfounded\",\n  \"unframed\",\n  \"unfreeze\",\n  \"unfrosted\",\n  \"unfrozen\",\n  \"unfunded\",\n  \"unglazed\",\n  \"ungloved\",\n  \"unglue\",\n  \"ungodly\",\n  \"ungraded\",\n  \"ungreased\",\n  \"unguarded\",\n  \"unguided\",\n  \"unhappily\",\n  \"unhappy\",\n  \"unharmed\",\n  \"unhealthy\",\n  \"unheard\",\n  \"unhearing\",\n  \"unheated\",\n  \"unhelpful\",\n  \"unhidden\",\n  \"unhinge\",\n  \"unhitched\",\n  \"unholy\",\n  \"unhook\",\n  \"unicorn\",\n  \"unicycle\",\n  \"unified\",\n  \"unifier\",\n  \"uniformed\",\n  \"uniformly\",\n  \"unify\",\n  \"unimpeded\",\n  \"uninjured\",\n  \"uninstall\",\n  \"uninsured\",\n  \"uninvited\",\n  \"union\",\n  \"uniquely\",\n  \"unisexual\",\n  \"unison\",\n  \"unissued\",\n  \"unit\",\n  \"universal\",\n  \"universe\",\n  \"unjustly\",\n  \"unkempt\",\n  \"unkind\",\n  \"unknotted\",\n  \"unknowing\",\n  \"unknown\",\n  \"unlaced\",\n  \"unlatch\",\n  \"unlawful\",\n  \"unleaded\",\n  \"unlearned\",\n  \"unleash\",\n  \"unless\",\n  \"unleveled\",\n  \"unlighted\",\n  \"unlikable\",\n  \"unlimited\",\n  \"unlined\",\n  \"unlinked\",\n  \"unlisted\",\n  \"unlit\",\n  \"unlivable\",\n  \"unloaded\",\n  \"unloader\",\n  \"unlocked\",\n  \"unlocking\",\n  \"unlovable\",\n  \"unloved\",\n  \"unlovely\",\n  \"unloving\",\n  \"unluckily\",\n  \"unlucky\",\n  \"unmade\",\n  \"unmanaged\",\n  \"unmanned\",\n  \"unmapped\",\n  \"unmarked\",\n  \"unmasked\",\n  \"unmasking\",\n  \"unmatched\",\n  \"unmindful\",\n  \"unmixable\",\n  \"unmixed\",\n  \"unmolded\",\n  \"unmoral\",\n  \"unmovable\",\n  \"unmoved\",\n  \"unmoving\",\n  \"unnamable\",\n  \"unnamed\",\n  \"unnatural\",\n  \"unneeded\",\n  \"unnerve\",\n  \"unnerving\",\n  \"unnoticed\",\n  \"unopened\",\n  \"unopposed\",\n  \"unpack\",\n  \"unpadded\",\n  \"unpaid\",\n  \"unpainted\",\n  \"unpaired\",\n  \"unpaved\",\n  \"unpeeled\",\n  \"unpicked\",\n  \"unpiloted\",\n  \"unpinned\",\n  \"unplanned\",\n  \"unplanted\",\n  \"unpleased\",\n  \"unpledged\",\n  \"unplowed\",\n  \"unplug\",\n  \"unpopular\",\n  \"unproven\",\n  \"unquote\",\n  \"unranked\",\n  \"unrated\",\n  \"unraveled\",\n  \"unreached\",\n  \"unread\",\n  \"unreal\",\n  \"unreeling\",\n  \"unrefined\",\n  \"unrelated\",\n  \"unrented\",\n  \"unrest\",\n  \"unretired\",\n  \"unrevised\",\n  \"unrigged\",\n  \"unripe\",\n  \"unrivaled\",\n  \"unroasted\",\n  \"unrobed\",\n  \"unroll\",\n  \"unruffled\",\n  \"unruly\",\n  \"unrushed\",\n  \"unsaddle\",\n  \"unsafe\",\n  \"unsaid\",\n  \"unsalted\",\n  \"unsaved\",\n  \"unsavory\",\n  \"unscathed\",\n  \"unscented\",\n  \"unscrew\",\n  \"unsealed\",\n  \"unseated\",\n  \"unsecured\",\n  \"unseeing\",\n  \"unseemly\",\n  \"unseen\",\n  \"unselect\",\n  \"unselfish\",\n  \"unsent\",\n  \"unsettled\",\n  \"unshackle\",\n  \"unshaken\",\n  \"unshaved\",\n  \"unshaven\",\n  \"unsheathe\",\n  \"unshipped\",\n  \"unsightly\",\n  \"unsigned\",\n  \"unskilled\",\n  \"unsliced\",\n  \"unsmooth\",\n  \"unsnap\",\n  \"unsocial\",\n  \"unsoiled\",\n  \"unsold\",\n  \"unsolved\",\n  \"unsorted\",\n  \"unspoiled\",\n  \"unspoken\",\n  \"unstable\",\n  \"unstaffed\",\n  \"unstamped\",\n  \"unsteady\",\n  \"unsterile\",\n  \"unstirred\",\n  \"unstitch\",\n  \"unstopped\",\n  \"unstuck\",\n  \"unstuffed\",\n  \"unstylish\",\n  \"unsubtle\",\n  \"unsubtly\",\n  \"unsuited\",\n  \"unsure\",\n  \"unsworn\",\n  \"untagged\",\n  \"untainted\",\n  \"untaken\",\n  \"untamed\",\n  \"untangled\",\n  \"untapped\",\n  \"untaxed\",\n  \"unthawed\",\n  \"unthread\",\n  \"untidy\",\n  \"untie\",\n  \"until\",\n  \"untimed\",\n  \"untimely\",\n  \"untitled\",\n  \"untoasted\",\n  \"untold\",\n  \"untouched\",\n  \"untracked\",\n  \"untrained\",\n  \"untreated\",\n  \"untried\",\n  \"untrimmed\",\n  \"untrue\",\n  \"untruth\",\n  \"unturned\",\n  \"untwist\",\n  \"untying\",\n  \"unusable\",\n  \"unused\",\n  \"unusual\",\n  \"unvalued\",\n  \"unvaried\",\n  \"unvarying\",\n  \"unveiled\",\n  \"unveiling\",\n  \"unvented\",\n  \"unviable\",\n  \"unvisited\",\n  \"unvocal\",\n  \"unwanted\",\n  \"unwarlike\",\n  \"unwary\",\n  \"unwashed\",\n  \"unwatched\",\n  \"unweave\",\n  \"unwed\",\n  \"unwelcome\",\n  \"unwell\",\n  \"unwieldy\",\n  \"unwilling\",\n  \"unwind\",\n  \"unwired\",\n  \"unwitting\",\n  \"unwomanly\",\n  \"unworldly\",\n  \"unworn\",\n  \"unworried\",\n  \"unworthy\",\n  \"unwound\",\n  \"unwoven\",\n  \"unwrapped\",\n  \"unwritten\",\n  \"unzip\",\n  \"upbeat\",\n  \"upchuck\",\n  \"upcoming\",\n  \"upcountry\",\n  \"update\",\n  \"upfront\",\n  \"upgrade\",\n  \"upheaval\",\n  \"upheld\",\n  \"uphill\",\n  \"uphold\",\n  \"uplifted\",\n  \"uplifting\",\n  \"upload\",\n  \"upon\",\n  \"upper\",\n  \"upright\",\n  \"uprising\",\n  \"upriver\",\n  \"uproar\",\n  \"uproot\",\n  \"upscale\",\n  \"upside\",\n  \"upstage\",\n  \"upstairs\",\n  \"upstart\",\n  \"upstate\",\n  \"upstream\",\n  \"upstroke\",\n  \"upswing\",\n  \"uptake\",\n  \"uptight\",\n  \"uptown\",\n  \"upturned\",\n  \"upward\",\n  \"upwind\",\n  \"uranium\",\n  \"urban\",\n  \"urchin\",\n  \"urethane\",\n  \"urgency\",\n  \"urgent\",\n  \"urging\",\n  \"urologist\",\n  \"urology\",\n  \"usable\",\n  \"usage\",\n  \"useable\",\n  \"used\",\n  \"uselessly\",\n  \"user\",\n  \"usher\",\n  \"usual\",\n  \"utensil\",\n  \"utility\",\n  \"utilize\",\n  \"utmost\",\n  \"utopia\",\n  \"utter\",\n  \"vacancy\",\n  \"vacant\",\n  \"vacate\",\n  \"vacation\",\n  \"vagabond\",\n  \"vagrancy\",\n  \"vagrantly\",\n  \"vaguely\",\n  \"vagueness\",\n  \"valiant\",\n  \"valid\",\n  \"valium\",\n  \"valley\",\n  \"valuables\",\n  \"value\",\n  \"vanilla\",\n  \"vanish\",\n  \"vanity\",\n  \"vanquish\",\n  \"vantage\",\n  \"vaporizer\",\n  \"variable\",\n  \"variably\",\n  \"varied\",\n  \"variety\",\n  \"various\",\n  \"varmint\",\n  \"varnish\",\n  \"varsity\",\n  \"varying\",\n  \"vascular\",\n  \"vaseline\",\n  \"vastly\",\n  \"vastness\",\n  \"veal\",\n  \"vegan\",\n  \"veggie\",\n  \"vehicular\",\n  \"velcro\",\n  \"velocity\",\n  \"velvet\",\n  \"vendetta\",\n  \"vending\",\n  \"vendor\",\n  \"veneering\",\n  \"vengeful\",\n  \"venomous\",\n  \"ventricle\",\n  \"venture\",\n  \"venue\",\n  \"venus\",\n  \"verbalize\",\n  \"verbally\",\n  \"verbose\",\n  \"verdict\",\n  \"verify\",\n  \"verse\",\n  \"version\",\n  \"versus\",\n  \"vertebrae\",\n  \"vertical\",\n  \"vertigo\",\n  \"very\",\n  \"vessel\",\n  \"vest\",\n  \"veteran\",\n  \"veto\",\n  \"vexingly\",\n  \"viability\",\n  \"viable\",\n  \"vibes\",\n  \"vice\",\n  \"vicinity\",\n  \"victory\",\n  \"video\",\n  \"viewable\",\n  \"viewer\",\n  \"viewing\",\n  \"viewless\",\n  \"viewpoint\",\n  \"vigorous\",\n  \"village\",\n  \"villain\",\n  \"vindicate\",\n  \"vineyard\",\n  \"vintage\",\n  \"violate\",\n  \"violation\",\n  \"violator\",\n  \"violet\",\n  \"violin\",\n  \"viper\",\n  \"viral\",\n  \"virtual\",\n  \"virtuous\",\n  \"virus\",\n  \"visa\",\n  \"viscosity\",\n  \"viscous\",\n  \"viselike\",\n  \"visible\",\n  \"visibly\",\n  \"vision\",\n  \"visiting\",\n  \"visitor\",\n  \"visor\",\n  \"vista\",\n  \"vitality\",\n  \"vitalize\",\n  \"vitally\",\n  \"vitamins\",\n  \"vivacious\",\n  \"vividly\",\n  \"vividness\",\n  \"vixen\",\n  \"vocalist\",\n  \"vocalize\",\n  \"vocally\",\n  \"vocation\",\n  \"voice\",\n  \"voicing\",\n  \"void\",\n  \"volatile\",\n  \"volley\",\n  \"voltage\",\n  \"volumes\",\n  \"voter\",\n  \"voting\",\n  \"voucher\",\n  \"vowed\",\n  \"vowel\",\n  \"voyage\",\n  \"wackiness\",\n  \"wad\",\n  \"wafer\",\n  \"waffle\",\n  \"waged\",\n  \"wager\",\n  \"wages\",\n  \"waggle\",\n  \"wagon\",\n  \"wake\",\n  \"waking\",\n  \"walk\",\n  \"walmart\",\n  \"walnut\",\n  \"walrus\",\n  \"waltz\",\n  \"wand\",\n  \"wannabe\",\n  \"wanted\",\n  \"wanting\",\n  \"wasabi\",\n  \"washable\",\n  \"washbasin\",\n  \"washboard\",\n  \"washbowl\",\n  \"washcloth\",\n  \"washday\",\n  \"washed\",\n  \"washer\",\n  \"washhouse\",\n  \"washing\",\n  \"washout\",\n  \"washroom\",\n  \"washstand\",\n  \"washtub\",\n  \"wasp\",\n  \"wasting\",\n  \"watch\",\n  \"water\",\n  \"waviness\",\n  \"waving\",\n  \"wavy\",\n  \"whacking\",\n  \"whacky\",\n  \"wham\",\n  \"wharf\",\n  \"wheat\",\n  \"whenever\",\n  \"whiff\",\n  \"whimsical\",\n  \"whinny\",\n  \"whiny\",\n  \"whisking\",\n  \"whoever\",\n  \"whole\",\n  \"whomever\",\n  \"whoopee\",\n  \"whooping\",\n  \"whoops\",\n  \"why\",\n  \"wick\",\n  \"widely\",\n  \"widen\",\n  \"widget\",\n  \"widow\",\n  \"width\",\n  \"wieldable\",\n  \"wielder\",\n  \"wife\",\n  \"wifi\",\n  \"wikipedia\",\n  \"wildcard\",\n  \"wildcat\",\n  \"wilder\",\n  \"wildfire\",\n  \"wildfowl\",\n  \"wildland\",\n  \"wildlife\",\n  \"wildly\",\n  \"wildness\",\n  \"willed\",\n  \"willfully\",\n  \"willing\",\n  \"willow\",\n  \"willpower\",\n  \"wilt\",\n  \"wimp\",\n  \"wince\",\n  \"wincing\",\n  \"wind\",\n  \"wing\",\n  \"winking\",\n  \"winner\",\n  \"winnings\",\n  \"winter\",\n  \"wipe\",\n  \"wired\",\n  \"wireless\",\n  \"wiring\",\n  \"wiry\",\n  \"wisdom\",\n  \"wise\",\n  \"wish\",\n  \"wisplike\",\n  \"wispy\",\n  \"wistful\",\n  \"wizard\",\n  \"wobble\",\n  \"wobbling\",\n  \"wobbly\",\n  \"wok\",\n  \"wolf\",\n  \"wolverine\",\n  \"womanhood\",\n  \"womankind\",\n  \"womanless\",\n  \"womanlike\",\n  \"womanly\",\n  \"womb\",\n  \"woof\",\n  \"wooing\",\n  \"wool\",\n  \"woozy\",\n  \"word\",\n  \"work\",\n  \"worried\",\n  \"worrier\",\n  \"worrisome\",\n  \"worry\",\n  \"worsening\",\n  \"worshiper\",\n  \"worst\",\n  \"wound\",\n  \"woven\",\n  \"wow\",\n  \"wrangle\",\n  \"wrath\",\n  \"wreath\",\n  \"wreckage\",\n  \"wrecker\",\n  \"wrecking\",\n  \"wrench\",\n  \"wriggle\",\n  \"wriggly\",\n  \"wrinkle\",\n  \"wrinkly\",\n  \"wrist\",\n  \"writing\",\n  \"written\",\n  \"wrongdoer\",\n  \"wronged\",\n  \"wrongful\",\n  \"wrongly\",\n  \"wrongness\",\n  \"wrought\",\n  \"xbox\",\n  \"xerox\",\n  \"yahoo\",\n  \"yam\",\n  \"yanking\",\n  \"yapping\",\n  \"yard\",\n  \"yarn\",\n  \"yeah\",\n  \"yearbook\",\n  \"yearling\",\n  \"yearly\",\n  \"yearning\",\n  \"yeast\",\n  \"yelling\",\n  \"yelp\",\n  \"yen\",\n  \"yesterday\",\n  \"yiddish\",\n  \"yield\",\n  \"yin\",\n  \"yippee\",\n  \"yo-yo\",\n  \"yodel\",\n  \"yoga\",\n  \"yogurt\",\n  \"yonder\",\n  \"yoyo\",\n  \"yummy\",\n  \"zap\",\n  \"zealous\",\n  \"zebra\",\n  \"zen\",\n  \"zeppelin\",\n  \"zero\",\n  \"zestfully\",\n  \"zesty\",\n  \"zigzagged\",\n  \"zipfile\",\n  \"zipping\",\n  \"zippy\",\n  \"zips\",\n  \"zit\",\n  \"zodiac\",\n  \"zombie\",\n  \"zone\",\n  \"zoning\",\n  \"zookeeper\",\n  \"zoologist\",\n  \"zoology\",\n  \"zoom\",\n];\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EncryptedOrganizationKeyData } from \"../../models/data/encryptedOrganizationKeyData\";\n\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport abstract class BaseEncryptedOrganizationKey {\n  decrypt: (cryptoService: CryptoService) => Promise<SymmetricCryptoKey>;\n\n  static fromData(data: EncryptedOrganizationKeyData) {\n    switch (data.type) {\n      case \"organization\":\n        return new EncryptedOrganizationKey(data.key);\n\n      case \"provider\":\n        return new ProviderEncryptedOrganizationKey(data.key, data.providerId);\n\n      default:\n        return null;\n    }\n  }\n}\n\nexport class EncryptedOrganizationKey implements BaseEncryptedOrganizationKey {\n  constructor(private key: string) {}\n\n  async decrypt(cryptoService: CryptoService) {\n    const decValue = await cryptoService.rsaDecrypt(this.key);\n    return new SymmetricCryptoKey(decValue);\n  }\n\n  toData(): EncryptedOrganizationKeyData {\n    return {\n      type: \"organization\",\n      key: this.key,\n    };\n  }\n}\n\nexport class ProviderEncryptedOrganizationKey implements BaseEncryptedOrganizationKey {\n  constructor(private key: string, private providerId: string) {}\n\n  async decrypt(cryptoService: CryptoService) {\n    const providerKey = await cryptoService.getProviderKey(this.providerId);\n    const decValue = await cryptoService.decryptToBytes(new EncString(this.key), providerKey);\n    return new SymmetricCryptoKey(decValue);\n  }\n\n  toData(): EncryptedOrganizationKeyData {\n    return {\n      type: \"provider\",\n      key: this.key,\n      providerId: this.providerId,\n    };\n  }\n}\n","import * as bigInt from \"big-integer\";\n\nimport { AbstractEncryptService } from \"../abstractions/abstractEncrypt.service\";\nimport { CryptoService as CryptoServiceAbstraction } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EncryptionType } from \"../enums/encryptionType\";\nimport { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encryptedOrganizationKeyData\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { BaseEncryptedOrganizationKey } from \"../models/domain/encryptedOrganizationKey\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { ProfileOrganizationResponse } from \"../models/response/profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"../models/response/profileProviderResponse\";\n\nexport class CryptoService implements CryptoServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private encryptService: AbstractEncryptService,\n    protected platformUtilService: PlatformUtilsService,\n    protected logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  async setKey(key: SymmetricCryptoKey, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(key, { userId: userId });\n    await this.storeKey(key, userId);\n  }\n\n  async setKeyHash(keyHash: string): Promise<void> {\n    await this.stateService.setKeyHash(keyHash);\n  }\n\n  async setEncKey(encKey: string): Promise<void> {\n    if (encKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedCryptoSymmetricKey(null);\n    await this.stateService.setEncryptedCryptoSymmetricKey(encKey);\n  }\n\n  async setEncPrivateKey(encPrivateKey: string): Promise<void> {\n    if (encPrivateKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedPrivateKey(null);\n    await this.stateService.setEncryptedPrivateKey(encPrivateKey);\n  }\n\n  async setOrgKeys(\n    orgs: ProfileOrganizationResponse[] = [],\n    providerOrgs: ProfileProviderOrganizationResponse[] = []\n  ): Promise<void> {\n    const encOrgKeyData: { [orgId: string]: EncryptedOrganizationKeyData } = {};\n\n    orgs.forEach((org) => {\n      encOrgKeyData[org.id] = {\n        type: \"organization\",\n        key: org.key,\n      };\n    });\n\n    providerOrgs.forEach((org) => {\n      encOrgKeyData[org.id] = {\n        type: \"provider\",\n        providerId: org.providerId,\n        key: org.key,\n      };\n    });\n\n    await this.stateService.setDecryptedOrganizationKeys(null);\n    return await this.stateService.setEncryptedOrganizationKeys(encOrgKeyData);\n  }\n\n  async setProviderKeys(providers: ProfileProviderResponse[]): Promise<void> {\n    const providerKeys: any = {};\n    providers.forEach((provider) => {\n      providerKeys[provider.id] = provider.key;\n    });\n\n    await this.stateService.setDecryptedProviderKeys(null);\n    return await this.stateService.setEncryptedProviderKeys(providerKeys);\n  }\n\n  async getKey(keySuffix?: KeySuffixOptions, userId?: string): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getCryptoMasterKey({ userId: userId });\n\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    keySuffix ||= KeySuffixOptions.Auto;\n    const symmetricKey = await this.getKeyFromStorage(keySuffix, userId);\n\n    if (symmetricKey != null) {\n      // TODO: Refactor here so get key doesn't also set key\n      this.setKey(symmetricKey, userId);\n    }\n\n    return symmetricKey;\n  }\n\n  async getKeyFromStorage(\n    keySuffix: KeySuffixOptions,\n    userId?: string\n  ): Promise<SymmetricCryptoKey> {\n    const key = await this.retrieveKeyFromStorage(keySuffix, userId);\n    if (key != null) {\n      const symmetricKey = new SymmetricCryptoKey(Utils.fromB64ToArray(key).buffer);\n\n      if (!(await this.validateKey(symmetricKey))) {\n        this.logService.warning(\"Wrong key, throwing away stored key\");\n        await this.clearSecretKeyStore(userId);\n        return null;\n      }\n\n      return symmetricKey;\n    }\n    return null;\n  }\n\n  async getKeyHash(): Promise<string> {\n    return await this.stateService.getKeyHash();\n  }\n\n  async compareAndUpdateKeyHash(masterPassword: string, key: SymmetricCryptoKey): Promise<boolean> {\n    const storedKeyHash = await this.getKeyHash();\n    if (masterPassword != null && storedKeyHash != null) {\n      const localKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.LocalAuthorization\n      );\n      if (localKeyHash != null && storedKeyHash === localKeyHash) {\n        return true;\n      }\n\n      // TODO: remove serverKeyHash check in 1-2 releases after everyone's keyHash has been updated\n      const serverKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.ServerAuthorization\n      );\n      if (serverKeyHash != null && storedKeyHash === serverKeyHash) {\n        await this.setKeyHash(localKeyHash);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  @sequentialize(() => \"getEncKey\")\n  getEncKey(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    return this.getEncKeyHelper(key);\n  }\n\n  async getPublicKey(): Promise<ArrayBuffer> {\n    const inMemoryPublicKey = await this.stateService.getPublicKey();\n    if (inMemoryPublicKey != null) {\n      return inMemoryPublicKey;\n    }\n\n    const privateKey = await this.getPrivateKey();\n    if (privateKey == null) {\n      return null;\n    }\n\n    const publicKey = await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    await this.stateService.setPublicKey(publicKey);\n    return publicKey;\n  }\n\n  async getPrivateKey(): Promise<ArrayBuffer> {\n    const decryptedPrivateKey = await this.stateService.getDecryptedPrivateKey();\n    if (decryptedPrivateKey != null) {\n      return decryptedPrivateKey;\n    }\n\n    const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n    if (encPrivateKey == null) {\n      return null;\n    }\n\n    const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), null);\n    await this.stateService.setDecryptedPrivateKey(privateKey);\n    return privateKey;\n  }\n\n  async getFingerprint(userId: string, publicKey?: ArrayBuffer): Promise<string[]> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey === null) {\n      throw new Error(\"No public key available.\");\n    }\n    const keyFingerprint = await this.cryptoFunctionService.hash(publicKey, \"sha256\");\n    const userFingerprint = await this.cryptoFunctionService.hkdfExpand(\n      keyFingerprint,\n      userId,\n      32,\n      \"sha256\"\n    );\n    return this.hashPhrase(userFingerprint);\n  }\n\n  @sequentialize(() => \"getOrgKeys\")\n  async getOrgKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const result: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedOrganizationKeys = await this.stateService.getDecryptedOrganizationKeys();\n    if (decryptedOrganizationKeys != null && decryptedOrganizationKeys.size > 0) {\n      return decryptedOrganizationKeys;\n    }\n\n    const encOrgKeyData = await this.stateService.getEncryptedOrganizationKeys();\n    if (encOrgKeyData == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId of Object.keys(encOrgKeyData)) {\n      if (result.has(orgId)) {\n        continue;\n      }\n\n      const encOrgKey = BaseEncryptedOrganizationKey.fromData(encOrgKeyData[orgId]);\n      const decOrgKey = await encOrgKey.decrypt(this);\n      result.set(orgId, decOrgKey);\n\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedOrganizationKeys(result);\n    }\n\n    return result;\n  }\n\n  async getOrgKey(orgId: string): Promise<SymmetricCryptoKey> {\n    if (orgId == null) {\n      return null;\n    }\n\n    const orgKeys = await this.getOrgKeys();\n    if (orgKeys == null || !orgKeys.has(orgId)) {\n      return null;\n    }\n\n    return orgKeys.get(orgId);\n  }\n\n  @sequentialize(() => \"getProviderKeys\")\n  async getProviderKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const providerKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedProviderKeys = await this.stateService.getDecryptedProviderKeys();\n    if (decryptedProviderKeys != null && decryptedProviderKeys.size > 0) {\n      return decryptedProviderKeys;\n    }\n\n    const encProviderKeys = await this.stateService.getEncryptedProviderKeys();\n    if (encProviderKeys == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId in encProviderKeys) {\n      // eslint-disable-next-line\n      if (!encProviderKeys.hasOwnProperty(orgId)) {\n        continue;\n      }\n\n      const decValue = await this.rsaDecrypt(encProviderKeys[orgId]);\n      providerKeys.set(orgId, new SymmetricCryptoKey(decValue));\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedProviderKeys(providerKeys);\n    }\n\n    return providerKeys;\n  }\n\n  async getProviderKey(providerId: string): Promise<SymmetricCryptoKey> {\n    if (providerId == null) {\n      return null;\n    }\n\n    const providerKeys = await this.getProviderKeys();\n    if (providerKeys == null || !providerKeys.has(providerId)) {\n      return null;\n    }\n\n    return providerKeys.get(providerId);\n  }\n\n  async hasKey(): Promise<boolean> {\n    return (\n      (await this.hasKeyInMemory()) ||\n      (await this.hasKeyStored(KeySuffixOptions.Auto)) ||\n      (await this.hasKeyStored(KeySuffixOptions.Biometric))\n    );\n  }\n\n  async hasKeyInMemory(userId?: string): Promise<boolean> {\n    return (await this.stateService.getCryptoMasterKey({ userId: userId })) != null;\n  }\n\n  async hasKeyStored(keySuffix: KeySuffixOptions, userId?: string): Promise<boolean> {\n    switch (keySuffix) {\n      case KeySuffixOptions.Auto:\n        return (await this.stateService.getCryptoMasterKeyAuto({ userId: userId })) != null;\n      case KeySuffixOptions.Biometric:\n        return (await this.stateService.hasCryptoMasterKeyBiometric({ userId: userId })) === true;\n      default:\n        return false;\n    }\n  }\n\n  async hasEncKey(): Promise<boolean> {\n    return (await this.stateService.getEncryptedCryptoSymmetricKey()) != null;\n  }\n\n  async clearKey(clearSecretStorage = true, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(null, { userId: userId });\n    if (clearSecretStorage) {\n      await this.clearSecretKeyStore(userId);\n    }\n  }\n\n  async clearStoredKey(keySuffix: KeySuffixOptions) {\n    keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.setCryptoMasterKeyAuto(null)\n      : await this.stateService.setCryptoMasterKeyBiometric(null);\n  }\n\n  async clearKeyHash(userId?: string): Promise<any> {\n    return await this.stateService.setKeyHash(null, { userId: userId });\n  }\n\n  async clearEncKey(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCryptoSymmetricKey(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedCryptoSymmetricKey(null, { userId: userId });\n    }\n  }\n\n  async clearKeyPair(memoryOnly?: boolean, userId?: string): Promise<any> {\n    const keysToClear: Promise<void>[] = [\n      this.stateService.setDecryptedPrivateKey(null, { userId: userId }),\n      this.stateService.setPublicKey(null, { userId: userId }),\n    ];\n    if (!memoryOnly) {\n      keysToClear.push(this.stateService.setEncryptedPrivateKey(null, { userId: userId }));\n    }\n    return Promise.all(keysToClear);\n  }\n\n  async clearOrgKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedOrganizationKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedOrganizationKeys(null, { userId: userId });\n    }\n  }\n\n  async clearProviderKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedProviderKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedProviderKeys(null, { userId: userId });\n    }\n  }\n\n  async clearPinProtectedKey(userId?: string): Promise<any> {\n    return await this.stateService.setEncryptedPinProtected(null, { userId: userId });\n  }\n\n  async clearKeys(userId?: string): Promise<any> {\n    await this.clearKey(true, userId);\n    await this.clearKeyHash(userId);\n    await this.clearOrgKeys(false, userId);\n    await this.clearProviderKeys(false, userId);\n    await this.clearEncKey(false, userId);\n    await this.clearKeyPair(false, userId);\n    await this.clearPinProtectedKey(userId);\n  }\n\n  async toggleKey(): Promise<any> {\n    const key = await this.getKey();\n\n    await this.setKey(key);\n  }\n\n  async makeKey(\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    let key: ArrayBuffer = null;\n    if (kdf == null || kdf === KdfType.PBKDF2_SHA256) {\n      if (kdfIterations == null) {\n        kdfIterations = 5000;\n      } else if (kdfIterations < 5000) {\n        throw new Error(\"PBKDF2 iteration minimum is 5000.\");\n      }\n      key = await this.cryptoFunctionService.pbkdf2(password, salt, \"sha256\", kdfIterations);\n    } else {\n      throw new Error(\"Unknown Kdf.\");\n    }\n    return new SymmetricCryptoKey(key);\n  }\n\n  async makeKeyFromPin(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    protectedKeyCs: EncString = null\n  ): Promise<SymmetricCryptoKey> {\n    if (protectedKeyCs == null) {\n      const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n      if (pinProtectedKey == null) {\n        throw new Error(\"No PIN protected key found.\");\n      }\n      protectedKeyCs = new EncString(pinProtectedKey);\n    }\n    const pinKey = await this.makePinKey(pin, salt, kdf, kdfIterations);\n    const decKey = await this.decryptToBytes(protectedKeyCs, pinKey);\n    return new SymmetricCryptoKey(decKey);\n  }\n\n  async makeShareKey(): Promise<[EncString, SymmetricCryptoKey]> {\n    const shareKey = await this.cryptoFunctionService.randomBytes(64);\n    const publicKey = await this.getPublicKey();\n    const encShareKey = await this.rsaEncrypt(shareKey, publicKey);\n    return [encShareKey, new SymmetricCryptoKey(shareKey)];\n  }\n\n  async makeKeyPair(key?: SymmetricCryptoKey): Promise<[string, EncString]> {\n    const keyPair = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n    const publicB64 = Utils.fromBufferToB64(keyPair[0]);\n    const privateEnc = await this.encrypt(keyPair[1], key);\n    return [publicB64, privateEnc];\n  }\n\n  async makePinKey(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    const pinKey = await this.makeKey(pin, salt, kdf, kdfIterations);\n    return await this.stretchKey(pinKey);\n  }\n\n  async makeSendKey(keyMaterial: ArrayBuffer): Promise<SymmetricCryptoKey> {\n    const sendKey = await this.cryptoFunctionService.hkdf(\n      keyMaterial,\n      \"bitwarden-send\",\n      \"send\",\n      64,\n      \"sha256\"\n    );\n    return new SymmetricCryptoKey(sendKey);\n  }\n\n  async hashPassword(\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ): Promise<string> {\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (password == null || key == null) {\n      throw new Error(\"Invalid parameters.\");\n    }\n\n    const iterations = hashPurpose === HashPurpose.LocalAuthorization ? 2 : 1;\n    const hash = await this.cryptoFunctionService.pbkdf2(key.key, password, \"sha256\", iterations);\n    return Utils.fromBufferToB64(hash);\n  }\n\n  async makeEncKey(key: SymmetricCryptoKey): Promise<[SymmetricCryptoKey, EncString]> {\n    const theKey = await this.getKeyForUserEncryption(key);\n    const encKey = await this.cryptoFunctionService.randomBytes(64);\n    return this.buildEncKey(theKey, encKey);\n  }\n\n  async remakeEncKey(\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    if (encKey == null) {\n      encKey = await this.getEncKey();\n    }\n    return this.buildEncKey(key, encKey.key);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.encrypt\n   */\n  async encrypt(plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncString> {\n    key = await this.getKeyForUserEncryption(key);\n    return await this.encryptService.encrypt(plainValue, key);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.encryptToBytes\n   */\n  async encryptToBytes(plainValue: ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    key = await this.getKeyForUserEncryption(key);\n    return this.encryptService.encryptToBytes(plainValue, key);\n  }\n\n  async rsaEncrypt(data: ArrayBuffer, publicKey?: ArrayBuffer): Promise<EncString> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey == null) {\n      throw new Error(\"Public key unavailable.\");\n    }\n\n    const encBytes = await this.cryptoFunctionService.rsaEncrypt(data, publicKey, \"sha1\");\n    return new EncString(EncryptionType.Rsa2048_OaepSha1_B64, Utils.fromBufferToB64(encBytes));\n  }\n\n  async rsaDecrypt(encValue: string, privateKeyValue?: ArrayBuffer): Promise<ArrayBuffer> {\n    const headerPieces = encValue.split(\".\");\n    let encType: EncryptionType = null;\n    let encPieces: string[];\n\n    if (headerPieces.length === 1) {\n      encType = EncryptionType.Rsa2048_OaepSha256_B64;\n      encPieces = [headerPieces[0]];\n    } else if (headerPieces.length === 2) {\n      try {\n        encType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64: // HmacSha256 types are deprecated\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    if (encPieces == null || encPieces.length <= 0) {\n      throw new Error(\"encPieces unavailable.\");\n    }\n\n    const data = Utils.fromB64ToArray(encPieces[0]).buffer;\n    const privateKey = privateKeyValue ?? (await this.getPrivateKey());\n    if (privateKey == null) {\n      throw new Error(\"No private key.\");\n    }\n\n    let alg: \"sha1\" | \"sha256\" = \"sha1\";\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64:\n        alg = \"sha256\";\n        break;\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    return this.cryptoFunctionService.rsaDecrypt(data, privateKey, alg);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.decryptToBytes\n   */\n  async decryptToBytes(encString: EncString, key?: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    const keyForEnc = await this.getKeyForUserEncryption(key);\n    return this.encryptService.decryptToBytes(encString, keyForEnc);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.decryptToUtf8\n   */\n  async decryptToUtf8(encString: EncString, key?: SymmetricCryptoKey): Promise<string> {\n    key = await this.getKeyForUserEncryption(key);\n    return await this.encryptService.decryptToUtf8(encString, key);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.decryptToBytes\n   */\n  async decryptFromBytes(encBuffer: EncArrayBuffer, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    if (encBuffer == null) {\n      throw new Error(\"No buffer provided for decryption.\");\n    }\n\n    key = await this.getKeyForUserEncryption(key);\n\n    return this.encryptService.decryptToBytes(encBuffer, key);\n  }\n\n  // EFForg/OpenWireless\n  // ref https://github.com/EFForg/OpenWireless/blob/master/app/js/diceware.js\n  async randomNumber(min: number, max: number): Promise<number> {\n    let rval = 0;\n    const range = max - min + 1;\n    const bitsNeeded = Math.ceil(Math.log2(range));\n    if (bitsNeeded > 53) {\n      throw new Error(\"We cannot generate numbers larger than 53 bits.\");\n    }\n\n    const bytesNeeded = Math.ceil(bitsNeeded / 8);\n    const mask = Math.pow(2, bitsNeeded) - 1;\n    // 7776 -> (2^13 = 8192) -1 == 8191 or 0x00001111 11111111\n\n    // Fill a byte array with N random numbers\n    const byteArray = new Uint8Array(await this.cryptoFunctionService.randomBytes(bytesNeeded));\n\n    let p = (bytesNeeded - 1) * 8;\n    for (let i = 0; i < bytesNeeded; i++) {\n      rval += byteArray[i] * Math.pow(2, p);\n      p -= 8;\n    }\n\n    // Use & to apply the mask and reduce the number of recursive lookups\n    rval = rval & mask;\n\n    if (rval >= range) {\n      // Integer out of acceptable range\n      return this.randomNumber(min, max);\n    }\n\n    // Return an integer that falls within the range\n    return min + rval;\n  }\n\n  async validateKey(key: SymmetricCryptoKey) {\n    try {\n      const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n      const encKey = await this.getEncKeyHelper(key);\n      if (encPrivateKey == null || encKey == null) {\n        return false;\n      }\n\n      const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), encKey);\n      await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  }\n\n  // ---HELPERS---\n\n  protected async storeKey(key: SymmetricCryptoKey, userId?: string) {\n    if (await this.shouldStoreKey(KeySuffixOptions.Auto, userId)) {\n      await this.stateService.setCryptoMasterKeyAuto(key.keyB64, { userId: userId });\n    } else if (await this.shouldStoreKey(KeySuffixOptions.Biometric, userId)) {\n      await this.stateService.setCryptoMasterKeyBiometric(key.keyB64, { userId: userId });\n    } else {\n      await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n      await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n    }\n  }\n\n  protected async shouldStoreKey(keySuffix: KeySuffixOptions, userId?: string) {\n    let shouldStoreKey = false;\n    if (keySuffix === KeySuffixOptions.Auto) {\n      const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n      shouldStoreKey = vaultTimeout == null;\n    } else if (keySuffix === KeySuffixOptions.Biometric) {\n      const biometricUnlock = await this.stateService.getBiometricUnlock({ userId: userId });\n      shouldStoreKey = biometricUnlock && this.platformUtilService.supportsSecureStorage();\n    }\n    return shouldStoreKey;\n  }\n\n  protected async retrieveKeyFromStorage(keySuffix: KeySuffixOptions, userId?: string) {\n    return keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.getCryptoMasterKeyAuto({ userId: userId })\n      : await this.stateService.getCryptoMasterKeyBiometric({ userId: userId });\n  }\n\n  async getKeyForUserEncryption(key?: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    if (key != null) {\n      return key;\n    }\n\n    const encKey = await this.getEncKey();\n    if (encKey != null) {\n      return encKey;\n    }\n\n    // Legacy support: encryption used to be done with the user key (derived from master password).\n    // Users who have not migrated will have a null encKey and must use the user key instead.\n    return await this.getKey();\n  }\n\n  private async stretchKey(key: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    const newKey = new Uint8Array(64);\n    const encKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"enc\", 32, \"sha256\");\n    const macKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"mac\", 32, \"sha256\");\n    newKey.set(new Uint8Array(encKey));\n    newKey.set(new Uint8Array(macKey), 32);\n    return new SymmetricCryptoKey(newKey.buffer);\n  }\n\n  private async hashPhrase(hash: ArrayBuffer, minimumEntropy = 64) {\n    const entropyPerWord = Math.log(EEFLongWordList.length) / Math.log(2);\n    let numWords = Math.ceil(minimumEntropy / entropyPerWord);\n\n    const hashArr = Array.from(new Uint8Array(hash));\n    const entropyAvailable = hashArr.length * 4;\n    if (numWords * entropyPerWord > entropyAvailable) {\n      throw new Error(\"Output entropy of hash function is too small\");\n    }\n\n    const phrase: string[] = [];\n    let hashNumber = bigInt.fromArray(hashArr, 256);\n    while (numWords--) {\n      const remainder = hashNumber.mod(EEFLongWordList.length);\n      hashNumber = hashNumber.divide(EEFLongWordList.length);\n      phrase.push(EEFLongWordList[remainder as any]);\n    }\n    return phrase;\n  }\n\n  private async buildEncKey(\n    key: SymmetricCryptoKey,\n    encKey: ArrayBuffer\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    let encKeyEnc: EncString = null;\n    if (key.key.byteLength === 32) {\n      const newKey = await this.stretchKey(key);\n      encKeyEnc = await this.encrypt(encKey, newKey);\n    } else if (key.key.byteLength === 64) {\n      encKeyEnc = await this.encrypt(encKey, key);\n    } else {\n      throw new Error(\"Invalid key size.\");\n    }\n    return [new SymmetricCryptoKey(encKey), encKeyEnc];\n  }\n\n  private async clearSecretKeyStore(userId?: string): Promise<void> {\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n  }\n\n  private async getEncKeyHelper(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getDecryptedCryptoSymmetricKey();\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    const encKey = await this.stateService.getEncryptedCryptoSymmetricKey();\n    if (encKey == null) {\n      return null;\n    }\n\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (key == null) {\n      return null;\n    }\n\n    let decEncKey: ArrayBuffer;\n    const encKeyCipher = new EncString(encKey);\n    if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_B64) {\n      decEncKey = await this.decryptToBytes(encKeyCipher, key);\n    } else if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_HmacSha256_B64) {\n      const newKey = await this.stretchKey(key);\n      decEncKey = await this.decryptToBytes(encKeyCipher, newKey);\n    } else {\n      throw new Error(\"Unsupported encKey type.\");\n    }\n    if (decEncKey == null) {\n      return null;\n    }\n    const symmetricCryptoKey = new SymmetricCryptoKey(decEncKey);\n    await this.stateService.setDecryptedCryptoSymmetricKey(symmetricCryptoKey);\n    return symmetricCryptoKey;\n  }\n}\n","import { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncryptedObject {\n  iv: ArrayBuffer;\n  data: ArrayBuffer;\n  mac: ArrayBuffer;\n  key: SymmetricCryptoKey;\n}\n","import { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { EncryptedObject } from \"@bitwarden/common/models/domain/encryptedObject\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\n\nimport { AbstractEncryptService } from \"../abstractions/abstractEncrypt.service\";\nimport { EncryptionType } from \"../enums/encryptionType\";\nimport { IEncrypted } from \"../interfaces/IEncrypted\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nexport class EncryptService implements AbstractEncryptService {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private logService: LogService,\n    private logMacFailures: boolean\n  ) {}\n\n  async encrypt(plainValue: string | ArrayBuffer, key: SymmetricCryptoKey): Promise<EncString> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    if (plainValue == null) {\n      return Promise.resolve(null);\n    }\n\n    let plainBuf: ArrayBuffer;\n    if (typeof plainValue === \"string\") {\n      plainBuf = Utils.fromUtf8ToArray(plainValue).buffer;\n    } else {\n      plainBuf = plainValue;\n    }\n\n    const encObj = await this.aesEncrypt(plainBuf, key);\n    const iv = Utils.fromBufferToB64(encObj.iv);\n    const data = Utils.fromBufferToB64(encObj.data);\n    const mac = encObj.mac != null ? Utils.fromBufferToB64(encObj.mac) : null;\n    return new EncString(encObj.key.encType, data, iv, mac);\n  }\n\n  async encryptToBytes(plainValue: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    const encValue = await this.aesEncrypt(plainValue, key);\n    let macLen = 0;\n    if (encValue.mac != null) {\n      macLen = encValue.mac.byteLength;\n    }\n\n    const encBytes = new Uint8Array(1 + encValue.iv.byteLength + macLen + encValue.data.byteLength);\n    encBytes.set([encValue.key.encType]);\n    encBytes.set(new Uint8Array(encValue.iv), 1);\n    if (encValue.mac != null) {\n      encBytes.set(new Uint8Array(encValue.mac), 1 + encValue.iv.byteLength);\n    }\n\n    encBytes.set(new Uint8Array(encValue.data), 1 + encValue.iv.byteLength + macLen);\n    return new EncArrayBuffer(encBytes.buffer);\n  }\n\n  async decryptToUtf8(encString: EncString, key: SymmetricCryptoKey): Promise<string> {\n    if (key == null) {\n      throw new Error(\"No key provided for decryption.\");\n    }\n\n    key = this.resolveLegacyKey(key, encString);\n\n    if (key.macKey != null && encString?.mac == null) {\n      this.logService.error(\"mac required.\");\n      return null;\n    }\n\n    if (key.encType !== encString.encryptionType) {\n      this.logService.error(\"encType unavailable.\");\n      return null;\n    }\n\n    const fastParams = this.cryptoFunctionService.aesDecryptFastParameters(\n      encString.data,\n      encString.iv,\n      encString.mac,\n      key\n    );\n    if (fastParams.macKey != null && fastParams.mac != null) {\n      const computedMac = await this.cryptoFunctionService.hmacFast(\n        fastParams.macData,\n        fastParams.macKey,\n        \"sha256\"\n      );\n      const macsEqual = await this.cryptoFunctionService.compareFast(fastParams.mac, computedMac);\n      if (!macsEqual) {\n        this.logMacFailed(\"mac failed.\");\n        return null;\n      }\n    }\n\n    return this.cryptoFunctionService.aesDecryptFast(fastParams);\n  }\n\n  async decryptToBytes(encThing: IEncrypted, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    if (encThing == null) {\n      throw new Error(\"Nothing provided for decryption.\");\n    }\n\n    key = this.resolveLegacyKey(key, encThing);\n\n    if (key.macKey != null && encThing.macBytes == null) {\n      return null;\n    }\n\n    if (key.encType !== encThing.encryptionType) {\n      return null;\n    }\n\n    if (key.macKey != null && encThing.macBytes != null) {\n      const macData = new Uint8Array(encThing.ivBytes.byteLength + encThing.dataBytes.byteLength);\n      macData.set(new Uint8Array(encThing.ivBytes), 0);\n      macData.set(new Uint8Array(encThing.dataBytes), encThing.ivBytes.byteLength);\n      const computedMac = await this.cryptoFunctionService.hmac(\n        macData.buffer,\n        key.macKey,\n        \"sha256\"\n      );\n      if (computedMac === null) {\n        return null;\n      }\n\n      const macsMatch = await this.cryptoFunctionService.compare(encThing.macBytes, computedMac);\n      if (!macsMatch) {\n        this.logMacFailed(\"mac failed.\");\n        return null;\n      }\n    }\n\n    const result = await this.cryptoFunctionService.aesDecrypt(\n      encThing.dataBytes,\n      encThing.ivBytes,\n      key.encKey\n    );\n\n    return result ?? null;\n  }\n\n  private async aesEncrypt(data: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncryptedObject> {\n    const obj = new EncryptedObject();\n    obj.key = key;\n    obj.iv = await this.cryptoFunctionService.randomBytes(16);\n    obj.data = await this.cryptoFunctionService.aesEncrypt(data, obj.iv, obj.key.encKey);\n\n    if (obj.key.macKey != null) {\n      const macData = new Uint8Array(obj.iv.byteLength + obj.data.byteLength);\n      macData.set(new Uint8Array(obj.iv), 0);\n      macData.set(new Uint8Array(obj.data), obj.iv.byteLength);\n      obj.mac = await this.cryptoFunctionService.hmac(macData.buffer, obj.key.macKey, \"sha256\");\n    }\n\n    return obj;\n  }\n\n  private logMacFailed(msg: string) {\n    if (this.logMacFailures) {\n      this.logService.error(msg);\n    }\n  }\n\n  /**\n   * Transform into new key for the old encrypt-then-mac scheme if required, otherwise return the current key unchanged\n   * @param encThing The encrypted object (e.g. encString or encArrayBuffer) that you want to decrypt\n   */\n  resolveLegacyKey(key: SymmetricCryptoKey, encThing: IEncrypted): SymmetricCryptoKey {\n    if (\n      encThing.encryptionType === EncryptionType.AesCbc128_HmacSha256_B64 &&\n      key.encType === EncryptionType.AesCbc256_B64\n    ) {\n      return new SymmetricCryptoKey(key.key, EncryptionType.AesCbc128_HmacSha256_B64);\n    }\n\n    return key;\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventData {\n  type: EventType;\n  cipherId: string;\n  date: string;\n  organizationId: string;\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventRequest {\n  type: EventType;\n  cipherId: string;\n  date: string;\n  organizationId: string;\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { EventService as EventServiceAbstraction } from \"../abstractions/event.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EventType } from \"../enums/eventType\";\nimport { EventData } from \"../models/data/eventData\";\nimport { EventRequest } from \"../models/request/eventRequest\";\n\nexport class EventService implements EventServiceAbstraction {\n  private inited = false;\n\n  constructor(\n    private apiService: ApiService,\n    private cipherService: CipherService,\n    private stateService: StateService,\n    private logService: LogService,\n    private organizationService: OrganizationService\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.uploadEvents();\n      setInterval(() => this.uploadEvents(), 60 * 1000); // check every 60 seconds\n    }\n  }\n\n  async collect(\n    eventType: EventType,\n    cipherId: string = null,\n    uploadImmediately = false,\n    organizationId: string = null\n  ): Promise<any> {\n    const authed = await this.stateService.getIsAuthenticated();\n    if (!authed) {\n      return;\n    }\n    const organizations = await this.organizationService.getAll();\n    if (organizations == null) {\n      return;\n    }\n    const orgIds = new Set<string>(organizations.filter((o) => o.useEvents).map((o) => o.id));\n    if (orgIds.size === 0) {\n      return;\n    }\n    if (cipherId != null) {\n      const cipher = await this.cipherService.get(cipherId);\n      if (cipher == null || cipher.organizationId == null || !orgIds.has(cipher.organizationId)) {\n        return;\n      }\n    }\n    if (organizationId != null) {\n      if (!orgIds.has(organizationId)) {\n        return;\n      }\n    }\n    let eventCollection = await this.stateService.getEventCollection();\n    if (eventCollection == null) {\n      eventCollection = [];\n    }\n    const event = new EventData();\n    event.type = eventType;\n    event.cipherId = cipherId;\n    event.date = new Date().toISOString();\n    event.organizationId = organizationId;\n    eventCollection.push(event);\n    await this.stateService.setEventCollection(eventCollection);\n    if (uploadImmediately) {\n      await this.uploadEvents();\n    }\n  }\n\n  async uploadEvents(userId?: string): Promise<any> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n    const eventCollection = await this.stateService.getEventCollection({ userId: userId });\n    if (eventCollection == null || eventCollection.length === 0) {\n      return;\n    }\n    const request = eventCollection.map((e) => {\n      const req = new EventRequest();\n      req.type = e.type;\n      req.cipherId = e.cipherId;\n      req.date = e.date;\n      req.organizationId = e.organizationId;\n      return req;\n    });\n    try {\n      await this.apiService.postEventsCollect(request);\n      this.clearEvents(userId);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async clearEvents(userId?: string): Promise<any> {\n    await this.stateService.setEventCollection(null, { userId: userId });\n  }\n}\n","import { Card as CardDomain } from \"../domain/card\";\nimport { EncString } from \"../domain/encString\";\nimport { CardView } from \"../view/cardView\";\n\nexport class CardExport {\n  static template(): CardExport {\n    const req = new CardExport();\n    req.cardholderName = \"John Doe\";\n    req.brand = \"visa\";\n    req.number = \"4242424242424242\";\n    req.expMonth = \"04\";\n    req.expYear = \"2023\";\n    req.code = \"123\";\n    return req;\n  }\n\n  static toView(req: CardExport, view = new CardView()) {\n    view.cardholderName = req.cardholderName;\n    view.brand = req.brand;\n    view.number = req.number;\n    view.expMonth = req.expMonth;\n    view.expYear = req.expYear;\n    view.code = req.code;\n    return view;\n  }\n\n  static toDomain(req: CardExport, domain = new CardDomain()) {\n    domain.cardholderName = req.cardholderName != null ? new EncString(req.cardholderName) : null;\n    domain.brand = req.brand != null ? new EncString(req.brand) : null;\n    domain.number = req.number != null ? new EncString(req.number) : null;\n    domain.expMonth = req.expMonth != null ? new EncString(req.expMonth) : null;\n    domain.expYear = req.expYear != null ? new EncString(req.expYear) : null;\n    domain.code = req.code != null ? new EncString(req.code) : null;\n    return domain;\n  }\n\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(o?: CardView | CardDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof CardView) {\n      this.cardholderName = o.cardholderName;\n      this.brand = o.brand;\n      this.number = o.number;\n      this.expMonth = o.expMonth;\n      this.expYear = o.expYear;\n      this.code = o.code;\n    } else {\n      this.cardholderName = o.cardholderName?.encryptedString;\n      this.brand = o.brand?.encryptedString;\n      this.number = o.number?.encryptedString;\n      this.expMonth = o.expMonth?.encryptedString;\n      this.expYear = o.expYear?.encryptedString;\n      this.code = o.code?.encryptedString;\n    }\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { EncString } from \"../domain/encString\";\nimport { Field as FieldDomain } from \"../domain/field\";\nimport { FieldView } from \"../view/fieldView\";\n\nexport class FieldExport {\n  static template(): FieldExport {\n    const req = new FieldExport();\n    req.name = \"Field name\";\n    req.value = \"Some value\";\n    req.type = FieldType.Text;\n    return req;\n  }\n\n  static toView(req: FieldExport, view = new FieldView()) {\n    view.type = req.type;\n    view.value = req.value;\n    view.name = req.name;\n    view.linkedId = req.linkedId;\n    return view;\n  }\n\n  static toDomain(req: FieldExport, domain = new FieldDomain()) {\n    domain.type = req.type;\n    domain.value = req.value != null ? new EncString(req.value) : null;\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.linkedId = req.linkedId;\n    return domain;\n  }\n\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(o?: FieldView | FieldDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof FieldView) {\n      this.name = o.name;\n      this.value = o.value;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.value = o.value?.encryptedString;\n    }\n    this.type = o.type;\n    this.linkedId = o.linkedId;\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Identity as IdentityDomain } from \"../domain/identity\";\nimport { IdentityView } from \"../view/identityView\";\n\nexport class IdentityExport {\n  static template(): IdentityExport {\n    const req = new IdentityExport();\n    req.title = \"Mr\";\n    req.firstName = \"John\";\n    req.middleName = \"William\";\n    req.lastName = \"Doe\";\n    req.address1 = \"123 Any St\";\n    req.address2 = \"Apt #123\";\n    req.address3 = null;\n    req.city = \"New York\";\n    req.state = \"NY\";\n    req.postalCode = \"10001\";\n    req.country = \"US\";\n    req.company = \"Acme Inc.\";\n    req.email = \"john@company.com\";\n    req.phone = \"5555551234\";\n    req.ssn = \"000-123-4567\";\n    req.username = \"jdoe\";\n    req.passportNumber = \"US-123456789\";\n    req.licenseNumber = \"D123-12-123-12333\";\n    return req;\n  }\n\n  static toView(req: IdentityExport, view = new IdentityView()) {\n    view.title = req.title;\n    view.firstName = req.firstName;\n    view.middleName = req.middleName;\n    view.lastName = req.lastName;\n    view.address1 = req.address1;\n    view.address2 = req.address2;\n    view.address3 = req.address3;\n    view.city = req.city;\n    view.state = req.state;\n    view.postalCode = req.postalCode;\n    view.country = req.country;\n    view.company = req.company;\n    view.email = req.email;\n    view.phone = req.phone;\n    view.ssn = req.ssn;\n    view.username = req.username;\n    view.passportNumber = req.passportNumber;\n    view.licenseNumber = req.licenseNumber;\n    return view;\n  }\n\n  static toDomain(req: IdentityExport, domain = new IdentityDomain()) {\n    domain.title = req.title != null ? new EncString(req.title) : null;\n    domain.firstName = req.firstName != null ? new EncString(req.firstName) : null;\n    domain.middleName = req.middleName != null ? new EncString(req.middleName) : null;\n    domain.lastName = req.lastName != null ? new EncString(req.lastName) : null;\n    domain.address1 = req.address1 != null ? new EncString(req.address1) : null;\n    domain.address2 = req.address2 != null ? new EncString(req.address2) : null;\n    domain.address3 = req.address3 != null ? new EncString(req.address3) : null;\n    domain.city = req.city != null ? new EncString(req.city) : null;\n    domain.state = req.state != null ? new EncString(req.state) : null;\n    domain.postalCode = req.postalCode != null ? new EncString(req.postalCode) : null;\n    domain.country = req.country != null ? new EncString(req.country) : null;\n    domain.company = req.company != null ? new EncString(req.company) : null;\n    domain.email = req.email != null ? new EncString(req.email) : null;\n    domain.phone = req.phone != null ? new EncString(req.phone) : null;\n    domain.ssn = req.ssn != null ? new EncString(req.ssn) : null;\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.passportNumber = req.passportNumber != null ? new EncString(req.passportNumber) : null;\n    domain.licenseNumber = req.licenseNumber != null ? new EncString(req.licenseNumber) : null;\n    return domain;\n  }\n\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(o?: IdentityView | IdentityDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof IdentityView) {\n      this.title = o.title;\n      this.firstName = o.firstName;\n      this.middleName = o.middleName;\n      this.lastName = o.lastName;\n      this.address1 = o.address1;\n      this.address2 = o.address2;\n      this.address3 = o.address3;\n      this.city = o.city;\n      this.state = o.state;\n      this.postalCode = o.postalCode;\n      this.country = o.country;\n      this.company = o.company;\n      this.email = o.email;\n      this.phone = o.phone;\n      this.ssn = o.ssn;\n      this.username = o.username;\n      this.passportNumber = o.passportNumber;\n      this.licenseNumber = o.licenseNumber;\n    } else {\n      this.title = o.title?.encryptedString;\n      this.firstName = o.firstName?.encryptedString;\n      this.middleName = o.middleName?.encryptedString;\n      this.lastName = o.lastName?.encryptedString;\n      this.address1 = o.address1?.encryptedString;\n      this.address2 = o.address2?.encryptedString;\n      this.address3 = o.address3?.encryptedString;\n      this.city = o.city?.encryptedString;\n      this.state = o.state?.encryptedString;\n      this.postalCode = o.postalCode?.encryptedString;\n      this.country = o.country?.encryptedString;\n      this.company = o.company?.encryptedString;\n      this.email = o.email?.encryptedString;\n      this.phone = o.phone?.encryptedString;\n      this.ssn = o.ssn?.encryptedString;\n      this.username = o.username?.encryptedString;\n      this.passportNumber = o.passportNumber?.encryptedString;\n      this.licenseNumber = o.licenseNumber?.encryptedString;\n    }\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { EncString } from \"../domain/encString\";\nimport { LoginUri as LoginUriDomain } from \"../domain/loginUri\";\nimport { LoginUriView } from \"../view/loginUriView\";\n\nexport class LoginUriExport {\n  static template(): LoginUriExport {\n    const req = new LoginUriExport();\n    req.uri = \"https://google.com\";\n    req.match = null;\n    return req;\n  }\n\n  static toView(req: LoginUriExport, view = new LoginUriView()) {\n    view.uri = req.uri;\n    view.match = req.match;\n    return view;\n  }\n\n  static toDomain(req: LoginUriExport, domain = new LoginUriDomain()) {\n    domain.uri = req.uri != null ? new EncString(req.uri) : null;\n    domain.match = req.match;\n    return domain;\n  }\n\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(o?: LoginUriView | LoginUriDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof LoginUriView) {\n      this.uri = o.uri;\n    } else {\n      this.uri = o.uri?.encryptedString;\n    }\n    this.match = o.match;\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Login as LoginDomain } from \"../domain/login\";\nimport { LoginView } from \"../view/loginView\";\n\nimport { LoginUriExport } from \"./loginUriExport\";\n\nexport class LoginExport {\n  static template(): LoginExport {\n    const req = new LoginExport();\n    req.uris = [];\n    req.username = \"jdoe\";\n    req.password = \"myp@ssword123\";\n    req.totp = \"JBSWY3DPEHPK3PXP\";\n    return req;\n  }\n\n  static toView(req: LoginExport, view = new LoginView()) {\n    if (req.uris != null) {\n      view.uris = req.uris.map((u) => LoginUriExport.toView(u));\n    }\n    view.username = req.username;\n    view.password = req.password;\n    view.totp = req.totp;\n    return view;\n  }\n\n  static toDomain(req: LoginExport, domain = new LoginDomain()) {\n    if (req.uris != null) {\n      domain.uris = req.uris.map((u) => LoginUriExport.toDomain(u));\n    }\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.password = req.password != null ? new EncString(req.password) : null;\n    domain.totp = req.totp != null ? new EncString(req.totp) : null;\n    return domain;\n  }\n\n  uris: LoginUriExport[];\n  username: string;\n  password: string;\n  totp: string;\n\n  constructor(o?: LoginView | LoginDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o.uris != null) {\n      if (o instanceof LoginView) {\n        this.uris = o.uris.map((u) => new LoginUriExport(u));\n      } else {\n        this.uris = o.uris.map((u) => new LoginUriExport(u));\n      }\n    }\n\n    if (o instanceof LoginView) {\n      this.username = o.username;\n      this.password = o.password;\n      this.totp = o.totp;\n    } else {\n      this.username = o.username?.encryptedString;\n      this.password = o.password?.encryptedString;\n      this.totp = o.totp?.encryptedString;\n    }\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNote as SecureNoteDomain } from \"../domain/secureNote\";\nimport { SecureNoteView } from \"../view/secureNoteView\";\n\nexport class SecureNoteExport {\n  static template(): SecureNoteExport {\n    const req = new SecureNoteExport();\n    req.type = SecureNoteType.Generic;\n    return req;\n  }\n\n  static toView(req: SecureNoteExport, view = new SecureNoteView()) {\n    view.type = req.type;\n    return view;\n  }\n\n  static toDomain(req: SecureNoteExport, view = new SecureNoteDomain()) {\n    view.type = req.type;\n    return view;\n  }\n\n  type: SecureNoteType;\n\n  constructor(o?: SecureNoteView | SecureNoteDomain) {\n    if (o == null) {\n      return;\n    }\n\n    this.type = o.type;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { EncString } from \"../domain/encString\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { CardExport } from \"./cardExport\";\nimport { FieldExport } from \"./fieldExport\";\nimport { IdentityExport } from \"./identityExport\";\nimport { LoginExport } from \"./loginExport\";\nimport { SecureNoteExport } from \"./secureNoteExport\";\n\nexport class CipherExport {\n  static template(): CipherExport {\n    const req = new CipherExport();\n    req.organizationId = null;\n    req.collectionIds = null;\n    req.folderId = null;\n    req.type = CipherType.Login;\n    req.name = \"Item name\";\n    req.notes = \"Some notes about this item.\";\n    req.favorite = false;\n    req.fields = [];\n    req.login = null;\n    req.secureNote = null;\n    req.card = null;\n    req.identity = null;\n    req.reprompt = CipherRepromptType.None;\n    return req;\n  }\n\n  static toView(req: CipherExport, view = new CipherView()) {\n    view.type = req.type;\n    view.folderId = req.folderId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    if (view.collectionIds || req.collectionIds) {\n      const set = new Set((view.collectionIds ?? []).concat(req.collectionIds ?? []));\n      view.collectionIds = Array.from(set.values());\n    }\n    view.name = req.name;\n    view.notes = req.notes;\n    view.favorite = req.favorite;\n    view.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      view.fields = req.fields.map((f) => FieldExport.toView(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        view.login = LoginExport.toView(req.login);\n        break;\n      case CipherType.SecureNote:\n        view.secureNote = SecureNoteExport.toView(req.secureNote);\n        break;\n      case CipherType.Card:\n        view.card = CardExport.toView(req.card);\n        break;\n      case CipherType.Identity:\n        view.identity = IdentityExport.toView(req.identity);\n        break;\n    }\n\n    return view;\n  }\n\n  static toDomain(req: CipherExport, domain = new CipherDomain()) {\n    domain.type = req.type;\n    domain.folderId = req.folderId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.notes = req.notes != null ? new EncString(req.notes) : null;\n    domain.favorite = req.favorite;\n    domain.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      domain.fields = req.fields.map((f) => FieldExport.toDomain(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        domain.login = LoginExport.toDomain(req.login);\n        break;\n      case CipherType.SecureNote:\n        domain.secureNote = SecureNoteExport.toDomain(req.secureNote);\n        break;\n      case CipherType.Card:\n        domain.card = CardExport.toDomain(req.card);\n        break;\n      case CipherType.Identity:\n        domain.identity = IdentityExport.toDomain(req.identity);\n        break;\n    }\n\n    return domain;\n  }\n\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  collectionIds: string[];\n  name: string;\n  notes: string;\n  favorite: boolean;\n  fields: FieldExport[];\n  login: LoginExport;\n  secureNote: SecureNoteExport;\n  card: CardExport;\n  identity: IdentityExport;\n  reprompt: CipherRepromptType;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.organizationId = o.organizationId;\n    this.folderId = o.folderId;\n    this.type = o.type;\n    this.reprompt = o.reprompt;\n\n    if (o instanceof CipherView) {\n      this.name = o.name;\n      this.notes = o.notes;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.notes = o.notes?.encryptedString;\n    }\n\n    this.favorite = o.favorite;\n\n    if (o.fields != null) {\n      if (o instanceof CipherView) {\n        this.fields = o.fields.map((f) => new FieldExport(f));\n      } else {\n        this.fields = o.fields.map((f) => new FieldExport(f));\n      }\n    }\n\n    switch (o.type) {\n      case CipherType.Login:\n        this.login = new LoginExport(o.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteExport(o.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardExport(o.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityExport(o.identity);\n        break;\n    }\n  }\n}\n","import { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { CipherExport } from \"./cipherExport\";\n\nexport class CipherWithIdExport extends CipherExport {\n  id: string;\n  collectionIds: string[];\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.id = o.id;\n    super.build(o);\n    this.collectionIds = o.collectionIds;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { EncString } from \"../domain/encString\";\nimport { CollectionView } from \"../view/collectionView\";\n\nexport class CollectionExport {\n  static template(): CollectionExport {\n    const req = new CollectionExport();\n    req.organizationId = \"00000000-0000-0000-0000-000000000000\";\n    req.name = \"Collection name\";\n    req.externalId = null;\n    return req;\n  }\n\n  static toView(req: CollectionExport, view = new CollectionView()) {\n    view.name = req.name;\n    view.externalId = req.externalId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    return view;\n  }\n\n  static toDomain(req: CollectionExport, domain = new CollectionDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.externalId = req.externalId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    return domain;\n  }\n\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.organizationId = o.organizationId;\n    if (o instanceof CollectionView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n    this.externalId = o.externalId;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { CollectionView } from \"../view/collectionView\";\n\nimport { CollectionExport } from \"./collectionExport\";\n\nexport class CollectionWithIdExport extends CollectionExport {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\nimport { EventView } from \"../view/eventView\";\n\nexport class EventExport {\n  message: string;\n  appIcon: string;\n  appName: string;\n  userId: string;\n  userName: string;\n  userEmail: string;\n  date: string;\n  ip: string;\n  type: string;\n  installationId: string;\n\n  constructor(event: EventView) {\n    this.message = event.humanReadableMessage;\n    this.appIcon = event.appIcon;\n    this.appName = event.appName;\n    this.userId = event.userId;\n    this.userName = event.userName;\n    this.userEmail = event.userEmail;\n    this.date = event.date;\n    this.ip = event.ip;\n    this.type = EventType[event.type];\n    this.installationId = event.installationId;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { FolderData } from \"../data/folderData\";\nimport { FolderView } from \"../view/folderView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\n\nexport class Folder extends Domain {\n  id: string;\n  name: EncString;\n  revisionDate: Date;\n\n  constructor(obj?: FolderData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        name: null,\n      },\n      [\"id\"]\n    );\n\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n  }\n\n  decrypt(): Promise<FolderView> {\n    return this.decryptObj(\n      new FolderView(this),\n      {\n        name: null,\n      },\n      null\n    );\n  }\n\n  static fromJSON(obj: Jsonify<Folder>) {\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    return Object.assign(new Folder(), obj, { name: EncString.fromJSON(obj.name), revisionDate });\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Folder as FolderDomain } from \"../domain/folder\";\nimport { FolderView } from \"../view/folderView\";\n\nexport class FolderExport {\n  static template(): FolderExport {\n    const req = new FolderExport();\n    req.name = \"Folder name\";\n    return req;\n  }\n\n  static toView(req: FolderExport, view = new FolderView()) {\n    view.name = req.name;\n    return view;\n  }\n\n  static toDomain(req: FolderExport, domain = new FolderDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    return domain;\n  }\n\n  name: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    if (o instanceof FolderView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n  }\n}\n","import { Folder as FolderDomain } from \"../domain/folder\";\nimport { FolderView } from \"../view/folderView\";\n\nimport { FolderExport } from \"./folderExport\";\n\nexport class FolderWithIdExport extends FolderExport {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","export enum FileUploadType {\n  Direct = 0,\n  Azure = 1,\n}\n","import * as papa from \"papaparse\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport {\n  ExportFormat,\n  ExportService as ExportServiceAbstraction,\n} from \"../abstractions/export.service\";\nimport { FolderService } from \"../abstractions/folder/folder.service.abstraction\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { DEFAULT_KDF_ITERATIONS, KdfType } from \"../enums/kdfType\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Collection } from \"../models/domain/collection\";\nimport { Folder } from \"../models/domain/folder\";\nimport { CipherWithIdExport as CipherExport } from \"../models/export/cipherWithIdsExport\";\nimport { CollectionWithIdExport as CollectionExport } from \"../models/export/collectionWithIdExport\";\nimport { EventExport } from \"../models/export/eventExport\";\nimport { FolderWithIdExport as FolderExport } from \"../models/export/folderWithIdExport\";\nimport { CollectionDetailsResponse } from \"../models/response/collectionResponse\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { EventView } from \"../models/view/eventView\";\nimport { FolderView } from \"../models/view/folderView\";\n\nexport class ExportService implements ExportServiceAbstraction {\n  constructor(\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private apiService: ApiService,\n    private cryptoService: CryptoService,\n    private cryptoFunctionService: CryptoFunctionService\n  ) {}\n\n  async getExport(format: ExportFormat = \"csv\", organizationId?: string): Promise<string> {\n    if (organizationId) {\n      return await this.getOrganizationExport(organizationId, format);\n    }\n\n    if (format === \"encrypted_json\") {\n      return this.getEncryptedExport();\n    } else {\n      return this.getDecryptedExport(format);\n    }\n  }\n\n  async getPasswordProtectedExport(password: string, organizationId?: string): Promise<string> {\n    const clearText = organizationId\n      ? await this.getOrganizationExport(organizationId, \"json\")\n      : await this.getExport(\"json\");\n\n    const salt = Utils.fromBufferToB64(await this.cryptoFunctionService.randomBytes(16));\n    const kdfIterations = DEFAULT_KDF_ITERATIONS;\n    const key = await this.cryptoService.makePinKey(\n      password,\n      salt,\n      KdfType.PBKDF2_SHA256,\n      kdfIterations\n    );\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), key);\n    const encText = await this.cryptoService.encrypt(clearText, key);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      passwordProtected: true,\n      salt: salt,\n      kdfIterations: kdfIterations,\n      kdfType: KdfType.PBKDF2_SHA256,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      data: encText.encryptedString,\n    };\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  async getOrganizationExport(\n    organizationId: string,\n    format: ExportFormat = \"csv\"\n  ): Promise<string> {\n    if (format === \"encrypted_json\") {\n      return this.getOrganizationEncryptedExport(organizationId);\n    } else {\n      return this.getOrganizationDecryptedExport(organizationId, format);\n    }\n  }\n\n  async getEventExport(events: EventView[]): Promise<string> {\n    return papa.unparse(events.map((e) => new EventExport(e)));\n  }\n\n  getFileName(prefix: string = null, extension = \"csv\"): string {\n    const now = new Date();\n    const dateString =\n      now.getFullYear() +\n      \"\" +\n      this.padNumber(now.getMonth() + 1, 2) +\n      \"\" +\n      this.padNumber(now.getDate(), 2) +\n      this.padNumber(now.getHours(), 2) +\n      \"\" +\n      this.padNumber(now.getMinutes(), 2) +\n      this.padNumber(now.getSeconds(), 2);\n\n    return \"bitwarden\" + (prefix ? \"_\" + prefix : \"\") + \"_export_\" + dateString + \".\" + extension;\n  }\n\n  private async getDecryptedExport(format: \"json\" | \"csv\"): Promise<string> {\n    let decFolders: FolderView[] = [];\n    let decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      firstValueFrom(this.folderService.folderViews$).then((folders) => {\n        decFolders = folders;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAllDecrypted().then((ciphers) => {\n        decCiphers = ciphers.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const foldersMap = new Map<string, FolderView>();\n      decFolders.forEach((f) => {\n        if (f.id != null) {\n          foldersMap.set(f.id, f);\n        }\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n        if (c.organizationId != null) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.folder =\n          c.folderId != null && foldersMap.has(c.folderId) ? foldersMap.get(c.folderId).name : null;\n        cipher.favorite = c.favorite ? 1 : null;\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        folders: [],\n        items: [],\n      };\n\n      decFolders.forEach((f) => {\n        if (f.id == null) {\n          return;\n        }\n        const folder = new FolderExport();\n        folder.build(f);\n        jsonDoc.folders.push(folder);\n      });\n\n      decCiphers.forEach((c) => {\n        if (c.organizationId != null) {\n          return;\n        }\n        const cipher = new CipherExport();\n        cipher.build(c);\n        cipher.collectionIds = null;\n        jsonDoc.items.push(cipher);\n      });\n\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getEncryptedExport(): Promise<string> {\n    let folders: Folder[] = [];\n    let ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      firstValueFrom(this.folderService.folders$).then((f) => {\n        folders = f;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAll().then((c) => {\n        ciphers = c.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid());\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      folders: [],\n      items: [],\n    };\n\n    folders.forEach((f) => {\n      if (f.id == null) {\n        return;\n      }\n      const folder = new FolderExport();\n      folder.build(f);\n      jsonDoc.folders.push(folder);\n    });\n\n    ciphers.forEach((c) => {\n      if (c.organizationId != null) {\n        return;\n      }\n      const cipher = new CipherExport();\n      cipher.build(c);\n      cipher.collectionIds = null;\n      jsonDoc.items.push(cipher);\n    });\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private async getOrganizationDecryptedExport(\n    organizationId: string,\n    format: \"json\" | \"csv\"\n  ): Promise<string> {\n    const decCollections: CollectionView[] = [];\n    const decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getOrganizationExport(organizationId).then((exportData) => {\n        const exportPromises: any = [];\n        if (exportData != null) {\n          if (\n            exportData.collections != null &&\n            exportData.collections.data != null &&\n            exportData.collections.data.length > 0\n          ) {\n            exportData.collections.data.forEach((c) => {\n              const collection = new Collection(new CollectionData(c as CollectionDetailsResponse));\n              exportPromises.push(\n                collection.decrypt().then((decCol) => {\n                  decCollections.push(decCol);\n                })\n              );\n            });\n          }\n          if (\n            exportData.ciphers != null &&\n            exportData.ciphers.data != null &&\n            exportData.ciphers.data.length > 0\n          ) {\n            exportData.ciphers.data\n              .filter((c) => c.deletedDate === null)\n              .forEach((c) => {\n                const cipher = new Cipher(new CipherData(c));\n                exportPromises.push(\n                  cipher.decrypt().then((decCipher) => {\n                    decCiphers.push(decCipher);\n                  })\n                );\n              });\n          }\n        }\n        return Promise.all(exportPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const collectionsMap = new Map<string, CollectionView>();\n      decCollections.forEach((c) => {\n        collectionsMap.set(c.id, c);\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.collections = [];\n        if (c.collectionIds != null) {\n          cipher.collections = c.collectionIds\n            .filter((id) => collectionsMap.has(id))\n            .map((id) => collectionsMap.get(id).name);\n        }\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        collections: [],\n        items: [],\n      };\n\n      decCollections.forEach((c) => {\n        const collection = new CollectionExport();\n        collection.build(c);\n        jsonDoc.collections.push(collection);\n      });\n\n      decCiphers.forEach((c) => {\n        const cipher = new CipherExport();\n        cipher.build(c);\n        jsonDoc.items.push(cipher);\n      });\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getOrganizationEncryptedExport(organizationId: string): Promise<string> {\n    const collections: Collection[] = [];\n    const ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getCollections(organizationId).then((c) => {\n        const collectionPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data.forEach((r) => {\n            const collection = new Collection(new CollectionData(r as CollectionDetailsResponse));\n            collections.push(collection);\n          });\n        }\n        return Promise.all(collectionPromises);\n      })\n    );\n\n    promises.push(\n      this.apiService.getCiphersOrganization(organizationId).then((c) => {\n        const cipherPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data\n            .filter((item) => item.deletedDate === null)\n            .forEach((item) => {\n              const cipher = new Cipher(new CipherData(item));\n              ciphers.push(cipher);\n            });\n        }\n        return Promise.all(cipherPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const orgKey = await this.cryptoService.getOrgKey(organizationId);\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), orgKey);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      collections: [],\n      items: [],\n    };\n\n    collections.forEach((c) => {\n      const collection = new CollectionExport();\n      collection.build(c);\n      jsonDoc.collections.push(collection);\n    });\n\n    ciphers.forEach((c) => {\n      const cipher = new CipherExport();\n      cipher.build(c);\n      jsonDoc.items.push(cipher);\n    });\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private padNumber(num: number, width: number, padCharacter = \"0\"): string {\n    const numString = num.toString();\n    return numString.length >= width\n      ? numString\n      : new Array(width - numString.length + 1).join(padCharacter) + numString;\n  }\n\n  private buildCommonCipher(cipher: any, c: CipherView) {\n    cipher.type = null;\n    cipher.name = c.name;\n    cipher.notes = c.notes;\n    cipher.fields = null;\n    cipher.reprompt = c.reprompt;\n    // Login props\n    cipher.login_uri = null;\n    cipher.login_username = null;\n    cipher.login_password = null;\n    cipher.login_totp = null;\n\n    if (c.fields) {\n      c.fields.forEach((f: any) => {\n        if (!cipher.fields) {\n          cipher.fields = \"\";\n        } else {\n          cipher.fields += \"\\n\";\n        }\n\n        cipher.fields += (f.name || \"\") + \": \" + f.value;\n      });\n    }\n\n    switch (c.type) {\n      case CipherType.Login:\n        cipher.type = \"login\";\n        cipher.login_username = c.login.username;\n        cipher.login_password = c.login.password;\n        cipher.login_totp = c.login.totp;\n\n        if (c.login.uris) {\n          cipher.login_uri = [];\n          c.login.uris.forEach((u) => {\n            cipher.login_uri.push(u.uri);\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        cipher.type = \"note\";\n        break;\n      default:\n        return;\n    }\n\n    return cipher;\n  }\n}\n","import { LogService } from \"../abstractions/log.service\";\nimport { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nconst MAX_SINGLE_BLOB_UPLOAD_SIZE = 256 * 1024 * 1024; // 256 MiB\nconst MAX_BLOCKS_PER_BLOB = 50000;\n\nexport class AzureFileUploadService {\n  constructor(private logService: LogService) {}\n\n  async upload(url: string, data: EncArrayBuffer, renewalCallback: () => Promise<string>) {\n    if (data.buffer.byteLength <= MAX_SINGLE_BLOB_UPLOAD_SIZE) {\n      return await this.azureUploadBlob(url, data);\n    } else {\n      return await this.azureUploadBlocks(url, data, renewalCallback);\n    }\n  }\n  private async azureUploadBlob(url: string, data: EncArrayBuffer) {\n    const urlObject = Utils.getUrl(url);\n    const headers = new Headers({\n      \"x-ms-date\": new Date().toUTCString(),\n      \"x-ms-version\": urlObject.searchParams.get(\"sv\"),\n      \"Content-Length\": data.buffer.byteLength.toString(),\n      \"x-ms-blob-type\": \"BlockBlob\",\n    });\n\n    const request = new Request(url, {\n      body: data.buffer,\n      cache: \"no-store\",\n      method: \"PUT\",\n      headers: headers,\n    });\n\n    const blobResponse = await fetch(request);\n\n    if (blobResponse.status !== 201) {\n      throw new Error(`Failed to create Azure blob: ${blobResponse.status}`);\n    }\n  }\n  private async azureUploadBlocks(\n    url: string,\n    data: EncArrayBuffer,\n    renewalCallback: () => Promise<string>\n  ) {\n    const baseUrl = Utils.getUrl(url);\n    const blockSize = this.getMaxBlockSize(baseUrl.searchParams.get(\"sv\"));\n    let blockIndex = 0;\n    const numBlocks = Math.ceil(data.buffer.byteLength / blockSize);\n    const blocksStaged: string[] = [];\n\n    if (numBlocks > MAX_BLOCKS_PER_BLOB) {\n      throw new Error(\n        `Cannot upload file, exceeds maximum size of ${blockSize * MAX_BLOCKS_PER_BLOB}`\n      );\n    }\n\n    // eslint-disable-next-line\n    try {\n      while (blockIndex < numBlocks) {\n        url = await this.renewUrlIfNecessary(url, renewalCallback);\n        const blockUrl = Utils.getUrl(url);\n        const blockId = this.encodedBlockId(blockIndex);\n        blockUrl.searchParams.append(\"comp\", \"block\");\n        blockUrl.searchParams.append(\"blockid\", blockId);\n        const start = blockIndex * blockSize;\n        const blockData = data.buffer.slice(start, start + blockSize);\n        const blockHeaders = new Headers({\n          \"x-ms-date\": new Date().toUTCString(),\n          \"x-ms-version\": blockUrl.searchParams.get(\"sv\"),\n          \"Content-Length\": blockData.byteLength.toString(),\n        });\n\n        const blockRequest = new Request(blockUrl.toString(), {\n          body: blockData,\n          cache: \"no-store\",\n          method: \"PUT\",\n          headers: blockHeaders,\n        });\n\n        const blockResponse = await fetch(blockRequest);\n\n        if (blockResponse.status !== 201) {\n          const message = `Unsuccessful block PUT. Received status ${blockResponse.status}`;\n          this.logService.error(message + \"\\n\" + (await blockResponse.json()));\n          throw new Error(message);\n        }\n\n        blocksStaged.push(blockId);\n        blockIndex++;\n      }\n\n      url = await this.renewUrlIfNecessary(url, renewalCallback);\n      const blockListUrl = Utils.getUrl(url);\n      const blockListXml = this.blockListXml(blocksStaged);\n      blockListUrl.searchParams.append(\"comp\", \"blocklist\");\n      const headers = new Headers({\n        \"x-ms-date\": new Date().toUTCString(),\n        \"x-ms-version\": blockListUrl.searchParams.get(\"sv\"),\n        \"Content-Length\": blockListXml.length.toString(),\n      });\n\n      const request = new Request(blockListUrl.toString(), {\n        body: blockListXml,\n        cache: \"no-store\",\n        method: \"PUT\",\n        headers: headers,\n      });\n\n      const response = await fetch(request);\n\n      if (response.status !== 201) {\n        const message = `Unsuccessful block list PUT. Received status ${response.status}`;\n        this.logService.error(message + \"\\n\" + (await response.json()));\n        throw new Error(message);\n      }\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  private async renewUrlIfNecessary(\n    url: string,\n    renewalCallback: () => Promise<string>\n  ): Promise<string> {\n    const urlObject = Utils.getUrl(url);\n    const expiry = new Date(urlObject.searchParams.get(\"se\") ?? \"\");\n\n    if (isNaN(expiry.getTime())) {\n      expiry.setTime(Date.now() + 3600000);\n    }\n\n    if (expiry.getTime() < Date.now() + 1000) {\n      return await renewalCallback();\n    }\n    return url;\n  }\n\n  private encodedBlockId(blockIndex: number) {\n    // Encoded blockId max size is 64, so pre-encoding max size is 48\n    const utfBlockId = (\n      \"000000000000000000000000000000000000000000000000\" + blockIndex.toString()\n    ).slice(-48);\n    return Utils.fromUtf8ToB64(utfBlockId);\n  }\n\n  private blockListXml(blockIdList: string[]) {\n    let xml = '<?xml version=\"1.0\" encoding=\"utf-8\"?><BlockList>';\n    blockIdList.forEach((blockId) => {\n      xml += `<Latest>${blockId}</Latest>`;\n    });\n    xml += \"</BlockList>\";\n    return xml;\n  }\n\n  private getMaxBlockSize(version: string) {\n    if (Version.compare(version, \"2019-12-12\") >= 0) {\n      return 4000 * 1024 * 1024; // 4000 MiB\n    } else if (Version.compare(version, \"2016-05-31\") >= 0) {\n      return 100 * 1024 * 1024; // 100 MiB\n    } else {\n      return 4 * 1024 * 1024; // 4 MiB\n    }\n  }\n}\n\nclass Version {\n  /**\n   * Compares two Azure Versions against each other\n   * @param a Version to compare\n   * @param b Version to compare\n   * @returns a number less than zero if b is newer than a, 0 if equal,\n   * and greater than zero if a is newer than b\n   */\n  static compare(a: Required<Version> | string, b: Required<Version> | string) {\n    if (typeof a === \"string\") {\n      a = new Version(a);\n    }\n\n    if (typeof b === \"string\") {\n      b = new Version(b);\n    }\n\n    return a.year !== b.year\n      ? a.year - b.year\n      : a.month !== b.month\n      ? a.month - b.month\n      : a.day !== b.day\n      ? a.day - b.day\n      : 0;\n  }\n  year = 0;\n  month = 0;\n  day = 0;\n\n  constructor(version: string) {\n    try {\n      const parts = version.split(\"-\").map((v) => Number.parseInt(v, 10));\n      this.year = parts[0];\n      this.month = parts[1];\n      this.day = parts[2];\n    } catch {\n      // Ignore error\n    }\n  }\n  /**\n   * Compares two Azure Versions against each other\n   * @param compareTo Version to compare against\n   * @returns a number less than zero if compareTo is newer, 0 if equal,\n   * and greater than zero if this is greater than compareTo\n   */\n  compare(compareTo: Required<Version> | string) {\n    return Version.compare(this, compareTo);\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nexport class BitwardenFileUploadService {\n  constructor(private apiService: ApiService) {}\n\n  async upload(\n    encryptedFileName: string,\n    encryptedFileData: EncArrayBuffer,\n    apiCall: (fd: FormData) => Promise<any>\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encryptedFileData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"data\", blob, encryptedFileName);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\n          \"data\",\n          Buffer.from(encryptedFileData.buffer) as any,\n          {\n            filepath: encryptedFileName,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    await apiCall(fd);\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"../abstractions/fileUpload.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { FileUploadType } from \"../enums/fileUploadType\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\n\nimport { AzureFileUploadService } from \"./azureFileUpload.service\";\nimport { BitwardenFileUploadService } from \"./bitwardenFileUpload.service\";\n\nexport class FileUploadService implements FileUploadServiceAbstraction {\n  private azureFileUploadService: AzureFileUploadService;\n  private bitwardenFileUploadService: BitwardenFileUploadService;\n\n  constructor(private logService: LogService, private apiService: ApiService) {\n    this.azureFileUploadService = new AzureFileUploadService(logService);\n    this.bitwardenFileUploadService = new BitwardenFileUploadService(apiService);\n  }\n\n  async uploadSendFile(\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            fileName.encryptedString,\n            encryptedFileData,\n            (fd) =>\n              this.apiService.postSendFile(\n                uploadData.sendResponse.id,\n                uploadData.sendResponse.file.id,\n                fd\n              )\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewSendFileUploadUrl(\n              uploadData.sendResponse.id,\n              uploadData.sendResponse.file.id\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type\");\n      }\n    } catch (e) {\n      await this.apiService.deleteSend(uploadData.sendResponse.id);\n      throw e;\n    }\n  }\n\n  async uploadCipherAttachment(\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    encryptedFileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    const response = admin ? uploadData.cipherMiniResponse : uploadData.cipherResponse;\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            encryptedFileName.encryptedString,\n            encryptedFileData,\n            (fd) => this.apiService.postAttachmentFile(response.id, uploadData.attachmentId, fd)\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewAttachmentUploadUrl(\n              response.id,\n              uploadData.attachmentId\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type.\");\n      }\n    } catch (e) {\n      if (admin) {\n        await this.apiService.deleteCipherAttachmentAdmin(response.id, uploadData.attachmentId);\n      } else {\n        await this.apiService.deleteCipherAttachment(response.id, uploadData.attachmentId);\n      }\n      throw e;\n    }\n  }\n}\n","import { FolderResponse } from \"../response/folderResponse\";\n\nexport class FolderData {\n  id: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: FolderResponse) {\n    this.name = response.name;\n    this.id = response.id;\n    this.revisionDate = response.revisionDate;\n  }\n}\n","import { Folder } from \"../domain/folder\";\n\nexport class FolderRequest {\n  name: string;\n\n  constructor(folder: Folder) {\n    this.name = folder.name ? folder.name.encryptedString : null;\n  }\n}\n","import { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { InternalFolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { FolderData } from \"@bitwarden/common/models/data/folderData\";\nimport { Folder } from \"@bitwarden/common/models/domain/folder\";\nimport { FolderRequest } from \"@bitwarden/common/models/request/folderRequest\";\nimport { FolderResponse } from \"@bitwarden/common/models/response/folderResponse\";\n\nexport class FolderApiService implements FolderApiServiceAbstraction {\n  constructor(private folderService: InternalFolderService, private apiService: ApiService) {}\n\n  async save(folder: Folder): Promise<any> {\n    const request = new FolderRequest(folder);\n\n    let response: FolderResponse;\n    if (folder.id == null) {\n      response = await this.postFolder(request);\n      folder.id = response.id;\n    } else {\n      response = await this.putFolder(folder.id, request);\n    }\n\n    const data = new FolderData(response);\n    await this.folderService.upsert(data);\n  }\n\n  async delete(id: string): Promise<any> {\n    await this.deleteFolder(id);\n    await this.folderService.delete(id);\n  }\n\n  async get(id: string): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"GET\", \"/folders/\" + id, null, true, true);\n    return new FolderResponse(r);\n  }\n\n  private async postFolder(request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"POST\", \"/folders\", request, true, true);\n    return new FolderResponse(r);\n  }\n\n  async putFolder(id: string, request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"PUT\", \"/folders/\" + id, request, true, true);\n    return new FolderResponse(r);\n  }\n\n  private deleteFolder(id: string): Promise<any> {\n    return this.apiService.send(\"DELETE\", \"/folders/\" + id, null, true, false);\n  }\n}\n","export enum OrganizationUserType {\n  Owner = 0,\n  Admin = 1,\n  User = 2,\n  Manager = 3,\n  Custom = 4,\n}\n","import { BehaviorSubject } from \"rxjs\";\n\nimport { CipherService } from \"../../abstractions/cipher.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { InternalFolderService as InternalFolderServiceAbstraction } from \"../../abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"../../abstractions/i18n.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { Utils } from \"../../misc/utils\";\nimport { CipherData } from \"../../models/data/cipherData\";\nimport { FolderData } from \"../../models/data/folderData\";\nimport { Folder } from \"../../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetricCryptoKey\";\nimport { FolderView } from \"../../models/view/folderView\";\n\nexport class FolderService implements InternalFolderServiceAbstraction {\n  protected _folders: BehaviorSubject<Folder[]> = new BehaviorSubject([]);\n  protected _folderViews: BehaviorSubject<FolderView[]> = new BehaviorSubject([]);\n\n  folders$ = this._folders.asObservable();\n  folderViews$ = this._folderViews.asObservable();\n\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private cipherService: CipherService,\n    private stateService: StateService\n  ) {\n    this.stateService.activeAccountUnlocked$.subscribe(async (unlocked) => {\n      if ((Utils.global as any).bitwardenContainerService == null) {\n        return;\n      }\n\n      if (!unlocked) {\n        this._folders.next([]);\n        this._folderViews.next([]);\n        return;\n      }\n\n      const data = await this.stateService.getEncryptedFolders();\n\n      await this.updateObservables(data);\n    });\n  }\n\n  async clearCache(): Promise<void> {\n    this._folderViews.next([]);\n  }\n\n  // TODO: This should be moved to EncryptService or something\n  async encrypt(model: FolderView, key?: SymmetricCryptoKey): Promise<Folder> {\n    const folder = new Folder();\n    folder.id = model.id;\n    folder.name = await this.cryptoService.encrypt(model.name, key);\n    return folder;\n  }\n\n  async get(id: string): Promise<Folder> {\n    const folders = this._folders.getValue();\n\n    return folders.find((folder) => folder.id === id);\n  }\n\n  /**\n   * @deprecated Only use in CLI!\n   */\n  async getAllDecryptedFromState(): Promise<FolderView[]> {\n    const data = await this.stateService.getEncryptedFolders();\n    const folders = Object.values(data || {}).map((f) => new Folder(f));\n\n    return this.decryptFolders(folders);\n  }\n\n  async upsert(folder: FolderData | FolderData[]): Promise<void> {\n    let folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      folders = {};\n    }\n\n    if (folder instanceof FolderData) {\n      const f = folder as FolderData;\n      folders[f.id] = f;\n    } else {\n      (folder as FolderData[]).forEach((f) => {\n        folders[f.id] = f;\n      });\n    }\n\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async replace(folders: { [id: string]: FolderData }): Promise<void> {\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    if (userId == null || userId == (await this.stateService.getUserId())) {\n      this._folders.next([]);\n      this._folderViews.next([]);\n    }\n    await this.stateService.setEncryptedFolders(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (folders[id] == null) {\n        return;\n      }\n      delete folders[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete folders[i];\n      });\n    }\n\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n\n    // Items in a deleted folder are re-assigned to \"No Folder\"\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers != null) {\n      const updates: CipherData[] = [];\n      for (const cId in ciphers) {\n        if (ciphers[cId].folderId === id) {\n          ciphers[cId].folderId = null;\n          updates.push(ciphers[cId]);\n        }\n      }\n      if (updates.length > 0) {\n        this.cipherService.upsert(updates);\n      }\n    }\n  }\n\n  private async updateObservables(foldersMap: { [id: string]: FolderData }) {\n    const folders = Object.values(foldersMap || {}).map((f) => new Folder(f));\n\n    this._folders.next(folders);\n\n    if (await this.cryptoService.hasKey()) {\n      this._folderViews.next(await this.decryptFolders(folders));\n    }\n  }\n\n  private async decryptFolders(folders: Folder[]) {\n    const decryptFolderPromises = folders.map((f) => f.decrypt());\n    const decryptedFolders = await Promise.all(decryptFolderPromises);\n\n    decryptedFolders.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    const noneFolder = new FolderView();\n    noneFolder.name = this.i18nService.t(\"noneFolder\");\n    decryptedFolders.push(noneFolder);\n\n    return decryptedFolders;\n  }\n}\n","import { KdfType } from \"../../../enums/kdfType\";\nimport { KeysRequest } from \"../keysRequest\";\n\nexport class SetKeyConnectorKeyRequest {\n  key: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    key: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.key = key;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","export class KeyConnectorUserKeyRequest {\n  key: string;\n\n  constructor(key: string) {\n    this.key = key;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { OrganizationUserType } from \"../enums/organizationUserType\";\nimport { Utils } from \"../misc/utils\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport class KeyConnectorService implements KeyConnectorServiceAbstraction {\n  constructor(\n    private stateService: StateService,\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private tokenService: TokenService,\n    private logService: LogService,\n    private organizationService: OrganizationService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private logoutCallback: (expired: boolean, userId?: string) => void\n  ) {}\n\n  setUsesKeyConnector(usesKeyConnector: boolean) {\n    return this.stateService.setUsesKeyConnector(usesKeyConnector);\n  }\n\n  async getUsesKeyConnector(): Promise<boolean> {\n    return await this.stateService.getUsesKeyConnector();\n  }\n\n  async userNeedsMigration() {\n    const loggedInUsingSso = await this.tokenService.getIsExternal();\n    const requiredByOrganization = (await this.getManagingOrganization()) != null;\n    const userIsNotUsingKeyConnector = !(await this.getUsesKeyConnector());\n\n    return loggedInUsingSso && requiredByOrganization && userIsNotUsingKeyConnector;\n  }\n\n  async migrateUser() {\n    const organization = await this.getManagingOrganization();\n    const key = await this.cryptoService.getKey();\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(key.encKeyB64);\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(\n        organization.keyConnectorUrl,\n        keyConnectorRequest\n      );\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n\n    await this.apiService.postConvertToKeyConnector();\n  }\n\n  async getAndSetKey(url: string) {\n    try {\n      const userKeyResponse = await this.apiService.getUserKeyFromKeyConnector(url);\n      const keyArr = Utils.fromB64ToArray(userKeyResponse.key);\n      const k = new SymmetricCryptoKey(keyArr);\n      await this.cryptoService.setKey(k);\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n  }\n\n  async getManagingOrganization() {\n    const orgs = await this.organizationService.getAll();\n    return orgs.find(\n      (o) =>\n        o.keyConnectorEnabled &&\n        o.type !== OrganizationUserType.Admin &&\n        o.type !== OrganizationUserType.Owner &&\n        !o.isProviderUser\n    );\n  }\n\n  async convertNewSsoUserToKeyConnector(tokenResponse: IdentityTokenResponse, orgId: string) {\n    const { kdf, kdfIterations, keyConnectorUrl } = tokenResponse;\n    const password = await this.cryptoFunctionService.randomBytes(64);\n\n    const k = await this.cryptoService.makeKey(\n      Utils.fromBufferToB64(password),\n      await this.tokenService.getEmail(),\n      kdf,\n      kdfIterations\n    );\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(k.encKeyB64);\n    await this.cryptoService.setKey(k);\n\n    const encKey = await this.cryptoService.makeEncKey(k);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n\n    const [pubKey, privKey] = await this.cryptoService.makeKeyPair();\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(keyConnectorUrl, keyConnectorRequest);\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n\n    const keys = new KeysRequest(pubKey, privKey.encryptedString);\n    const setPasswordRequest = new SetKeyConnectorKeyRequest(\n      encKey[1].encryptedString,\n      kdf,\n      kdfIterations,\n      orgId,\n      keys\n    );\n    await this.apiService.postSetKeyConnectorKey(setPasswordRequest);\n  }\n\n  async setConvertAccountRequired(status: boolean) {\n    await this.stateService.setConvertAccountToKeyConnector(status);\n  }\n\n  async getConvertAccountRequired(): Promise<boolean> {\n    return await this.stateService.getConvertAccountToKeyConnector();\n  }\n\n  async removeConvertAccountRequired() {\n    await this.stateService.setConvertAccountToKeyConnector(null);\n  }\n\n  async clear() {\n    await this.removeConvertAccountRequired();\n  }\n\n  private handleKeyConnectorError(e: any) {\n    this.logService.error(e);\n    if (this.logoutCallback != null) {\n      this.logoutCallback(false);\n    }\n    throw new Error(\"Key Connector error\");\n  }\n}\n","export enum NotificationType {\n  SyncCipherUpdate = 0,\n  SyncCipherCreate = 1,\n  SyncLoginDelete = 2,\n  SyncFolderDelete = 3,\n  SyncCiphers = 4,\n\n  SyncVault = 5,\n  SyncOrgKeys = 6,\n  SyncFolderCreate = 7,\n  SyncFolderUpdate = 8,\n  SyncCipherDelete = 9,\n  SyncSettings = 10,\n\n  LogOut = 11,\n\n  SyncSendCreate = 12,\n  SyncSendUpdate = 13,\n  SyncSendDelete = 14,\n}\n","import { NotificationType } from \"../../enums/notificationType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class NotificationResponse extends BaseResponse {\n  contextId: string;\n  type: NotificationType;\n  payload: any;\n\n  constructor(response: any) {\n    super(response);\n    this.contextId = this.getResponseProperty(\"ContextId\");\n    this.type = this.getResponseProperty(\"Type\");\n\n    const payload = this.getResponseProperty(\"Payload\");\n    switch (this.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncCipherUpdate:\n      case NotificationType.SyncLoginDelete:\n        this.payload = new SyncCipherNotification(payload);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderDelete:\n      case NotificationType.SyncFolderUpdate:\n        this.payload = new SyncFolderNotification(payload);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncOrgKeys:\n      case NotificationType.SyncSettings:\n      case NotificationType.LogOut:\n        this.payload = new UserNotification(payload);\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n      case NotificationType.SyncSendDelete:\n        this.payload = new SyncSendNotification(payload);\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nexport class SyncCipherNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  organizationId: string;\n  collectionIds: string[];\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class SyncFolderNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class UserNotification extends BaseResponse {\n  userId: string;\n  date: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.date = new Date(this.getResponseProperty(\"Date\"));\n  }\n}\n\nexport class SyncSendNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n","import * as signalR from \"@microsoft/signalr\";\nimport * as signalRMsgPack from \"@microsoft/signalr-protocol-msgpack\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { AuthService } from \"../abstractions/auth.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"../abstractions/notifications.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SyncService } from \"../abstractions/sync.service\";\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { NotificationType } from \"../enums/notificationType\";\nimport {\n  NotificationResponse,\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notificationResponse\";\n\nexport class NotificationsService implements NotificationsServiceAbstraction {\n  private signalrConnection: signalR.HubConnection;\n  private url: string;\n  private connected = false;\n  private inited = false;\n  private inactive = false;\n  private reconnectTimer: any = null;\n\n  constructor(\n    private syncService: SyncService,\n    private appIdService: AppIdService,\n    private apiService: ApiService,\n    private environmentService: EnvironmentService,\n    private logoutCallback: (expired: boolean) => Promise<void>,\n    private logService: LogService,\n    private stateService: StateService,\n    private authService: AuthService\n  ) {\n    this.environmentService.urls.subscribe(() => {\n      if (!this.inited) {\n        return;\n      }\n\n      this.init();\n    });\n  }\n\n  async init(): Promise<void> {\n    this.inited = false;\n    this.url = this.environmentService.getNotificationsUrl();\n\n    // Set notifications server URL to `https://-` to effectively disable communication\n    // with the notifications server from the client app\n    if (this.url === \"https://-\") {\n      return;\n    }\n\n    if (this.signalrConnection != null) {\n      this.signalrConnection.off(\"ReceiveMessage\");\n      this.signalrConnection.off(\"Heartbeat\");\n      await this.signalrConnection.stop();\n      this.connected = false;\n      this.signalrConnection = null;\n    }\n\n    this.signalrConnection = new signalR.HubConnectionBuilder()\n      .withUrl(this.url + \"/hub\", {\n        accessTokenFactory: () => this.apiService.getActiveBearerToken(),\n        skipNegotiation: true,\n        transport: signalR.HttpTransportType.WebSockets,\n      })\n      .withHubProtocol(new signalRMsgPack.MessagePackHubProtocol() as signalR.IHubProtocol)\n      // .configureLogging(signalR.LogLevel.Trace)\n      .build();\n\n    this.signalrConnection.on(\"ReceiveMessage\", (data: any) =>\n      this.processNotification(new NotificationResponse(data))\n    );\n    // eslint-disable-next-line\n    this.signalrConnection.on(\"Heartbeat\", (data: any) => {\n      /*console.log('Heartbeat!');*/\n    });\n    this.signalrConnection.onclose(() => {\n      this.connected = false;\n      this.reconnect(true);\n    });\n    this.inited = true;\n    if (await this.isAuthedAndUnlocked()) {\n      await this.reconnect(false);\n    }\n  }\n\n  async updateConnection(sync = false): Promise<void> {\n    if (!this.inited) {\n      return;\n    }\n    try {\n      if (await this.isAuthedAndUnlocked()) {\n        await this.reconnect(sync);\n      } else {\n        await this.signalrConnection.stop();\n      }\n    } catch (e) {\n      this.logService.error(e.toString());\n    }\n  }\n\n  async reconnectFromActivity(): Promise<void> {\n    this.inactive = false;\n    if (this.inited && !this.connected) {\n      await this.reconnect(true);\n    }\n  }\n\n  async disconnectFromInactivity(): Promise<void> {\n    this.inactive = true;\n    if (this.inited && this.connected) {\n      await this.signalrConnection.stop();\n    }\n  }\n\n  private async processNotification(notification: NotificationResponse) {\n    const appId = await this.appIdService.getAppId();\n    if (notification == null || notification.contextId === appId) {\n      return;\n    }\n\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    const payloadUserId = notification.payload.userId || notification.payload.UserId;\n    const myUserId = await this.stateService.getUserId();\n    if (isAuthenticated && payloadUserId != null && payloadUserId !== myUserId) {\n      return;\n    }\n\n    switch (notification.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherUpdate:\n        await this.syncService.syncUpsertCipher(\n          notification.payload as SyncCipherNotification,\n          notification.type === NotificationType.SyncCipherUpdate\n        );\n        break;\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncLoginDelete:\n        await this.syncService.syncDeleteCipher(notification.payload as SyncCipherNotification);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderUpdate:\n        await this.syncService.syncUpsertFolder(\n          notification.payload as SyncFolderNotification,\n          notification.type === NotificationType.SyncFolderUpdate\n        );\n        break;\n      case NotificationType.SyncFolderDelete:\n        await this.syncService.syncDeleteFolder(notification.payload as SyncFolderNotification);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncSettings:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(false);\n        }\n        break;\n      case NotificationType.SyncOrgKeys:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(true);\n          // Stop so a reconnect can be made\n          await this.signalrConnection.stop();\n        }\n        break;\n      case NotificationType.LogOut:\n        if (isAuthenticated) {\n          this.logoutCallback(true);\n        }\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n        await this.syncService.syncUpsertSend(\n          notification.payload as SyncSendNotification,\n          notification.type === NotificationType.SyncSendUpdate\n        );\n        break;\n      case NotificationType.SyncSendDelete:\n        await this.syncService.syncDeleteSend(notification.payload as SyncSendNotification);\n        break;\n      default:\n        break;\n    }\n  }\n\n  private async reconnect(sync: boolean) {\n    if (this.reconnectTimer != null) {\n      clearTimeout(this.reconnectTimer);\n      this.reconnectTimer = null;\n    }\n    if (this.connected || !this.inited || this.inactive) {\n      return;\n    }\n    const authedAndUnlocked = await this.isAuthedAndUnlocked();\n    if (!authedAndUnlocked) {\n      return;\n    }\n\n    try {\n      await this.signalrConnection.start();\n      this.connected = true;\n      if (sync) {\n        await this.syncService.fullSync(false);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (!this.connected) {\n      this.reconnectTimer = setTimeout(() => this.reconnect(sync), this.random(120000, 300000));\n    }\n  }\n\n  private async isAuthedAndUnlocked() {\n    const authStatus = await this.authService.getAuthStatus();\n    return authStatus >= AuthenticationStatus.Unlocked;\n  }\n\n  private random(min: number, max: number) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\nimport { OrganizationData } from \"../data/organizationData\";\n\nexport class Organization {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useScim: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(obj?: OrganizationData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.usePolicies = obj.usePolicies;\n    this.useGroups = obj.useGroups;\n    this.useDirectory = obj.useDirectory;\n    this.useEvents = obj.useEvents;\n    this.useTotp = obj.useTotp;\n    this.use2fa = obj.use2fa;\n    this.useApi = obj.useApi;\n    this.useSso = obj.useSso;\n    this.useKeyConnector = obj.useKeyConnector;\n    this.useScim = obj.useScim;\n    this.useResetPassword = obj.useResetPassword;\n    this.selfHost = obj.selfHost;\n    this.usersGetPremium = obj.usersGetPremium;\n    this.seats = obj.seats;\n    this.maxCollections = obj.maxCollections;\n    this.maxStorageGb = obj.maxStorageGb;\n    this.ssoBound = obj.ssoBound;\n    this.identifier = obj.identifier;\n    this.permissions = obj.permissions;\n    this.resetPasswordEnrolled = obj.resetPasswordEnrolled;\n    this.userId = obj.userId;\n    this.hasPublicAndPrivateKeys = obj.hasPublicAndPrivateKeys;\n    this.providerId = obj.providerId;\n    this.providerName = obj.providerName;\n    this.isProviderUser = obj.isProviderUser;\n    this.familySponsorshipFriendlyName = obj.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = obj.familySponsorshipAvailable;\n    this.planProductType = obj.planProductType;\n    this.keyConnectorEnabled = obj.keyConnectorEnabled;\n    this.keyConnectorUrl = obj.keyConnectorUrl;\n    this.familySponsorshipLastSyncDate = obj.familySponsorshipLastSyncDate;\n    this.familySponsorshipValidUntil = obj.familySponsorshipValidUntil;\n    this.familySponsorshipToDelete = obj.familySponsorshipToDelete;\n  }\n\n  get canAccess() {\n    if (this.type === OrganizationUserType.Owner) {\n      return true;\n    }\n    return this.enabled && this.status === OrganizationUserStatusType.Confirmed;\n  }\n\n  get isManager() {\n    return (\n      this.type === OrganizationUserType.Manager ||\n      this.type === OrganizationUserType.Owner ||\n      this.type === OrganizationUserType.Admin\n    );\n  }\n\n  get isAdmin() {\n    return this.type === OrganizationUserType.Owner || this.type === OrganizationUserType.Admin;\n  }\n\n  get isOwner() {\n    return this.type === OrganizationUserType.Owner || this.isProviderUser;\n  }\n\n  get canAccessEventLogs() {\n    return (this.isAdmin || this.permissions.accessEventLogs) && this.useEvents;\n  }\n\n  get canAccessImportExport() {\n    return this.isAdmin || this.permissions.accessImportExport;\n  }\n\n  get canAccessReports() {\n    return this.isAdmin || this.permissions.accessReports;\n  }\n\n  get canCreateNewCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.createNewCollections ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canEditAnyCollection() {\n    return (\n      this.isAdmin || (this.permissions.editAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canDeleteAnyCollection() {\n    return (\n      this.isAdmin ||\n      (this.permissions.deleteAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canViewAllCollections() {\n    return this.canCreateNewCollections || this.canEditAnyCollection || this.canDeleteAnyCollection;\n  }\n\n  get canEditAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.editAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canDeleteAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.deleteAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canViewAssignedCollections() {\n    return this.canDeleteAssignedCollections || this.canEditAssignedCollections;\n  }\n\n  get canManageGroups() {\n    return (this.isAdmin || this.permissions.manageGroups) && this.useGroups;\n  }\n\n  get canManageSso() {\n    return (this.isAdmin || this.permissions.manageSso) && this.useSso;\n  }\n\n  get canManageScim() {\n    return (this.isAdmin || this.permissions.manageScim) && this.useScim;\n  }\n\n  get canManagePolicies() {\n    return (this.isAdmin || this.permissions.managePolicies) && this.usePolicies;\n  }\n\n  get canManageUsers() {\n    return this.isAdmin || this.permissions.manageUsers;\n  }\n\n  get canManageUsersPassword() {\n    return this.isAdmin || this.permissions.manageResetPassword;\n  }\n\n  get isExemptFromPolicies() {\n    return this.canManagePolicies;\n  }\n\n  get canManageBilling() {\n    return this.isOwner && (this.isProviderUser || !this.hasProvider);\n  }\n\n  get hasProvider() {\n    return this.providerId != null || this.providerName != null;\n  }\n}\n","import { OrganizationService as OrganizationServiceAbstraction } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { Organization } from \"../models/domain/organization\";\n\nexport class OrganizationService implements OrganizationServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async get(id: string): Promise<Organization> {\n    const organizations = await this.stateService.getOrganizations();\n    // eslint-disable-next-line\n    if (organizations == null || !organizations.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Organization(organizations[id]);\n  }\n\n  async getByIdentifier(identifier: string): Promise<Organization> {\n    const organizations = await this.getAll();\n    if (organizations == null || organizations.length === 0) {\n      return null;\n    }\n\n    return organizations.find((o) => o.identifier === identifier);\n  }\n\n  async getAll(userId?: string): Promise<Organization[]> {\n    const organizations = await this.stateService.getOrganizations({ userId: userId });\n    const response: Organization[] = [];\n    for (const id in organizations) {\n      // eslint-disable-next-line\n      if (organizations.hasOwnProperty(id) && !organizations[id].isProviderUser) {\n        response.push(new Organization(organizations[id]));\n      }\n    }\n    const sortedResponse = response.sort((a, b) => a.name.localeCompare(b.name));\n    return sortedResponse;\n  }\n\n  async save(organizations: { [id: string]: OrganizationData }) {\n    return await this.stateService.setOrganizations(organizations);\n  }\n\n  async canManageSponsorships(): Promise<boolean> {\n    const orgs = await this.getAll();\n    return orgs.some(\n      (o) => o.familySponsorshipAvailable || o.familySponsorshipFriendlyName !== null\n    );\n  }\n\n  async hasOrganizations(userId?: string): Promise<boolean> {\n    const organizations = await this.getAll(userId);\n    return organizations.length > 0;\n  }\n}\n","export class GeneratedPasswordHistory {\n  password: string;\n  date: number;\n\n  constructor(password: string, date: number) {\n    this.password = password;\n    this.date = date;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class PasswordGeneratorPolicyOptions extends Domain {\n  defaultType = \"\";\n  minLength = 0;\n  useUppercase = false;\n  useLowercase = false;\n  useNumbers = false;\n  numberCount = 0;\n  useSpecial = false;\n  specialCount = 0;\n  minNumberWords = 0;\n  capitalize = false;\n  includeNumber = false;\n\n  inEffect() {\n    return (\n      this.defaultType !== \"\" ||\n      this.minLength > 0 ||\n      this.numberCount > 0 ||\n      this.specialCount > 0 ||\n      this.useUppercase ||\n      this.useLowercase ||\n      this.useNumbers ||\n      this.useSpecial ||\n      this.minNumberWords > 0 ||\n      this.capitalize ||\n      this.includeNumber\n    );\n  }\n}\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"../abstractions/passwordGeneration.service\";\nimport { PolicyService } from \"../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { PolicyType } from \"../enums/policyType\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\nimport { EncString } from \"../models/domain/encString\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/passwordGeneratorPolicyOptions\";\nimport { Policy } from \"../models/domain/policy\";\n\nconst DefaultOptions = {\n  length: 14,\n  ambiguous: false,\n  number: true,\n  minNumber: 1,\n  uppercase: true,\n  minUppercase: 0,\n  lowercase: true,\n  minLowercase: 0,\n  special: false,\n  minSpecial: 1,\n  type: \"password\",\n  numWords: 3,\n  wordSeparator: \"-\",\n  capitalize: false,\n  includeNumber: false,\n};\n\nconst MaxPasswordsInHistory = 100;\n\nexport class PasswordGenerationService implements PasswordGenerationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private policyService: PolicyService,\n    private stateService: StateService\n  ) {}\n\n  async generatePassword(options: any): Promise<string> {\n    // overload defaults with given options\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.type === \"passphrase\") {\n      return this.generatePassphrase(options);\n    }\n\n    // sanitize\n    this.sanitizePasswordLength(o, true);\n\n    const minLength: number = o.minUppercase + o.minLowercase + o.minNumber + o.minSpecial;\n    if (o.length < minLength) {\n      o.length = minLength;\n    }\n\n    const positions: string[] = [];\n    if (o.lowercase && o.minLowercase > 0) {\n      for (let i = 0; i < o.minLowercase; i++) {\n        positions.push(\"l\");\n      }\n    }\n    if (o.uppercase && o.minUppercase > 0) {\n      for (let i = 0; i < o.minUppercase; i++) {\n        positions.push(\"u\");\n      }\n    }\n    if (o.number && o.minNumber > 0) {\n      for (let i = 0; i < o.minNumber; i++) {\n        positions.push(\"n\");\n      }\n    }\n    if (o.special && o.minSpecial > 0) {\n      for (let i = 0; i < o.minSpecial; i++) {\n        positions.push(\"s\");\n      }\n    }\n    while (positions.length < o.length) {\n      positions.push(\"a\");\n    }\n\n    // shuffle\n    await this.shuffleArray(positions);\n\n    // build out the char sets\n    let allCharSet = \"\";\n\n    let lowercaseCharSet = \"abcdefghijkmnopqrstuvwxyz\";\n    if (o.ambiguous) {\n      lowercaseCharSet += \"l\";\n    }\n    if (o.lowercase) {\n      allCharSet += lowercaseCharSet;\n    }\n\n    let uppercaseCharSet = \"ABCDEFGHJKLMNPQRSTUVWXYZ\";\n    if (o.ambiguous) {\n      uppercaseCharSet += \"IO\";\n    }\n    if (o.uppercase) {\n      allCharSet += uppercaseCharSet;\n    }\n\n    let numberCharSet = \"23456789\";\n    if (o.ambiguous) {\n      numberCharSet += \"01\";\n    }\n    if (o.number) {\n      allCharSet += numberCharSet;\n    }\n\n    const specialCharSet = \"!@#$%^&*\";\n    if (o.special) {\n      allCharSet += specialCharSet;\n    }\n\n    let password = \"\";\n    for (let i = 0; i < o.length; i++) {\n      let positionChars: string;\n      switch (positions[i]) {\n        case \"l\":\n          positionChars = lowercaseCharSet;\n          break;\n        case \"u\":\n          positionChars = uppercaseCharSet;\n          break;\n        case \"n\":\n          positionChars = numberCharSet;\n          break;\n        case \"s\":\n          positionChars = specialCharSet;\n          break;\n        case \"a\":\n          positionChars = allCharSet;\n          break;\n        default:\n          break;\n      }\n\n      const randomCharIndex = await this.cryptoService.randomNumber(0, positionChars.length - 1);\n      password += positionChars.charAt(randomCharIndex);\n    }\n\n    return password;\n  }\n\n  async generatePassphrase(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.numWords == null || o.numWords <= 2) {\n      o.numWords = DefaultOptions.numWords;\n    }\n    if (o.wordSeparator == null || o.wordSeparator.length === 0 || o.wordSeparator.length > 1) {\n      o.wordSeparator = \" \";\n    }\n    if (o.capitalize == null) {\n      o.capitalize = false;\n    }\n    if (o.includeNumber == null) {\n      o.includeNumber = false;\n    }\n\n    const listLength = EEFLongWordList.length - 1;\n    const wordList = new Array(o.numWords);\n    for (let i = 0; i < o.numWords; i++) {\n      const wordIndex = await this.cryptoService.randomNumber(0, listLength);\n      if (o.capitalize) {\n        wordList[i] = this.capitalize(EEFLongWordList[wordIndex]);\n      } else {\n        wordList[i] = EEFLongWordList[wordIndex];\n      }\n    }\n\n    if (o.includeNumber) {\n      await this.appendRandomNumberToRandomWord(wordList);\n    }\n    return wordList.join(o.wordSeparator);\n  }\n\n  async getOptions(): Promise<[any, PasswordGeneratorPolicyOptions]> {\n    let options = await this.stateService.getPasswordGenerationOptions();\n    if (options == null) {\n      options = Object.assign({}, DefaultOptions);\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setPasswordGenerationOptions(options);\n    const enforcedOptions = await this.enforcePasswordGeneratorPoliciesOnOptions(options);\n    options = enforcedOptions[0];\n    return [options, enforcedOptions[1]];\n  }\n\n  async enforcePasswordGeneratorPoliciesOnOptions(\n    options: any\n  ): Promise<[any, PasswordGeneratorPolicyOptions]> {\n    let enforcedPolicyOptions = await this.getPasswordGeneratorPolicyOptions();\n    if (enforcedPolicyOptions != null) {\n      if (options.length < enforcedPolicyOptions.minLength) {\n        options.length = enforcedPolicyOptions.minLength;\n      }\n\n      if (enforcedPolicyOptions.useUppercase) {\n        options.uppercase = true;\n      }\n\n      if (enforcedPolicyOptions.useLowercase) {\n        options.lowercase = true;\n      }\n\n      if (enforcedPolicyOptions.useNumbers) {\n        options.number = true;\n      }\n\n      if (options.minNumber < enforcedPolicyOptions.numberCount) {\n        options.minNumber = enforcedPolicyOptions.numberCount;\n      }\n\n      if (enforcedPolicyOptions.useSpecial) {\n        options.special = true;\n      }\n\n      if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n        options.minSpecial = enforcedPolicyOptions.specialCount;\n      }\n\n      // Must normalize these fields because the receiving call expects all options to pass the current rules\n      if (options.minSpecial + options.minNumber > options.length) {\n        options.minSpecial = options.length - options.minNumber;\n      }\n\n      if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n        options.numWords = enforcedPolicyOptions.minNumberWords;\n      }\n\n      if (enforcedPolicyOptions.capitalize) {\n        options.capitalize = true;\n      }\n\n      if (enforcedPolicyOptions.includeNumber) {\n        options.includeNumber = true;\n      }\n\n      // Force default type if password/passphrase selected via policy\n      if (\n        enforcedPolicyOptions.defaultType === \"password\" ||\n        enforcedPolicyOptions.defaultType === \"passphrase\"\n      ) {\n        options.type = enforcedPolicyOptions.defaultType;\n      }\n    } else {\n      // UI layer expects an instantiated object to prevent more explicit null checks\n      enforcedPolicyOptions = new PasswordGeneratorPolicyOptions();\n    }\n    return [options, enforcedPolicyOptions];\n  }\n\n  async getPasswordGeneratorPolicyOptions(): Promise<PasswordGeneratorPolicyOptions> {\n    const policies: Policy[] =\n      this.policyService == null\n        ? null\n        : await this.policyService.getAll(PolicyType.PasswordGenerator);\n    let enforcedOptions: PasswordGeneratorPolicyOptions = null;\n\n    if (policies == null || policies.length === 0) {\n      return enforcedOptions;\n    }\n\n    policies.forEach((currentPolicy) => {\n      if (!currentPolicy.enabled || currentPolicy.data == null) {\n        return;\n      }\n\n      if (enforcedOptions == null) {\n        enforcedOptions = new PasswordGeneratorPolicyOptions();\n      }\n\n      // Password wins in multi-org collisions\n      if (currentPolicy.data.defaultType != null && enforcedOptions.defaultType !== \"password\") {\n        enforcedOptions.defaultType = currentPolicy.data.defaultType;\n      }\n\n      if (\n        currentPolicy.data.minLength != null &&\n        currentPolicy.data.minLength > enforcedOptions.minLength\n      ) {\n        enforcedOptions.minLength = currentPolicy.data.minLength;\n      }\n\n      if (currentPolicy.data.useUpper) {\n        enforcedOptions.useUppercase = true;\n      }\n\n      if (currentPolicy.data.useLower) {\n        enforcedOptions.useLowercase = true;\n      }\n\n      if (currentPolicy.data.useNumbers) {\n        enforcedOptions.useNumbers = true;\n      }\n\n      if (\n        currentPolicy.data.minNumbers != null &&\n        currentPolicy.data.minNumbers > enforcedOptions.numberCount\n      ) {\n        enforcedOptions.numberCount = currentPolicy.data.minNumbers;\n      }\n\n      if (currentPolicy.data.useSpecial) {\n        enforcedOptions.useSpecial = true;\n      }\n\n      if (\n        currentPolicy.data.minSpecial != null &&\n        currentPolicy.data.minSpecial > enforcedOptions.specialCount\n      ) {\n        enforcedOptions.specialCount = currentPolicy.data.minSpecial;\n      }\n\n      if (\n        currentPolicy.data.minNumberWords != null &&\n        currentPolicy.data.minNumberWords > enforcedOptions.minNumberWords\n      ) {\n        enforcedOptions.minNumberWords = currentPolicy.data.minNumberWords;\n      }\n\n      if (currentPolicy.data.capitalize) {\n        enforcedOptions.capitalize = true;\n      }\n\n      if (currentPolicy.data.includeNumber) {\n        enforcedOptions.includeNumber = true;\n      }\n    });\n\n    return enforcedOptions;\n  }\n\n  async saveOptions(options: any) {\n    await this.stateService.setPasswordGenerationOptions(options);\n  }\n\n  async getHistory(): Promise<GeneratedPasswordHistory[]> {\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return new Array<GeneratedPasswordHistory>();\n    }\n\n    if ((await this.stateService.getDecryptedPasswordGenerationHistory()) == null) {\n      const encrypted = await this.stateService.getEncryptedPasswordGenerationHistory();\n      const decrypted = await this.decryptHistory(encrypted);\n      await this.stateService.setDecryptedPasswordGenerationHistory(decrypted);\n    }\n\n    const passwordGenerationHistory =\n      await this.stateService.getDecryptedPasswordGenerationHistory();\n    return passwordGenerationHistory != null\n      ? passwordGenerationHistory\n      : new Array<GeneratedPasswordHistory>();\n  }\n\n  async addHistory(password: string): Promise<any> {\n    // Cannot add new history if no key is available\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return;\n    }\n\n    const currentHistory = await this.getHistory();\n\n    // Prevent duplicates\n    if (this.matchesPrevious(password, currentHistory)) {\n      return;\n    }\n\n    currentHistory.unshift(new GeneratedPasswordHistory(password, Date.now()));\n\n    // Remove old items.\n    if (currentHistory.length > MaxPasswordsInHistory) {\n      currentHistory.pop();\n    }\n\n    const newHistory = await this.encryptHistory(currentHistory);\n    await this.stateService.setDecryptedPasswordGenerationHistory(currentHistory);\n    return await this.stateService.setEncryptedPasswordGenerationHistory(newHistory);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setEncryptedPasswordGenerationHistory(null, { userId: userId });\n    await this.stateService.setDecryptedPasswordGenerationHistory(null, { userId: userId });\n  }\n\n  passwordStrength(password: string, userInputs: string[] = null): zxcvbn.ZXCVBNResult {\n    if (password == null || password.length === 0) {\n      return null;\n    }\n    let globalUserInputs = [\"bitwarden\", \"bit\", \"warden\"];\n    if (userInputs != null && userInputs.length > 0) {\n      globalUserInputs = globalUserInputs.concat(userInputs);\n    }\n    // Use a hash set to get rid of any duplicate user inputs\n    const finalUserInputs = Array.from(new Set(globalUserInputs));\n    const result = zxcvbn(password, finalUserInputs);\n    return result;\n  }\n\n  normalizeOptions(options: any, enforcedPolicyOptions: PasswordGeneratorPolicyOptions) {\n    options.minLowercase = 0;\n    options.minUppercase = 0;\n\n    if (!options.length || options.length < 5) {\n      options.length = 5;\n    } else if (options.length > 128) {\n      options.length = 128;\n    }\n\n    if (options.length < enforcedPolicyOptions.minLength) {\n      options.length = enforcedPolicyOptions.minLength;\n    }\n\n    if (!options.minNumber) {\n      options.minNumber = 0;\n    } else if (options.minNumber > options.length) {\n      options.minNumber = options.length;\n    } else if (options.minNumber > 9) {\n      options.minNumber = 9;\n    }\n\n    if (options.minNumber < enforcedPolicyOptions.numberCount) {\n      options.minNumber = enforcedPolicyOptions.numberCount;\n    }\n\n    if (!options.minSpecial) {\n      options.minSpecial = 0;\n    } else if (options.minSpecial > options.length) {\n      options.minSpecial = options.length;\n    } else if (options.minSpecial > 9) {\n      options.minSpecial = 9;\n    }\n\n    if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n      options.minSpecial = enforcedPolicyOptions.specialCount;\n    }\n\n    if (options.minSpecial + options.minNumber > options.length) {\n      options.minSpecial = options.length - options.minNumber;\n    }\n\n    if (options.numWords == null || options.length < 3) {\n      options.numWords = 3;\n    } else if (options.numWords > 20) {\n      options.numWords = 20;\n    }\n\n    if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n      options.numWords = enforcedPolicyOptions.minNumberWords;\n    }\n\n    if (options.wordSeparator != null && options.wordSeparator.length > 1) {\n      options.wordSeparator = options.wordSeparator[0];\n    }\n\n    this.sanitizePasswordLength(options, false);\n  }\n\n  private capitalize(str: string) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  private async appendRandomNumberToRandomWord(wordList: string[]) {\n    if (wordList == null || wordList.length <= 0) {\n      return;\n    }\n    const index = await this.cryptoService.randomNumber(0, wordList.length - 1);\n    const num = await this.cryptoService.randomNumber(0, 9);\n    wordList[index] = wordList[index] + num;\n  }\n\n  private async encryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const encrypted = await this.cryptoService.encrypt(item.password);\n      return new GeneratedPasswordHistory(encrypted.encryptedString, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private async decryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const decrypted = await this.cryptoService.decryptToUtf8(new EncString(item.password));\n      return new GeneratedPasswordHistory(decrypted, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private matchesPrevious(password: string, history: GeneratedPasswordHistory[]): boolean {\n    if (history == null || history.length === 0) {\n      return false;\n    }\n\n    return history[history.length - 1].password === password;\n  }\n\n  // ref: https://stackoverflow.com/a/12646864/1090359\n  private async shuffleArray(array: string[]) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = await this.cryptoService.randomNumber(0, i);\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n\n  private sanitizePasswordLength(options: any, forGeneration: boolean) {\n    let minUppercaseCalc = 0;\n    let minLowercaseCalc = 0;\n    let minNumberCalc: number = options.minNumber;\n    let minSpecialCalc: number = options.minSpecial;\n\n    if (options.uppercase && options.minUppercase <= 0) {\n      minUppercaseCalc = 1;\n    } else if (!options.uppercase) {\n      minUppercaseCalc = 0;\n    }\n\n    if (options.lowercase && options.minLowercase <= 0) {\n      minLowercaseCalc = 1;\n    } else if (!options.lowercase) {\n      minLowercaseCalc = 0;\n    }\n\n    if (options.number && options.minNumber <= 0) {\n      minNumberCalc = 1;\n    } else if (!options.number) {\n      minNumberCalc = 0;\n    }\n\n    if (options.special && options.minSpecial <= 0) {\n      minSpecialCalc = 1;\n    } else if (!options.special) {\n      minSpecialCalc = 0;\n    }\n\n    // This should never happen but is a final safety net\n    if (!options.length || options.length < 1) {\n      options.length = 10;\n    }\n\n    const minLength: number = minUppercaseCalc + minLowercaseCalc + minNumberCalc + minSpecialCalc;\n    // Normalize and Generation both require this modification\n    if (options.length < minLength) {\n      options.length = minLength;\n    }\n\n    // Apply other changes if the options object passed in is for generation\n    if (forGeneration) {\n      options.minUppercase = minUppercaseCalc;\n      options.minLowercase = minLowercaseCalc;\n      options.minNumber = minNumberCalc;\n      options.minSpecial = minSpecialCalc;\n    }\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyResponse } from \"../response/policyResponse\";\n\nexport class PolicyData {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: PolicyResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.type = response.type;\n    this.data = response.data;\n    this.enabled = response.enabled;\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../data/policyData\";\n\nimport Domain from \"./domainBase\";\n\nexport class Policy extends Domain {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(obj?: PolicyData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.organizationId = obj.organizationId;\n    this.type = obj.type;\n    this.data = obj.data;\n    this.enabled = obj.enabled;\n  }\n}\n","import { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { InternalPolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { PolicyData } from \"@bitwarden/common/models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policyRequest\";\nimport { ListResponse } from \"@bitwarden/common/models/response/listResponse\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policyResponse\";\n\nexport class PolicyApiService implements PolicyApiServiceAbstraction {\n  constructor(\n    private policyService: InternalPolicyService,\n    private apiService: ApiService,\n    private stateService: StateService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async getPolicy(organizationId: string, type: PolicyType): Promise<PolicyResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      null,\n      true,\n      true\n    );\n    return new PolicyResponse(r);\n  }\n\n  async getPolicies(organizationId: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByToken(\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" +\n        organizationId +\n        \"/policies/token?\" +\n        \"token=\" +\n        encodeURIComponent(token) +\n        \"&email=\" +\n        encodeURIComponent(email) +\n        \"&organizationUserId=\" +\n        organizationUserId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByInvitedUser(\n    organizationId: string,\n    userId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/invited-user?\" + \"userId=\" + userId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPolicyForOrganization(policyType: PolicyType, organizationId: string): Promise<Policy> {\n    const org = await this.organizationService.get(organizationId);\n    if (org?.isProviderUser) {\n      const orgPolicies = await this.getPolicies(organizationId);\n      const policy = orgPolicies.data.find((p) => p.organizationId === organizationId);\n\n      if (policy == null) {\n        return null;\n      }\n\n      return new Policy(new PolicyData(policy));\n    }\n\n    const policies = await this.policyService.getAll(policyType);\n    return policies.find((p) => p.organizationId === organizationId);\n  }\n\n  async getMasterPasswordPoliciesForInvitedUsers(\n    orgId: string\n  ): Promise<MasterPasswordPolicyOptions> {\n    const userId = await this.stateService.getUserId();\n    const response = await this.getPoliciesByInvitedUser(orgId, userId);\n    const policies = await this.policyService.mapPoliciesFromToken(response);\n    return this.policyService.getMasterPasswordPolicyOptions(policies);\n  }\n\n  async putPolicy(organizationId: string, type: PolicyType, request: PolicyRequest): Promise<any> {\n    const r = await this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      request,\n      true,\n      true\n    );\n    const response = new PolicyResponse(r);\n    const data = new PolicyData(response);\n    await this.policyService.upsert(data);\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class ResetPasswordPolicyOptions extends Domain {\n  autoEnrollEnabled = false;\n}\n","export enum ProviderUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n  Revoked = -1, // Not used, compile-time support only\n}\n","export enum ProviderUserType {\n  ProviderAdmin = 0,\n  ServiceUser = 1,\n}\n","import { OrganizationService } from \"../../abstractions/organization.service\";\nimport { InternalPolicyService as InternalPolicyServiceAbstraction } from \"../../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../../models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"../../models/domain/masterPasswordPolicyOptions\";\nimport { Organization } from \"../../models/domain/organization\";\nimport { Policy } from \"../../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../../models/domain/resetPasswordPolicyOptions\";\nimport { ListResponse } from \"../../models/response/listResponse\";\nimport { PolicyResponse } from \"../../models/response/policyResponse\";\n\nexport class PolicyService implements InternalPolicyServiceAbstraction {\n  policyCache: Policy[];\n\n  constructor(\n    private stateService: StateService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async getAll(type?: PolicyType, userId?: string): Promise<Policy[]> {\n    let response: Policy[] = [];\n    const decryptedPolicies = await this.stateService.getDecryptedPolicies({ userId: userId });\n    if (decryptedPolicies != null) {\n      response = decryptedPolicies;\n    } else {\n      const diskPolicies = await this.stateService.getEncryptedPolicies({ userId: userId });\n      for (const id in diskPolicies) {\n        // eslint-disable-next-line\n        if (diskPolicies.hasOwnProperty(id)) {\n          response.push(new Policy(diskPolicies[id]));\n        }\n      }\n      await this.stateService.setDecryptedPolicies(response, { userId: userId });\n    }\n    if (type != null) {\n      return response.filter((policy) => policy.type === type);\n    } else {\n      return response;\n    }\n  }\n\n  async getMasterPasswordPolicyOptions(policies?: Policy[]): Promise<MasterPasswordPolicyOptions> {\n    let enforcedOptions: MasterPasswordPolicyOptions = null;\n\n    if (policies == null) {\n      policies = await this.getAll(PolicyType.MasterPassword);\n    } else {\n      policies = policies.filter((p) => p.type === PolicyType.MasterPassword);\n    }\n\n    if (policies == null || policies.length === 0) {\n      return enforcedOptions;\n    }\n\n    policies.forEach((currentPolicy) => {\n      if (!currentPolicy.enabled || currentPolicy.data == null) {\n        return;\n      }\n\n      if (enforcedOptions == null) {\n        enforcedOptions = new MasterPasswordPolicyOptions();\n      }\n\n      if (\n        currentPolicy.data.minComplexity != null &&\n        currentPolicy.data.minComplexity > enforcedOptions.minComplexity\n      ) {\n        enforcedOptions.minComplexity = currentPolicy.data.minComplexity;\n      }\n\n      if (\n        currentPolicy.data.minLength != null &&\n        currentPolicy.data.minLength > enforcedOptions.minLength\n      ) {\n        enforcedOptions.minLength = currentPolicy.data.minLength;\n      }\n\n      if (currentPolicy.data.requireUpper) {\n        enforcedOptions.requireUpper = true;\n      }\n\n      if (currentPolicy.data.requireLower) {\n        enforcedOptions.requireLower = true;\n      }\n\n      if (currentPolicy.data.requireNumbers) {\n        enforcedOptions.requireNumbers = true;\n      }\n\n      if (currentPolicy.data.requireSpecial) {\n        enforcedOptions.requireSpecial = true;\n      }\n    });\n\n    return enforcedOptions;\n  }\n\n  evaluateMasterPassword(\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions: MasterPasswordPolicyOptions\n  ): boolean {\n    if (enforcedPolicyOptions == null) {\n      return true;\n    }\n\n    if (\n      enforcedPolicyOptions.minComplexity > 0 &&\n      enforcedPolicyOptions.minComplexity > passwordStrength\n    ) {\n      return false;\n    }\n\n    if (\n      enforcedPolicyOptions.minLength > 0 &&\n      enforcedPolicyOptions.minLength > newPassword.length\n    ) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireUpper && newPassword.toLocaleLowerCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireLower && newPassword.toLocaleUpperCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireNumbers && !/[0-9]/.test(newPassword)) {\n      return false;\n    }\n\n    // eslint-disable-next-line\n    if (enforcedPolicyOptions.requireSpecial && !/[!@#$%\\^&*]/g.test(newPassword)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  getResetPasswordPolicyOptions(\n    policies: Policy[],\n    orgId: string\n  ): [ResetPasswordPolicyOptions, boolean] {\n    const resetPasswordPolicyOptions = new ResetPasswordPolicyOptions();\n\n    if (policies == null || orgId == null) {\n      return [resetPasswordPolicyOptions, false];\n    }\n\n    const policy = policies.find(\n      (p) => p.organizationId === orgId && p.type === PolicyType.ResetPassword && p.enabled\n    );\n    resetPasswordPolicyOptions.autoEnrollEnabled = policy?.data?.autoEnrollEnabled ?? false;\n\n    return [resetPasswordPolicyOptions, policy?.enabled ?? false];\n  }\n\n  mapPoliciesFromToken(policiesResponse: ListResponse<PolicyResponse>): Policy[] {\n    if (policiesResponse == null || policiesResponse.data == null) {\n      return null;\n    }\n\n    const policiesData = policiesResponse.data.map((p) => new PolicyData(p));\n    return policiesData.map((p) => new Policy(p));\n  }\n\n  async policyAppliesToUser(\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) {\n    const policies = await this.getAll(policyType, userId);\n    const organizations = await this.organizationService.getAll(userId);\n    let filteredPolicies;\n\n    if (policyFilter != null) {\n      filteredPolicies = policies.filter((p) => p.enabled && policyFilter(p));\n    } else {\n      filteredPolicies = policies.filter((p) => p.enabled);\n    }\n\n    const policySet = new Set(filteredPolicies.map((p) => p.organizationId));\n\n    return organizations.some(\n      (o) =>\n        o.enabled &&\n        o.status >= OrganizationUserStatusType.Accepted &&\n        o.usePolicies &&\n        !this.isExcemptFromPolicies(o, policyType) &&\n        policySet.has(o.id)\n    );\n  }\n\n  async upsert(policy: PolicyData): Promise<any> {\n    let policies = await this.stateService.getEncryptedPolicies();\n    if (policies == null) {\n      policies = {};\n    }\n\n    policies[policy.id] = policy;\n\n    await this.stateService.setDecryptedPolicies(null);\n    await this.stateService.setEncryptedPolicies(policies);\n  }\n\n  async replace(policies: { [id: string]: PolicyData }): Promise<any> {\n    await this.stateService.setDecryptedPolicies(null);\n    await this.stateService.setEncryptedPolicies(policies);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setDecryptedPolicies(null, { userId: userId });\n    await this.stateService.setEncryptedPolicies(null, { userId: userId });\n  }\n\n  private isExcemptFromPolicies(organization: Organization, policyType: PolicyType) {\n    if (policyType === PolicyType.MaximumVaultTimeout) {\n      return organization.type === OrganizationUserType.Owner;\n    }\n\n    return organization.isExemptFromPolicies;\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProviderData } from \"../data/providerData\";\n\nexport class Provider {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(obj?: ProviderData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.userId = obj.userId;\n    this.useEvents = obj.useEvents;\n  }\n\n  get canAccess() {\n    if (this.isProviderAdmin) {\n      return true;\n    }\n    return this.enabled && this.status === ProviderUserStatusType.Confirmed;\n  }\n\n  get canCreateOrganizations() {\n    return this.enabled && this.isProviderAdmin;\n  }\n\n  get canManageUsers() {\n    return this.isProviderAdmin;\n  }\n\n  get canAccessEventLogs() {\n    return this.isProviderAdmin;\n  }\n\n  get isProviderAdmin() {\n    return this.type === ProviderUserType.ProviderAdmin;\n  }\n}\n","import { ProviderService as ProviderServiceAbstraction } from \"../abstractions/provider.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { Provider } from \"../models/domain/provider\";\n\nexport class ProviderService implements ProviderServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async get(id: string): Promise<Provider> {\n    const providers = await this.stateService.getProviders();\n    // eslint-disable-next-line\n    if (providers == null || !providers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Provider(providers[id]);\n  }\n\n  async getAll(): Promise<Provider[]> {\n    const providers = await this.stateService.getProviders();\n    const response: Provider[] = [];\n    for (const id in providers) {\n      // eslint-disable-next-line\n      if (providers.hasOwnProperty(id)) {\n        response.push(new Provider(providers[id]));\n      }\n    }\n    return response;\n  }\n\n  async save(providers: { [id: string]: ProviderData }) {\n    await this.stateService.setProviders(providers);\n  }\n}\n","import * as lunr from \"lunr\";\n\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService as SearchServiceAbstraction } from \"../abstractions/search.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport class SearchService implements SearchServiceAbstraction {\n  private static registeredPipeline = false;\n\n  indexedEntityId?: string = null;\n  private indexing = false;\n  private index: lunr.Index = null;\n  private readonly immediateSearchLocales: string[] = [\"zh-CN\", \"zh-TW\", \"ja\", \"ko\", \"vi\"];\n  private readonly defaultSearchableMinLength: number = 2;\n  private searchableMinLength: number = this.defaultSearchableMinLength;\n\n  constructor(\n    private cipherService: CipherService,\n    private logService: LogService,\n    private i18nService: I18nService\n  ) {\n    this.i18nService.locale$.subscribe((locale) => {\n      if (this.immediateSearchLocales.indexOf(locale) !== -1) {\n        this.searchableMinLength = 1;\n      } else {\n        this.searchableMinLength = this.defaultSearchableMinLength;\n      }\n    });\n\n    // Currently have to ensure this is only done a single time. Lunr allows you to register a function\n    // multiple times but they will add a warning message to the console. The way they do that breaks when ran on a service worker.\n    if (!SearchService.registeredPipeline) {\n      SearchService.registeredPipeline = true;\n      //register lunr pipeline function\n      lunr.Pipeline.registerFunction(this.normalizeAccentsPipelineFunction, \"normalizeAccents\");\n    }\n  }\n\n  clearIndex(): void {\n    this.indexedEntityId = null;\n    this.index = null;\n  }\n\n  isSearchable(query: string): boolean {\n    query = SearchService.normalizeSearchQuery(query);\n    const notSearchable =\n      query == null ||\n      (this.index == null && query.length < this.searchableMinLength) ||\n      (this.index != null && query.length < this.searchableMinLength && query.indexOf(\">\") !== 0);\n    return !notSearchable;\n  }\n\n  async indexCiphers(indexedEntityId?: string, ciphers?: CipherView[]): Promise<void> {\n    if (this.indexing) {\n      return;\n    }\n\n    this.indexing = true;\n    this.indexedEntityId = indexedEntityId;\n    this.index = null;\n    const builder = new lunr.Builder();\n    builder.pipeline.add(this.normalizeAccentsPipelineFunction);\n    builder.ref(\"id\");\n    builder.field(\"shortid\", { boost: 100, extractor: (c: CipherView) => c.id.substr(0, 8) });\n    builder.field(\"name\", {\n      boost: 10,\n    });\n    builder.field(\"subtitle\", {\n      boost: 5,\n      extractor: (c: CipherView) => {\n        if (c.subTitle != null && c.type === CipherType.Card) {\n          return c.subTitle.replace(/\\*/g, \"\");\n        }\n        return c.subTitle;\n      },\n    });\n    builder.field(\"notes\");\n    builder.field(\"login.username\", {\n      extractor: (c: CipherView) =>\n        c.type === CipherType.Login && c.login != null ? c.login.username : null,\n    });\n    builder.field(\"login.uris\", { boost: 2, extractor: (c: CipherView) => this.uriExtractor(c) });\n    builder.field(\"fields\", { extractor: (c: CipherView) => this.fieldExtractor(c, false) });\n    builder.field(\"fields_joined\", { extractor: (c: CipherView) => this.fieldExtractor(c, true) });\n    builder.field(\"attachments\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, false),\n    });\n    builder.field(\"attachments_joined\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, true),\n    });\n    builder.field(\"organizationid\", { extractor: (c: CipherView) => c.organizationId });\n    ciphers = ciphers || (await this.cipherService.getAllDecrypted());\n    ciphers.forEach((c) => builder.add(c));\n    this.index = builder.build();\n\n    this.indexing = false;\n\n    this.logService.info(\"Finished search indexing\");\n  }\n\n  async searchCiphers(\n    query: string,\n    filter: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[] = null,\n    ciphers: CipherView[] = null\n  ): Promise<CipherView[]> {\n    const results: CipherView[] = [];\n    if (query != null) {\n      query = SearchService.normalizeSearchQuery(query.trim().toLowerCase());\n    }\n    if (query === \"\") {\n      query = null;\n    }\n\n    if (ciphers == null) {\n      ciphers = await this.cipherService.getAllDecrypted();\n    }\n\n    if (filter != null && Array.isArray(filter) && filter.length > 0) {\n      ciphers = ciphers.filter((c) => filter.every((f) => f == null || f(c)));\n    } else if (filter != null) {\n      ciphers = ciphers.filter(filter as (cipher: CipherView) => boolean);\n    }\n\n    if (!this.isSearchable(query)) {\n      return ciphers;\n    }\n\n    if (this.indexing) {\n      await new Promise((r) => setTimeout(r, 250));\n      if (this.indexing) {\n        await new Promise((r) => setTimeout(r, 500));\n      }\n    }\n\n    const index = this.getIndexForSearch();\n    if (index == null) {\n      // Fall back to basic search if index is not available\n      return this.searchCiphersBasic(ciphers, query);\n    }\n\n    const ciphersMap = new Map<string, CipherView>();\n    ciphers.forEach((c) => ciphersMap.set(c.id, c));\n\n    let searchResults: lunr.Index.Result[] = null;\n    const isQueryString = query != null && query.length > 1 && query.indexOf(\">\") === 0;\n    if (isQueryString) {\n      try {\n        searchResults = index.search(query.substr(1).trim());\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      const soWild = lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING;\n      searchResults = index.query((q) => {\n        lunr.tokenizer(query).forEach((token) => {\n          const t = token.toString();\n          q.term(t, { fields: [\"name\"], wildcard: soWild });\n          q.term(t, { fields: [\"subtitle\"], wildcard: soWild });\n          q.term(t, { fields: [\"login.uris\"], wildcard: soWild });\n          q.term(t, {});\n        });\n      });\n    }\n\n    if (searchResults != null) {\n      searchResults.forEach((r) => {\n        if (ciphersMap.has(r.ref)) {\n          results.push(ciphersMap.get(r.ref));\n        }\n      });\n    }\n    return results;\n  }\n\n  searchCiphersBasic(ciphers: CipherView[], query: string, deleted = false) {\n    query = SearchService.normalizeSearchQuery(query.trim().toLowerCase());\n    return ciphers.filter((c) => {\n      if (deleted !== c.isDeleted) {\n        return false;\n      }\n      if (c.name != null && c.name.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (query.length >= 8 && c.id.startsWith(query)) {\n        return true;\n      }\n      if (c.subTitle != null && c.subTitle.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (\n        c.login &&\n        c.login.hasUris &&\n        c.login.uris.some((loginUri) => loginUri?.uri?.toLowerCase().indexOf(query) > -1)\n      ) {\n        return true;\n      }\n      return false;\n    });\n  }\n\n  searchSends(sends: SendView[], query: string) {\n    query = SearchService.normalizeSearchQuery(query.trim().toLocaleLowerCase());\n    if (query === null) {\n      return sends;\n    }\n    const sendsMatched: SendView[] = [];\n    const lowPriorityMatched: SendView[] = [];\n    sends.forEach((s) => {\n      if (s.name != null && s.name.toLowerCase().indexOf(query) > -1) {\n        sendsMatched.push(s);\n      } else if (\n        query.length >= 8 &&\n        (s.id.startsWith(query) ||\n          s.accessId.toLocaleLowerCase().startsWith(query) ||\n          (s.file?.id != null && s.file.id.startsWith(query)))\n      ) {\n        lowPriorityMatched.push(s);\n      } else if (s.notes != null && s.notes.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      } else if (s.text?.text != null && s.text.text.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      } else if (s.file?.fileName != null && s.file.fileName.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      }\n    });\n    return sendsMatched.concat(lowPriorityMatched);\n  }\n\n  getIndexForSearch(): lunr.Index {\n    return this.index;\n  }\n\n  private fieldExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasFields) {\n      return null;\n    }\n    let fields: string[] = [];\n    c.fields.forEach((f) => {\n      if (f.name != null) {\n        fields.push(f.name);\n      }\n      if (f.type === FieldType.Text && f.value != null) {\n        fields.push(f.value);\n      }\n    });\n    fields = fields.filter((f) => f.trim() !== \"\");\n    if (fields.length === 0) {\n      return null;\n    }\n    return joined ? fields.join(\" \") : fields;\n  }\n\n  private attachmentExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasAttachments) {\n      return null;\n    }\n    let attachments: string[] = [];\n    c.attachments.forEach((a) => {\n      if (a != null && a.fileName != null) {\n        if (joined && a.fileName.indexOf(\".\") > -1) {\n          attachments.push(a.fileName.substr(0, a.fileName.lastIndexOf(\".\")));\n        } else {\n          attachments.push(a.fileName);\n        }\n      }\n    });\n    attachments = attachments.filter((f) => f.trim() !== \"\");\n    if (attachments.length === 0) {\n      return null;\n    }\n    return joined ? attachments.join(\" \") : attachments;\n  }\n\n  private uriExtractor(c: CipherView) {\n    if (c.type !== CipherType.Login || c.login == null || !c.login.hasUris) {\n      return null;\n    }\n    const uris: string[] = [];\n    c.login.uris.forEach((u) => {\n      if (u.uri == null || u.uri === \"\") {\n        return;\n      }\n      if (u.hostname != null) {\n        uris.push(u.hostname);\n        return;\n      }\n      let uri = u.uri;\n      if (u.match !== UriMatchType.RegularExpression) {\n        const protocolIndex = uri.indexOf(\"://\");\n        if (protocolIndex > -1) {\n          uri = uri.substr(protocolIndex + 3);\n        }\n        const queryIndex = uri.search(/\\?|&|#/);\n        if (queryIndex > -1) {\n          uri = uri.substring(0, queryIndex);\n        }\n      }\n      uris.push(uri);\n    });\n    return uris.length > 0 ? uris : null;\n  }\n\n  private normalizeAccentsPipelineFunction(token: lunr.Token): any {\n    const searchableFields = [\"name\", \"login.username\", \"subtitle\", \"notes\"];\n    const fields = (token as any).metadata[\"fields\"];\n    const checkFields = fields.every((i: any) => searchableFields.includes(i));\n\n    if (checkFields) {\n      return SearchService.normalizeSearchQuery(token.toString());\n    }\n\n    return token;\n  }\n\n  // Remove accents/diacritics characters from text. This regex is equivalent to the Diacritic unicode property escape, i.e. it will match all diacritic characters.\n  static normalizeSearchQuery(query: string): string {\n    return query?.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n  }\n}\n","import { SendFileApi } from \"../api/sendFileApi\";\n\nexport class SendFileData {\n  id: string;\n  fileName: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data?: SendFileApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.id = data.id;\n    this.fileName = data.fileName;\n    this.size = data.size;\n    this.sizeName = data.sizeName;\n  }\n}\n","import { SendTextApi } from \"../api/sendTextApi\";\n\nexport class SendTextData {\n  text: string;\n  hidden: boolean;\n\n  constructor(data?: SendTextApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.text = data.text;\n    this.hidden = data.hidden;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendResponse } from \"../response/sendResponse\";\n\nimport { SendFileData } from \"./sendFileData\";\nimport { SendTextData } from \"./sendTextData\";\n\nexport class SendData {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileData;\n  text: SendTextData;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(response?: SendResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.accessId = response.accessId;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.key = response.key;\n    this.maxAccessCount = response.maxAccessCount;\n    this.accessCount = response.accessCount;\n    this.revisionDate = response.revisionDate;\n    this.expirationDate = response.expirationDate;\n    this.deletionDate = response.deletionDate;\n    this.password = response.password;\n    this.disabled = response.disable;\n    this.hideEmail = response.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextData(response.text);\n        break;\n      case SendType.File:\n        this.file = new SendFileData(response.file);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { SendFileData } from \"../data/sendFileData\";\nimport { SendFileView } from \"../view/sendFileView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SendFile extends Domain {\n  id: string;\n  size: string;\n  sizeName: string;\n  fileName: EncString;\n\n  constructor(obj?: SendFileData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        sizeName: null,\n        fileName: null,\n      },\n      [\"id\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(key: SymmetricCryptoKey): Promise<SendFileView> {\n    const view = await this.decryptObj(\n      new SendFileView(this),\n      {\n        fileName: null,\n      },\n      null,\n      key\n    );\n    return view;\n  }\n}\n","import { SendTextData } from \"../data/sendTextData\";\nimport { SendTextView } from \"../view/sendTextView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SendText extends Domain {\n  text: EncString;\n  hidden: boolean;\n\n  constructor(obj?: SendTextData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.hidden = obj.hidden;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        text: null,\n      },\n      []\n    );\n  }\n\n  decrypt(key: SymmetricCryptoKey): Promise<SendTextView> {\n    return this.decryptObj(\n      new SendTextView(this),\n      {\n        text: null,\n      },\n      null,\n      key\n    );\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { SendData } from \"../data/sendData\";\nimport { SendView } from \"../view/sendView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SendFile } from \"./sendFile\";\nimport { SendText } from \"./sendText\";\n\nexport class Send extends Domain {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: EncString;\n  notes: EncString;\n  file: SendFile;\n  text: SendText;\n  key: EncString;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: Date;\n  expirationDate: Date;\n  deletionDate: Date;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(obj?: SendData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        accessId: null,\n        name: null,\n        notes: null,\n        key: null,\n      },\n      [\"id\", \"accessId\"]\n    );\n\n    this.type = obj.type;\n    this.maxAccessCount = obj.maxAccessCount;\n    this.accessCount = obj.accessCount;\n    this.password = obj.password;\n    this.disabled = obj.disabled;\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.deletionDate = obj.deletionDate != null ? new Date(obj.deletionDate) : null;\n    this.expirationDate = obj.expirationDate != null ? new Date(obj.expirationDate) : null;\n    this.hideEmail = obj.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendText(obj.text);\n        break;\n      case SendType.File:\n        this.file = new SendFile(obj.file);\n        break;\n      default:\n        break;\n    }\n  }\n\n  async decrypt(): Promise<SendView> {\n    const model = new SendView(this);\n\n    let cryptoService: CryptoService;\n    const containerService = (Utils.global as any).bitwardenContainerService;\n    if (containerService) {\n      cryptoService = containerService.getCryptoService();\n    } else {\n      throw new Error(\"global bitwardenContainerService not initialized.\");\n    }\n\n    try {\n      model.key = await cryptoService.decryptToBytes(this.key, null);\n      model.cryptoKey = await cryptoService.makeSendKey(model.key);\n    } catch (e) {\n      // TODO: error?\n    }\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      null,\n      model.cryptoKey\n    );\n\n    switch (this.type) {\n      case SendType.File:\n        model.file = await this.file.decrypt(model.cryptoKey);\n        break;\n      case SendType.Text:\n        model.text = await this.text.decrypt(model.cryptoKey);\n        break;\n      default:\n        break;\n    }\n\n    return model;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\nimport { Send } from \"../domain/send\";\n\nexport class SendRequest {\n  type: SendType;\n  fileLength?: number;\n  name: string;\n  notes: string;\n  key: string;\n  maxAccessCount?: number;\n  expirationDate: string;\n  deletionDate: string;\n  text: SendTextApi;\n  file: SendFileApi;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(send: Send, fileLength?: number) {\n    this.type = send.type;\n    this.fileLength = fileLength;\n    this.name = send.name ? send.name.encryptedString : null;\n    this.notes = send.notes ? send.notes.encryptedString : null;\n    this.maxAccessCount = send.maxAccessCount;\n    this.expirationDate = send.expirationDate != null ? send.expirationDate.toISOString() : null;\n    this.deletionDate = send.deletionDate != null ? send.deletionDate.toISOString() : null;\n    this.key = send.key != null ? send.key.encryptedString : null;\n    this.password = send.password;\n    this.disabled = send.disabled;\n    this.hideEmail = send.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextApi();\n        this.text.text = send.text.text != null ? send.text.text.encryptedString : null;\n        this.text.hidden = send.text.hidden;\n        break;\n      case SendType.File:\n        this.file = new SendFileApi();\n        this.file.fileName = send.file.fileName != null ? send.file.fileName.encryptedString : null;\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { SendService as SendServiceAbstraction } from \"../abstractions/send.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SEND_KDF_ITERATIONS } from \"../enums/kdfType\";\nimport { SendType } from \"../enums/sendType\";\nimport { Utils } from \"../misc/utils\";\nimport { SendData } from \"../models/data/sendData\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { Send } from \"../models/domain/send\";\nimport { SendFile } from \"../models/domain/sendFile\";\nimport { SendText } from \"../models/domain/sendText\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport class SendService implements SendServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setDecryptedSends(null);\n  }\n\n  async encrypt(\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ): Promise<[Send, EncArrayBuffer]> {\n    let fileData: EncArrayBuffer = null;\n    const send = new Send();\n    send.id = model.id;\n    send.type = model.type;\n    send.disabled = model.disabled;\n    send.hideEmail = model.hideEmail;\n    send.maxAccessCount = model.maxAccessCount;\n    if (model.key == null) {\n      model.key = await this.cryptoFunctionService.randomBytes(16);\n      model.cryptoKey = await this.cryptoService.makeSendKey(model.key);\n    }\n    if (password != null) {\n      const passwordHash = await this.cryptoFunctionService.pbkdf2(\n        password,\n        model.key,\n        \"sha256\",\n        SEND_KDF_ITERATIONS\n      );\n      send.password = Utils.fromBufferToB64(passwordHash);\n    }\n    send.key = await this.cryptoService.encrypt(model.key, key);\n    send.name = await this.cryptoService.encrypt(model.name, model.cryptoKey);\n    send.notes = await this.cryptoService.encrypt(model.notes, model.cryptoKey);\n    if (send.type === SendType.Text) {\n      send.text = new SendText();\n      send.text.text = await this.cryptoService.encrypt(model.text.text, model.cryptoKey);\n      send.text.hidden = model.text.hidden;\n    } else if (send.type === SendType.File) {\n      send.file = new SendFile();\n      if (file != null) {\n        if (file instanceof ArrayBuffer) {\n          const [name, data] = await this.encryptFileData(\n            model.file.fileName,\n            file,\n            model.cryptoKey\n          );\n          send.file.fileName = name;\n          fileData = data;\n        } else {\n          fileData = await this.parseFile(send, file, model.cryptoKey);\n        }\n      }\n    }\n\n    return [send, fileData];\n  }\n\n  async get(id: string): Promise<Send> {\n    const sends = await this.stateService.getEncryptedSends();\n    // eslint-disable-next-line\n    if (sends == null || !sends.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Send(sends[id]);\n  }\n\n  async getAll(): Promise<Send[]> {\n    const sends = await this.stateService.getEncryptedSends();\n    const response: Send[] = [];\n    for (const id in sends) {\n      // eslint-disable-next-line\n      if (sends.hasOwnProperty(id)) {\n        response.push(new Send(sends[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<SendView[]> {\n    let decSends = await this.stateService.getDecryptedSends();\n    if (decSends != null) {\n      return decSends;\n    }\n\n    decSends = [];\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const promises: Promise<any>[] = [];\n    const sends = await this.getAll();\n    sends.forEach((send) => {\n      promises.push(send.decrypt().then((f) => decSends.push(f)));\n    });\n\n    await Promise.all(promises);\n    decSends.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    await this.stateService.setDecryptedSends(decSends);\n    return decSends;\n  }\n\n  async saveWithServer(sendData: [Send, EncArrayBuffer]): Promise<any> {\n    const request = new SendRequest(sendData[0], sendData[1]?.buffer.byteLength);\n    let response: SendResponse;\n    if (sendData[0].id == null) {\n      if (sendData[0].type === SendType.Text) {\n        response = await this.apiService.postSend(request);\n      } else {\n        try {\n          const uploadDataResponse = await this.apiService.postFileTypeSend(request);\n          response = uploadDataResponse.sendResponse;\n\n          await this.fileUploadService.uploadSendFile(\n            uploadDataResponse,\n            sendData[0].file.fileName,\n            sendData[1]\n          );\n        } catch (e) {\n          if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n            response = await this.legacyServerSendFileUpload(sendData, request);\n          } else if (e instanceof ErrorResponse) {\n            throw new Error((e as ErrorResponse).getSingleMessage());\n          } else {\n            throw e;\n          }\n        }\n      }\n      sendData[0].id = response.id;\n      sendData[0].accessId = response.accessId;\n    } else {\n      response = await this.apiService.putSend(sendData[0].id, request);\n    }\n\n    const data = new SendData(response);\n    await this.upsert(data);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerSendFileUpload(\n    sendData: [Send, EncArrayBuffer],\n    request: SendRequest\n  ): Promise<SendResponse> {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([sendData[1].buffer], { type: \"application/octet-stream\" });\n      fd.append(\"model\", JSON.stringify(request));\n      fd.append(\"data\", blob, sendData[0].file.fileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"model\", JSON.stringify(request));\n        fd.append(\n          \"data\",\n          Buffer.from(sendData[1].buffer) as any,\n          {\n            filepath: sendData[0].file.fileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n    return await this.apiService.postSendFileLegacy(fd);\n  }\n\n  async upsert(send: SendData | SendData[]): Promise<any> {\n    let sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      sends = {};\n    }\n\n    if (send instanceof SendData) {\n      const s = send as SendData;\n      sends[s.id] = s;\n    } else {\n      (send as SendData[]).forEach((s) => {\n        sends[s.id] = s;\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async replace(sends: { [id: string]: SendData }): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(sends);\n  }\n\n  async clear(): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(null);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (sends[id] == null) {\n        return;\n      }\n      delete sends[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete sends[i];\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteSend(id);\n    await this.delete(id);\n  }\n\n  async removePasswordWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putSendRemovePassword(id);\n    const data = new SendData(response);\n    await this.upsert(data);\n  }\n\n  private parseFile(send: Send, file: File, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(file);\n      reader.onload = async (evt) => {\n        try {\n          const [name, data] = await this.encryptFileData(\n            file.name,\n            evt.target.result as ArrayBuffer,\n            key\n          );\n          send.file.fileName = name;\n          resolve(data);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  private async encryptFileData(\n    fileName: string,\n    data: ArrayBuffer,\n    key: SymmetricCryptoKey\n  ): Promise<[EncString, EncArrayBuffer]> {\n    const encFileName = await this.cryptoService.encrypt(fileName, key);\n    const encFileData = await this.cryptoService.encryptToBytes(data, key);\n    return [encFileName, encFileData];\n  }\n}\n","import { SettingsService as SettingsServiceAbstraction } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nconst Keys = {\n  settingsPrefix: \"settings_\",\n  equivalentDomains: \"equivalentDomains\",\n};\n\nexport class SettingsService implements SettingsServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setSettings(null);\n  }\n\n  getEquivalentDomains(): Promise<any> {\n    return this.getSettingsKey(Keys.equivalentDomains);\n  }\n\n  async setEquivalentDomains(equivalentDomains: string[][]): Promise<void> {\n    await this.setSettingsKey(Keys.equivalentDomains, equivalentDomains);\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setSettings(null, { userId: userId });\n  }\n\n  // Helpers\n\n  private async getSettings(): Promise<any> {\n    const settings = await this.stateService.getSettings();\n    if (settings == null) {\n      // eslint-disable-next-line\n      const userId = await this.stateService.getUserId();\n    }\n    return settings;\n  }\n\n  private async getSettingsKey(key: string): Promise<any> {\n    const settings = await this.getSettings();\n    if (settings != null && settings[key]) {\n      return settings[key];\n    }\n    return null;\n  }\n\n  private async setSettingsKey(key: string, value: any): Promise<void> {\n    let settings = await this.getSettings();\n    if (!settings) {\n      settings = {};\n    }\n\n    settings[key] = value;\n    await this.stateService.setSettings(settings);\n  }\n}\n","export enum StorageLocation {\n  Both = \"both\",\n  Disk = \"disk\",\n  Memory = \"memory\",\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProfileProviderResponse } from \"../response/profileProviderResponse\";\n\nexport class ProviderData {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: ProfileProviderResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.userId = response.userId;\n    this.useEvents = response.useEvents;\n  }\n}\n","import { Account } from \"./account\";\nimport { GlobalState } from \"./globalState\";\n\nexport class State<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  accounts: { [userId: string]: TAccount } = {};\n  globals: TGlobalState;\n  activeUserId: string;\n  authenticatedAccounts: string[] = [];\n  accountActivity: { [userId: string]: number } = {};\n\n  constructor(globals: TGlobalState) {\n    this.globals = globals;\n  }\n}\n","import { BehaviorSubject } from \"rxjs\";\n\nimport { LogService } from \"../abstractions/log.service\";\nimport { StateService as StateServiceAbstraction } from \"../abstractions/state.service\";\nimport { StateMigrationService } from \"../abstractions/stateMigration.service\";\nimport { AbstractStorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StorageLocation } from \"../enums/storageLocation\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encryptedOrganizationKeyData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { Account, AccountData, AccountSettings } from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/encString\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { GlobalState } from \"../models/domain/globalState\";\nimport { Policy } from \"../models/domain/policy\";\nimport { State } from \"../models/domain/state\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { WindowState } from \"../models/domain/windowState\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { SendView } from \"../models/view/sendView\";\n\nconst keys = {\n  state: \"state\",\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nexport class StateService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> implements StateServiceAbstraction<TAccount>\n{\n  accounts = new BehaviorSubject<{ [userId: string]: TAccount }>({});\n  private activeAccountSubject = new BehaviorSubject<string>(null);\n  activeAccount$ = this.activeAccountSubject.asObservable();\n\n  private activeAccountUnlockedSubject = new BehaviorSubject<boolean>(false);\n  activeAccountUnlocked$ = this.activeAccountUnlockedSubject.asObservable();\n\n  private hasBeenInited = false;\n  private isRecoveredSession = false;\n\n  private accountDiskCache = new Map<string, TAccount>();\n\n  constructor(\n    protected storageService: AbstractStorageService,\n    protected secureStorageService: AbstractStorageService,\n    protected memoryStorageService: AbstractStorageService,\n    protected logService: LogService,\n    protected stateMigrationService: StateMigrationService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>,\n    protected useAccountCache: boolean = true\n  ) {\n    // If the account gets changed, verify the new account is unlocked\n    this.activeAccountSubject.subscribe(async (userId) => {\n      if (userId == null && this.activeAccountUnlockedSubject.getValue() == false) {\n        return;\n      } else if (userId == null) {\n        this.activeAccountUnlockedSubject.next(false);\n      }\n\n      // FIXME: This should be refactored into AuthService or a similar service,\n      //  as checking for the existance of the crypto key is a low level\n      //  implementation detail.\n      this.activeAccountUnlockedSubject.next((await this.getCryptoMasterKey()) != null);\n    });\n  }\n\n  async init(): Promise<void> {\n    if (this.hasBeenInited) {\n      return;\n    }\n\n    if (await this.stateMigrationService.needsMigration()) {\n      await this.stateMigrationService.migrate();\n    }\n\n    await this.state().then(async (state) => {\n      if (state == null) {\n        await this.setState(new State<TGlobalState, TAccount>(this.createGlobals()));\n      } else {\n        this.isRecoveredSession = true;\n      }\n    });\n    await this.initAccountState();\n    this.hasBeenInited = true;\n  }\n\n  async initAccountState() {\n    if (this.isRecoveredSession) {\n      return;\n    }\n\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts =\n        (await this.storageService.get<string[]>(keys.authenticatedAccounts)) ?? [];\n      for (const i in state.authenticatedAccounts) {\n        if (i != null) {\n          await this.syncAccountFromDisk(state.authenticatedAccounts[i]);\n        }\n      }\n      const storedActiveUser = await this.storageService.get<string>(keys.activeUserId);\n      if (storedActiveUser != null) {\n        state.activeUserId = storedActiveUser;\n      }\n      await this.pushAccounts();\n      this.activeAccountSubject.next(state.activeUserId);\n\n      return state;\n    });\n  }\n\n  async syncAccountFromDisk(userId: string) {\n    if (userId == null) {\n      return;\n    }\n    await this.updateState(async (state) => {\n      state.accounts[userId] = this.createAccount();\n      const diskAccount = await this.getAccountFromDisk({ userId: userId });\n      state.accounts[userId].profile = diskAccount.profile;\n      return state;\n    });\n  }\n\n  async addAccount(account: TAccount) {\n    account = await this.setAccountEnvironmentUrls(account);\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts.push(account.profile.userId);\n      await this.storageService.save(keys.authenticatedAccounts, state.authenticatedAccounts);\n      state.accounts[account.profile.userId] = account;\n      return state;\n    });\n    await this.scaffoldNewAccountStorage(account);\n    await this.setLastActive(new Date().getTime(), { userId: account.profile.userId });\n    await this.setActiveUser(account.profile.userId);\n    this.activeAccountSubject.next(account.profile.userId);\n  }\n\n  async setActiveUser(userId: string): Promise<void> {\n    this.clearDecryptedDataForActiveUser();\n    await this.updateState(async (state) => {\n      state.activeUserId = userId;\n      await this.storageService.save(keys.activeUserId, userId);\n      this.activeAccountSubject.next(state.activeUserId);\n      return state;\n    });\n\n    await this.pushAccounts();\n  }\n\n  async clean(options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    await this.deAuthenticateAccount(options.userId);\n    if (options.userId === (await this.state())?.activeUserId) {\n      await this.dynamicallySetActiveUser();\n    }\n\n    await this.removeAccountFromDisk(options?.userId);\n    this.removeAccountFromMemory(options?.userId);\n    await this.pushAccounts();\n  }\n\n  async getAccessToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.accessToken;\n  }\n\n  async setAccessToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.accessToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAddEditCipherInfo(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.addEditCipherInfo;\n  }\n\n  async setAddEditCipherInfo(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.addEditCipherInfo = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getAlwaysShowDock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.alwaysShowDock ?? false\n    );\n  }\n\n  async setAlwaysShowDock(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.alwaysShowDock = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getApiKeyClientId(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.profile?.apiKeyClientId;\n  }\n\n  async setApiKeyClientId(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.profile.apiKeyClientId = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getApiKeyClientSecret(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.keys?.apiKeyClientSecret;\n  }\n\n  async setApiKeyClientSecret(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.keys.apiKeyClientSecret = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAutoConfirmFingerPrints(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoConfirmFingerPrints ?? false\n    );\n  }\n\n  async setAutoConfirmFingerprints(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoConfirmFingerPrints = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getAutoFillOnPageLoadDefault(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoFillOnPageLoadDefault ?? true\n    );\n  }\n\n  async setAutoFillOnPageLoadDefault(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoFillOnPageLoadDefault = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricAwaitingAcceptance(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricAwaitingAcceptance ?? false\n    );\n  }\n\n  async setBiometricAwaitingAcceptance(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricAwaitingAcceptance = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricFingerprintValidated(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricFingerprintValidated ?? false\n    );\n  }\n\n  async setBiometricFingerprintValidated(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricFingerprintValidated = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.biometricText;\n  }\n\n  async setBiometricText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricUnlock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.biometricUnlock ?? false\n    );\n  }\n\n  async setBiometricUnlock(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.biometricUnlock = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getCanAccessPremium(options?: StorageOptions): Promise<boolean> {\n    if (!(await this.getIsAuthenticated(options))) {\n      return false;\n    }\n\n    return (\n      (await this.getHasPremiumPersonally(options)) ||\n      (await this.getHasPremiumFromOrganization(options))\n    );\n  }\n\n  async getHasPremiumPersonally(options?: StorageOptions): Promise<boolean> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    return account?.profile?.hasPremiumPersonally;\n  }\n\n  async setHasPremiumPersonally(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.hasPremiumPersonally = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getHasPremiumFromOrganization(options?: StorageOptions): Promise<boolean> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n\n    if (account.profile?.hasPremiumFromOrganization) {\n      return true;\n    }\n\n    // TODO: older server versions won't send the hasPremiumFromOrganization flag, so we're keeping the old logic\n    // for backwards compatibility. It can be removed after everyone has upgraded.\n    const organizations = await this.getOrganizations(options);\n    if (organizations == null) {\n      return false;\n    }\n\n    for (const id of Object.keys(organizations)) {\n      const o = organizations[id];\n      if (o.enabled && o.usersGetPremium && !o.isProviderUser) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  async setHasPremiumFromOrganization(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.hasPremiumFromOrganization = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getClearClipboard(options?: StorageOptions): Promise<number> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.clearClipboard ?? null\n    );\n  }\n\n  async setClearClipboard(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.clearClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getCollapsedGroupings(options?: StorageOptions): Promise<string[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.collapsedGroupings;\n  }\n\n  async setCollapsedGroupings(value: string[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.collapsedGroupings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getConvertAccountToKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.convertAccountToKeyConnector;\n  }\n\n  async setConvertAccountToKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.convertAccountToKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototype(SymmetricCryptoKey, SymmetricCryptoKey.fromJSON)\n  async getCryptoMasterKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys?.cryptoMasterKey;\n  }\n\n  async setCryptoMasterKey(value: SymmetricCryptoKey, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.cryptoMasterKey = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n\n    if (options.userId == this.activeAccountSubject.getValue()) {\n      const nextValue = value != null;\n\n      // Avoid emitting if we are already unlocked\n      if (this.activeAccountUnlockedSubject.getValue() != nextValue) {\n        this.activeAccountUnlockedSubject.next(nextValue);\n      }\n    }\n  }\n\n  async getCryptoMasterKeyAuto(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options.userId}${partialKeys.autoKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyAuto(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.autoKey, value, options);\n  }\n\n  async getCryptoMasterKeyB64(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options?.userId}${partialKeys.masterKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyB64(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.masterKey, value, options);\n  }\n\n  async getCryptoMasterKeyBiometric(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async hasCryptoMasterKeyBiometric(options?: StorageOptions): Promise<boolean> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return false;\n    }\n    return await this.secureStorageService.has(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyBiometric(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.biometricKey, value, options);\n  }\n\n  async getDecodedToken(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.tokens?.decodedToken;\n  }\n\n  async setDecodedToken(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.tokens.decodedToken = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(CipherView, CipherView.fromJSON)\n  async getDecryptedCiphers(options?: StorageOptions): Promise<CipherView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.ciphers?.decrypted;\n  }\n\n  async setDecryptedCiphers(value: CipherView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.ciphers.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(CollectionView)\n  async getDecryptedCollections(options?: StorageOptions): Promise<CollectionView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.collections?.decrypted;\n  }\n\n  async setDecryptedCollections(value: CollectionView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.collections.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototype(SymmetricCryptoKey, SymmetricCryptoKey.fromJSON)\n  async getDecryptedCryptoSymmetricKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys?.cryptoSymmetricKey?.decrypted;\n  }\n\n  async setDecryptedCryptoSymmetricKey(\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.cryptoSymmetricKey.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForMap(SymmetricCryptoKey, SymmetricCryptoKey.fromJSON)\n  async getDecryptedOrganizationKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    return account?.keys?.organizationKeys?.decrypted;\n  }\n\n  async setDecryptedOrganizationKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.organizationKeys.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(GeneratedPasswordHistory)\n  async getDecryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.passwordGenerationHistory?.decrypted;\n  }\n\n  async setDecryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.passwordGenerationHistory.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototype(EncString)\n  async getDecryptedPinProtected(options?: StorageOptions): Promise<EncString> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.settings?.pinProtected?.decrypted;\n  }\n\n  async setDecryptedPinProtected(value: EncString, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.settings.pinProtected.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(Policy)\n  async getDecryptedPolicies(options?: StorageOptions): Promise<Policy[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.policies?.decrypted;\n  }\n\n  async setDecryptedPolicies(value: Policy[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.policies.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedPrivateKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    const privateKey = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys?.privateKey;\n    let result = privateKey?.decrypted;\n    if (result == null && privateKey?.decryptedSerialized != null) {\n      result = Utils.fromByteStringToArray(privateKey.decryptedSerialized);\n    }\n    return result;\n  }\n\n  async setDecryptedPrivateKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.privateKey.decrypted = value;\n    account.keys.privateKey.decryptedSerialized =\n      value == null ? null : Utils.fromBufferToByteString(value);\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForMap(SymmetricCryptoKey, SymmetricCryptoKey.fromJSON)\n  async getDecryptedProviderKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys?.providerKeys?.decrypted;\n  }\n\n  async setDecryptedProviderKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.providerKeys.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(SendView)\n  async getDecryptedSends(options?: StorageOptions): Promise<SendView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.sends?.decrypted;\n  }\n\n  async setDecryptedSends(value: SendView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.sends.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDefaultUriMatch(options?: StorageOptions): Promise<UriMatchType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.defaultUriMatch;\n  }\n\n  async setDefaultUriMatch(value: UriMatchType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.defaultUriMatch = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAddLoginNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAddLoginNotification ?? false\n    );\n  }\n\n  async setDisableAddLoginNotification(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAddLoginNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoBiometricsPrompt(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoBiometricsPrompt ?? false\n    );\n  }\n\n  async setDisableAutoBiometricsPrompt(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoBiometricsPrompt = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoTotpCopy(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoTotpCopy ?? false\n    );\n  }\n\n  async setDisableAutoTotpCopy(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoTotpCopy = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableBadgeCounter(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableBadgeCounter ?? false\n    );\n  }\n\n  async setDisableBadgeCounter(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableBadgeCounter = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableChangedPasswordNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableChangedPasswordNotification ?? false\n    );\n  }\n\n  async setDisableChangedPasswordNotification(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableChangedPasswordNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableContextMenuItem(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableContextMenuItem ?? false\n    );\n  }\n\n  async setDisableContextMenuItem(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableContextMenuItem = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableFavicon(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getGlobals(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.disableFavicon ?? false\n    );\n  }\n\n  async setDisableFavicon(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.disableFavicon = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getDisableGa(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableGa ?? false\n    );\n  }\n\n  async setDisableGa(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableGa = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowCardsCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowCardsCurrentTab ?? false\n    );\n  }\n\n  async setDontShowCardsCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowCardsCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowIdentitiesCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowIdentitiesCurrentTab ?? false\n    );\n  }\n\n  async setDontShowIdentitiesCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowIdentitiesCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEmail(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.profile?.email;\n  }\n\n  async setEmail(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.email = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getEmailVerified(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.profile.emailVerified ?? false\n    );\n  }\n\n  async setEmailVerified(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.emailVerified = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAlwaysOnTop(options?: StorageOptions): Promise<boolean> {\n    const accountPreference = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.enableAlwaysOnTop;\n    const globalPreference = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.enableAlwaysOnTop;\n    return accountPreference ?? globalPreference ?? false;\n  }\n\n  async setEnableAlwaysOnTop(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAlwaysOnTop = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableAlwaysOnTop = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAutoFillOnPageLoad(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.enableAutoFillOnPageLoad ?? false\n    );\n  }\n\n  async setEnableAutoFillOnPageLoad(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAutoFillOnPageLoad = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBiometric(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBiometrics ?? false\n    );\n  }\n\n  async setEnableBiometric(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegration(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegration ?? false\n    );\n  }\n\n  async setEnableBrowserIntegration(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegration = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegrationFingerprint(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegrationFingerprint ?? false\n    );\n  }\n\n  async setEnableBrowserIntegrationFingerprint(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegrationFingerprint = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableCloseToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableCloseToTray ?? false\n    );\n  }\n\n  async setEnableCloseToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableCloseToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableFullWidth(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.enableFullWidth ?? false\n    );\n  }\n\n  async setEnableFullWidth(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.enableFullWidth = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnableGravitars(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.enableGravitars ?? false\n    );\n  }\n\n  async setEnableGravitars(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.enableGravitars = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnableMinimizeToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableMinimizeToTray ?? false\n    );\n  }\n\n  async setEnableMinimizeToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableMinimizeToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableStartToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableStartToTray ?? false\n    );\n  }\n\n  async setEnableStartToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableStartToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableTray ?? false\n    );\n  }\n\n  async setEnableTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(CipherData)\n  async getEncryptedCiphers(options?: StorageOptions): Promise<{ [id: string]: CipherData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.ciphers?.encrypted;\n  }\n\n  async setEncryptedCiphers(\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.ciphers.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(CollectionData)\n  async getEncryptedCollections(\n    options?: StorageOptions\n  ): Promise<{ [id: string]: CollectionData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.collections?.encrypted;\n  }\n\n  async setEncryptedCollections(\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.collections.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedCryptoSymmetricKey(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys.cryptoSymmetricKey.encrypted;\n  }\n\n  async setEncryptedCryptoSymmetricKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.cryptoSymmetricKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(FolderData)\n  async getEncryptedFolders(options?: StorageOptions): Promise<{ [id: string]: FolderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.folders?.encrypted;\n  }\n\n  async setEncryptedFolders(\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.folders.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedOrganizationKeys(\n    options?: StorageOptions\n  ): Promise<{ [orgId: string]: EncryptedOrganizationKeyData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.organizationKeys.encrypted;\n  }\n\n  async setEncryptedOrganizationKeys(\n    value: { [orgId: string]: EncryptedOrganizationKeyData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.organizationKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(GeneratedPasswordHistory)\n  async getEncryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.passwordGenerationHistory?.encrypted;\n  }\n\n  async setEncryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.passwordGenerationHistory.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPinProtected(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.pinProtected?.encrypted;\n  }\n\n  async setEncryptedPinProtected(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.pinProtected.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(PolicyData)\n  async getEncryptedPolicies(options?: StorageOptions): Promise<{ [id: string]: PolicyData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.policies?.encrypted;\n  }\n\n  async setEncryptedPolicies(\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.policies.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPrivateKey(options?: StorageOptions): Promise<string> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    return account?.keys?.privateKey?.encrypted;\n  }\n\n  async setEncryptedPrivateKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.privateKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedProviderKeys(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.providerKeys?.encrypted;\n  }\n\n  async setEncryptedProviderKeys(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.providerKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(SendData)\n  async getEncryptedSends(options?: StorageOptions): Promise<{ [id: string]: SendData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.sends.encrypted;\n  }\n\n  async setEncryptedSends(\n    value: { [id: string]: SendData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.sends.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEntityId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityId;\n  }\n\n  async setEntityId(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityId = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEntityType(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityType;\n  }\n\n  async setEntityType(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  @withPrototype(EnvironmentUrls)\n  async getEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    if ((await this.state())?.activeUserId == null) {\n      return await this.getGlobalEnvironmentUrls(options);\n    }\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getAccount(options))?.settings?.environmentUrls ?? new EnvironmentUrls();\n  }\n\n  async setEnvironmentUrls(value: EnvironmentUrls, options?: StorageOptions): Promise<void> {\n    // Global values are set on each change and the current global settings are passed to any newly authed accounts.\n    // This is to allow setting environement values before an account is active, while still allowing individual accounts to have their own environments.\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.environmentUrls = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEquivalentDomains(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.equivalentDomains;\n  }\n\n  async setEquivalentDomains(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.equivalentDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(EventData)\n  async getEventCollection(options?: StorageOptions): Promise<EventData[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.eventCollection;\n  }\n\n  async setEventCollection(value: EventData[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.eventCollection = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEverBeenUnlocked(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions())))\n        ?.profile?.everBeenUnlocked ?? false\n    );\n  }\n\n  async setEverBeenUnlocked(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.everBeenUnlocked = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getForcePasswordReset(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions())))\n        ?.profile?.forcePasswordReset ?? false\n    );\n  }\n\n  async setForcePasswordReset(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.forcePasswordReset = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getInstalledVersion(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.installedVersion;\n  }\n\n  async setInstalledVersion(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.installedVersion = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getIsAuthenticated(options?: StorageOptions): Promise<boolean> {\n    return (await this.getAccessToken(options)) != null && (await this.getUserId(options)) != null;\n  }\n\n  async getKdfIterations(options?: StorageOptions): Promise<number> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfIterations;\n  }\n\n  async setKdfIterations(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfIterations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKdfType(options?: StorageOptions): Promise<KdfType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfType;\n  }\n\n  async setKdfType(value: KdfType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKeyHash(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.keyHash;\n  }\n\n  async setKeyHash(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.keyHash = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getLastActive(options?: StorageOptions): Promise<number> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n\n    const accountActivity = await this.storageService.get<{ [userId: string]: number }>(\n      keys.accountActivity,\n      options\n    );\n\n    if (accountActivity == null || Object.keys(accountActivity).length < 1) {\n      return null;\n    }\n\n    return accountActivity[options.userId];\n  }\n\n  async setLastActive(value: number, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    if (options.userId == null) {\n      return;\n    }\n    const accountActivity =\n      (await this.storageService.get<{ [userId: string]: number }>(\n        keys.accountActivity,\n        options\n      )) ?? {};\n    accountActivity[options.userId] = value;\n    await this.storageService.save(keys.accountActivity, accountActivity, options);\n  }\n\n  async getLastSync(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.profile?.lastSync;\n  }\n\n  async setLastSync(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.profile.lastSync = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getLocalData(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.data?.localData;\n  }\n  async setLocalData(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.data.localData = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getLocale(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.locale;\n  }\n\n  async setLocale(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.locale = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getMainWindowSize(options?: StorageOptions): Promise<number> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.mainWindowSize;\n  }\n\n  async setMainWindowSize(value: number, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    globals.mainWindowSize = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getMinimizeOnCopyToClipboard(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.minimizeOnCopyToClipboard ?? false\n    );\n  }\n\n  async setMinimizeOnCopyToClipboard(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.minimizeOnCopyToClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNeverDomains(options?: StorageOptions): Promise<{ [id: string]: any }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.neverDomains;\n  }\n\n  async setNeverDomains(value: { [id: string]: any }, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.neverDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometrics(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.noAutoPromptBiometrics ?? false\n    );\n  }\n\n  async setNoAutoPromptBiometrics(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometricsText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.noAutoPromptBiometricsText;\n  }\n\n  async setNoAutoPromptBiometricsText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometricsText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOpenAtLogin(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.openAtLogin ?? false\n    );\n  }\n\n  async setOpenAtLogin(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.openAtLogin = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOrganizationInvitation(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.organizationInvitation;\n  }\n\n  async setOrganizationInvitation(value: any, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    globals.organizationInvitation = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getOrganizations(options?: StorageOptions): Promise<{ [id: string]: OrganizationData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.organizations;\n  }\n\n  async setOrganizations(\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.organizations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPasswordGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.passwordGenerationOptions;\n  }\n\n  async setPasswordGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.passwordGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getUsernameGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.usernameGenerationOptions;\n  }\n\n  async setUsernameGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.usernameGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getGeneratorOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.generatorOptions;\n  }\n\n  async setGeneratorOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.generatorOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getProtectedPin(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.protectedPin;\n  }\n\n  async setProtectedPin(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.protectedPin = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(ProviderData)\n  async getProviders(options?: StorageOptions): Promise<{ [id: string]: ProviderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.providers;\n  }\n\n  async setProviders(\n    value: { [id: string]: ProviderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.providers = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPublicKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    const keys = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys;\n    let result = keys?.publicKey;\n    if (result == null && keys?.publicKeySerialized != null) {\n      result = Utils.fromByteStringToArray(keys.publicKeySerialized);\n    }\n    return result;\n  }\n\n  async setPublicKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.publicKey = value;\n    account.keys.publicKeySerialized = value == null ? null : Utils.fromBufferToByteString(value);\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getRefreshToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.refreshToken;\n  }\n\n  async setRefreshToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.refreshToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getRememberedEmail(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.rememberedEmail;\n  }\n\n  async setRememberedEmail(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.rememberedEmail = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSecurityStamp(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.tokens?.securityStamp;\n  }\n\n  async setSecurityStamp(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.tokens.securityStamp = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getSettings(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.settings?.settings;\n  }\n\n  async setSettings(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.settings.settings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getSsoCodeVerifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoCodeVerifier;\n  }\n\n  async setSsoCodeVerifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoCodeVerifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getSsoOrgIdentifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.ssoOrganizationIdentifier;\n  }\n\n  async setSsoOrganizationIdentifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.ssoOrganizationIdentifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSsoState(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoState;\n  }\n\n  async setSsoState(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoState = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getTheme(options?: StorageOptions): Promise<ThemeType> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.theme;\n  }\n\n  async setTheme(value: ThemeType, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.theme = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getTwoFactorToken(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.twoFactorToken;\n  }\n\n  async setTwoFactorToken(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.twoFactorToken = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getUserId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.userId;\n  }\n\n  async getUsesKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.usesKeyConnector;\n  }\n\n  async setUsesKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.usesKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getVaultTimeout(options?: StorageOptions): Promise<number> {\n    const accountVaultTimeout = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeout;\n    return accountVaultTimeout;\n  }\n\n  async setVaultTimeout(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeout = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getVaultTimeoutAction(options?: StorageOptions): Promise<string> {\n    const accountVaultTimeoutAction = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeoutAction;\n    const globalVaultTimeoutAction = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.vaultTimeoutAction;\n    return accountVaultTimeoutAction ?? globalVaultTimeoutAction;\n  }\n\n  async setVaultTimeoutAction(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeoutAction = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getStateVersion(): Promise<number> {\n    return (await this.getGlobals(await this.defaultOnDiskLocalOptions())).stateVersion ?? 1;\n  }\n\n  async setStateVersion(value: number): Promise<void> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    globals.stateVersion = value;\n    await this.saveGlobals(globals, await this.defaultOnDiskOptions());\n  }\n\n  async getWindow(): Promise<WindowState> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    return globals?.window != null && Object.keys(globals.window).length > 0\n      ? globals.window\n      : new WindowState();\n  }\n\n  async setWindow(value: WindowState, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.window = value;\n    return await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  protected async getGlobals(options: StorageOptions): Promise<TGlobalState> {\n    let globals: TGlobalState;\n    if (this.useMemory(options.storageLocation)) {\n      globals = await this.getGlobalsFromMemory();\n    }\n\n    if (this.useDisk && globals == null) {\n      globals = await this.getGlobalsFromDisk(options);\n    }\n\n    return globals ?? this.createGlobals();\n  }\n\n  protected async saveGlobals(globals: TGlobalState, options: StorageOptions) {\n    return this.useMemory(options.storageLocation)\n      ? this.saveGlobalsToMemory(globals)\n      : await this.saveGlobalsToDisk(globals, options);\n  }\n\n  protected async getGlobalsFromMemory(): Promise<TGlobalState> {\n    return (await this.state()).globals;\n  }\n\n  protected async getGlobalsFromDisk(options: StorageOptions): Promise<TGlobalState> {\n    return await this.storageService.get<TGlobalState>(keys.global, options);\n  }\n\n  protected async saveGlobalsToMemory(globals: TGlobalState): Promise<void> {\n    await this.updateState(async (state) => {\n      state.globals = globals;\n      return state;\n    });\n  }\n\n  protected async saveGlobalsToDisk(globals: TGlobalState, options: StorageOptions): Promise<void> {\n    if (options.useSecureStorage) {\n      await this.secureStorageService.save(keys.global, globals, options);\n    } else {\n      await this.storageService.save(keys.global, globals, options);\n    }\n  }\n\n  protected async getAccount(options: StorageOptions): Promise<TAccount> {\n    try {\n      let account: TAccount;\n      if (this.useMemory(options.storageLocation)) {\n        account = await this.getAccountFromMemory(options);\n      }\n\n      if (this.useDisk(options.storageLocation) && account == null) {\n        account = await this.getAccountFromDisk(options);\n      }\n\n      return account;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async getAccountFromMemory(options: StorageOptions): Promise<TAccount> {\n    return await this.state().then(async (state) => {\n      if (state.accounts == null) {\n        return null;\n      }\n      return state.accounts[await this.getUserIdFromMemory(options)];\n    });\n  }\n\n  protected async getUserIdFromMemory(options: StorageOptions): Promise<string> {\n    return await this.state().then((state) => {\n      return options?.userId != null\n        ? state.accounts[options.userId]?.profile?.userId\n        : state.activeUserId;\n    });\n  }\n\n  protected async getAccountFromDisk(options: StorageOptions): Promise<TAccount> {\n    if (options?.userId == null && (await this.state())?.activeUserId == null) {\n      return null;\n    }\n\n    if (this.useAccountCache) {\n      const cachedAccount = this.accountDiskCache.get(options.userId);\n      if (cachedAccount != null) {\n        return cachedAccount;\n      }\n    }\n\n    const account = options?.useSecureStorage\n      ? (await this.secureStorageService.get<TAccount>(options.userId, options)) ??\n        (await this.storageService.get<TAccount>(\n          options.userId,\n          this.reconcileOptions(options, { htmlStorageLocation: HtmlStorageLocation.Local })\n        ))\n      : await this.storageService.get<TAccount>(options.userId, options);\n\n    if (this.useAccountCache) {\n      this.accountDiskCache.set(options.userId, account);\n    }\n    return account;\n  }\n\n  protected useMemory(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Memory || storageLocation === StorageLocation.Both;\n  }\n\n  protected useDisk(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Disk || storageLocation === StorageLocation.Both;\n  }\n\n  protected async saveAccount(\n    account: TAccount,\n    options: StorageOptions = {\n      storageLocation: StorageLocation.Both,\n      useSecureStorage: false,\n    }\n  ) {\n    return this.useMemory(options.storageLocation)\n      ? await this.saveAccountToMemory(account)\n      : await this.saveAccountToDisk(account, options);\n  }\n\n  protected async saveAccountToDisk(account: TAccount, options: StorageOptions): Promise<void> {\n    const storageLocation = options.useSecureStorage\n      ? this.secureStorageService\n      : this.storageService;\n\n    await storageLocation.save(`${options.userId}`, account, options);\n\n    if (this.useAccountCache) {\n      this.accountDiskCache.delete(options.userId);\n    }\n  }\n\n  protected async saveAccountToMemory(account: TAccount): Promise<void> {\n    if (this.getAccountFromMemory({ userId: account.profile.userId }) !== null) {\n      await this.updateState((state) => {\n        return new Promise((resolve) => {\n          state.accounts[account.profile.userId] = account;\n          resolve(state);\n        });\n      });\n    }\n    await this.pushAccounts();\n  }\n\n  protected async scaffoldNewAccountStorage(account: TAccount): Promise<void> {\n    // We don't want to manipulate the referenced in memory account\n    const deepClone = JSON.parse(JSON.stringify(account));\n    await this.scaffoldNewAccountLocalStorage(deepClone);\n    await this.scaffoldNewAccountSessionStorage(deepClone);\n    await this.scaffoldNewAccountMemoryStorage(deepClone);\n  }\n\n  // TODO: There is a tech debt item for splitting up these methods - only Web uses multiple storage locations in its storageService.\n  // For now these methods exist with some redundancy to facilitate this special web requirement.\n  protected async scaffoldNewAccountLocalStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n    // EnvironmentUrls are set before authenticating and should override whatever is stored from any previous session\n    const environmentUrls = account.settings.environmentUrls;\n    if (storedAccount?.settings != null) {\n      account.settings = storedAccount.settings;\n    } else if (await this.storageService.has(keys.tempAccountSettings)) {\n      account.settings = await this.storageService.get<AccountSettings>(keys.tempAccountSettings);\n      await this.storageService.remove(keys.tempAccountSettings);\n    }\n    account.settings.environmentUrls = environmentUrls;\n    if (account.settings.vaultTimeoutAction === \"logOut\" && account.settings.vaultTimeout != null) {\n      account.tokens.accessToken = null;\n      account.tokens.refreshToken = null;\n      account.profile.apiKeyClientId = null;\n      account.keys.apiKeyClientSecret = null;\n    }\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountMemoryStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountSessionStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n  }\n  //\n\n  protected async pushAccounts(): Promise<void> {\n    await this.pruneInMemoryAccounts();\n    await this.state().then((state) => {\n      if (state.accounts == null || Object.keys(state.accounts).length < 1) {\n        this.accounts.next(null);\n        return;\n      }\n\n      this.accounts.next(state.accounts);\n    });\n  }\n\n  protected reconcileOptions(\n    requestedOptions: StorageOptions,\n    defaultOptions: StorageOptions\n  ): StorageOptions {\n    if (requestedOptions == null) {\n      return defaultOptions;\n    }\n    requestedOptions.userId = requestedOptions?.userId ?? defaultOptions.userId;\n    requestedOptions.storageLocation =\n      requestedOptions?.storageLocation ?? defaultOptions.storageLocation;\n    requestedOptions.useSecureStorage =\n      requestedOptions?.useSecureStorage ?? defaultOptions.useSecureStorage;\n    requestedOptions.htmlStorageLocation =\n      requestedOptions?.htmlStorageLocation ?? defaultOptions.htmlStorageLocation;\n    requestedOptions.keySuffix = requestedOptions?.keySuffix ?? defaultOptions.keySuffix;\n    return requestedOptions;\n  }\n\n  protected async defaultInMemoryOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Memory,\n      userId: (await this.state()).activeUserId,\n    };\n  }\n\n  protected async defaultOnDiskOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Session,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskLocalOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Local,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskMemoryOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Memory,\n      userId: (await this.state())?.activeUserId ?? (await this.getUserId()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultSecureStorageOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      useSecureStorage: true,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n    };\n  }\n\n  protected async getActiveUserIdFromStorage(): Promise<string> {\n    return await this.storageService.get<string>(keys.activeUserId);\n  }\n\n  protected async removeAccountFromLocalStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  protected async removeAccountFromSessionStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n  }\n\n  protected async removeAccountFromSecureStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    await this.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.setCryptoMasterKeyBiometric(null, { userId: userId });\n    await this.setCryptoMasterKeyB64(null, { userId: userId });\n  }\n\n  protected async removeAccountFromMemory(userId: string = null): Promise<void> {\n    await this.updateState(async (state) => {\n      userId = userId ?? state.activeUserId;\n      delete state.accounts[userId];\n\n      if (this.useAccountCache) {\n        this.accountDiskCache.delete(userId);\n      }\n\n      return state;\n    });\n  }\n\n  protected async pruneInMemoryAccounts() {\n    // We preserve settings for logged out accounts, but we don't want to consider them when thinking about active account state\n    for (const userId in (await this.state())?.accounts) {\n      if (!(await this.getIsAuthenticated({ userId: userId }))) {\n        await this.removeAccountFromMemory(userId);\n      }\n    }\n  }\n\n  // settings persist even on reset, and are not effected by this method\n  protected resetAccount(account: TAccount) {\n    const persistentAccountInformation = { settings: account.settings };\n    return Object.assign(this.createAccount(), persistentAccountInformation);\n  }\n\n  protected async setAccountEnvironmentUrls(account: TAccount): Promise<TAccount> {\n    account.settings.environmentUrls = await this.getGlobalEnvironmentUrls();\n    return account;\n  }\n\n  protected async getGlobalEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getGlobals(options)).environmentUrls ?? new EnvironmentUrls();\n  }\n\n  protected async clearDecryptedDataForActiveUser(): Promise<void> {\n    await this.updateState(async (state) => {\n      const userId = state?.activeUserId;\n      if (userId != null && state?.accounts[userId]?.data != null) {\n        state.accounts[userId].data = new AccountData();\n      }\n\n      return state;\n    });\n  }\n\n  protected createAccount(init: Partial<TAccount> = null): TAccount {\n    return this.stateFactory.createAccount(init);\n  }\n\n  protected createGlobals(init: Partial<TGlobalState> = null): TGlobalState {\n    return this.stateFactory.createGlobal(init);\n  }\n\n  protected async deAuthenticateAccount(userId: string): Promise<void> {\n    await this.setAccessToken(null, { userId: userId });\n    await this.setLastActive(null, { userId: userId });\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts = state.authenticatedAccounts.filter((id) => id !== userId);\n\n      await this.storageService.save(keys.authenticatedAccounts, state.authenticatedAccounts);\n\n      return state;\n    });\n  }\n\n  protected async removeAccountFromDisk(userId: string) {\n    await this.removeAccountFromSessionStorage(userId);\n    await this.removeAccountFromLocalStorage(userId);\n    await this.removeAccountFromSecureStorage(userId);\n  }\n\n  protected async dynamicallySetActiveUser() {\n    const accounts = (await this.state())?.accounts;\n    if (accounts == null || Object.keys(accounts).length < 1) {\n      await this.setActiveUser(null);\n      return;\n    }\n    for (const userId in accounts) {\n      if (userId == null) {\n        continue;\n      }\n      if (await this.getIsAuthenticated({ userId: userId })) {\n        await this.setActiveUser(userId);\n        break;\n      }\n      await this.setActiveUser(null);\n    }\n  }\n\n  private async getTimeoutBasedStorageOptions(options?: StorageOptions): Promise<StorageOptions> {\n    const timeoutAction = await this.getVaultTimeoutAction({ userId: options?.userId });\n    const timeout = await this.getVaultTimeout({ userId: options?.userId });\n    const defaultOptions =\n      timeoutAction === \"logOut\" && timeout != null\n        ? await this.defaultInMemoryOptions()\n        : await this.defaultOnDiskOptions();\n    return this.reconcileOptions(options, defaultOptions);\n  }\n\n  private async saveSecureStorageKey(key: string, value: string, options?: StorageOptions) {\n    return value == null\n      ? await this.secureStorageService.remove(`${options.userId}${key}`, options)\n      : await this.secureStorageService.save(`${options.userId}${key}`, value, options);\n  }\n\n  protected state(): Promise<State<TGlobalState, TAccount>> {\n    return this.memoryStorageService.get<State<TGlobalState, TAccount>>(keys.state);\n  }\n\n  private async setState(state: State<TGlobalState, TAccount>): Promise<void> {\n    await this.memoryStorageService.save(keys.state, state);\n  }\n\n  protected async updateState(\n    stateUpdater: (state: State<TGlobalState, TAccount>) => Promise<State<TGlobalState, TAccount>>\n  ) {\n    await this.state().then(async (state) => {\n      const updatedState = await stateUpdater(state);\n      if (updatedState == null) {\n        throw new Error(\"Attempted to update state to null value\");\n      }\n\n      await this.setState(updatedState);\n    });\n  }\n}\n\nexport function withPrototype<T>(\n  constructor: new (...args: any[]) => T,\n  converter: (input: any) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<T> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<T> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          return result == null ||\n            result.constructor.name === constructor.prototype.constructor.name\n            ? converter(result as T)\n            : converter(\n                Object.create(constructor.prototype, Object.getOwnPropertyDescriptors(result)) as T\n              );\n        });\n      },\n    };\n  };\n}\n\nfunction withPrototypeForArrayMembers<T>(\n  memberConstructor: new (...args: any[]) => T,\n  memberConverter: (input: any) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<T[]> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<any[]> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          if (result == null) {\n            return null;\n          } else if (!(result instanceof Array)) {\n            throw new Error(\n              `Attempted to retrieve non array type from state as an array for method ${String(\n                propertyKey\n              )}`\n            );\n          } else {\n            return result.map((r) => {\n              return r == null ||\n                r.constructor.name === memberConstructor.prototype.constructor.name\n                ? memberConverter(r)\n                : memberConverter(\n                    Object.create(memberConstructor.prototype, Object.getOwnPropertyDescriptors(r))\n                  );\n            });\n          }\n        });\n      },\n    };\n  };\n}\n\nfunction withPrototypeForObjectValues<T>(\n  valuesConstructor: new (...args: any[]) => T,\n  valuesConverter: (input: any) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<{ [key: string]: T }> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<{ [key: string]: T }> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          if (result == null) {\n            return null;\n          } else {\n            for (const [key, val] of Object.entries(result)) {\n              result[key] =\n                val == null || val.constructor.name === valuesConstructor.prototype.constructor.name\n                  ? valuesConverter(val)\n                  : valuesConverter(\n                      Object.create(\n                        valuesConstructor.prototype,\n                        Object.getOwnPropertyDescriptors(val)\n                      )\n                    );\n            }\n\n            return result as { [key: string]: T };\n          }\n        });\n      },\n    };\n  };\n}\n\nfunction withPrototypeForMap<T>(\n  valuesConstructor: new (...args: any[]) => T,\n  valuesConverter: (input: any) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<Map<string, T>> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<any> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          if (result == null) {\n            return null;\n          } else if (result instanceof Map) {\n            return result;\n          } else {\n            for (const key in Object.keys(result)) {\n              result[key] =\n                result[key] == null ||\n                result[key].constructor.name === valuesConstructor.prototype.constructor.name\n                  ? valuesConverter(result[key])\n                  : valuesConverter(\n                      Object.create(\n                        valuesConstructor.prototype,\n                        Object.getOwnPropertyDescriptors(result[key])\n                      )\n                    );\n            }\n            return new Map<string, T>(Object.entries(result));\n          }\n        });\n      },\n    };\n  };\n}\n","import { StateService } from \"../abstractions/state.service\";\nimport { TokenService as TokenServiceAbstraction } from \"../abstractions/token.service\";\nimport { Utils } from \"../misc/utils\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport class TokenService implements TokenServiceAbstraction {\n  static decodeToken(token: string): Promise<any> {\n    if (token == null) {\n      throw new Error(\"Token not provided.\");\n    }\n\n    const parts = token.split(\".\");\n    if (parts.length !== 3) {\n      throw new Error(\"JWT must have 3 parts\");\n    }\n\n    const decoded = Utils.fromUrlB64ToUtf8(parts[1]);\n    if (decoded == null) {\n      throw new Error(\"Cannot decode the token\");\n    }\n\n    const decodedToken = JSON.parse(decoded);\n    return decodedToken;\n  }\n\n  constructor(private stateService: StateService) {}\n\n  async setTokens(\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ): Promise<any> {\n    await this.setToken(accessToken);\n    await this.setRefreshToken(refreshToken);\n    if (clientIdClientSecret != null) {\n      await this.setClientId(clientIdClientSecret[0]);\n      await this.setClientSecret(clientIdClientSecret[1]);\n    }\n  }\n\n  async setClientId(clientId: string): Promise<any> {\n    return await this.stateService.setApiKeyClientId(clientId);\n  }\n\n  async getClientId(): Promise<string> {\n    return await this.stateService.getApiKeyClientId();\n  }\n\n  async setClientSecret(clientSecret: string): Promise<any> {\n    return await this.stateService.setApiKeyClientSecret(clientSecret);\n  }\n\n  async getClientSecret(): Promise<string> {\n    return await this.stateService.getApiKeyClientSecret();\n  }\n\n  async setToken(token: string): Promise<void> {\n    await this.stateService.setAccessToken(token);\n  }\n\n  async getToken(): Promise<string> {\n    return await this.stateService.getAccessToken();\n  }\n\n  async setRefreshToken(refreshToken: string): Promise<any> {\n    return await this.stateService.setRefreshToken(refreshToken);\n  }\n\n  async getRefreshToken(): Promise<string> {\n    return await this.stateService.getRefreshToken();\n  }\n\n  async setTwoFactorToken(tokenResponse: IdentityTokenResponse): Promise<any> {\n    return await this.stateService.setTwoFactorToken(tokenResponse.twoFactorToken);\n  }\n\n  async getTwoFactorToken(): Promise<string> {\n    return await this.stateService.getTwoFactorToken();\n  }\n\n  async clearTwoFactorToken(): Promise<any> {\n    return await this.stateService.setTwoFactorToken(null);\n  }\n\n  async clearToken(userId?: string): Promise<any> {\n    await this.stateService.setAccessToken(null, { userId: userId });\n    await this.stateService.setRefreshToken(null, { userId: userId });\n    await this.stateService.setApiKeyClientId(null, { userId: userId });\n    await this.stateService.setApiKeyClientSecret(null, { userId: userId });\n  }\n\n  // jwthelper methods\n  // ref https://github.com/auth0/angular-jwt/blob/master/src/angularJwt/services/jwt.js\n\n  async decodeToken(token?: string): Promise<any> {\n    const storedToken = await this.stateService.getDecodedToken();\n    if (token === null && storedToken != null) {\n      return storedToken;\n    }\n\n    token = token ?? (await this.stateService.getAccessToken());\n\n    if (token == null) {\n      throw new Error(\"Token not found.\");\n    }\n\n    return TokenService.decodeToken(token);\n  }\n\n  async getTokenExpirationDate(): Promise<Date> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.exp === \"undefined\") {\n      return null;\n    }\n\n    const d = new Date(0); // The 0 here is the key, which sets the date to the epoch\n    d.setUTCSeconds(decoded.exp);\n    return d;\n  }\n\n  async tokenSecondsRemaining(offsetSeconds = 0): Promise<number> {\n    const d = await this.getTokenExpirationDate();\n    if (d == null) {\n      return 0;\n    }\n\n    const msRemaining = d.valueOf() - (new Date().valueOf() + offsetSeconds * 1000);\n    return Math.round(msRemaining / 1000);\n  }\n\n  async tokenNeedsRefresh(minutes = 5): Promise<boolean> {\n    const sRemaining = await this.tokenSecondsRemaining();\n    return sRemaining < 60 * minutes;\n  }\n\n  async getUserId(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.sub === \"undefined\") {\n      throw new Error(\"No user id found\");\n    }\n\n    return decoded.sub as string;\n  }\n\n  async getEmail(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email === \"undefined\") {\n      throw new Error(\"No email found\");\n    }\n\n    return decoded.email as string;\n  }\n\n  async getEmailVerified(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email_verified === \"undefined\") {\n      throw new Error(\"No email verification found\");\n    }\n\n    return decoded.email_verified as boolean;\n  }\n\n  async getName(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.name === \"undefined\") {\n      return null;\n    }\n\n    return decoded.name as string;\n  }\n\n  async getIssuer(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.iss === \"undefined\") {\n      throw new Error(\"No issuer found\");\n    }\n\n    return decoded.iss as string;\n  }\n\n  async getIsExternal(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n\n    return Array.isArray(decoded.amr) && decoded.amr.includes(\"external\");\n  }\n}\n","import { AbstractStorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StateVersion } from \"../enums/stateVersion\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { Account, AccountSettings } from \"../models/domain/account\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { GlobalState } from \"../models/domain/globalState\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\n\nimport { TokenService } from \"./token.service\";\n\n// Originally (before January 2022) storage was handled as a flat key/value pair store.\n// With the move to a typed object for state storage these keys should no longer be in use anywhere outside of this migration.\nconst v1Keys: { [key: string]: string } = {\n  accessToken: \"accessToken\",\n  alwaysShowDock: \"alwaysShowDock\",\n  autoConfirmFingerprints: \"autoConfirmFingerprints\",\n  autoFillOnPageLoadDefault: \"autoFillOnPageLoadDefault\",\n  biometricAwaitingAcceptance: \"biometricAwaitingAcceptance\",\n  biometricFingerprintValidated: \"biometricFingerprintValidated\",\n  biometricText: \"biometricText\",\n  biometricUnlock: \"biometric\",\n  clearClipboard: \"clearClipboardKey\",\n  clientId: \"apikey_clientId\",\n  clientSecret: \"apikey_clientSecret\",\n  collapsedGroupings: \"collapsedGroupings\",\n  convertAccountToKeyConnector: \"convertAccountToKeyConnector\",\n  defaultUriMatch: \"defaultUriMatch\",\n  disableAddLoginNotification: \"disableAddLoginNotification\",\n  disableAutoBiometricsPrompt: \"noAutoPromptBiometrics\",\n  disableAutoTotpCopy: \"disableAutoTotpCopy\",\n  disableBadgeCounter: \"disableBadgeCounter\",\n  disableChangedPasswordNotification: \"disableChangedPasswordNotification\",\n  disableContextMenuItem: \"disableContextMenuItem\",\n  disableFavicon: \"disableFavicon\",\n  disableGa: \"disableGa\",\n  dontShowCardsCurrentTab: \"dontShowCardsCurrentTab\",\n  dontShowIdentitiesCurrentTab: \"dontShowIdentitiesCurrentTab\",\n  emailVerified: \"emailVerified\",\n  enableAlwaysOnTop: \"enableAlwaysOnTopKey\",\n  enableAutoFillOnPageLoad: \"enableAutoFillOnPageLoad\",\n  enableBiometric: \"enabledBiometric\",\n  enableBrowserIntegration: \"enableBrowserIntegration\",\n  enableBrowserIntegrationFingerprint: \"enableBrowserIntegrationFingerprint\",\n  enableCloseToTray: \"enableCloseToTray\",\n  enableFullWidth: \"enableFullWidth\",\n  enableGravatars: \"enableGravatars\",\n  enableMinimizeToTray: \"enableMinimizeToTray\",\n  enableStartToTray: \"enableStartToTrayKey\",\n  enableTray: \"enableTray\",\n  encKey: \"encKey\", // Generated Symmetric Key\n  encOrgKeys: \"encOrgKeys\",\n  encPrivate: \"encPrivateKey\",\n  encProviderKeys: \"encProviderKeys\",\n  entityId: \"entityId\",\n  entityType: \"entityType\",\n  environmentUrls: \"environmentUrls\",\n  equivalentDomains: \"equivalentDomains\",\n  eventCollection: \"eventCollection\",\n  forcePasswordReset: \"forcePasswordReset\",\n  history: \"generatedPasswordHistory\",\n  installedVersion: \"installedVersion\",\n  kdf: \"kdf\",\n  kdfIterations: \"kdfIterations\",\n  key: \"key\", // Master Key\n  keyHash: \"keyHash\",\n  lastActive: \"lastActive\",\n  localData: \"sitesLocalData\",\n  locale: \"locale\",\n  mainWindowSize: \"mainWindowSize\",\n  minimizeOnCopyToClipboard: \"minimizeOnCopyToClipboardKey\",\n  neverDomains: \"neverDomains\",\n  noAutoPromptBiometricsText: \"noAutoPromptBiometricsText\",\n  openAtLogin: \"openAtLogin\",\n  passwordGenerationOptions: \"passwordGenerationOptions\",\n  pinProtected: \"pinProtectedKey\",\n  protectedPin: \"protectedPin\",\n  refreshToken: \"refreshToken\",\n  ssoCodeVerifier: \"ssoCodeVerifier\",\n  ssoIdentifier: \"ssoOrgIdentifier\",\n  ssoState: \"ssoState\",\n  stamp: \"securityStamp\",\n  theme: \"theme\",\n  userEmail: \"userEmail\",\n  userId: \"userId\",\n  usesConnector: \"usesKeyConnector\",\n  vaultTimeoutAction: \"vaultTimeoutAction\",\n  vaultTimeout: \"lockOption\",\n  rememberedEmail: \"rememberedEmail\",\n};\n\nconst v1KeyPrefixes: { [key: string]: string } = {\n  ciphers: \"ciphers_\",\n  collections: \"collections_\",\n  folders: \"folders_\",\n  lastSync: \"lastSync_\",\n  policies: \"policies_\",\n  twoFactorToken: \"twoFactorToken_\",\n  organizations: \"organizations_\",\n  providers: \"providers_\",\n  sends: \"sends_\",\n  settings: \"settings_\",\n};\n\nconst keys = {\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nexport class StateMigrationService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  constructor(\n    protected storageService: AbstractStorageService,\n    protected secureStorageService: AbstractStorageService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>\n  ) {}\n\n  async needsMigration(): Promise<boolean> {\n    const currentStateVersion = await this.getCurrentStateVersion();\n    return currentStateVersion == null || currentStateVersion < StateVersion.Latest;\n  }\n\n  async migrate(): Promise<void> {\n    let currentStateVersion = await this.getCurrentStateVersion();\n    while (currentStateVersion < StateVersion.Latest) {\n      switch (currentStateVersion) {\n        case StateVersion.One:\n          await this.migrateStateFrom1To2();\n          break;\n        case StateVersion.Two:\n          await this.migrateStateFrom2To3();\n          break;\n        case StateVersion.Three:\n          await this.migrateStateFrom3To4();\n          break;\n        case StateVersion.Four: {\n          const authenticatedAccounts = await this.getAuthenticatedAccounts();\n          for (const account of authenticatedAccounts) {\n            const migratedAccount = await this.migrateAccountFrom4To5(account);\n            await this.set(account.profile.userId, migratedAccount);\n          }\n          await this.setCurrentStateVersion(StateVersion.Five);\n          break;\n        }\n        case StateVersion.Five: {\n          const authenticatedAccounts = await this.getAuthenticatedAccounts();\n          for (const account of authenticatedAccounts) {\n            const migratedAccount = await this.migrateAccountFrom5To6(account);\n            await this.set(account.profile.userId, migratedAccount);\n          }\n          await this.setCurrentStateVersion(StateVersion.Six);\n          break;\n        }\n      }\n\n      currentStateVersion += 1;\n    }\n  }\n\n  protected async migrateStateFrom1To2(): Promise<void> {\n    const clearV1Keys = async (clearingUserId?: string) => {\n      for (const key in v1Keys) {\n        if (key == null) {\n          continue;\n        }\n        await this.set(v1Keys[key], null);\n      }\n      if (clearingUserId != null) {\n        for (const keyPrefix in v1KeyPrefixes) {\n          if (keyPrefix == null) {\n            continue;\n          }\n          await this.set(v1KeyPrefixes[keyPrefix] + userId, null);\n        }\n      }\n    };\n\n    // Some processes, like biometrics, may have already defined a value before migrations are run.\n    // We don't want to null out those values if they don't exist in the old storage scheme (like for new installs)\n    // So, the OOO for migration is that we:\n    // 1. Check for an existing storage value from the old storage structure OR\n    // 2. Check for a value already set by processes that run before migration OR\n    // 3. Assign the default value\n    const globals =\n      (await this.get<GlobalState>(keys.global)) ?? this.stateFactory.createGlobal(null);\n    globals.stateVersion = StateVersion.Two;\n    globals.environmentUrls =\n      (await this.get<EnvironmentUrls>(v1Keys.environmentUrls)) ?? globals.environmentUrls;\n    globals.locale = (await this.get<string>(v1Keys.locale)) ?? globals.locale;\n    globals.noAutoPromptBiometrics =\n      (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n      globals.noAutoPromptBiometrics;\n    globals.noAutoPromptBiometricsText =\n      (await this.get<string>(v1Keys.noAutoPromptBiometricsText)) ??\n      globals.noAutoPromptBiometricsText;\n    globals.ssoCodeVerifier =\n      (await this.get<string>(v1Keys.ssoCodeVerifier)) ?? globals.ssoCodeVerifier;\n    globals.ssoOrganizationIdentifier =\n      (await this.get<string>(v1Keys.ssoIdentifier)) ?? globals.ssoOrganizationIdentifier;\n    globals.ssoState = (await this.get<any>(v1Keys.ssoState)) ?? globals.ssoState;\n    globals.rememberedEmail =\n      (await this.get<string>(v1Keys.rememberedEmail)) ?? globals.rememberedEmail;\n    globals.theme = (await this.get<ThemeType>(v1Keys.theme)) ?? globals.theme;\n    globals.vaultTimeout = (await this.get<number>(v1Keys.vaultTimeout)) ?? globals.vaultTimeout;\n    globals.vaultTimeoutAction =\n      (await this.get<string>(v1Keys.vaultTimeoutAction)) ?? globals.vaultTimeoutAction;\n    globals.window = (await this.get<any>(v1Keys.mainWindowSize)) ?? globals.window;\n    globals.enableTray = (await this.get<boolean>(v1Keys.enableTray)) ?? globals.enableTray;\n    globals.enableMinimizeToTray =\n      (await this.get<boolean>(v1Keys.enableMinimizeToTray)) ?? globals.enableMinimizeToTray;\n    globals.enableCloseToTray =\n      (await this.get<boolean>(v1Keys.enableCloseToTray)) ?? globals.enableCloseToTray;\n    globals.enableStartToTray =\n      (await this.get<boolean>(v1Keys.enableStartToTray)) ?? globals.enableStartToTray;\n    globals.openAtLogin = (await this.get<boolean>(v1Keys.openAtLogin)) ?? globals.openAtLogin;\n    globals.alwaysShowDock =\n      (await this.get<boolean>(v1Keys.alwaysShowDock)) ?? globals.alwaysShowDock;\n    globals.enableBrowserIntegration =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegration)) ??\n      globals.enableBrowserIntegration;\n    globals.enableBrowserIntegrationFingerprint =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegrationFingerprint)) ??\n      globals.enableBrowserIntegrationFingerprint;\n\n    const userId =\n      (await this.get<string>(v1Keys.userId)) ?? (await this.get<string>(v1Keys.entityId));\n\n    const defaultAccount = this.stateFactory.createAccount(null);\n    const accountSettings: AccountSettings = {\n      autoConfirmFingerPrints:\n        (await this.get<boolean>(v1Keys.autoConfirmFingerprints)) ??\n        defaultAccount.settings.autoConfirmFingerPrints,\n      autoFillOnPageLoadDefault:\n        (await this.get<boolean>(v1Keys.autoFillOnPageLoadDefault)) ??\n        defaultAccount.settings.autoFillOnPageLoadDefault,\n      biometricUnlock:\n        (await this.get<boolean>(v1Keys.biometricUnlock)) ??\n        defaultAccount.settings.biometricUnlock,\n      clearClipboard:\n        (await this.get<number>(v1Keys.clearClipboard)) ?? defaultAccount.settings.clearClipboard,\n      defaultUriMatch:\n        (await this.get<any>(v1Keys.defaultUriMatch)) ?? defaultAccount.settings.defaultUriMatch,\n      disableAddLoginNotification:\n        (await this.get<boolean>(v1Keys.disableAddLoginNotification)) ??\n        defaultAccount.settings.disableAddLoginNotification,\n      disableAutoBiometricsPrompt:\n        (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n        defaultAccount.settings.disableAutoBiometricsPrompt,\n      disableAutoTotpCopy:\n        (await this.get<boolean>(v1Keys.disableAutoTotpCopy)) ??\n        defaultAccount.settings.disableAutoTotpCopy,\n      disableBadgeCounter:\n        (await this.get<boolean>(v1Keys.disableBadgeCounter)) ??\n        defaultAccount.settings.disableBadgeCounter,\n      disableChangedPasswordNotification:\n        (await this.get<boolean>(v1Keys.disableChangedPasswordNotification)) ??\n        defaultAccount.settings.disableChangedPasswordNotification,\n      disableContextMenuItem:\n        (await this.get<boolean>(v1Keys.disableContextMenuItem)) ??\n        defaultAccount.settings.disableContextMenuItem,\n      disableGa: (await this.get<boolean>(v1Keys.disableGa)) ?? defaultAccount.settings.disableGa,\n      dontShowCardsCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowCardsCurrentTab)) ??\n        defaultAccount.settings.dontShowCardsCurrentTab,\n      dontShowIdentitiesCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowIdentitiesCurrentTab)) ??\n        defaultAccount.settings.dontShowIdentitiesCurrentTab,\n      enableAlwaysOnTop:\n        (await this.get<boolean>(v1Keys.enableAlwaysOnTop)) ??\n        defaultAccount.settings.enableAlwaysOnTop,\n      enableAutoFillOnPageLoad:\n        (await this.get<boolean>(v1Keys.enableAutoFillOnPageLoad)) ??\n        defaultAccount.settings.enableAutoFillOnPageLoad,\n      enableBiometric:\n        (await this.get<boolean>(v1Keys.enableBiometric)) ??\n        defaultAccount.settings.enableBiometric,\n      enableFullWidth:\n        (await this.get<boolean>(v1Keys.enableFullWidth)) ??\n        defaultAccount.settings.enableFullWidth,\n      enableGravitars:\n        (await this.get<boolean>(v1Keys.enableGravatars)) ??\n        defaultAccount.settings.enableGravitars,\n      environmentUrls: globals.environmentUrls ?? defaultAccount.settings.environmentUrls,\n      equivalentDomains:\n        (await this.get<any>(v1Keys.equivalentDomains)) ??\n        defaultAccount.settings.equivalentDomains,\n      minimizeOnCopyToClipboard:\n        (await this.get<boolean>(v1Keys.minimizeOnCopyToClipboard)) ??\n        defaultAccount.settings.minimizeOnCopyToClipboard,\n      neverDomains:\n        (await this.get<any>(v1Keys.neverDomains)) ?? defaultAccount.settings.neverDomains,\n      passwordGenerationOptions:\n        (await this.get<any>(v1Keys.passwordGenerationOptions)) ??\n        defaultAccount.settings.passwordGenerationOptions,\n      pinProtected: {\n        decrypted: null,\n        encrypted: await this.get<string>(v1Keys.pinProtected),\n      },\n      protectedPin: await this.get<string>(v1Keys.protectedPin),\n      settings: userId == null ? null : await this.get<any>(v1KeyPrefixes.settings + userId),\n      vaultTimeout:\n        (await this.get<number>(v1Keys.vaultTimeout)) ?? defaultAccount.settings.vaultTimeout,\n      vaultTimeoutAction:\n        (await this.get<string>(v1Keys.vaultTimeoutAction)) ??\n        defaultAccount.settings.vaultTimeoutAction,\n    };\n\n    // (userId == null) = no logged in user (so no known userId) and we need to temporarily store account specific settings in state to migrate on first auth\n    // (userId != null) = we have a currently authed user (so known userId) with encrypted data and other key settings we can move, no need to temporarily store account settings\n    if (userId == null) {\n      await this.set(keys.tempAccountSettings, accountSettings);\n      await this.set(keys.global, globals);\n      await this.set(keys.authenticatedAccounts, []);\n      await this.set(keys.activeUserId, null);\n      await clearV1Keys();\n      return;\n    }\n\n    globals.twoFactorToken = await this.get<string>(v1KeyPrefixes.twoFactorToken + userId);\n    await this.set(keys.global, globals);\n    await this.set(userId, {\n      data: {\n        addEditCipherInfo: null,\n        ciphers: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CipherData }>(v1KeyPrefixes.ciphers + userId),\n        },\n        collapsedGroupings: null,\n        collections: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CollectionData }>(\n            v1KeyPrefixes.collections + userId\n          ),\n        },\n        eventCollection: await this.get<EventData[]>(v1Keys.eventCollection),\n        folders: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: FolderData }>(v1KeyPrefixes.folders + userId),\n        },\n        localData: null,\n        organizations: await this.get<{ [id: string]: OrganizationData }>(\n          v1KeyPrefixes.organizations + userId\n        ),\n        passwordGenerationHistory: {\n          decrypted: null,\n          encrypted: await this.get<GeneratedPasswordHistory[]>(v1Keys.history),\n        },\n        policies: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: PolicyData }>(v1KeyPrefixes.policies + userId),\n        },\n        providers: await this.get<{ [id: string]: ProviderData }>(v1KeyPrefixes.providers + userId),\n        sends: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: SendData }>(v1KeyPrefixes.sends + userId),\n        },\n      },\n      keys: {\n        apiKeyClientSecret: await this.get<string>(v1Keys.clientSecret),\n        cryptoMasterKey: null,\n        cryptoMasterKeyAuto: null,\n        cryptoMasterKeyB64: null,\n        cryptoMasterKeyBiometric: null,\n        cryptoSymmetricKey: {\n          encrypted: await this.get<string>(v1Keys.encKey),\n          decrypted: null,\n        },\n        legacyEtmKey: null,\n        organizationKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encOrgKeys),\n        },\n        privateKey: {\n          decrypted: null,\n          encrypted: await this.get<string>(v1Keys.encPrivate),\n        },\n        providerKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encProviderKeys),\n        },\n        publicKey: null,\n      },\n      profile: {\n        apiKeyClientId: await this.get<string>(v1Keys.clientId),\n        authenticationStatus: null,\n        convertAccountToKeyConnector: await this.get<boolean>(v1Keys.convertAccountToKeyConnector),\n        email: await this.get<string>(v1Keys.userEmail),\n        emailVerified: await this.get<boolean>(v1Keys.emailVerified),\n        entityId: null,\n        entityType: null,\n        everBeenUnlocked: null,\n        forcePasswordReset: null,\n        hasPremiumPersonally: null,\n        kdfIterations: await this.get<number>(v1Keys.kdfIterations),\n        kdfType: await this.get<KdfType>(v1Keys.kdf),\n        keyHash: await this.get<string>(v1Keys.keyHash),\n        lastSync: null,\n        userId: userId,\n        usesKeyConnector: null,\n      },\n      settings: accountSettings,\n      tokens: {\n        accessToken: await this.get<string>(v1Keys.accessToken),\n        decodedToken: null,\n        refreshToken: await this.get<string>(v1Keys.refreshToken),\n        securityStamp: null,\n      },\n    });\n\n    await this.set(keys.authenticatedAccounts, [userId]);\n    await this.set(keys.activeUserId, userId);\n\n    const accountActivity: { [userId: string]: number } = {\n      [userId]: await this.get<number>(v1Keys.lastActive),\n    };\n    accountActivity[userId] = await this.get<number>(v1Keys.lastActive);\n    await this.set(keys.accountActivity, accountActivity);\n\n    await clearV1Keys(userId);\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"biometric\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.biometricKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"biometric\" }),\n        { keySuffix: \"biometric\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"biometric\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"auto\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.autoKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"auto\" }),\n        { keySuffix: \"auto\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"auto\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key)) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.masterKey}`,\n        await this.secureStorageService.get(v1Keys.key)\n      );\n      await this.secureStorageService.remove(v1Keys.key);\n    }\n  }\n\n  protected async migrateStateFrom2To3(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (\n          account?.profile?.hasPremiumPersonally === null &&\n          account.tokens?.accessToken != null\n        ) {\n          const decodedToken = await TokenService.decodeToken(account.tokens.accessToken);\n          account.profile.hasPremiumPersonally = decodedToken.premium;\n          await this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Three;\n    await this.set(keys.global, globals);\n  }\n\n  protected async migrateStateFrom3To4(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (account?.profile?.everBeenUnlocked != null) {\n          delete account.profile.everBeenUnlocked;\n          return this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Four;\n    await this.set(keys.global, globals);\n  }\n\n  protected async migrateAccountFrom4To5(account: TAccount): Promise<TAccount> {\n    const encryptedOrgKeys = account.keys?.organizationKeys?.encrypted;\n    if (encryptedOrgKeys != null) {\n      for (const [orgId, encKey] of Object.entries(encryptedOrgKeys)) {\n        encryptedOrgKeys[orgId] = {\n          type: \"organization\",\n          key: encKey as unknown as string, // Account v4 does not reflect the current account model so we have to cast\n        };\n      }\n    }\n\n    return account;\n  }\n\n  protected async migrateAccountFrom5To6(account: TAccount): Promise<TAccount> {\n    delete (account as any).keys?.legacyEtmKey;\n    return account;\n  }\n\n  protected get options(): StorageOptions {\n    return { htmlStorageLocation: HtmlStorageLocation.Local };\n  }\n\n  protected get<T>(key: string): Promise<T> {\n    return this.storageService.get<T>(key, this.options);\n  }\n\n  protected set(key: string, value: any): Promise<any> {\n    if (value == null) {\n      return this.storageService.remove(key, this.options);\n    }\n    return this.storageService.save(key, value, this.options);\n  }\n\n  protected async getGlobals(): Promise<TGlobalState> {\n    return await this.get<TGlobalState>(keys.global);\n  }\n\n  protected async getCurrentStateVersion(): Promise<StateVersion> {\n    return (await this.getGlobals())?.stateVersion ?? StateVersion.One;\n  }\n\n  protected async setCurrentStateVersion(newVersion: StateVersion): Promise<void> {\n    const globals = await this.getGlobals();\n    globals.stateVersion = newVersion;\n    await this.set(keys.global, globals);\n  }\n\n  protected async getAuthenticatedAccounts(): Promise<TAccount[]> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    return Promise.all(authenticatedUserIds.map((id) => this.get<TAccount>(id)));\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\nimport { ProfileOrganizationResponse } from \"../response/profileOrganizationResponse\";\n\nexport class OrganizationData {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useScim: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(response: ProfileOrganizationResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.usePolicies = response.usePolicies;\n    this.useGroups = response.useGroups;\n    this.useDirectory = response.useDirectory;\n    this.useEvents = response.useEvents;\n    this.useTotp = response.useTotp;\n    this.use2fa = response.use2fa;\n    this.useApi = response.useApi;\n    this.useSso = response.useSso;\n    this.useKeyConnector = response.useKeyConnector;\n    this.useScim = response.useScim;\n    this.useResetPassword = response.useResetPassword;\n    this.selfHost = response.selfHost;\n    this.usersGetPremium = response.usersGetPremium;\n    this.seats = response.seats;\n    this.maxCollections = response.maxCollections;\n    this.maxStorageGb = response.maxStorageGb;\n    this.ssoBound = response.ssoBound;\n    this.identifier = response.identifier;\n    this.permissions = response.permissions;\n    this.resetPasswordEnrolled = response.resetPasswordEnrolled;\n    this.userId = response.userId;\n    this.hasPublicAndPrivateKeys = response.hasPublicAndPrivateKeys;\n    this.providerId = response.providerId;\n    this.providerName = response.providerName;\n    this.familySponsorshipFriendlyName = response.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = response.familySponsorshipAvailable;\n    this.planProductType = response.planProductType;\n    this.keyConnectorEnabled = response.keyConnectorEnabled;\n    this.keyConnectorUrl = response.keyConnectorUrl;\n    this.familySponsorshipLastSyncDate = response.familySponsorshipLastSyncDate;\n    this.familySponsorshipValidUntil = response.familySponsorshipValidUntil;\n    this.familySponsorshipToDelete = response.familySponsorshipToDelete;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CollectionService } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FolderApiServiceAbstraction } from \"../abstractions/folder/folder-api.service.abstraction\";\nimport { InternalFolderService } from \"../abstractions/folder/folder.service.abstraction\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { InternalPolicyService } from \"../abstractions/policy/policy.service.abstraction\";\nimport { ProviderService } from \"../abstractions/provider.service\";\nimport { SendService } from \"../abstractions/send.service\";\nimport { SettingsService } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SyncService as SyncServiceAbstraction } from \"../abstractions/sync.service\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport { CollectionDetailsResponse } from \"../models/response/collectionResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport { FolderResponse } from \"../models/response/folderResponse\";\nimport {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notificationResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\n\nexport class SyncService implements SyncServiceAbstraction {\n  syncInProgress = false;\n\n  constructor(\n    private apiService: ApiService,\n    private settingsService: SettingsService,\n    private folderService: InternalFolderService,\n    private cipherService: CipherService,\n    private cryptoService: CryptoService,\n    private collectionService: CollectionService,\n    private messagingService: MessagingService,\n    private policyService: InternalPolicyService,\n    private sendService: SendService,\n    private logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private providerService: ProviderService,\n    private folderApiService: FolderApiServiceAbstraction,\n    private logoutCallback: (expired: boolean) => Promise<void>\n  ) {}\n\n  async getLastSync(): Promise<Date> {\n    if ((await this.stateService.getUserId()) == null) {\n      return null;\n    }\n\n    const lastSync = await this.stateService.getLastSync();\n    if (lastSync) {\n      return new Date(lastSync);\n    }\n\n    return null;\n  }\n\n  async setLastSync(date: Date, userId?: string): Promise<any> {\n    await this.stateService.setLastSync(date.toJSON(), { userId: userId });\n  }\n\n  @sequentialize(() => \"fullSync\")\n  async fullSync(forceSync: boolean, allowThrowOnError = false): Promise<boolean> {\n    this.syncStarted();\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    if (!isAuthenticated) {\n      return this.syncCompleted(false);\n    }\n\n    const now = new Date();\n    let needsSync = false;\n    try {\n      needsSync = await this.needsSyncing(forceSync);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      }\n    }\n\n    if (!needsSync) {\n      await this.setLastSync(now);\n      return this.syncCompleted(false);\n    }\n\n    try {\n      await this.apiService.refreshIdentityToken();\n      const response = await this.apiService.getSync();\n\n      await this.syncProfile(response.profile);\n      await this.syncFolders(response.folders);\n      await this.syncCollections(response.collections);\n      await this.syncCiphers(response.ciphers);\n      await this.syncSends(response.sends);\n      await this.syncSettings(response.domains);\n      await this.syncPolicies(response.policies);\n\n      await this.setLastSync(now);\n      return this.syncCompleted(true);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      } else {\n        return this.syncCompleted(false);\n      }\n    }\n  }\n\n  async syncUpsertFolder(notification: SyncFolderNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localFolder = await this.folderService.get(notification.id);\n        if (\n          (!isEdit && localFolder == null) ||\n          (isEdit && localFolder != null && localFolder.revisionDate < notification.revisionDate)\n        ) {\n          const remoteFolder = await this.folderApiService.get(notification.id);\n          if (remoteFolder != null) {\n            await this.folderService.upsert(new FolderData(remoteFolder));\n            this.messagingService.send(\"syncedUpsertedFolder\", { folderId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteFolder(notification: SyncFolderNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.folderService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedFolder\", { folderId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertCipher(notification: SyncCipherNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        let shouldUpdate = true;\n        const localCipher = await this.cipherService.get(notification.id);\n        if (localCipher != null && localCipher.revisionDate >= notification.revisionDate) {\n          shouldUpdate = false;\n        }\n\n        let checkCollections = false;\n        if (shouldUpdate) {\n          if (isEdit) {\n            shouldUpdate = localCipher != null;\n            checkCollections = true;\n          } else {\n            if (notification.collectionIds == null || notification.organizationId == null) {\n              shouldUpdate = localCipher == null;\n            } else {\n              shouldUpdate = false;\n              checkCollections = true;\n            }\n          }\n        }\n\n        if (\n          !shouldUpdate &&\n          checkCollections &&\n          notification.organizationId != null &&\n          notification.collectionIds != null &&\n          notification.collectionIds.length > 0\n        ) {\n          const collections = await this.collectionService.getAll();\n          if (collections != null) {\n            for (let i = 0; i < collections.length; i++) {\n              if (notification.collectionIds.indexOf(collections[i].id) > -1) {\n                shouldUpdate = true;\n                break;\n              }\n            }\n          }\n        }\n\n        if (shouldUpdate) {\n          const remoteCipher = await this.apiService.getFullCipherDetails(notification.id);\n          if (remoteCipher != null) {\n            await this.cipherService.upsert(new CipherData(remoteCipher));\n            this.messagingService.send(\"syncedUpsertedCipher\", { cipherId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        if (e != null && e.statusCode === 404 && isEdit) {\n          await this.cipherService.delete(notification.id);\n          this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n          return this.syncCompleted(true);\n        }\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteCipher(notification: SyncCipherNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.cipherService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n      return this.syncCompleted(true);\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertSend(notification: SyncSendNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localSend = await this.sendService.get(notification.id);\n        if (\n          (!isEdit && localSend == null) ||\n          (isEdit && localSend != null && localSend.revisionDate < notification.revisionDate)\n        ) {\n          const remoteSend = await this.apiService.getSend(notification.id);\n          if (remoteSend != null) {\n            await this.sendService.upsert(new SendData(remoteSend));\n            this.messagingService.send(\"syncedUpsertedSend\", { sendId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteSend(notification: SyncSendNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.sendService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedSend\", { sendId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  // Helpers\n\n  private syncStarted() {\n    this.syncInProgress = true;\n    this.messagingService.send(\"syncStarted\");\n  }\n\n  private syncCompleted(successfully: boolean): boolean {\n    this.syncInProgress = false;\n    this.messagingService.send(\"syncCompleted\", { successfully: successfully });\n    return successfully;\n  }\n\n  private async needsSyncing(forceSync: boolean) {\n    if (forceSync) {\n      return true;\n    }\n\n    const lastSync = await this.getLastSync();\n    if (lastSync == null || lastSync.getTime() === 0) {\n      return true;\n    }\n\n    const response = await this.apiService.getAccountRevisionDate();\n    if (new Date(response) <= lastSync) {\n      return false;\n    }\n    return true;\n  }\n\n  private async syncProfile(response: ProfileResponse) {\n    const stamp = await this.stateService.getSecurityStamp();\n    if (stamp != null && stamp !== response.securityStamp) {\n      if (this.logoutCallback != null) {\n        await this.logoutCallback(true);\n      }\n\n      throw new Error(\"Stamp has changed\");\n    }\n\n    await this.cryptoService.setEncKey(response.key);\n    await this.cryptoService.setEncPrivateKey(response.privateKey);\n    await this.cryptoService.setProviderKeys(response.providers);\n    await this.cryptoService.setOrgKeys(response.organizations, response.providerOrganizations);\n    await this.stateService.setSecurityStamp(response.securityStamp);\n    await this.stateService.setEmailVerified(response.emailVerified);\n    await this.stateService.setHasPremiumPersonally(response.premiumPersonally);\n    await this.stateService.setHasPremiumFromOrganization(response.premiumFromOrganization);\n    await this.stateService.setForcePasswordReset(response.forcePasswordReset);\n    await this.keyConnectorService.setUsesKeyConnector(response.usesKeyConnector);\n\n    const organizations: { [id: string]: OrganizationData } = {};\n    response.organizations.forEach((o) => {\n      organizations[o.id] = new OrganizationData(o);\n    });\n\n    const providers: { [id: string]: ProviderData } = {};\n    response.providers.forEach((p) => {\n      providers[p.id] = new ProviderData(p);\n    });\n\n    response.providerOrganizations.forEach((o) => {\n      if (organizations[o.id] == null) {\n        organizations[o.id] = new OrganizationData(o);\n        organizations[o.id].isProviderUser = true;\n      }\n    });\n\n    await this.organizationService.save(organizations);\n    await this.providerService.save(providers);\n\n    if (await this.keyConnectorService.userNeedsMigration()) {\n      await this.keyConnectorService.setConvertAccountRequired(true);\n      this.messagingService.send(\"convertAccountToKeyConnector\");\n    } else {\n      this.keyConnectorService.removeConvertAccountRequired();\n    }\n  }\n\n  private async syncFolders(response: FolderResponse[]) {\n    const folders: { [id: string]: FolderData } = {};\n    response.forEach((f) => {\n      folders[f.id] = new FolderData(f);\n    });\n    return await this.folderService.replace(folders);\n  }\n\n  private async syncCollections(response: CollectionDetailsResponse[]) {\n    const collections: { [id: string]: CollectionData } = {};\n    response.forEach((c) => {\n      collections[c.id] = new CollectionData(c);\n    });\n    return await this.collectionService.replace(collections);\n  }\n\n  private async syncCiphers(response: CipherResponse[]) {\n    const ciphers: { [id: string]: CipherData } = {};\n    response.forEach((c) => {\n      ciphers[c.id] = new CipherData(c);\n    });\n    return await this.cipherService.replace(ciphers);\n  }\n\n  private async syncSends(response: SendResponse[]) {\n    const sends: { [id: string]: SendData } = {};\n    response.forEach((s) => {\n      sends[s.id] = new SendData(s);\n    });\n    return await this.sendService.replace(sends);\n  }\n\n  private async syncSettings(response: DomainsResponse) {\n    let eqDomains: string[][] = [];\n    if (response != null && response.equivalentDomains != null) {\n      eqDomains = eqDomains.concat(response.equivalentDomains);\n    }\n\n    if (response != null && response.globalEquivalentDomains != null) {\n      response.globalEquivalentDomains.forEach((global) => {\n        if (global.domains.length > 0) {\n          eqDomains.push(global.domains);\n        }\n      });\n    }\n\n    return this.settingsService.setEquivalentDomains(eqDomains);\n  }\n\n  private async syncPolicies(response: PolicyResponse[]) {\n    const policies: { [id: string]: PolicyData } = {};\n    if (response != null) {\n      response.forEach((p) => {\n        policies[p.id] = new PolicyData(p);\n      });\n    }\n    return await this.policyService.replace(policies);\n  }\n}\n","import { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { TotpService as TotpServiceAbstraction } from \"../abstractions/totp.service\";\nimport { Utils } from \"../misc/utils\";\n\nconst B32Chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\";\nconst SteamChars = \"23456789BCDFGHJKMNPQRTVWXY\";\n\nexport class TotpService implements TotpServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private logService: LogService\n  ) {}\n\n  async getCode(key: string): Promise<string> {\n    if (key == null) {\n      return null;\n    }\n    let period = 30;\n    let alg: \"sha1\" | \"sha256\" | \"sha512\" = \"sha1\";\n    let digits = 6;\n    let keyB32 = key;\n    const isOtpAuth = key.toLowerCase().indexOf(\"otpauth://\") === 0;\n    const isSteamAuth = !isOtpAuth && key.toLowerCase().indexOf(\"steam://\") === 0;\n    if (isOtpAuth) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"digits\") && params.get(\"digits\") != null) {\n        try {\n          const digitParams = parseInt(params.get(\"digits\").trim(), null);\n          if (digitParams > 10) {\n            digits = 10;\n          } else if (digitParams > 0) {\n            digits = digitParams;\n          }\n        } catch {\n          this.logService.error(\"Invalid digits param.\");\n        }\n      }\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          const periodParam = parseInt(params.get(\"period\").trim(), null);\n          if (periodParam > 0) {\n            period = periodParam;\n          }\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n      if (params.has(\"secret\") && params.get(\"secret\") != null) {\n        keyB32 = params.get(\"secret\");\n      }\n      if (params.has(\"algorithm\") && params.get(\"algorithm\") != null) {\n        const algParam = params.get(\"algorithm\").toLowerCase();\n        if (algParam === \"sha1\" || algParam === \"sha256\" || algParam === \"sha512\") {\n          alg = algParam;\n        }\n      }\n    } else if (isSteamAuth) {\n      keyB32 = key.substr(\"steam://\".length);\n      digits = 5;\n    }\n\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const timeHex = this.leftPad(this.decToHex(Math.floor(epoch / period)), 16, \"0\");\n    const timeBytes = Utils.fromHexToArray(timeHex);\n    const keyBytes = this.b32ToBytes(keyB32);\n\n    if (!keyBytes.length || !timeBytes.length) {\n      return null;\n    }\n\n    const hash = await this.sign(keyBytes, timeBytes, alg);\n    if (hash.length === 0) {\n      return null;\n    }\n\n    const offset = hash[hash.length - 1] & 0xf;\n    const binary =\n      ((hash[offset] & 0x7f) << 24) |\n      ((hash[offset + 1] & 0xff) << 16) |\n      ((hash[offset + 2] & 0xff) << 8) |\n      (hash[offset + 3] & 0xff);\n\n    let otp = \"\";\n    if (isSteamAuth) {\n      let fullCode = binary & 0x7fffffff;\n      for (let i = 0; i < digits; i++) {\n        otp += SteamChars[fullCode % SteamChars.length];\n        fullCode = Math.trunc(fullCode / SteamChars.length);\n      }\n    } else {\n      otp = (binary % Math.pow(10, digits)).toString();\n      otp = this.leftPad(otp, digits, \"0\");\n    }\n\n    return otp;\n  }\n\n  getTimeInterval(key: string): number {\n    let period = 30;\n    if (key != null && key.toLowerCase().indexOf(\"otpauth://\") === 0) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          period = parseInt(params.get(\"period\").trim(), null);\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n    }\n    return period;\n  }\n\n  // Helpers\n\n  private leftPad(s: string, l: number, p: string): string {\n    if (l + 1 >= s.length) {\n      s = Array(l + 1 - s.length).join(p) + s;\n    }\n    return s;\n  }\n\n  private decToHex(d: number): string {\n    return (d < 15.5 ? \"0\" : \"\") + Math.round(d).toString(16);\n  }\n\n  private b32ToHex(s: string): string {\n    s = s.toUpperCase();\n    let cleanedInput = \"\";\n\n    for (let i = 0; i < s.length; i++) {\n      if (B32Chars.indexOf(s[i]) < 0) {\n        continue;\n      }\n\n      cleanedInput += s[i];\n    }\n    s = cleanedInput;\n\n    let bits = \"\";\n    let hex = \"\";\n    for (let i = 0; i < s.length; i++) {\n      const byteIndex = B32Chars.indexOf(s.charAt(i));\n      if (byteIndex < 0) {\n        continue;\n      }\n      bits += this.leftPad(byteIndex.toString(2), 5, \"0\");\n    }\n    for (let i = 0; i + 4 <= bits.length; i += 4) {\n      const chunk = bits.substr(i, 4);\n      hex = hex + parseInt(chunk, 2).toString(16);\n    }\n    return hex;\n  }\n\n  private b32ToBytes(s: string): Uint8Array {\n    return Utils.fromHexToArray(this.b32ToHex(s));\n  }\n\n  private async sign(\n    keyBytes: Uint8Array,\n    timeBytes: Uint8Array,\n    alg: \"sha1\" | \"sha256\" | \"sha512\"\n  ) {\n    const signature = await this.cryptoFunctionService.hmac(timeBytes.buffer, keyBytes.buffer, alg);\n    return new Uint8Array(signature);\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { UserVerificationApiServiceAbstraction } from \"../../abstractions/userVerification/userVerification-api.service.abstraction\";\nimport { VerifyOTPRequest } from \"../../models/request/account/verifyOTPRequest\";\n\nexport class UserVerificationApiService implements UserVerificationApiServiceAbstraction {\n  constructor(private apiService: ApiService) {}\n\n  postAccountVerifyOTP(request: VerifyOTPRequest): Promise<void> {\n    return this.apiService.send(\"POST\", \"/accounts/verify-otp\", request, true, false);\n  }\n  async postAccountRequestOTP(): Promise<void> {\n    return this.apiService.send(\"POST\", \"/accounts/request-otp\", null, true, false);\n  }\n}\n","export class VerifyOTPRequest {\n  OTP: string;\n\n  constructor(OTP: string) {\n    this.OTP = OTP;\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { I18nService } from \"../../abstractions/i18n.service\";\nimport { UserVerificationApiServiceAbstraction } from \"../../abstractions/userVerification/userVerification-api.service.abstraction\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"../../abstractions/userVerification/userVerification.service.abstraction\";\nimport { VerificationType } from \"../../enums/verificationType\";\nimport { VerifyOTPRequest } from \"../../models/request/account/verifyOTPRequest\";\nimport { SecretVerificationRequest } from \"../../models/request/secretVerificationRequest\";\nimport { Verification } from \"../../types/verification\";\n\n/**\n * Used for general-purpose user verification throughout the app.\n * Use it to verify the input collected by UserVerificationComponent.\n */\nexport class UserVerificationService implements UserVerificationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private userVerificationApiService: UserVerificationApiServiceAbstraction\n  ) {}\n\n  /**\n   * Create a new request model to be used for server-side verification\n   * @param verification User-supplied verification data (Master Password or OTP)\n   * @param requestClass The request model to create\n   * @param alreadyHashed Whether the master password is already hashed\n   */\n  async buildRequest<T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) {\n    this.validateInput(verification);\n\n    const request =\n      requestClass != null ? new requestClass() : (new SecretVerificationRequest() as T);\n\n    if (verification.type === VerificationType.OTP) {\n      request.otp = verification.secret;\n    } else {\n      request.masterPasswordHash = alreadyHashed\n        ? verification.secret\n        : await this.cryptoService.hashPassword(verification.secret, null);\n    }\n\n    return request;\n  }\n\n  /**\n   * Used to verify the Master Password client-side, or send the OTP to the server for verification (with no other data)\n   * Generally used for client-side verification only.\n   * @param verification User-supplied verification data (Master Password or OTP)\n   */\n  async verifyUser(verification: Verification): Promise<boolean> {\n    this.validateInput(verification);\n\n    if (verification.type === VerificationType.OTP) {\n      const request = new VerifyOTPRequest(verification.secret);\n      try {\n        await this.userVerificationApiService.postAccountVerifyOTP(request);\n      } catch (e) {\n        throw new Error(this.i18nService.t(\"invalidVerificationCode\"));\n      }\n    } else {\n      const passwordValid = await this.cryptoService.compareAndUpdateKeyHash(\n        verification.secret,\n        null\n      );\n      if (!passwordValid) {\n        throw new Error(this.i18nService.t(\"invalidMasterPassword\"));\n      }\n    }\n    return true;\n  }\n\n  async requestOTP() {\n    await this.userVerificationApiService.postAccountRequestOTP();\n  }\n\n  private validateInput(verification: Verification) {\n    if (verification?.secret == null || verification.secret === \"\") {\n      if (verification.type === VerificationType.OTP) {\n        throw new Error(this.i18nService.t(\"verificationCodeRequired\"));\n      } else {\n        throw new Error(this.i18nService.t(\"masterPassRequired\"));\n      }\n    }\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarderOptions\";\n\nexport class AnonAddyForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid AnonAddy API token.\";\n    }\n    if (options.anonaddy?.domain == null || options.anonaddy.domain === \"\") {\n      throw \"Invalid AnonAddy domain.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://app.anonaddy.com/api/v1/aliases\";\n    requestInit.body = JSON.stringify({\n      domain: options.anonaddy.domain,\n      description:\n        (options.website != null ? \"Website: \" + options.website + \". \" : \"\") +\n        \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json?.data?.email;\n    }\n    if (response.status === 401) {\n      throw \"Invalid AnonAddy API token.\";\n    }\n    throw \"Unknown AnonAddy error occurred.\";\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarderOptions\";\n\nexport class DuckDuckGoForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid DuckDuckGo API token.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://quack.duckduckgo.com/api/email/addresses\";\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      if (json.address) {\n        return `${json.address}@duck.com`;\n      }\n    } else if (response.status === 401) {\n      throw \"Invalid DuckDuckGo API token.\";\n    }\n    throw \"Unknown DuckDuckGo error occurred.\";\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarderOptions\";\n\nexport class FastmailForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid Fastmail API token.\";\n    }\n\n    const accountId = await this.getAccountId(apiService, options);\n    if (accountId == null || accountId === \"\") {\n      throw \"Unable to obtain Fastmail masked email account ID.\";\n    }\n\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://api.fastmail.com/jmap/api/\";\n    requestInit.body = JSON.stringify({\n      using: [\"https://www.fastmail.com/dev/maskedemail\", \"urn:ietf:params:jmap:core\"],\n      methodCalls: [\n        [\n          \"MaskedEmail/set\",\n          {\n            accountId: accountId,\n            create: {\n              \"new-masked-email\": {\n                state: \"enabled\",\n                description: \"\",\n                url: options.website,\n                emailPrefix: options.fastmail.prefix,\n              },\n            },\n          },\n          \"0\",\n        ],\n      ],\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200) {\n      const json = await response.json();\n      if (\n        json.methodResponses != null &&\n        json.methodResponses.length > 0 &&\n        json.methodResponses[0].length > 0\n      ) {\n        if (json.methodResponses[0][0] === \"MaskedEmail/set\") {\n          if (json.methodResponses[0][1]?.created?.[\"new-masked-email\"] != null) {\n            return json.methodResponses[0][1]?.created?.[\"new-masked-email\"]?.email;\n          }\n          if (json.methodResponses[0][1]?.notCreated?.[\"new-masked-email\"] != null) {\n            throw (\n              \"Fastmail error: \" +\n              json.methodResponses[0][1]?.notCreated?.[\"new-masked-email\"]?.description\n            );\n          }\n        } else if (json.methodResponses[0][0] === \"error\") {\n          throw \"Fastmail error: \" + json.methodResponses[0][1]?.description;\n        }\n      }\n    }\n    if (response.status === 401 || response.status === 403) {\n      throw \"Invalid Fastmail API token.\";\n    }\n    throw \"Unknown Fastmail error occurred.\";\n  }\n\n  private async getAccountId(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    const requestInit: RequestInit = {\n      cache: \"no-store\",\n      method: \"GET\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n      }),\n    };\n    const url = \"https://api.fastmail.com/.well-known/jmap\";\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200) {\n      const json = await response.json();\n      if (json.primaryAccounts != null) {\n        return json.primaryAccounts[\"https://www.fastmail.com/dev/maskedemail\"];\n      }\n    }\n    return null;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarderOptions\";\n\nexport class FirefoxRelayForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid Firefox Relay API token.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Token \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://relay.firefox.com/api/v1/relayaddresses/\";\n    requestInit.body = JSON.stringify({\n      enabled: true,\n      generated_for: options.website,\n      description:\n        (options.website != null ? options.website + \" - \" : \"\") + \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json?.full_address;\n    }\n    if (response.status === 401) {\n      throw \"Invalid Firefox Relay API token.\";\n    }\n    throw \"Unknown Firefox Relay error occurred.\";\n  }\n}\n","export class ForwarderOptions {\n  apiKey: string;\n  website: string;\n  fastmail = new FastmailForwarderOptions();\n  anonaddy = new AnonAddyForwarderOptions();\n}\n\nexport class FastmailForwarderOptions {\n  prefix: string;\n}\n\nexport class AnonAddyForwarderOptions {\n  domain: string;\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarderOptions\";\n\nexport class SimpleLoginForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid SimpleLogin API key.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authentication: options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    let url = \"https://app.simplelogin.io/api/alias/random/new\";\n    if (options.website != null) {\n      url += \"?hostname=\" + options.website;\n    }\n    requestInit.body = JSON.stringify({\n      note:\n        (options.website != null ? \"Website: \" + options.website + \". \" : \"\") +\n        \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json.alias;\n    }\n    if (response.status === 401) {\n      throw \"Invalid SimpleLogin API key.\";\n    }\n    try {\n      const json = await response.json();\n      if (json?.error != null) {\n        throw \"SimpleLogin error:\" + json.error;\n      }\n    } catch {\n      // Do nothing...\n    }\n    throw \"Unknown SimpleLogin error occurred.\";\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { UsernameGenerationService as BaseUsernameGenerationService } from \"../abstractions/usernameGeneration.service\";\nimport { AnonAddyForwarder } from \"../emailForwarders/anonAddyForwarder\";\nimport { DuckDuckGoForwarder } from \"../emailForwarders/duckDuckGoForwarder\";\nimport { FastmailForwarder } from \"../emailForwarders/fastmailForwarder\";\nimport { FirefoxRelayForwarder } from \"../emailForwarders/firefoxRelayForwarder\";\nimport { Forwarder } from \"../emailForwarders/forwarder\";\nimport { ForwarderOptions } from \"../emailForwarders/forwarderOptions\";\nimport { SimpleLoginForwarder } from \"../emailForwarders/simpleLoginForwarder\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\n\nconst DefaultOptions = {\n  type: \"word\",\n  wordCapitalize: true,\n  wordIncludeNumber: true,\n  subaddressType: \"random\",\n  catchallType: \"random\",\n  forwardedService: \"simplelogin\",\n  forwardedAnonAddyDomain: \"anonaddy.me\",\n};\n\nexport class UsernameGenerationService implements BaseUsernameGenerationService {\n  constructor(\n    private cryptoService: CryptoService,\n    private stateService: StateService,\n    private apiService: ApiService\n  ) {}\n\n  generateUsername(options: any): Promise<string> {\n    if (options.type === \"catchall\") {\n      return this.generateCatchall(options);\n    } else if (options.type === \"subaddress\") {\n      return this.generateSubaddress(options);\n    } else if (options.type === \"forwarded\") {\n      return this.generateForwarded(options);\n    } else {\n      return this.generateWord(options);\n    }\n  }\n\n  async generateWord(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.wordCapitalize == null) {\n      o.wordCapitalize = true;\n    }\n    if (o.wordIncludeNumber == null) {\n      o.wordIncludeNumber = true;\n    }\n\n    const wordIndex = await this.cryptoService.randomNumber(0, EEFLongWordList.length - 1);\n    let word = EEFLongWordList[wordIndex];\n    if (o.wordCapitalize) {\n      word = word.charAt(0).toUpperCase() + word.slice(1);\n    }\n    if (o.wordIncludeNumber) {\n      const num = await this.cryptoService.randomNumber(1, 9999);\n      word = word + this.zeroPad(num.toString(), 4);\n    }\n    return word;\n  }\n\n  async generateSubaddress(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    const subaddressEmail = o.subaddressEmail;\n    if (subaddressEmail == null || subaddressEmail.length < 3) {\n      return o.subaddressEmail;\n    }\n    const atIndex = subaddressEmail.indexOf(\"@\");\n    if (atIndex < 1 || atIndex >= subaddressEmail.length - 1) {\n      return subaddressEmail;\n    }\n    if (o.subaddressType == null) {\n      o.subaddressType = \"random\";\n    }\n\n    const emailBeginning = subaddressEmail.substr(0, atIndex);\n    const emailEnding = subaddressEmail.substr(atIndex + 1, subaddressEmail.length);\n\n    let subaddressString = \"\";\n    if (o.subaddressType === \"random\") {\n      subaddressString = await this.randomString(8);\n    } else if (o.subaddressType === \"website-name\") {\n      subaddressString = o.website;\n    }\n    return emailBeginning + \"+\" + subaddressString + \"@\" + emailEnding;\n  }\n\n  async generateCatchall(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.catchallDomain == null || o.catchallDomain === \"\") {\n      return null;\n    }\n    if (o.catchallType == null) {\n      o.catchallType = \"random\";\n    }\n\n    let startString = \"\";\n    if (o.catchallType === \"random\") {\n      startString = await this.randomString(8);\n    } else if (o.catchallType === \"website-name\") {\n      startString = o.website;\n    }\n    return startString + \"@\" + o.catchallDomain;\n  }\n\n  async generateForwarded(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.forwardedService == null) {\n      return null;\n    }\n\n    let forwarder: Forwarder = null;\n    const forwarderOptions = new ForwarderOptions();\n    forwarderOptions.website = o.website;\n    if (o.forwardedService === \"simplelogin\") {\n      forwarder = new SimpleLoginForwarder();\n      forwarderOptions.apiKey = o.forwardedSimpleLoginApiKey;\n    } else if (o.forwardedService === \"anonaddy\") {\n      forwarder = new AnonAddyForwarder();\n      forwarderOptions.apiKey = o.forwardedAnonAddyApiToken;\n      forwarderOptions.anonaddy.domain = o.forwardedAnonAddyDomain;\n    } else if (o.forwardedService === \"firefoxrelay\") {\n      forwarder = new FirefoxRelayForwarder();\n      forwarderOptions.apiKey = o.forwardedFirefoxApiToken;\n    } else if (o.forwardedService === \"fastmail\") {\n      forwarder = new FastmailForwarder();\n      forwarderOptions.apiKey = o.forwardedFastmailApiToken;\n    } else if (o.forwardedService === \"duckduckgo\") {\n      forwarder = new DuckDuckGoForwarder();\n      forwarderOptions.apiKey = o.forwardedDuckDuckGoToken;\n    }\n\n    if (forwarder == null) {\n      return null;\n    }\n\n    return forwarder.generate(this.apiService, forwarderOptions);\n  }\n\n  async getOptions(): Promise<any> {\n    let options = await this.stateService.getUsernameGenerationOptions();\n    if (options == null) {\n      options = Object.assign({}, DefaultOptions);\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setUsernameGenerationOptions(options);\n    return options;\n  }\n\n  async saveOptions(options: any) {\n    await this.stateService.setUsernameGenerationOptions(options);\n  }\n\n  private async randomString(length: number) {\n    let str = \"\";\n    const charSet = \"abcdefghijklmnopqrstuvwxyz1234567890\";\n    for (let i = 0; i < length; i++) {\n      const randomCharIndex = await this.cryptoService.randomNumber(0, charSet.length - 1);\n      str += charSet.charAt(randomCharIndex);\n    }\n    return str;\n  }\n\n  // ref: https://stackoverflow.com/a/10073788\n  private zeroPad(number: string, width: number) {\n    return number.length >= width\n      ? number\n      : new Array(width - number.length + 1).join(\"0\") + number;\n  }\n}\n","import { AuthService } from \"../abstractions/auth.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CollectionService } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FolderService } from \"../abstractions/folder/folder.service.abstraction\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { PolicyService } from \"../abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"../abstractions/search.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"../abstractions/vaultTimeout.service\";\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { PolicyType } from \"../enums/policyType\";\n\nexport class VaultTimeoutService implements VaultTimeoutServiceAbstraction {\n  private inited = false;\n\n  constructor(\n    private cipherService: CipherService,\n    private folderService: FolderService,\n    private collectionService: CollectionService,\n    private cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    private messagingService: MessagingService,\n    private searchService: SearchService,\n    private tokenService: TokenService,\n    private policyService: PolicyService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private authService: AuthService,\n    private lockedCallback: (userId?: string) => Promise<void> = null,\n    private loggedOutCallback: (expired: boolean, userId?: string) => Promise<void> = null\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.startCheck();\n    }\n  }\n\n  startCheck() {\n    this.checkVaultTimeout();\n    setInterval(() => this.checkVaultTimeout(), 10 * 1000); // check every 10 seconds\n  }\n\n  async checkVaultTimeout(): Promise<void> {\n    if (await this.platformUtilsService.isViewOpen()) {\n      return;\n    }\n\n    for (const userId in this.stateService.accounts.getValue()) {\n      if (userId != null && (await this.shouldLock(userId))) {\n        await this.executeTimeoutAction(userId);\n      }\n    }\n  }\n\n  async lock(allowSoftLock = false, userId?: string): Promise<void> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n\n    if (await this.keyConnectorService.getUsesKeyConnector()) {\n      const pinSet = await this.isPinLockSet();\n      const pinLock =\n        (pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) || pinSet[1];\n\n      if (!pinLock && !(await this.isBiometricLockSet())) {\n        await this.logOut(userId);\n      }\n    }\n\n    if (userId == null || userId === (await this.stateService.getUserId())) {\n      this.searchService.clearIndex();\n      await this.folderService.clearCache();\n    }\n\n    await this.stateService.setEverBeenUnlocked(true, { userId: userId });\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n\n    await this.cryptoService.clearKey(false, userId);\n    await this.cryptoService.clearOrgKeys(true, userId);\n    await this.cryptoService.clearKeyPair(true, userId);\n    await this.cryptoService.clearEncKey(true, userId);\n\n    await this.cipherService.clearCache(userId);\n    await this.collectionService.clearCache(userId);\n\n    this.messagingService.send(\"locked\", { userId: userId });\n\n    if (this.lockedCallback != null) {\n      await this.lockedCallback(userId);\n    }\n  }\n\n  async logOut(userId?: string): Promise<void> {\n    if (this.loggedOutCallback != null) {\n      await this.loggedOutCallback(false, userId);\n    }\n  }\n\n  async setVaultTimeoutOptions(timeout: number, action: string): Promise<void> {\n    await this.stateService.setVaultTimeout(timeout);\n\n    // We swap these tokens from being on disk for lock actions, and in memory for logout actions\n    // Get them here to set them to their new location after changing the timeout action and clearing if needed\n    const token = await this.tokenService.getToken();\n    const refreshToken = await this.tokenService.getRefreshToken();\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n\n    const currentAction = await this.stateService.getVaultTimeoutAction();\n    if ((timeout != null || timeout === 0) && action === \"logOut\" && action !== currentAction) {\n      // if we have a vault timeout and the action is log out, reset tokens\n      await this.tokenService.clearToken();\n    }\n\n    await this.stateService.setVaultTimeoutAction(action);\n\n    await this.tokenService.setToken(token);\n    await this.tokenService.setRefreshToken(refreshToken);\n    await this.tokenService.setClientId(clientId);\n    await this.tokenService.setClientSecret(clientSecret);\n\n    await this.cryptoService.toggleKey();\n  }\n\n  async isPinLockSet(): Promise<[boolean, boolean]> {\n    const protectedPin = await this.stateService.getProtectedPin();\n    const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n    return [protectedPin != null, pinProtectedKey != null];\n  }\n\n  async isBiometricLockSet(): Promise<boolean> {\n    return await this.stateService.getBiometricUnlock();\n  }\n\n  async getVaultTimeout(userId?: string): Promise<number> {\n    const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n\n    if (\n      await this.policyService.policyAppliesToUser(PolicyType.MaximumVaultTimeout, null, userId)\n    ) {\n      const policy = await this.policyService.getAll(PolicyType.MaximumVaultTimeout, userId);\n      // Remove negative values, and ensure it's smaller than maximum allowed value according to policy\n      let timeout = Math.min(vaultTimeout, policy[0].data.minutes);\n\n      if (vaultTimeout == null || timeout < 0) {\n        timeout = policy[0].data.minutes;\n      }\n\n      // We really shouldn't need to set the value here, but multiple services relies on this value being correct.\n      if (vaultTimeout !== timeout) {\n        await this.stateService.setVaultTimeout(timeout, { userId: userId });\n      }\n\n      return timeout;\n    }\n\n    return vaultTimeout;\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setEverBeenUnlocked(false, { userId: userId });\n    await this.stateService.setDecryptedPinProtected(null, { userId: userId });\n    await this.stateService.setProtectedPin(null, { userId: userId });\n  }\n\n  private async shouldLock(userId: string): Promise<boolean> {\n    const authStatus = await this.authService.getAuthStatus(userId);\n    if (\n      authStatus === AuthenticationStatus.Locked ||\n      authStatus === AuthenticationStatus.LoggedOut\n    ) {\n      return false;\n    }\n\n    const vaultTimeout = await this.getVaultTimeout(userId);\n    if (vaultTimeout == null || vaultTimeout < 0) {\n      return false;\n    }\n\n    const lastActive = await this.stateService.getLastActive({ userId: userId });\n    if (lastActive == null) {\n      return false;\n    }\n\n    const vaultTimeoutSeconds = vaultTimeout * 60;\n    const diffSeconds = (new Date().getTime() - lastActive) / 1000;\n    return diffSeconds >= vaultTimeoutSeconds;\n  }\n\n  private async executeTimeoutAction(userId: string): Promise<void> {\n    const timeoutAction = await this.stateService.getVaultTimeoutAction({ userId: userId });\n    timeoutAction === \"logOut\" ? await this.logOut(userId) : await this.lock(true, userId);\n  }\n}\n","export class DecryptParameters<T> {\n  encKey: T;\n  data: T;\n  iv: T;\n  macKey: T;\n  mac: T;\n  macData: T;\n}\n","import * as forge from \"node-forge\";\n\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { Utils } from \"../misc/utils\";\nimport { DecryptParameters } from \"../models/domain/decryptParameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nexport class WebCryptoFunctionService implements CryptoFunctionService {\n  private crypto: Crypto;\n  private subtle: SubtleCrypto;\n\n  constructor(win: Window | typeof global) {\n    this.crypto = typeof win.crypto !== \"undefined\" ? win.crypto : null;\n    this.subtle =\n      !!this.crypto && typeof win.crypto.subtle !== \"undefined\" ? win.crypto.subtle : null;\n  }\n\n  async pbkdf2(\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ): Promise<ArrayBuffer> {\n    const wcLen = algorithm === \"sha256\" ? 256 : 512;\n    const passwordBuf = this.toBuf(password);\n    const saltBuf = this.toBuf(salt);\n\n    const pbkdf2Params: Pbkdf2Params = {\n      name: \"PBKDF2\",\n      salt: saltBuf,\n      iterations: iterations,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\n      \"raw\",\n      passwordBuf,\n      { name: \"PBKDF2\" } as any,\n      false,\n      [\"deriveBits\"]\n    );\n    return await this.subtle.deriveBits(pbkdf2Params, impKey, wcLen);\n  }\n\n  async hkdf(\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const saltBuf = this.toBuf(salt);\n    const infoBuf = this.toBuf(info);\n\n    const hkdfParams: HkdfParams = {\n      name: \"HKDF\",\n      salt: saltBuf,\n      info: infoBuf,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", ikm, { name: \"HKDF\" } as any, false, [\n      \"deriveBits\",\n    ]);\n    return await this.subtle.deriveBits(hkdfParams as any, impKey, outputByteSize * 8);\n  }\n\n  // ref: https://tools.ietf.org/html/rfc5869\n  async hkdfExpand(\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const hashLen = algorithm === \"sha256\" ? 32 : 64;\n    if (outputByteSize > 255 * hashLen) {\n      throw new Error(\"outputByteSize is too large.\");\n    }\n    const prkArr = new Uint8Array(prk);\n    if (prkArr.length < hashLen) {\n      throw new Error(\"prk is too small.\");\n    }\n    const infoBuf = this.toBuf(info);\n    const infoArr = new Uint8Array(infoBuf);\n    let runningOkmLength = 0;\n    let previousT = new Uint8Array(0);\n    const n = Math.ceil(outputByteSize / hashLen);\n    const okm = new Uint8Array(n * hashLen);\n    for (let i = 0; i < n; i++) {\n      const t = new Uint8Array(previousT.length + infoArr.length + 1);\n      t.set(previousT);\n      t.set(infoArr, previousT.length);\n      t.set([i + 1], t.length - 1);\n      previousT = new Uint8Array(await this.hmac(t.buffer, prk, algorithm));\n      okm.set(previousT, runningOkmLength);\n      runningOkmLength += previousT.length;\n      if (runningOkmLength >= outputByteSize) {\n        break;\n      }\n    }\n    return okm.slice(0, outputByteSize).buffer;\n  }\n\n  async hash(\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ): Promise<ArrayBuffer> {\n    if (algorithm === \"md5\") {\n      const md = algorithm === \"md5\" ? forge.md.md5.create() : forge.md.sha1.create();\n      const valueBytes = this.toByteString(value);\n      md.update(valueBytes, \"raw\");\n      return Utils.fromByteStringToArray(md.digest().data).buffer;\n    }\n\n    const valueBuf = this.toBuf(value);\n    return await this.subtle.digest({ name: this.toWebCryptoAlgorithm(algorithm) }, valueBuf);\n  }\n\n  async hmac(\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", key, signingAlgorithm, false, [\"sign\"]);\n    return await this.subtle.sign(signingAlgorithm, impKey, value);\n  }\n\n  // Safely compare two values in a way that protects against timing attacks (Double HMAC Verification).\n  // ref: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2011/february/double-hmac-verification/\n  // ref: https://paragonie.com/blog/2015/11/preventing-timing-attacks-on-string-comparison-with-double-hmac-strategy\n  async compare(a: ArrayBuffer, b: ArrayBuffer): Promise<boolean> {\n    const macKey = await this.randomBytes(32);\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: \"SHA-256\" },\n    };\n    const impKey = await this.subtle.importKey(\"raw\", macKey, signingAlgorithm, false, [\"sign\"]);\n    const mac1 = await this.subtle.sign(signingAlgorithm, impKey, a);\n    const mac2 = await this.subtle.sign(signingAlgorithm, impKey, b);\n\n    if (mac1.byteLength !== mac2.byteLength) {\n      return false;\n    }\n\n    const arr1 = new Uint8Array(mac1);\n    const arr2 = new Uint8Array(mac2);\n    for (let i = 0; i < arr2.length; i++) {\n      if (arr1[i] !== arr2[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  hmacFast(value: string, key: string, algorithm: \"sha1\" | \"sha256\" | \"sha512\"): Promise<string> {\n    const hmac = forge.hmac.create();\n    hmac.start(algorithm, key);\n    hmac.update(value);\n    const bytes = hmac.digest().getBytes();\n    return Promise.resolve(bytes);\n  }\n\n  async compareFast(a: string, b: string): Promise<boolean> {\n    const rand = await this.randomBytes(32);\n    const bytes = new Uint32Array(rand);\n    const buffer = forge.util.createBuffer();\n    for (let i = 0; i < bytes.length; i++) {\n      buffer.putInt32(bytes[i]);\n    }\n    const macKey = buffer.getBytes();\n\n    const hmac = forge.hmac.create();\n    hmac.start(\"sha256\", macKey);\n    hmac.update(a);\n    const mac1 = hmac.digest().getBytes();\n\n    hmac.start(null, null);\n    hmac.update(b);\n    const mac2 = hmac.digest().getBytes();\n\n    const equals = mac1 === mac2;\n    return equals;\n  }\n\n  async aesEncrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.encrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  aesDecryptFastParameters(\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ): DecryptParameters<string> {\n    const p = new DecryptParameters<string>();\n    if (key.meta != null) {\n      p.encKey = key.meta.encKeyByteString;\n      p.macKey = key.meta.macKeyByteString;\n    }\n\n    if (p.encKey == null) {\n      p.encKey = forge.util.decode64(key.encKeyB64);\n    }\n    p.data = forge.util.decode64(data);\n    p.iv = forge.util.decode64(iv);\n    p.macData = p.iv + p.data;\n    if (p.macKey == null && key.macKeyB64 != null) {\n      p.macKey = forge.util.decode64(key.macKeyB64);\n    }\n    if (mac != null) {\n      p.mac = forge.util.decode64(mac);\n    }\n\n    // cache byte string keys for later\n    if (key.meta == null) {\n      key.meta = {};\n    }\n    if (key.meta.encKeyByteString == null) {\n      key.meta.encKeyByteString = p.encKey;\n    }\n    if (p.macKey != null && key.meta.macKeyByteString == null) {\n      key.meta.macKeyByteString = p.macKey;\n    }\n\n    return p;\n  }\n\n  aesDecryptFast(parameters: DecryptParameters<string>): Promise<string> {\n    const dataBuffer = forge.util.createBuffer(parameters.data);\n    const decipher = forge.cipher.createDecipher(\"AES-CBC\", parameters.encKey);\n    decipher.start({ iv: parameters.iv });\n    decipher.update(dataBuffer);\n    decipher.finish();\n    const val = decipher.output.toString();\n    return Promise.resolve(val);\n  }\n\n  async aesDecrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"decrypt\",\n    ]);\n    return await this.subtle.decrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  async rsaEncrypt(\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"spki\", publicKey, rsaParams, false, [\"encrypt\"]);\n    return await this.subtle.encrypt(rsaParams, impKey, data);\n  }\n\n  async rsaDecrypt(\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, false, [\"decrypt\"]);\n    return await this.subtle.decrypt(rsaParams, impKey, data);\n  }\n\n  async rsaExtractPublicKey(privateKey: ArrayBuffer): Promise<ArrayBuffer> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const impPrivateKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, true, [\n      \"decrypt\",\n    ]);\n    const jwkPrivateKey = await this.subtle.exportKey(\"jwk\", impPrivateKey);\n    const jwkPublicKeyParams = {\n      kty: \"RSA\",\n      e: jwkPrivateKey.e,\n      n: jwkPrivateKey.n,\n      alg: \"RSA-OAEP\",\n      ext: true,\n    };\n    const impPublicKey = await this.subtle.importKey(\"jwk\", jwkPublicKeyParams, rsaParams, true, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.exportKey(\"spki\", impPublicKey);\n  }\n\n  async rsaGenerateKeyPair(length: 1024 | 2048 | 4096): Promise<[ArrayBuffer, ArrayBuffer]> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      modulusLength: length,\n      publicExponent: new Uint8Array([0x01, 0x00, 0x01]), // 65537\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const keyPair = (await this.subtle.generateKey(rsaParams, true, [\n      \"encrypt\",\n      \"decrypt\",\n    ])) as CryptoKeyPair;\n    const publicKey = await this.subtle.exportKey(\"spki\", keyPair.publicKey);\n    const privateKey = await this.subtle.exportKey(\"pkcs8\", keyPair.privateKey);\n    return [publicKey, privateKey];\n  }\n\n  randomBytes(length: number): Promise<ArrayBuffer> {\n    const arr = new Uint8Array(length);\n    this.crypto.getRandomValues(arr);\n    return Promise.resolve(arr.buffer);\n  }\n\n  private toBuf(value: string | ArrayBuffer): ArrayBuffer {\n    let buf: ArrayBuffer;\n    if (typeof value === \"string\") {\n      buf = Utils.fromUtf8ToArray(value).buffer;\n    } else {\n      buf = value;\n    }\n    return buf;\n  }\n\n  private toByteString(value: string | ArrayBuffer): string {\n    let bytes: string;\n    if (typeof value === \"string\") {\n      bytes = forge.util.encodeUtf8(value);\n    } else {\n      bytes = Utils.fromBufferToByteString(value);\n    }\n    return bytes;\n  }\n\n  private toWebCryptoAlgorithm(algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"): string {\n    if (algorithm === \"md5\") {\n      throw new Error(\"MD5 is not supported in WebCrypto.\");\n    }\n    return algorithm === \"sha1\" ? \"SHA-1\" : algorithm === \"sha256\" ? \"SHA-256\" : \"SHA-512\";\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BroadcasterService as BaseBroadcasterService } from \"@bitwarden/common/services/broadcaster.service\";\n\n@Injectable()\nexport class BroadcasterService extends BaseBroadcasterService {}\n","import { BroadcasterService as BroadcasterServiceAbstraction } from \"../abstractions/broadcaster.service\";\n\nexport class BroadcasterService implements BroadcasterServiceAbstraction {\n  subscribers: Map<string, (message: any) => any> = new Map<string, (message: any) => any>();\n\n  send(message: any, id?: string) {\n    if (id != null) {\n      if (this.subscribers.has(id)) {\n        this.subscribers.get(id)(message);\n      }\n      return;\n    }\n\n    this.subscribers.forEach((value) => {\n      value(message);\n    });\n  }\n\n  subscribe(id: string, messageCallback: (message: any) => any) {\n    this.subscribers.set(id, messageCallback);\n  }\n\n  unsubscribe(id: string) {\n    if (this.subscribers.has(id)) {\n      this.subscribers.delete(id);\n    }\n  }\n}\n","import { Directive } from \"@angular/core\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\nimport { ModalRef } from \"./modal/modal.ref\";\n\n/**\n * Used to verify the user's Master Password for the \"Master Password Re-prompt\" feature only.\n * See UserVerificationComponent for any other situation where you need to verify the user's identity.\n */\n@Directive()\nexport class PasswordRepromptComponent {\n  showPassword = false;\n  masterPassword = \"\";\n\n  constructor(\n    private modalRef: ModalRef,\n    private cryptoService: CryptoService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  async submit() {\n    if (!(await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, null))) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidMasterPassword\")\n      );\n      return;\n    }\n\n    this.modalRef.close(true);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\n\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\n\nimport { ModalService } from \"./modal.service\";\n\n/**\n * Used to verify the user's Master Password for the \"Master Password Re-prompt\" feature only.\n * See UserVerificationService for any other situation where you need to verify the user's identity.\n */\n@Injectable()\nexport class PasswordRepromptService implements PasswordRepromptServiceAbstraction {\n  protected component = PasswordRepromptComponent;\n\n  constructor(\n    private modalService: ModalService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  protectedFields() {\n    return [\"TOTP\", \"Password\", \"H_Field\", \"Card Number\", \"Security Code\"];\n  }\n\n  async showPasswordPrompt() {\n    if (!(await this.enabled())) {\n      return true;\n    }\n\n    const ref = this.modalService.open(this.component, { allowMultipleModals: true });\n\n    if (ref == null) {\n      return false;\n    }\n\n    const result = await ref.onClosedPromise();\n    return result === true;\n  }\n\n  async enabled() {\n    return !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n}\n","import { InjectionToken, Injector, LOCALE_ID, NgModule } from \"@angular/core\";\n\nimport { ThemingService } from \"@bitwarden/angular/services/theming/theming.service\";\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { AbstractEncryptService } from \"@bitwarden/common/abstractions/abstractEncrypt.service\";\nimport { AccountApiService as AccountApiServiceAbstraction } from \"@bitwarden/common/abstractions/account/account-api.service.abstraction\";\nimport { AccountService as AccountServiceAbstraction } from \"@bitwarden/common/abstractions/account/account.service.abstraction\";\nimport { ApiService as ApiServiceAbstraction } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService as AppIdServiceAbstraction } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuditService as AuditServiceAbstraction } from \"@bitwarden/common/abstractions/audit.service\";\nimport { AuthService as AuthServiceAbstraction } from \"@bitwarden/common/abstractions/auth.service\";\nimport { BroadcasterService as BroadcasterServiceAbstraction } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService as CipherServiceAbstraction } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService as CollectionServiceAbstraction } from \"@bitwarden/common/abstractions/collection.service\";\nimport { CryptoService as CryptoServiceAbstraction } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService as CryptoFunctionServiceAbstraction } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService as EnvironmentServiceAbstraction } from \"@bitwarden/common/abstractions/environment.service\";\nimport { EventService as EventServiceAbstraction } from \"@bitwarden/common/abstractions/event.service\";\nimport { ExportService as ExportServiceAbstraction } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"@bitwarden/common/abstractions/fileUpload.service\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport {\n  FolderService as FolderServiceAbstraction,\n  InternalFolderService,\n} from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { FormValidationErrorsService as FormValidationErrorsServiceAbstraction } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService as I18nServiceAbstraction } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { OrganizationService as OrganizationServiceAbstraction } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport {\n  PolicyService as PolicyServiceAbstraction,\n  InternalPolicyService,\n} from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { ProviderService as ProviderServiceAbstraction } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SearchService as SearchServiceAbstraction } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService as SendServiceAbstraction } from \"@bitwarden/common/abstractions/send.service\";\nimport { SettingsService as SettingsServiceAbstraction } from \"@bitwarden/common/abstractions/settings.service\";\nimport { StateService as StateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { StateMigrationService as StateMigrationServiceAbstraction } from \"@bitwarden/common/abstractions/stateMigration.service\";\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { SyncService as SyncServiceAbstraction } from \"@bitwarden/common/abstractions/sync.service\";\nimport { TokenService as TokenServiceAbstraction } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService as TotpServiceAbstraction } from \"@bitwarden/common/abstractions/totp.service\";\nimport { TwoFactorService as TwoFactorServiceAbstraction } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { UserVerificationApiServiceAbstraction } from \"@bitwarden/common/abstractions/userVerification/userVerification-api.service.abstraction\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { UsernameGenerationService as UsernameGenerationServiceAbstraction } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"@bitwarden/common/abstractions/vaultTimeout.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { Account } from \"@bitwarden/common/models/domain/account\";\nimport { GlobalState } from \"@bitwarden/common/models/domain/globalState\";\nimport { AccountApiService } from \"@bitwarden/common/services/account/account-api.service\";\nimport { AccountService } from \"@bitwarden/common/services/account/account.service\";\nimport { ApiService } from \"@bitwarden/common/services/api.service\";\nimport { AppIdService } from \"@bitwarden/common/services/appId.service\";\nimport { AuditService } from \"@bitwarden/common/services/audit.service\";\nimport { AuthService } from \"@bitwarden/common/services/auth.service\";\nimport { CipherService } from \"@bitwarden/common/services/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/services/collection.service\";\nimport { ConsoleLogService } from \"@bitwarden/common/services/consoleLog.service\";\nimport { CryptoService } from \"@bitwarden/common/services/crypto.service\";\nimport { EncryptService } from \"@bitwarden/common/services/encrypt.service\";\nimport { EnvironmentService } from \"@bitwarden/common/services/environment.service\";\nimport { EventService } from \"@bitwarden/common/services/event.service\";\nimport { ExportService } from \"@bitwarden/common/services/export.service\";\nimport { FileUploadService } from \"@bitwarden/common/services/fileUpload.service\";\nimport { FolderApiService } from \"@bitwarden/common/services/folder/folder-api.service\";\nimport { FolderService } from \"@bitwarden/common/services/folder/folder.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/services/formValidationErrors.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/services/keyConnector.service\";\nimport { NotificationsService } from \"@bitwarden/common/services/notifications.service\";\nimport { OrganizationService } from \"@bitwarden/common/services/organization.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/services/passwordGeneration.service\";\nimport { PolicyApiService } from \"@bitwarden/common/services/policy/policy-api.service\";\nimport { PolicyService } from \"@bitwarden/common/services/policy/policy.service\";\nimport { ProviderService } from \"@bitwarden/common/services/provider.service\";\nimport { SearchService } from \"@bitwarden/common/services/search.service\";\nimport { SendService } from \"@bitwarden/common/services/send.service\";\nimport { SettingsService } from \"@bitwarden/common/services/settings.service\";\nimport { StateService } from \"@bitwarden/common/services/state.service\";\nimport { StateMigrationService } from \"@bitwarden/common/services/stateMigration.service\";\nimport { SyncService } from \"@bitwarden/common/services/sync.service\";\nimport { TokenService } from \"@bitwarden/common/services/token.service\";\nimport { TotpService } from \"@bitwarden/common/services/totp.service\";\nimport { TwoFactorService } from \"@bitwarden/common/services/twoFactor.service\";\nimport { UserVerificationApiService } from \"@bitwarden/common/services/userVerification/userVerification-api.service\";\nimport { UserVerificationService } from \"@bitwarden/common/services/userVerification/userVerification.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/services/usernameGeneration.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/services/vaultTimeout.service\";\nimport { WebCryptoFunctionService } from \"@bitwarden/common/services/webCryptoFunction.service\";\n\nimport { AuthGuard } from \"../guards/auth.guard\";\nimport { LockGuard } from \"../guards/lock.guard\";\nimport { UnauthGuard } from \"../guards/unauth.guard\";\n\nimport { BroadcasterService } from \"./broadcaster.service\";\nimport { ModalService } from \"./modal.service\";\nimport { PasswordRepromptService } from \"./passwordReprompt.service\";\nimport { ValidationService } from \"./validation.service\";\n\nexport const WINDOW = new InjectionToken<Window>(\"WINDOW\");\nexport const MEMORY_STORAGE = new InjectionToken<AbstractStorageService>(\"MEMORY_STORAGE\");\nexport const SECURE_STORAGE = new InjectionToken<AbstractStorageService>(\"SECURE_STORAGE\");\nexport const STATE_FACTORY = new InjectionToken<StateFactory>(\"STATE_FACTORY\");\nexport const STATE_SERVICE_USE_CACHE = new InjectionToken<boolean>(\"STATE_SERVICE_USE_CACHE\");\nexport const LOGOUT_CALLBACK = new InjectionToken<(expired: boolean, userId?: string) => void>(\n  \"LOGOUT_CALLBACK\"\n);\nexport const LOCKED_CALLBACK = new InjectionToken<() => void>(\"LOCKED_CALLBACK\");\nexport const CLIENT_TYPE = new InjectionToken<boolean>(\"CLIENT_TYPE\");\nexport const LOCALES_DIRECTORY = new InjectionToken<string>(\"LOCALES_DIRECTORY\");\nexport const SYSTEM_LANGUAGE = new InjectionToken<string>(\"SYSTEM_LANGUAGE\");\nexport const LOG_MAC_FAILURES = new InjectionToken<string>(\"LOG_MAC_FAILURES\");\n\n@NgModule({\n  declarations: [],\n  providers: [\n    ValidationService,\n    AuthGuard,\n    UnauthGuard,\n    LockGuard,\n    ModalService,\n    { provide: WINDOW, useValue: window },\n    {\n      provide: LOCALE_ID,\n      useFactory: (i18nService: I18nServiceAbstraction) => i18nService.translationLocale,\n      deps: [I18nServiceAbstraction],\n    },\n    {\n      provide: LOCALES_DIRECTORY,\n      useValue: \"./locales\",\n    },\n    {\n      provide: SYSTEM_LANGUAGE,\n      useFactory: (window: Window) => window.navigator.language,\n      deps: [WINDOW],\n    },\n    {\n      provide: STATE_FACTORY,\n      useValue: new StateFactory(GlobalState, Account),\n    },\n    {\n      provide: STATE_SERVICE_USE_CACHE,\n      useValue: true,\n    },\n    {\n      provide: LOGOUT_CALLBACK,\n      useFactory:\n        (messagingService: MessagingServiceAbstraction) => (expired: boolean, userId?: string) =>\n          messagingService.send(\"logout\", { expired: expired, userId: userId }),\n      deps: [MessagingServiceAbstraction],\n    },\n    {\n      provide: LOCKED_CALLBACK,\n      useValue: null,\n    },\n    {\n      provide: LOG_MAC_FAILURES,\n      useValue: true,\n    },\n    {\n      provide: AppIdServiceAbstraction,\n      useClass: AppIdService,\n      deps: [AbstractStorageService],\n    },\n    {\n      provide: AuditServiceAbstraction,\n      useClass: AuditService,\n      deps: [CryptoFunctionServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: AuthServiceAbstraction,\n      useClass: AuthService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        AppIdServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        LogService,\n        KeyConnectorServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        StateServiceAbstraction,\n        TwoFactorServiceAbstraction,\n        I18nServiceAbstraction,\n      ],\n    },\n    {\n      provide: CipherServiceAbstraction,\n      useFactory: (\n        cryptoService: CryptoServiceAbstraction,\n        settingsService: SettingsServiceAbstraction,\n        apiService: ApiServiceAbstraction,\n        fileUploadService: FileUploadServiceAbstraction,\n        i18nService: I18nServiceAbstraction,\n        injector: Injector,\n        logService: LogService,\n        stateService: StateServiceAbstraction\n      ) =>\n        new CipherService(\n          cryptoService,\n          settingsService,\n          apiService,\n          fileUploadService,\n          i18nService,\n          () => injector.get(SearchServiceAbstraction),\n          logService,\n          stateService\n        ),\n      deps: [\n        CryptoServiceAbstraction,\n        SettingsServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        Injector, // TODO: Get rid of this circular dependency!\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: FolderServiceAbstraction,\n      useClass: FolderService,\n      deps: [\n        CryptoServiceAbstraction,\n        I18nServiceAbstraction,\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: InternalFolderService,\n      useExisting: FolderServiceAbstraction,\n    },\n    {\n      provide: FolderApiServiceAbstraction,\n      useClass: FolderApiService,\n      deps: [FolderServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: AccountApiServiceAbstraction,\n      useClass: AccountApiService,\n      deps: [ApiServiceAbstraction],\n    },\n    {\n      provide: AccountServiceAbstraction,\n      useClass: AccountService,\n      deps: [\n        AccountApiServiceAbstraction,\n        UserVerificationServiceAbstraction,\n        MessagingServiceAbstraction,\n        LogService,\n      ],\n    },\n    { provide: LogService, useFactory: () => new ConsoleLogService(false) },\n    {\n      provide: CollectionServiceAbstraction,\n      useClass: CollectionService,\n      deps: [CryptoServiceAbstraction, I18nServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: EnvironmentServiceAbstraction,\n      useClass: EnvironmentService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: TotpServiceAbstraction,\n      useClass: TotpService,\n      deps: [CryptoFunctionServiceAbstraction, LogService, StateServiceAbstraction],\n    },\n    { provide: TokenServiceAbstraction, useClass: TokenService, deps: [StateServiceAbstraction] },\n    {\n      provide: CryptoServiceAbstraction,\n      useClass: CryptoService,\n      deps: [\n        CryptoFunctionServiceAbstraction,\n        AbstractEncryptService,\n        PlatformUtilsServiceAbstraction,\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: PasswordGenerationServiceAbstraction,\n      useClass: PasswordGenerationService,\n      deps: [CryptoServiceAbstraction, PolicyServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: UsernameGenerationServiceAbstraction,\n      useClass: UsernameGenerationService,\n      deps: [CryptoServiceAbstraction, StateServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: ApiServiceAbstraction,\n      useClass: ApiService,\n      deps: [\n        TokenServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        AppIdServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: FileUploadServiceAbstraction,\n      useClass: FileUploadService,\n      deps: [LogService, ApiServiceAbstraction],\n    },\n    {\n      provide: SyncServiceAbstraction,\n      useClass: SyncService,\n      deps: [\n        ApiServiceAbstraction,\n        SettingsServiceAbstraction,\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        CryptoServiceAbstraction,\n        CollectionServiceAbstraction,\n        MessagingServiceAbstraction,\n        PolicyServiceAbstraction,\n        SendServiceAbstraction,\n        LogService,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n        OrganizationServiceAbstraction,\n        ProviderServiceAbstraction,\n        FolderApiServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    { provide: BroadcasterServiceAbstraction, useClass: BroadcasterService },\n    {\n      provide: SettingsServiceAbstraction,\n      useClass: SettingsService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: VaultTimeoutServiceAbstraction,\n      useClass: VaultTimeoutService,\n      deps: [\n        CipherServiceAbstraction,\n        FolderServiceAbstraction,\n        CollectionServiceAbstraction,\n        CryptoServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        SearchServiceAbstraction,\n        TokenServiceAbstraction,\n        PolicyServiceAbstraction,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n        AuthServiceAbstraction,\n        LOCKED_CALLBACK,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: StateServiceAbstraction,\n      useClass: StateService,\n      deps: [\n        AbstractStorageService,\n        SECURE_STORAGE,\n        MEMORY_STORAGE,\n        LogService,\n        StateMigrationServiceAbstraction,\n        STATE_FACTORY,\n        STATE_SERVICE_USE_CACHE,\n      ],\n    },\n    {\n      provide: StateMigrationServiceAbstraction,\n      useClass: StateMigrationService,\n      deps: [AbstractStorageService, SECURE_STORAGE, STATE_FACTORY],\n    },\n    {\n      provide: ExportServiceAbstraction,\n      useClass: ExportService,\n      deps: [\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        ApiServiceAbstraction,\n        CryptoServiceAbstraction,\n      ],\n    },\n    {\n      provide: SearchServiceAbstraction,\n      useClass: SearchService,\n      deps: [CipherServiceAbstraction, LogService, I18nServiceAbstraction],\n    },\n    {\n      provide: NotificationsServiceAbstraction,\n      useClass: NotificationsService,\n      deps: [\n        SyncServiceAbstraction,\n        AppIdServiceAbstraction,\n        ApiServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        LOGOUT_CALLBACK,\n        LogService,\n        StateServiceAbstraction,\n        AuthServiceAbstraction,\n      ],\n    },\n    {\n      provide: CryptoFunctionServiceAbstraction,\n      useClass: WebCryptoFunctionService,\n      deps: [WINDOW],\n    },\n    {\n      provide: AbstractEncryptService,\n      useClass: EncryptService,\n      deps: [CryptoFunctionServiceAbstraction, LogService, LOG_MAC_FAILURES],\n    },\n    {\n      provide: EventServiceAbstraction,\n      useClass: EventService,\n      deps: [\n        ApiServiceAbstraction,\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n        LogService,\n        OrganizationServiceAbstraction,\n      ],\n    },\n    {\n      provide: PolicyServiceAbstraction,\n      useClass: PolicyService,\n      deps: [StateServiceAbstraction, OrganizationServiceAbstraction],\n    },\n    {\n      provide: InternalPolicyService,\n      useExisting: PolicyServiceAbstraction,\n    },\n    {\n      provide: PolicyApiServiceAbstraction,\n      useClass: PolicyApiService,\n      deps: [\n        PolicyServiceAbstraction,\n        ApiServiceAbstraction,\n        StateServiceAbstraction,\n        OrganizationServiceAbstraction,\n      ],\n    },\n    {\n      provide: SendServiceAbstraction,\n      useClass: SendService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: KeyConnectorServiceAbstraction,\n      useClass: KeyConnectorService,\n      deps: [\n        StateServiceAbstraction,\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        LogService,\n        OrganizationServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: UserVerificationServiceAbstraction,\n      useClass: UserVerificationService,\n      deps: [\n        CryptoServiceAbstraction,\n        I18nServiceAbstraction,\n        UserVerificationApiServiceAbstraction,\n      ],\n    },\n    { provide: PasswordRepromptServiceAbstraction, useClass: PasswordRepromptService },\n    {\n      provide: OrganizationServiceAbstraction,\n      useClass: OrganizationService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: ProviderServiceAbstraction,\n      useClass: ProviderService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: TwoFactorServiceAbstraction,\n      useClass: TwoFactorService,\n      deps: [I18nServiceAbstraction, PlatformUtilsServiceAbstraction],\n    },\n    {\n      provide: AbstractThemingService,\n      useClass: ThemingService,\n    },\n    {\n      provide: FormValidationErrorsServiceAbstraction,\n      useClass: FormValidationErrorsService,\n    },\n    {\n      provide: UserVerificationApiServiceAbstraction,\n      useClass: UserVerificationApiService,\n      deps: [ApiServiceAbstraction],\n    },\n  ],\n})\nexport class JslibServicesModule {}\n","import { AccountApiService as AccountApiServiceAbstraction } from \"@bitwarden/common/abstractions/account/account-api.service.abstraction\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secretVerificationRequest\";\n\nexport class AccountApiService implements AccountApiServiceAbstraction {\n  constructor(private apiService: ApiService) {}\n\n  deleteAccount(request: SecretVerificationRequest): Promise<void> {\n    return this.apiService.send(\"DELETE\", \"/accounts\", request, true, false);\n  }\n}\n","import { Verification } from \"../../types/verification\";\n\nexport abstract class AccountService {\n  abstract delete(verification: Verification): Promise<any>;\n}\n","import { AccountApiService } from \"@bitwarden/common/abstractions/account/account-api.service.abstraction\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\n\nimport { AccountService as AccountServiceAbstraction } from \"../../abstractions/account/account.service.abstraction\";\nimport { Verification } from \"../../types/verification\";\n\nexport class AccountService implements AccountServiceAbstraction {\n  constructor(\n    private accountApiService: AccountApiService,\n    private userVerificationService: UserVerificationService,\n    private messagingService: MessagingService,\n    private logService: LogService\n  ) {}\n\n  async delete(verification: Verification): Promise<void> {\n    try {\n      const verificationRequest = await this.userVerificationService.buildRequest(verification);\n      await this.accountApiService.deleteAccount(verificationRequest);\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n      throw e;\n    }\n  }\n}\n","import { UntypedFormGroup, ValidationErrors } from \"@angular/forms\";\n\nimport {\n  FormGroupControls,\n  FormValidationErrorsService as FormValidationErrorsAbstraction,\n  AllValidationErrors,\n} from \"../abstractions/formValidationErrors.service\";\n\nexport class FormValidationErrorsService implements FormValidationErrorsAbstraction {\n  getFormValidationErrors(controls: FormGroupControls): AllValidationErrors[] {\n    let errors: AllValidationErrors[] = [];\n    Object.keys(controls).forEach((key) => {\n      const control = controls[key];\n      if (control instanceof UntypedFormGroup) {\n        errors = errors.concat(this.getFormValidationErrors(control.controls));\n      }\n\n      const controlErrors: ValidationErrors = controls[key].errors;\n      if (controlErrors !== null) {\n        Object.keys(controlErrors).forEach((keyError) => {\n          errors.push({\n            controlName: key,\n            errorName: keyError,\n          });\n        });\n      }\n    });\n\n    return errors;\n  }\n}\n","import { CryptoService } from \"../abstractions/crypto.service\";\n\nexport class ContainerService {\n  constructor(private cryptoService: CryptoService) {}\n\n  attachToGlobal(global: any) {\n    if (!global.bitwardenContainerService) {\n      global.bitwardenContainerService = this;\n    }\n  }\n\n  getCryptoService(): CryptoService {\n    return this.cryptoService;\n  }\n}\n","import { AuthService } from \"../abstractions/auth.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SystemService as SystemServiceAbstraction } from \"../abstractions/system.service\";\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { Utils } from \"../misc/utils\";\n\nexport class SystemService implements SystemServiceAbstraction {\n  private reloadInterval: any = null;\n  private clearClipboardTimeout: any = null;\n  private clearClipboardTimeoutFunction: () => Promise<any> = null;\n\n  constructor(\n    private messagingService: MessagingService,\n    private platformUtilsService: PlatformUtilsService,\n    private reloadCallback: () => Promise<void> = null,\n    private stateService: StateService\n  ) {}\n\n  async startProcessReload(authService: AuthService): Promise<void> {\n    const accounts = this.stateService.accounts.getValue();\n    if (accounts != null) {\n      const keys = Object.keys(accounts);\n      if (keys.length > 0) {\n        for (const userId of keys) {\n          if ((await authService.getAuthStatus(userId)) === AuthenticationStatus.Unlocked) {\n            return;\n          }\n        }\n      }\n    }\n\n    // A reloadInterval has already been set and is executing\n    if (this.reloadInterval != null) {\n      return;\n    }\n\n    // User has set a PIN, with ask for master password on restart, to protect their vault\n    const decryptedPinProtected = await this.stateService.getDecryptedPinProtected();\n    if (decryptedPinProtected != null) {\n      return;\n    }\n\n    this.cancelProcessReload();\n    this.reloadInterval = setInterval(async () => await this.executeProcessReload(), 10000);\n  }\n\n  private async inactiveMoreThanSeconds(seconds: number): Promise<boolean> {\n    const lastActive = await this.stateService.getLastActive();\n    if (lastActive != null) {\n      const diffMs = new Date().getTime() - lastActive;\n      return diffMs >= seconds * 1000;\n    }\n    return true;\n  }\n\n  private async executeProcessReload() {\n    const accounts = this.stateService.accounts.getValue();\n    const doRefresh =\n      accounts == null ||\n      Object.keys(accounts).length == 0 ||\n      (await this.inactiveMoreThanSeconds(5));\n\n    const biometricLockedFingerprintValidated =\n      await this.stateService.getBiometricFingerprintValidated();\n    if (doRefresh && !biometricLockedFingerprintValidated) {\n      clearInterval(this.reloadInterval);\n      this.reloadInterval = null;\n      this.messagingService.send(\"reloadProcess\");\n      if (this.reloadCallback != null) {\n        await this.reloadCallback();\n      }\n    }\n  }\n\n  cancelProcessReload(): void {\n    if (this.reloadInterval != null) {\n      clearInterval(this.reloadInterval);\n      this.reloadInterval = null;\n    }\n  }\n\n  async clearClipboard(clipboardValue: string, timeoutMs: number = null): Promise<void> {\n    if (this.clearClipboardTimeout != null) {\n      clearTimeout(this.clearClipboardTimeout);\n      this.clearClipboardTimeout = null;\n    }\n    if (Utils.isNullOrWhitespace(clipboardValue)) {\n      return;\n    }\n    await this.stateService.getClearClipboard().then((clearSeconds) => {\n      if (clearSeconds == null) {\n        return;\n      }\n      if (timeoutMs == null) {\n        timeoutMs = clearSeconds * 1000;\n      }\n      this.clearClipboardTimeoutFunction = async () => {\n        const clipboardValueNow = await this.platformUtilsService.readFromClipboard();\n        if (clipboardValue === clipboardValueNow) {\n          this.platformUtilsService.copyToClipboard(\"\", { clearing: true });\n        }\n      };\n      this.clearClipboardTimeout = setTimeout(async () => {\n        await this.clearPendingClipboard();\n      }, timeoutMs);\n    });\n  }\n\n  async clearPendingClipboard() {\n    if (this.clearClipboardTimeoutFunction != null) {\n      await this.clearClipboardTimeoutFunction();\n      this.clearClipboardTimeoutFunction = null;\n    }\n  }\n}\n","import { BrowserApi } from \"./browserApi\";\n\nexport class SafariApp {\n  static sendMessageToApp(command: string, data: any = null, resolveNow = false): Promise<any> {\n    if (!BrowserApi.isSafariApi) {\n      return Promise.resolve(null);\n    }\n    return new Promise((resolve) => {\n      const now = new Date();\n      const messageId =\n        now.getTime().toString() + \"_\" + Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);\n      (browser as any).runtime.sendNativeMessage(\n        \"com.bitwarden.desktop\",\n        {\n          id: messageId,\n          command: command,\n          data: data,\n          responseData: null,\n        },\n        (response: any) => {\n          resolve(response);\n        }\n      );\n    });\n  }\n}\n","export class BrowserComponentState {\n  scrollY: number;\n  searchText: string;\n}\n","import { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collectionView\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\n\nimport { BrowserComponentState } from \"./browserComponentState\";\n\nexport class BrowserGroupingsComponentState extends BrowserComponentState {\n  favoriteCiphers: CipherView[];\n  noFolderCiphers: CipherView[];\n  ciphers: CipherView[];\n  collectionCounts: Map<string, number>;\n  folderCounts: Map<string, number>;\n  typeCounts: Map<CipherType, number>;\n  folders: FolderView[];\n  collections: CollectionView[];\n  deletedCount: number;\n}\n","import { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { SendView } from \"@bitwarden/common/models/view/sendView\";\n\nimport { BrowserComponentState } from \"./browserComponentState\";\n\nexport class BrowserSendComponentState extends BrowserComponentState {\n  sends: SendView[];\n  typeCounts: Map<SendType, number>;\n}\n","import {\n  Account as BaseAccount,\n  AccountSettings as BaseAccountSettings,\n} from \"@bitwarden/common/models/domain/account\";\n\nimport { BrowserComponentState } from \"./browserComponentState\";\nimport { BrowserGroupingsComponentState } from \"./browserGroupingsComponentState\";\nimport { BrowserSendComponentState } from \"./browserSendComponentState\";\n\nexport class AccountSettings extends BaseAccountSettings {\n  vaultTimeout = -1; // On Restart\n}\n\nexport class Account extends BaseAccount {\n  settings?: AccountSettings = new AccountSettings();\n  groupings?: BrowserGroupingsComponentState;\n  send?: BrowserSendComponentState;\n  ciphers?: BrowserComponentState;\n  sendType?: BrowserComponentState;\n\n  constructor(init: Partial<Account>) {\n    super(init);\n    Object.assign(this.settings, {\n      ...new AccountSettings(),\n      ...this.settings,\n    });\n    this.groupings = init?.groupings ?? new BrowserGroupingsComponentState();\n    this.send = init?.send ?? new BrowserSendComponentState();\n    this.ciphers = init?.ciphers ?? new BrowserComponentState();\n    this.sendType = init?.sendType ?? new BrowserComponentState();\n  }\n}\n","export default class AutofillScript {\n  script: string[][] = [];\n  documentUUID: any = {};\n  properties: any = {};\n  options: any = {};\n  metadata: any = {};\n  autosubmit: any = null;\n\n  constructor(documentUUID: string) {\n    this.documentUUID = documentUUID;\n  }\n}\n","export class AutoFillConstants {\n  static readonly UsernameFieldNames: string[] = [\n    // English\n    \"username\",\n    \"user name\",\n    \"email\",\n    \"email address\",\n    \"e-mail\",\n    \"e-mail address\",\n    \"userid\",\n    \"user id\",\n    \"customer id\",\n    \"login id\",\n    // German\n    \"benutzername\",\n    \"benutzer name\",\n    \"email adresse\",\n    \"e-mail adresse\",\n    \"benutzerid\",\n    \"benutzer id\",\n  ];\n\n  static readonly PasswordFieldIgnoreList: string[] = [\n    \"onetimepassword\",\n    \"captcha\",\n    \"findanything\",\n    \"forgot\",\n  ];\n\n  static readonly ExcludedAutofillTypes: string[] = [\n    \"radio\",\n    \"checkbox\",\n    \"hidden\",\n    \"file\",\n    \"button\",\n    \"image\",\n    \"reset\",\n    \"search\",\n  ];\n}\n\nexport class CreditCardAutoFillConstants {\n  static readonly CardAttributes: string[] = [\n    \"autoCompleteType\",\n    \"data-stripe\",\n    \"htmlName\",\n    \"htmlID\",\n    \"label-tag\",\n    \"placeholder\",\n    \"label-left\",\n    \"label-top\",\n    \"data-recurly\",\n  ];\n\n  static readonly CardAttributesExtended: string[] = [\n    ...CreditCardAutoFillConstants.CardAttributes,\n    \"label-right\",\n  ];\n\n  static readonly CardHolderFieldNames: string[] = [\n    \"cc-name\",\n    \"card-name\",\n    \"cardholder-name\",\n    \"cardholder\",\n    \"name\",\n    \"nom\",\n  ];\n\n  static readonly CardHolderFieldNameValues: string[] = [\n    \"cc-name\",\n    \"card-name\",\n    \"cardholder-name\",\n    \"cardholder\",\n    \"tbName\",\n  ];\n\n  static readonly CardNumberFieldNames: string[] = [\n    \"cc-number\",\n    \"cc-num\",\n    \"card-number\",\n    \"card-num\",\n    \"number\",\n    \"cc\",\n    \"cc-no\",\n    \"card-no\",\n    \"credit-card\",\n    \"numero-carte\",\n    \"carte\",\n    \"carte-credit\",\n    \"num-carte\",\n    \"cb-num\",\n  ];\n\n  static readonly CardNumberFieldNameValues: string[] = [\n    \"cc-number\",\n    \"cc-num\",\n    \"card-number\",\n    \"card-num\",\n    \"cc-no\",\n    \"card-no\",\n    \"numero-carte\",\n    \"num-carte\",\n    \"cb-num\",\n  ];\n\n  static readonly CardExpiryFieldNames: string[] = [\n    \"cc-exp\",\n    \"card-exp\",\n    \"cc-expiration\",\n    \"card-expiration\",\n    \"cc-ex\",\n    \"card-ex\",\n    \"card-expire\",\n    \"card-expiry\",\n    \"validite\",\n    \"expiration\",\n    \"expiry\",\n    \"mm-yy\",\n    \"mm-yyyy\",\n    \"yy-mm\",\n    \"yyyy-mm\",\n    \"expiration-date\",\n    \"payment-card-expiration\",\n    \"payment-cc-date\",\n  ];\n\n  static readonly CardExpiryFieldNameValues: string[] = [\n    \"mm-yy\",\n    \"mm-yyyy\",\n    \"yy-mm\",\n    \"yyyy-mm\",\n    \"expiration-date\",\n    \"payment-card-expiration\",\n  ];\n\n  static readonly ExpiryMonthFieldNames: string[] = [\n    \"exp-month\",\n    \"cc-exp-month\",\n    \"cc-month\",\n    \"card-month\",\n    \"cc-mo\",\n    \"card-mo\",\n    \"exp-mo\",\n    \"card-exp-mo\",\n    \"cc-exp-mo\",\n    \"card-expiration-month\",\n    \"expiration-month\",\n    \"cc-mm\",\n    \"cc-m\",\n    \"card-mm\",\n    \"card-m\",\n    \"card-exp-mm\",\n    \"cc-exp-mm\",\n    \"exp-mm\",\n    \"exp-m\",\n    \"expire-month\",\n    \"expire-mo\",\n    \"expiry-month\",\n    \"expiry-mo\",\n    \"card-expire-month\",\n    \"card-expire-mo\",\n    \"card-expiry-month\",\n    \"card-expiry-mo\",\n    \"mois-validite\",\n    \"mois-expiration\",\n    \"m-validite\",\n    \"m-expiration\",\n    \"expiry-date-field-month\",\n    \"expiration-date-month\",\n    \"expiration-date-mm\",\n    \"exp-mon\",\n    \"validity-mo\",\n    \"exp-date-mo\",\n    \"cb-date-mois\",\n    \"date-m\",\n  ];\n\n  static readonly ExpiryYearFieldNames: string[] = [\n    \"exp-year\",\n    \"cc-exp-year\",\n    \"cc-year\",\n    \"card-year\",\n    \"cc-yr\",\n    \"card-yr\",\n    \"exp-yr\",\n    \"card-exp-yr\",\n    \"cc-exp-yr\",\n    \"card-expiration-year\",\n    \"expiration-year\",\n    \"cc-yy\",\n    \"cc-y\",\n    \"card-yy\",\n    \"card-y\",\n    \"card-exp-yy\",\n    \"cc-exp-yy\",\n    \"exp-yy\",\n    \"exp-y\",\n    \"cc-yyyy\",\n    \"card-yyyy\",\n    \"card-exp-yyyy\",\n    \"cc-exp-yyyy\",\n    \"expire-year\",\n    \"expire-yr\",\n    \"expiry-year\",\n    \"expiry-yr\",\n    \"card-expire-year\",\n    \"card-expire-yr\",\n    \"card-expiry-year\",\n    \"card-expiry-yr\",\n    \"an-validite\",\n    \"an-expiration\",\n    \"annee-validite\",\n    \"annee-expiration\",\n    \"expiry-date-field-year\",\n    \"expiration-date-year\",\n    \"cb-date-ann\",\n    \"expiration-date-yy\",\n    \"expiration-date-yyyy\",\n    \"validity-year\",\n    \"exp-date-year\",\n    \"date-y\",\n  ];\n\n  static readonly CVVFieldNames: string[] = [\n    \"cvv\",\n    \"cvc\",\n    \"cvv2\",\n    \"cc-csc\",\n    \"cc-cvv\",\n    \"card-csc\",\n    \"card-cvv\",\n    \"cvd\",\n    \"cid\",\n    \"cvc2\",\n    \"cnv\",\n    \"cvn2\",\n    \"cc-code\",\n    \"card-code\",\n    \"code-securite\",\n    \"security-code\",\n    \"crypto\",\n    \"card-verif\",\n    \"verification-code\",\n    \"csc\",\n    \"ccv\",\n  ];\n\n  static readonly CardBrandFieldNames: string[] = [\n    \"cc-type\",\n    \"card-type\",\n    \"card-brand\",\n    \"cc-brand\",\n    \"cb-type\",\n  ];\n\n  // Each index represents a language. These three arrays should all be the same length.\n  // 0: English, 1: Danish, 2: German/Dutch, 3: French/Spanish/Italian, 4: Russian, 5: Portuguese\n  static readonly MonthAbbr = [\"mm\", \"mm\", \"mm\", \"mm\", \"mm\", \"mm\"];\n  static readonly YearAbbrShort = [\"yy\", \"åå\", \"jj\", \"aa\", \"гг\", \"rr\"];\n  static readonly YearAbbrLong = [\"yyyy\", \"åååå\", \"jjjj\", \"aa\", \"гггг\", \"rrrr\"];\n}\n\nexport class IdentityAutoFillConstants {\n  static readonly IdentityAttributes: string[] = [\n    \"autoCompleteType\",\n    \"data-stripe\",\n    \"htmlName\",\n    \"htmlID\",\n    \"label-tag\",\n    \"placeholder\",\n    \"label-left\",\n    \"label-top\",\n    \"data-recurly\",\n  ];\n\n  static readonly FullNameFieldNames: string[] = [\"name\", \"full-name\", \"your-name\"];\n\n  static readonly FullNameFieldNameValues: string[] = [\"full-name\", \"your-name\"];\n\n  static readonly TitleFieldNames: string[] = [\"honorific-prefix\", \"prefix\", \"title\"];\n\n  static readonly FirstnameFieldNames: string[] = [\n    // English\n    \"f-name\",\n    \"first-name\",\n    \"given-name\",\n    \"first-n\",\n    // German\n    \"vorname\",\n  ];\n\n  static readonly MiddlenameFieldNames: string[] = [\n    \"m-name\",\n    \"middle-name\",\n    \"additional-name\",\n    \"middle-initial\",\n    \"middle-n\",\n    \"middle-i\",\n  ];\n\n  static readonly LastnameFieldNames: string[] = [\n    // English\n    \"l-name\",\n    \"last-name\",\n    \"s-name\",\n    \"surname\",\n    \"family-name\",\n    \"family-n\",\n    \"last-n\",\n    // German\n    \"nachname\",\n    \"familienname\",\n  ];\n\n  static readonly EmailFieldNames: string[] = [\"e-mail\", \"email-address\"];\n\n  static readonly AddressFieldNames: string[] = [\n    \"address\",\n    \"street-address\",\n    \"addr\",\n    \"street\",\n    \"mailing-addr\",\n    \"billing-addr\",\n    \"mail-addr\",\n    \"bill-addr\",\n  ];\n\n  static readonly AddressFieldNameValues: string[] = [\n    \"mailing-addr\",\n    \"billing-addr\",\n    \"mail-addr\",\n    \"bill-addr\",\n  ];\n\n  static readonly Address1FieldNames: string[] = [\n    \"address-1\",\n    \"address-line-1\",\n    \"addr-1\",\n    \"street-1\",\n  ];\n\n  static readonly Address2FieldNames: string[] = [\n    \"address-2\",\n    \"address-line-2\",\n    \"addr-2\",\n    \"street-2\",\n  ];\n\n  static readonly Address3FieldNames: string[] = [\n    \"address-3\",\n    \"address-line-3\",\n    \"addr-3\",\n    \"street-3\",\n  ];\n\n  static readonly PostalCodeFieldNames: string[] = [\n    \"postal\",\n    \"zip\",\n    \"zip2\",\n    \"zip-code\",\n    \"postal-code\",\n    \"post-code\",\n    \"address-zip\",\n    \"address-postal\",\n    \"address-code\",\n    \"address-postal-code\",\n    \"address-zip-code\",\n  ];\n\n  static readonly CityFieldNames: string[] = [\n    \"city\",\n    \"town\",\n    \"address-level-2\",\n    \"address-city\",\n    \"address-town\",\n  ];\n\n  static readonly StateFieldNames: string[] = [\n    \"state\",\n    \"province\",\n    \"provence\",\n    \"address-level-1\",\n    \"address-state\",\n    \"address-province\",\n  ];\n\n  static readonly CountryFieldNames: string[] = [\n    \"country\",\n    \"country-code\",\n    \"country-name\",\n    \"address-country\",\n    \"address-country-name\",\n    \"address-country-code\",\n  ];\n\n  static readonly PhoneFieldNames: string[] = [\n    \"phone\",\n    \"mobile\",\n    \"mobile-phone\",\n    \"tel\",\n    \"telephone\",\n    \"phone-number\",\n  ];\n\n  static readonly UserNameFieldNames: string[] = [\"user-name\", \"user-id\", \"screen-name\"];\n\n  static readonly CompanyFieldNames: string[] = [\n    \"company\",\n    \"company-name\",\n    \"organization\",\n    \"organization-name\",\n  ];\n\n  static readonly IsoCountries: { [id: string]: string } = {\n    afghanistan: \"AF\",\n    \"aland islands\": \"AX\",\n    albania: \"AL\",\n    algeria: \"DZ\",\n    \"american samoa\": \"AS\",\n    andorra: \"AD\",\n    angola: \"AO\",\n    anguilla: \"AI\",\n    antarctica: \"AQ\",\n    \"antigua and barbuda\": \"AG\",\n    argentina: \"AR\",\n    armenia: \"AM\",\n    aruba: \"AW\",\n    australia: \"AU\",\n    austria: \"AT\",\n    azerbaijan: \"AZ\",\n    bahamas: \"BS\",\n    bahrain: \"BH\",\n    bangladesh: \"BD\",\n    barbados: \"BB\",\n    belarus: \"BY\",\n    belgium: \"BE\",\n    belize: \"BZ\",\n    benin: \"BJ\",\n    bermuda: \"BM\",\n    bhutan: \"BT\",\n    bolivia: \"BO\",\n    \"bosnia and herzegovina\": \"BA\",\n    botswana: \"BW\",\n    \"bouvet island\": \"BV\",\n    brazil: \"BR\",\n    \"british indian ocean territory\": \"IO\",\n    \"brunei darussalam\": \"BN\",\n    bulgaria: \"BG\",\n    \"burkina faso\": \"BF\",\n    burundi: \"BI\",\n    cambodia: \"KH\",\n    cameroon: \"CM\",\n    canada: \"CA\",\n    \"cape verde\": \"CV\",\n    \"cayman islands\": \"KY\",\n    \"central african republic\": \"CF\",\n    chad: \"TD\",\n    chile: \"CL\",\n    china: \"CN\",\n    \"christmas island\": \"CX\",\n    \"cocos (keeling) islands\": \"CC\",\n    colombia: \"CO\",\n    comoros: \"KM\",\n    congo: \"CG\",\n    \"congo, democratic republic\": \"CD\",\n    \"cook islands\": \"CK\",\n    \"costa rica\": \"CR\",\n    \"cote d'ivoire\": \"CI\",\n    croatia: \"HR\",\n    cuba: \"CU\",\n    cyprus: \"CY\",\n    \"czech republic\": \"CZ\",\n    denmark: \"DK\",\n    djibouti: \"DJ\",\n    dominica: \"DM\",\n    \"dominican republic\": \"DO\",\n    ecuador: \"EC\",\n    egypt: \"EG\",\n    \"el salvador\": \"SV\",\n    \"equatorial guinea\": \"GQ\",\n    eritrea: \"ER\",\n    estonia: \"EE\",\n    ethiopia: \"ET\",\n    \"falkland islands\": \"FK\",\n    \"faroe islands\": \"FO\",\n    fiji: \"FJ\",\n    finland: \"FI\",\n    france: \"FR\",\n    \"french guiana\": \"GF\",\n    \"french polynesia\": \"PF\",\n    \"french southern territories\": \"TF\",\n    gabon: \"GA\",\n    gambia: \"GM\",\n    georgia: \"GE\",\n    germany: \"DE\",\n    ghana: \"GH\",\n    gibraltar: \"GI\",\n    greece: \"GR\",\n    greenland: \"GL\",\n    grenada: \"GD\",\n    guadeloupe: \"GP\",\n    guam: \"GU\",\n    guatemala: \"GT\",\n    guernsey: \"GG\",\n    guinea: \"GN\",\n    \"guinea-bissau\": \"GW\",\n    guyana: \"GY\",\n    haiti: \"HT\",\n    \"heard island & mcdonald islands\": \"HM\",\n    \"holy see (vatican city state)\": \"VA\",\n    honduras: \"HN\",\n    \"hong kong\": \"HK\",\n    hungary: \"HU\",\n    iceland: \"IS\",\n    india: \"IN\",\n    indonesia: \"ID\",\n    \"iran, islamic republic of\": \"IR\",\n    iraq: \"IQ\",\n    ireland: \"IE\",\n    \"isle of man\": \"IM\",\n    israel: \"IL\",\n    italy: \"IT\",\n    jamaica: \"JM\",\n    japan: \"JP\",\n    jersey: \"JE\",\n    jordan: \"JO\",\n    kazakhstan: \"KZ\",\n    kenya: \"KE\",\n    kiribati: \"KI\",\n    \"republic of korea\": \"KR\",\n    \"south korea\": \"KR\",\n    \"democratic people's republic of korea\": \"KP\",\n    \"north korea\": \"KP\",\n    kuwait: \"KW\",\n    kyrgyzstan: \"KG\",\n    \"lao people's democratic republic\": \"LA\",\n    latvia: \"LV\",\n    lebanon: \"LB\",\n    lesotho: \"LS\",\n    liberia: \"LR\",\n    \"libyan arab jamahiriya\": \"LY\",\n    liechtenstein: \"LI\",\n    lithuania: \"LT\",\n    luxembourg: \"LU\",\n    macao: \"MO\",\n    macedonia: \"MK\",\n    madagascar: \"MG\",\n    malawi: \"MW\",\n    malaysia: \"MY\",\n    maldives: \"MV\",\n    mali: \"ML\",\n    malta: \"MT\",\n    \"marshall islands\": \"MH\",\n    martinique: \"MQ\",\n    mauritania: \"MR\",\n    mauritius: \"MU\",\n    mayotte: \"YT\",\n    mexico: \"MX\",\n    \"micronesia, federated states of\": \"FM\",\n    moldova: \"MD\",\n    monaco: \"MC\",\n    mongolia: \"MN\",\n    montenegro: \"ME\",\n    montserrat: \"MS\",\n    morocco: \"MA\",\n    mozambique: \"MZ\",\n    myanmar: \"MM\",\n    namibia: \"NA\",\n    nauru: \"NR\",\n    nepal: \"NP\",\n    netherlands: \"NL\",\n    \"netherlands antilles\": \"AN\",\n    \"new caledonia\": \"NC\",\n    \"new zealand\": \"NZ\",\n    nicaragua: \"NI\",\n    niger: \"NE\",\n    nigeria: \"NG\",\n    niue: \"NU\",\n    \"norfolk island\": \"NF\",\n    \"northern mariana islands\": \"MP\",\n    norway: \"NO\",\n    oman: \"OM\",\n    pakistan: \"PK\",\n    palau: \"PW\",\n    \"palestinian territory, occupied\": \"PS\",\n    panama: \"PA\",\n    \"papua new guinea\": \"PG\",\n    paraguay: \"PY\",\n    peru: \"PE\",\n    philippines: \"PH\",\n    pitcairn: \"PN\",\n    poland: \"PL\",\n    portugal: \"PT\",\n    \"puerto rico\": \"PR\",\n    qatar: \"QA\",\n    reunion: \"RE\",\n    romania: \"RO\",\n    \"russian federation\": \"RU\",\n    rwanda: \"RW\",\n    \"saint barthelemy\": \"BL\",\n    \"saint helena\": \"SH\",\n    \"saint kitts and nevis\": \"KN\",\n    \"saint lucia\": \"LC\",\n    \"saint martin\": \"MF\",\n    \"saint pierre and miquelon\": \"PM\",\n    \"saint vincent and grenadines\": \"VC\",\n    samoa: \"WS\",\n    \"san marino\": \"SM\",\n    \"sao tome and principe\": \"ST\",\n    \"saudi arabia\": \"SA\",\n    senegal: \"SN\",\n    serbia: \"RS\",\n    seychelles: \"SC\",\n    \"sierra leone\": \"SL\",\n    singapore: \"SG\",\n    slovakia: \"SK\",\n    slovenia: \"SI\",\n    \"solomon islands\": \"SB\",\n    somalia: \"SO\",\n    \"south africa\": \"ZA\",\n    \"south georgia and sandwich isl.\": \"GS\",\n    spain: \"ES\",\n    \"sri lanka\": \"LK\",\n    sudan: \"SD\",\n    suriname: \"SR\",\n    \"svalbard and jan mayen\": \"SJ\",\n    swaziland: \"SZ\",\n    sweden: \"SE\",\n    switzerland: \"CH\",\n    \"syrian arab republic\": \"SY\",\n    taiwan: \"TW\",\n    tajikistan: \"TJ\",\n    tanzania: \"TZ\",\n    thailand: \"TH\",\n    \"timor-leste\": \"TL\",\n    togo: \"TG\",\n    tokelau: \"TK\",\n    tonga: \"TO\",\n    \"trinidad and tobago\": \"TT\",\n    tunisia: \"TN\",\n    turkey: \"TR\",\n    turkmenistan: \"TM\",\n    \"turks and caicos islands\": \"TC\",\n    tuvalu: \"TV\",\n    uganda: \"UG\",\n    ukraine: \"UA\",\n    \"united arab emirates\": \"AE\",\n    \"united kingdom\": \"GB\",\n    \"united states\": \"US\",\n    \"united states outlying islands\": \"UM\",\n    uruguay: \"UY\",\n    uzbekistan: \"UZ\",\n    vanuatu: \"VU\",\n    venezuela: \"VE\",\n    vietnam: \"VN\",\n    \"virgin islands, british\": \"VG\",\n    \"virgin islands, u.s.\": \"VI\",\n    \"wallis and futuna\": \"WF\",\n    \"western sahara\": \"EH\",\n    yemen: \"YE\",\n    zambia: \"ZM\",\n    zimbabwe: \"ZW\",\n  };\n\n  static readonly IsoStates: { [id: string]: string } = {\n    alabama: \"AL\",\n    alaska: \"AK\",\n    \"american samoa\": \"AS\",\n    arizona: \"AZ\",\n    arkansas: \"AR\",\n    california: \"CA\",\n    colorado: \"CO\",\n    connecticut: \"CT\",\n    delaware: \"DE\",\n    \"district of columbia\": \"DC\",\n    \"federated states of micronesia\": \"FM\",\n    florida: \"FL\",\n    georgia: \"GA\",\n    guam: \"GU\",\n    hawaii: \"HI\",\n    idaho: \"ID\",\n    illinois: \"IL\",\n    indiana: \"IN\",\n    iowa: \"IA\",\n    kansas: \"KS\",\n    kentucky: \"KY\",\n    louisiana: \"LA\",\n    maine: \"ME\",\n    \"marshall islands\": \"MH\",\n    maryland: \"MD\",\n    massachusetts: \"MA\",\n    michigan: \"MI\",\n    minnesota: \"MN\",\n    mississippi: \"MS\",\n    missouri: \"MO\",\n    montana: \"MT\",\n    nebraska: \"NE\",\n    nevada: \"NV\",\n    \"new hampshire\": \"NH\",\n    \"new jersey\": \"NJ\",\n    \"new mexico\": \"NM\",\n    \"new york\": \"NY\",\n    \"north carolina\": \"NC\",\n    \"north dakota\": \"ND\",\n    \"northern mariana islands\": \"MP\",\n    ohio: \"OH\",\n    oklahoma: \"OK\",\n    oregon: \"OR\",\n    palau: \"PW\",\n    pennsylvania: \"PA\",\n    \"puerto rico\": \"PR\",\n    \"rhode island\": \"RI\",\n    \"south carolina\": \"SC\",\n    \"south dakota\": \"SD\",\n    tennessee: \"TN\",\n    texas: \"TX\",\n    utah: \"UT\",\n    vermont: \"VT\",\n    \"virgin islands\": \"VI\",\n    virginia: \"VA\",\n    washington: \"WA\",\n    \"west virginia\": \"WV\",\n    wisconsin: \"WI\",\n    wyoming: \"WY\",\n  };\n\n  static readonly IsoProvinces: { [id: string]: string } = {\n    alberta: \"AB\",\n    \"british columbia\": \"BC\",\n    manitoba: \"MB\",\n    \"new brunswick\": \"NB\",\n    \"newfoundland and labrador\": \"NL\",\n    \"nova scotia\": \"NS\",\n    ontario: \"ON\",\n    \"prince edward island\": \"PE\",\n    quebec: \"QC\",\n    saskatchewan: \"SK\",\n  };\n}\n","import { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { FieldType } from \"@bitwarden/common/enums/fieldType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { FieldView } from \"@bitwarden/common/models/view/fieldView\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport AutofillField from \"../models/autofillField\";\nimport AutofillPageDetails from \"../models/autofillPageDetails\";\nimport AutofillScript from \"../models/autofillScript\";\nimport { StateService } from \"../services/abstractions/state.service\";\n\nimport {\n  AutoFillOptions,\n  AutofillService as AutofillServiceInterface,\n  PageDetail,\n  FormData,\n} from \"./abstractions/autofill.service\";\nimport {\n  AutoFillConstants,\n  CreditCardAutoFillConstants,\n  IdentityAutoFillConstants,\n} from \"./autofillConstants\";\n\nexport interface GenerateFillScriptOptions {\n  skipUsernameOnlyFill: boolean;\n  onlyEmptyFields: boolean;\n  onlyVisibleFields: boolean;\n  fillNewPassword: boolean;\n  cipher: CipherView;\n}\n\nexport default class AutofillService implements AutofillServiceInterface {\n  constructor(\n    private cipherService: CipherService,\n    private stateService: StateService,\n    private totpService: TotpService,\n    private eventService: EventService,\n    private logService: LogService\n  ) {}\n\n  getFormsWithPasswordFields(pageDetails: AutofillPageDetails): FormData[] {\n    const formData: FormData[] = [];\n\n    const passwordFields = AutofillService.loadPasswordFields(\n      pageDetails,\n      true,\n      true,\n      false,\n      false\n    );\n    if (passwordFields.length === 0) {\n      return formData;\n    }\n\n    for (const formKey in pageDetails.forms) {\n      // eslint-disable-next-line\n      if (!pageDetails.forms.hasOwnProperty(formKey)) {\n        continue;\n      }\n\n      const formPasswordFields = passwordFields.filter((pf) => formKey === pf.form);\n      if (formPasswordFields.length > 0) {\n        let uf = this.findUsernameField(pageDetails, formPasswordFields[0], false, false, false);\n        if (uf == null) {\n          // not able to find any viewable username fields. maybe there are some \"hidden\" ones?\n          uf = this.findUsernameField(pageDetails, formPasswordFields[0], true, true, false);\n        }\n        formData.push({\n          form: pageDetails.forms[formKey],\n          password: formPasswordFields[0],\n          username: uf,\n          passwords: formPasswordFields,\n        });\n      }\n    }\n\n    return formData;\n  }\n\n  async doAutoFill(options: AutoFillOptions) {\n    const tab = options.tab;\n    if (!tab || !options.cipher || !options.pageDetails || !options.pageDetails.length) {\n      throw new Error(\"Nothing to auto-fill.\");\n    }\n\n    let totpPromise: Promise<string> = null;\n\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    let didAutofill = false;\n    options.pageDetails.forEach((pd) => {\n      // make sure we're still on correct tab\n      if (pd.tab.id !== tab.id || pd.tab.url !== tab.url) {\n        return;\n      }\n\n      const fillScript = this.generateFillScript(pd.details, {\n        skipUsernameOnlyFill: options.skipUsernameOnlyFill || false,\n        onlyEmptyFields: options.onlyEmptyFields || false,\n        onlyVisibleFields: options.onlyVisibleFields || false,\n        fillNewPassword: options.fillNewPassword || false,\n        cipher: options.cipher,\n      });\n\n      if (!fillScript || !fillScript.script || !fillScript.script.length) {\n        return;\n      }\n\n      // Add a small delay between operations\n      fillScript.properties.delay_between_operations = 20;\n\n      didAutofill = true;\n      if (!options.skipLastUsed) {\n        this.cipherService.updateLastUsedDate(options.cipher.id);\n      }\n\n      BrowserApi.tabSendMessage(\n        tab,\n        {\n          command: \"fillForm\",\n          fillScript: fillScript,\n          url: tab.url,\n        },\n        { frameId: pd.frameId }\n      );\n\n      if (\n        options.cipher.type !== CipherType.Login ||\n        totpPromise ||\n        !options.cipher.login.totp ||\n        (!canAccessPremium && !options.cipher.organizationUseTotp)\n      ) {\n        return;\n      }\n\n      totpPromise = this.stateService.getDisableAutoTotpCopy().then((disabled) => {\n        if (!disabled) {\n          return this.totpService.getCode(options.cipher.login.totp);\n        }\n        return null;\n      });\n    });\n\n    if (didAutofill) {\n      this.eventService.collect(EventType.Cipher_ClientAutofilled, options.cipher.id);\n      if (totpPromise != null) {\n        return await totpPromise;\n      } else {\n        return null;\n      }\n    } else {\n      throw new Error(\"Did not auto-fill.\");\n    }\n  }\n\n  async doAutoFillOnTab(pageDetails: PageDetail[], tab: chrome.tabs.Tab, fromCommand: boolean) {\n    let cipher: CipherView;\n    if (fromCommand) {\n      cipher = await this.cipherService.getNextCipherForUrl(tab.url);\n    } else {\n      const lastLaunchedCipher = await this.cipherService.getLastLaunchedForUrl(tab.url, true);\n      if (\n        lastLaunchedCipher &&\n        Date.now().valueOf() - lastLaunchedCipher.localData?.lastLaunched?.valueOf() < 30000\n      ) {\n        cipher = lastLaunchedCipher;\n      } else {\n        cipher = await this.cipherService.getLastUsedForUrl(tab.url, true);\n      }\n\n      if (cipher == null) {\n        return null;\n      }\n    }\n\n    if (cipher.reprompt !== CipherRepromptType.None) {\n      return;\n    }\n\n    const totpCode = await this.doAutoFill({\n      tab: tab,\n      cipher: cipher,\n      pageDetails: pageDetails,\n      skipLastUsed: !fromCommand,\n      skipUsernameOnlyFill: !fromCommand,\n      onlyEmptyFields: !fromCommand,\n      onlyVisibleFields: !fromCommand,\n      fillNewPassword: fromCommand,\n    });\n\n    // Update last used index as autofill has succeed\n    if (fromCommand) {\n      this.cipherService.updateLastUsedIndexForUrl(tab.url);\n    }\n\n    return totpCode;\n  }\n\n  async doAutoFillActiveTab(pageDetails: PageDetail[], fromCommand: boolean) {\n    const tab = await this.getActiveTab();\n    if (!tab || !tab.url) {\n      return;\n    }\n\n    return await this.doAutoFillOnTab(pageDetails, tab, fromCommand);\n  }\n\n  // Helpers\n\n  private async getActiveTab(): Promise<chrome.tabs.Tab> {\n    const tab = await BrowserApi.getTabFromCurrentWindow();\n    if (!tab) {\n      throw new Error(\"No tab found.\");\n    }\n\n    return tab;\n  }\n\n  private generateFillScript(\n    pageDetails: AutofillPageDetails,\n    options: GenerateFillScriptOptions\n  ): AutofillScript {\n    if (!pageDetails || !options.cipher) {\n      return null;\n    }\n\n    let fillScript = new AutofillScript(pageDetails.documentUUID);\n    const filledFields: { [id: string]: AutofillField } = {};\n    const fields = options.cipher.fields;\n\n    if (fields && fields.length) {\n      const fieldNames: string[] = [];\n\n      fields.forEach((f) => {\n        if (AutofillService.hasValue(f.name)) {\n          fieldNames.push(f.name.toLowerCase());\n        }\n      });\n\n      pageDetails.fields.forEach((field) => {\n        // eslint-disable-next-line\n        if (filledFields.hasOwnProperty(field.opid)) {\n          return;\n        }\n\n        if (!field.viewable && field.tagName !== \"span\") {\n          return;\n        }\n\n        const matchingIndex = this.findMatchingFieldIndex(field, fieldNames);\n        if (matchingIndex > -1) {\n          const matchingField: FieldView = fields[matchingIndex];\n          let val: string;\n          if (matchingField.type === FieldType.Linked) {\n            // Assumption: Linked Field is not being used to autofill a boolean value\n            val = options.cipher.linkedFieldValue(matchingField.linkedId) as string;\n          } else {\n            val = matchingField.value;\n            if (val == null && matchingField.type === FieldType.Boolean) {\n              val = \"false\";\n            }\n          }\n\n          filledFields[field.opid] = field;\n          AutofillService.fillByOpid(fillScript, field, val);\n        }\n      });\n    }\n\n    switch (options.cipher.type) {\n      case CipherType.Login:\n        fillScript = this.generateLoginFillScript(fillScript, pageDetails, filledFields, options);\n        break;\n      case CipherType.Card:\n        fillScript = this.generateCardFillScript(fillScript, pageDetails, filledFields, options);\n        break;\n      case CipherType.Identity:\n        fillScript = this.generateIdentityFillScript(\n          fillScript,\n          pageDetails,\n          filledFields,\n          options\n        );\n        break;\n      default:\n        return null;\n    }\n\n    return fillScript;\n  }\n\n  private generateLoginFillScript(\n    fillScript: AutofillScript,\n    pageDetails: AutofillPageDetails,\n    filledFields: { [id: string]: AutofillField },\n    options: GenerateFillScriptOptions\n  ): AutofillScript {\n    if (!options.cipher.login) {\n      return null;\n    }\n\n    const passwords: AutofillField[] = [];\n    const usernames: AutofillField[] = [];\n    let pf: AutofillField = null;\n    let username: AutofillField = null;\n    const login = options.cipher.login;\n\n    if (!login.password || login.password === \"\") {\n      // No password for this login. Maybe they just wanted to auto-fill some custom fields?\n      fillScript = AutofillService.setFillScriptForFocus(filledFields, fillScript);\n      return fillScript;\n    }\n\n    let passwordFields = AutofillService.loadPasswordFields(\n      pageDetails,\n      false,\n      false,\n      options.onlyEmptyFields,\n      options.fillNewPassword\n    );\n    if (!passwordFields.length && !options.onlyVisibleFields) {\n      // not able to find any viewable password fields. maybe there are some \"hidden\" ones?\n      passwordFields = AutofillService.loadPasswordFields(\n        pageDetails,\n        true,\n        true,\n        options.onlyEmptyFields,\n        options.fillNewPassword\n      );\n    }\n\n    for (const formKey in pageDetails.forms) {\n      // eslint-disable-next-line\n      if (!pageDetails.forms.hasOwnProperty(formKey)) {\n        continue;\n      }\n\n      const passwordFieldsForForm: AutofillField[] = [];\n      passwordFields.forEach((passField) => {\n        if (formKey === passField.form) {\n          passwordFieldsForForm.push(passField);\n        }\n      });\n\n      passwordFields.forEach((passField) => {\n        pf = passField;\n        passwords.push(pf);\n\n        if (login.username) {\n          username = this.findUsernameField(pageDetails, pf, false, false, false);\n\n          if (!username && !options.onlyVisibleFields) {\n            // not able to find any viewable username fields. maybe there are some \"hidden\" ones?\n            username = this.findUsernameField(pageDetails, pf, true, true, false);\n          }\n\n          if (username) {\n            usernames.push(username);\n          }\n        }\n      });\n    }\n\n    if (passwordFields.length && !passwords.length) {\n      // The page does not have any forms with password fields. Use the first password field on the page and the\n      // input field just before it as the username.\n\n      pf = passwordFields[0];\n      passwords.push(pf);\n\n      if (login.username && pf.elementNumber > 0) {\n        username = this.findUsernameField(pageDetails, pf, false, false, true);\n\n        if (!username && !options.onlyVisibleFields) {\n          // not able to find any viewable username fields. maybe there are some \"hidden\" ones?\n          username = this.findUsernameField(pageDetails, pf, true, true, true);\n        }\n\n        if (username) {\n          usernames.push(username);\n        }\n      }\n    }\n\n    if (!passwordFields.length && !options.skipUsernameOnlyFill) {\n      // No password fields on this page. Let's try to just fuzzy fill the username.\n      pageDetails.fields.forEach((f) => {\n        if (\n          f.viewable &&\n          (f.type === \"text\" || f.type === \"email\" || f.type === \"tel\") &&\n          AutofillService.fieldIsFuzzyMatch(f, AutoFillConstants.UsernameFieldNames)\n        ) {\n          usernames.push(f);\n        }\n      });\n    }\n\n    usernames.forEach((u) => {\n      // eslint-disable-next-line\n      if (filledFields.hasOwnProperty(u.opid)) {\n        return;\n      }\n\n      filledFields[u.opid] = u;\n      AutofillService.fillByOpid(fillScript, u, login.username);\n    });\n\n    passwords.forEach((p) => {\n      // eslint-disable-next-line\n      if (filledFields.hasOwnProperty(p.opid)) {\n        return;\n      }\n\n      filledFields[p.opid] = p;\n      AutofillService.fillByOpid(fillScript, p, login.password);\n    });\n\n    fillScript = AutofillService.setFillScriptForFocus(filledFields, fillScript);\n    return fillScript;\n  }\n\n  private generateCardFillScript(\n    fillScript: AutofillScript,\n    pageDetails: AutofillPageDetails,\n    filledFields: { [id: string]: AutofillField },\n    options: GenerateFillScriptOptions\n  ): AutofillScript {\n    if (!options.cipher.card) {\n      return null;\n    }\n\n    const fillFields: { [id: string]: AutofillField } = {};\n\n    pageDetails.fields.forEach((f) => {\n      if (AutofillService.forCustomFieldsOnly(f)) {\n        return;\n      }\n\n      if (this.isExcludedType(f.type, AutoFillConstants.ExcludedAutofillTypes)) {\n        return;\n      }\n\n      for (let i = 0; i < CreditCardAutoFillConstants.CardAttributes.length; i++) {\n        const attr = CreditCardAutoFillConstants.CardAttributes[i];\n        // eslint-disable-next-line\n        if (!f.hasOwnProperty(attr) || !f[attr] || !f.viewable) {\n          continue;\n        }\n\n        // ref https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill\n        // ref https://developers.google.com/web/fundamentals/design-and-ux/input/forms/\n        if (\n          !fillFields.cardholderName &&\n          AutofillService.isFieldMatch(\n            f[attr],\n            CreditCardAutoFillConstants.CardHolderFieldNames,\n            CreditCardAutoFillConstants.CardHolderFieldNameValues\n          )\n        ) {\n          fillFields.cardholderName = f;\n          break;\n        } else if (\n          !fillFields.number &&\n          AutofillService.isFieldMatch(\n            f[attr],\n            CreditCardAutoFillConstants.CardNumberFieldNames,\n            CreditCardAutoFillConstants.CardNumberFieldNameValues\n          )\n        ) {\n          fillFields.number = f;\n          break;\n        } else if (\n          !fillFields.exp &&\n          AutofillService.isFieldMatch(\n            f[attr],\n            CreditCardAutoFillConstants.CardExpiryFieldNames,\n            CreditCardAutoFillConstants.CardExpiryFieldNameValues\n          )\n        ) {\n          fillFields.exp = f;\n          break;\n        } else if (\n          !fillFields.expMonth &&\n          AutofillService.isFieldMatch(f[attr], CreditCardAutoFillConstants.ExpiryMonthFieldNames)\n        ) {\n          fillFields.expMonth = f;\n          break;\n        } else if (\n          !fillFields.expYear &&\n          AutofillService.isFieldMatch(f[attr], CreditCardAutoFillConstants.ExpiryYearFieldNames)\n        ) {\n          fillFields.expYear = f;\n          break;\n        } else if (\n          !fillFields.code &&\n          AutofillService.isFieldMatch(f[attr], CreditCardAutoFillConstants.CVVFieldNames)\n        ) {\n          fillFields.code = f;\n          break;\n        } else if (\n          !fillFields.brand &&\n          AutofillService.isFieldMatch(f[attr], CreditCardAutoFillConstants.CardBrandFieldNames)\n        ) {\n          fillFields.brand = f;\n          break;\n        }\n      }\n    });\n\n    const card = options.cipher.card;\n    this.makeScriptAction(fillScript, card, fillFields, filledFields, \"cardholderName\");\n    this.makeScriptAction(fillScript, card, fillFields, filledFields, \"number\");\n    this.makeScriptAction(fillScript, card, fillFields, filledFields, \"code\");\n    this.makeScriptAction(fillScript, card, fillFields, filledFields, \"brand\");\n\n    if (fillFields.expMonth && AutofillService.hasValue(card.expMonth)) {\n      let expMonth: string = card.expMonth;\n\n      if (fillFields.expMonth.selectInfo && fillFields.expMonth.selectInfo.options) {\n        let index: number = null;\n        const siOptions = fillFields.expMonth.selectInfo.options;\n        if (siOptions.length === 12) {\n          index = parseInt(card.expMonth, null) - 1;\n        } else if (siOptions.length === 13) {\n          if (\n            siOptions[0][0] != null &&\n            siOptions[0][0] !== \"\" &&\n            (siOptions[12][0] == null || siOptions[12][0] === \"\")\n          ) {\n            index = parseInt(card.expMonth, null) - 1;\n          } else {\n            index = parseInt(card.expMonth, null);\n          }\n        }\n\n        if (index != null) {\n          const option = siOptions[index];\n          if (option.length > 1) {\n            expMonth = option[1];\n          }\n        }\n      } else if (\n        (this.fieldAttrsContain(fillFields.expMonth, \"mm\") ||\n          fillFields.expMonth.maxLength === 2) &&\n        expMonth.length === 1\n      ) {\n        expMonth = \"0\" + expMonth;\n      }\n\n      filledFields[fillFields.expMonth.opid] = fillFields.expMonth;\n      AutofillService.fillByOpid(fillScript, fillFields.expMonth, expMonth);\n    }\n\n    if (fillFields.expYear && AutofillService.hasValue(card.expYear)) {\n      let expYear: string = card.expYear;\n      if (fillFields.expYear.selectInfo && fillFields.expYear.selectInfo.options) {\n        for (let i = 0; i < fillFields.expYear.selectInfo.options.length; i++) {\n          const o: [string, string] = fillFields.expYear.selectInfo.options[i];\n          if (o[0] === card.expYear || o[1] === card.expYear) {\n            expYear = o[1];\n            break;\n          }\n          if (\n            o[1].length === 2 &&\n            card.expYear.length === 4 &&\n            o[1] === card.expYear.substring(2)\n          ) {\n            expYear = o[1];\n            break;\n          }\n          const colonIndex = o[1].indexOf(\":\");\n          if (colonIndex > -1 && o[1].length > colonIndex + 1) {\n            const val = o[1].substring(colonIndex + 2);\n            if (val != null && val.trim() !== \"\" && val === card.expYear) {\n              expYear = o[1];\n              break;\n            }\n          }\n        }\n      } else if (\n        this.fieldAttrsContain(fillFields.expYear, \"yyyy\") ||\n        fillFields.expYear.maxLength === 4\n      ) {\n        if (expYear.length === 2) {\n          expYear = \"20\" + expYear;\n        }\n      } else if (\n        this.fieldAttrsContain(fillFields.expYear, \"yy\") ||\n        fillFields.expYear.maxLength === 2\n      ) {\n        if (expYear.length === 4) {\n          expYear = expYear.substr(2);\n        }\n      }\n\n      filledFields[fillFields.expYear.opid] = fillFields.expYear;\n      AutofillService.fillByOpid(fillScript, fillFields.expYear, expYear);\n    }\n\n    if (\n      fillFields.exp &&\n      AutofillService.hasValue(card.expMonth) &&\n      AutofillService.hasValue(card.expYear)\n    ) {\n      const fullMonth = (\"0\" + card.expMonth).slice(-2);\n\n      let fullYear: string = card.expYear;\n      let partYear: string = null;\n      if (fullYear.length === 2) {\n        partYear = fullYear;\n        fullYear = \"20\" + fullYear;\n      } else if (fullYear.length === 4) {\n        partYear = fullYear.substr(2, 2);\n      }\n\n      let exp: string = null;\n      for (let i = 0; i < CreditCardAutoFillConstants.MonthAbbr.length; i++) {\n        if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] +\n              \"/\" +\n              CreditCardAutoFillConstants.YearAbbrShort[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = fullMonth + \"/\" + partYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] +\n              \"/\" +\n              CreditCardAutoFillConstants.YearAbbrLong[i]\n          )\n        ) {\n          exp = fullMonth + \"/\" + fullYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrShort[i] +\n              \"/\" +\n              CreditCardAutoFillConstants.MonthAbbr[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = partYear + \"/\" + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrLong[i] +\n              \"/\" +\n              CreditCardAutoFillConstants.MonthAbbr[i]\n          )\n        ) {\n          exp = fullYear + \"/\" + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] +\n              \"-\" +\n              CreditCardAutoFillConstants.YearAbbrShort[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = fullMonth + \"-\" + partYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] +\n              \"-\" +\n              CreditCardAutoFillConstants.YearAbbrLong[i]\n          )\n        ) {\n          exp = fullMonth + \"-\" + fullYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrShort[i] +\n              \"-\" +\n              CreditCardAutoFillConstants.MonthAbbr[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = partYear + \"-\" + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrLong[i] +\n              \"-\" +\n              CreditCardAutoFillConstants.MonthAbbr[i]\n          )\n        ) {\n          exp = fullYear + \"-\" + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrShort[i] + CreditCardAutoFillConstants.MonthAbbr[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = partYear + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrLong[i] + CreditCardAutoFillConstants.MonthAbbr[i]\n          )\n        ) {\n          exp = fullYear + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] + CreditCardAutoFillConstants.YearAbbrShort[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = fullMonth + partYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] + CreditCardAutoFillConstants.YearAbbrLong[i]\n          )\n        ) {\n          exp = fullMonth + fullYear;\n        }\n\n        if (exp != null) {\n          break;\n        }\n      }\n\n      if (exp == null) {\n        exp = fullYear + \"-\" + fullMonth;\n      }\n\n      this.makeScriptActionWithValue(fillScript, exp, fillFields.exp, filledFields);\n    }\n\n    return fillScript;\n  }\n\n  private fieldAttrsContain(field: AutofillField, containsVal: string) {\n    if (!field) {\n      return false;\n    }\n\n    let doesContain = false;\n    CreditCardAutoFillConstants.CardAttributesExtended.forEach((attr) => {\n      // eslint-disable-next-line\n      if (doesContain || !field.hasOwnProperty(attr) || !field[attr]) {\n        return;\n      }\n\n      let val = field[attr];\n      val = val.replace(/ /g, \"\").toLowerCase();\n      doesContain = val.indexOf(containsVal) > -1;\n    });\n\n    return doesContain;\n  }\n\n  private generateIdentityFillScript(\n    fillScript: AutofillScript,\n    pageDetails: AutofillPageDetails,\n    filledFields: { [id: string]: AutofillField },\n    options: GenerateFillScriptOptions\n  ): AutofillScript {\n    if (!options.cipher.identity) {\n      return null;\n    }\n\n    const fillFields: { [id: string]: AutofillField } = {};\n\n    pageDetails.fields.forEach((f) => {\n      if (AutofillService.forCustomFieldsOnly(f)) {\n        return;\n      }\n\n      if (this.isExcludedType(f.type, AutoFillConstants.ExcludedAutofillTypes)) {\n        return;\n      }\n\n      for (let i = 0; i < IdentityAutoFillConstants.IdentityAttributes.length; i++) {\n        const attr = IdentityAutoFillConstants.IdentityAttributes[i];\n        // eslint-disable-next-line\n        if (!f.hasOwnProperty(attr) || !f[attr] || !f.viewable) {\n          continue;\n        }\n\n        // ref https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill\n        // ref https://developers.google.com/web/fundamentals/design-and-ux/input/forms/\n        if (\n          !fillFields.name &&\n          AutofillService.isFieldMatch(\n            f[attr],\n            IdentityAutoFillConstants.FullNameFieldNames,\n            IdentityAutoFillConstants.FullNameFieldNameValues\n          )\n        ) {\n          fillFields.name = f;\n          break;\n        } else if (\n          !fillFields.firstName &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.FirstnameFieldNames)\n        ) {\n          fillFields.firstName = f;\n          break;\n        } else if (\n          !fillFields.middleName &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.MiddlenameFieldNames)\n        ) {\n          fillFields.middleName = f;\n          break;\n        } else if (\n          !fillFields.lastName &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.LastnameFieldNames)\n        ) {\n          fillFields.lastName = f;\n          break;\n        } else if (\n          !fillFields.title &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.TitleFieldNames)\n        ) {\n          fillFields.title = f;\n          break;\n        } else if (\n          !fillFields.email &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.EmailFieldNames)\n        ) {\n          fillFields.email = f;\n          break;\n        } else if (\n          !fillFields.address &&\n          AutofillService.isFieldMatch(\n            f[attr],\n            IdentityAutoFillConstants.AddressFieldNames,\n            IdentityAutoFillConstants.AddressFieldNameValues\n          )\n        ) {\n          fillFields.address = f;\n          break;\n        } else if (\n          !fillFields.address1 &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.Address1FieldNames)\n        ) {\n          fillFields.address1 = f;\n          break;\n        } else if (\n          !fillFields.address2 &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.Address2FieldNames)\n        ) {\n          fillFields.address2 = f;\n          break;\n        } else if (\n          !fillFields.address3 &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.Address3FieldNames)\n        ) {\n          fillFields.address3 = f;\n          break;\n        } else if (\n          !fillFields.postalCode &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.PostalCodeFieldNames)\n        ) {\n          fillFields.postalCode = f;\n          break;\n        } else if (\n          !fillFields.city &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.CityFieldNames)\n        ) {\n          fillFields.city = f;\n          break;\n        } else if (\n          !fillFields.state &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.StateFieldNames)\n        ) {\n          fillFields.state = f;\n          break;\n        } else if (\n          !fillFields.country &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.CountryFieldNames)\n        ) {\n          fillFields.country = f;\n          break;\n        } else if (\n          !fillFields.phone &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.PhoneFieldNames)\n        ) {\n          fillFields.phone = f;\n          break;\n        } else if (\n          !fillFields.username &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.UserNameFieldNames)\n        ) {\n          fillFields.username = f;\n          break;\n        } else if (\n          !fillFields.company &&\n          AutofillService.isFieldMatch(f[attr], IdentityAutoFillConstants.CompanyFieldNames)\n        ) {\n          fillFields.company = f;\n          break;\n        }\n      }\n    });\n\n    const identity = options.cipher.identity;\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"title\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"firstName\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"middleName\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"lastName\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"address1\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"address2\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"address3\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"city\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"postalCode\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"company\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"email\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"phone\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"username\");\n\n    let filledState = false;\n    if (fillFields.state && identity.state && identity.state.length > 2) {\n      const stateLower = identity.state.toLowerCase();\n      const isoState =\n        IdentityAutoFillConstants.IsoStates[stateLower] ||\n        IdentityAutoFillConstants.IsoProvinces[stateLower];\n      if (isoState) {\n        filledState = true;\n        this.makeScriptActionWithValue(fillScript, isoState, fillFields.state, filledFields);\n      }\n    }\n\n    if (!filledState) {\n      this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"state\");\n    }\n\n    let filledCountry = false;\n    if (fillFields.country && identity.country && identity.country.length > 2) {\n      const countryLower = identity.country.toLowerCase();\n      const isoCountry = IdentityAutoFillConstants.IsoCountries[countryLower];\n      if (isoCountry) {\n        filledCountry = true;\n        this.makeScriptActionWithValue(fillScript, isoCountry, fillFields.country, filledFields);\n      }\n    }\n\n    if (!filledCountry) {\n      this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"country\");\n    }\n\n    if (fillFields.name && (identity.firstName || identity.lastName)) {\n      let fullName = \"\";\n      if (AutofillService.hasValue(identity.firstName)) {\n        fullName = identity.firstName;\n      }\n      if (AutofillService.hasValue(identity.middleName)) {\n        if (fullName !== \"\") {\n          fullName += \" \";\n        }\n        fullName += identity.middleName;\n      }\n      if (AutofillService.hasValue(identity.lastName)) {\n        if (fullName !== \"\") {\n          fullName += \" \";\n        }\n        fullName += identity.lastName;\n      }\n\n      this.makeScriptActionWithValue(fillScript, fullName, fillFields.name, filledFields);\n    }\n\n    if (fillFields.address && AutofillService.hasValue(identity.address1)) {\n      let address = \"\";\n      if (AutofillService.hasValue(identity.address1)) {\n        address = identity.address1;\n      }\n      if (AutofillService.hasValue(identity.address2)) {\n        if (address !== \"\") {\n          address += \", \";\n        }\n        address += identity.address2;\n      }\n      if (AutofillService.hasValue(identity.address3)) {\n        if (address !== \"\") {\n          address += \", \";\n        }\n        address += identity.address3;\n      }\n\n      this.makeScriptActionWithValue(fillScript, address, fillFields.address, filledFields);\n    }\n\n    return fillScript;\n  }\n\n  private isExcludedType(type: string, excludedTypes: string[]) {\n    return excludedTypes.indexOf(type) > -1;\n  }\n\n  private static isFieldMatch(\n    value: string,\n    options: string[],\n    containsOptions?: string[]\n  ): boolean {\n    value = value\n      .trim()\n      .toLowerCase()\n      .replace(/[^a-zA-Z0-9]+/g, \"\");\n    for (let i = 0; i < options.length; i++) {\n      let option = options[i];\n      const checkValueContains = containsOptions == null || containsOptions.indexOf(option) > -1;\n      option = option.toLowerCase().replace(/-/g, \"\");\n      if (value === option || (checkValueContains && value.indexOf(option) > -1)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  private makeScriptAction(\n    fillScript: AutofillScript,\n    cipherData: any,\n    fillFields: { [id: string]: AutofillField },\n    filledFields: { [id: string]: AutofillField },\n    dataProp: string,\n    fieldProp?: string\n  ) {\n    fieldProp = fieldProp || dataProp;\n    this.makeScriptActionWithValue(\n      fillScript,\n      cipherData[dataProp],\n      fillFields[fieldProp],\n      filledFields\n    );\n  }\n\n  private makeScriptActionWithValue(\n    fillScript: AutofillScript,\n    dataValue: any,\n    field: AutofillField,\n    filledFields: { [id: string]: AutofillField }\n  ) {\n    let doFill = false;\n    if (AutofillService.hasValue(dataValue) && field) {\n      if (field.type === \"select-one\" && field.selectInfo && field.selectInfo.options) {\n        for (let i = 0; i < field.selectInfo.options.length; i++) {\n          const option = field.selectInfo.options[i];\n          for (let j = 0; j < option.length; j++) {\n            if (\n              AutofillService.hasValue(option[j]) &&\n              option[j].toLowerCase() === dataValue.toLowerCase()\n            ) {\n              doFill = true;\n              if (option.length > 1) {\n                dataValue = option[1];\n              }\n              break;\n            }\n          }\n\n          if (doFill) {\n            break;\n          }\n        }\n      } else {\n        doFill = true;\n      }\n    }\n\n    if (doFill) {\n      filledFields[field.opid] = field;\n      AutofillService.fillByOpid(fillScript, field, dataValue);\n    }\n  }\n\n  static loadPasswordFields(\n    pageDetails: AutofillPageDetails,\n    canBeHidden: boolean,\n    canBeReadOnly: boolean,\n    mustBeEmpty: boolean,\n    fillNewPassword: boolean\n  ) {\n    const arr: AutofillField[] = [];\n    pageDetails.fields.forEach((f) => {\n      if (AutofillService.forCustomFieldsOnly(f)) {\n        return;\n      }\n\n      const isPassword = f.type === \"password\";\n      const valueIsLikePassword = (value: string) => {\n        if (value == null) {\n          return false;\n        }\n        // Removes all whitespace, _ and - characters\n        // eslint-disable-next-line\n        const cleanedValue = value.toLowerCase().replace(/[\\s_\\-]/g, \"\");\n\n        if (cleanedValue.indexOf(\"password\") < 0) {\n          return false;\n        }\n\n        if (AutoFillConstants.PasswordFieldIgnoreList.some((i) => cleanedValue.indexOf(i) > -1)) {\n          return false;\n        }\n\n        return true;\n      };\n      const isLikePassword = () => {\n        if (f.type !== \"text\") {\n          return false;\n        }\n        if (valueIsLikePassword(f.htmlID)) {\n          return true;\n        }\n        if (valueIsLikePassword(f.htmlName)) {\n          return true;\n        }\n        if (valueIsLikePassword(f.placeholder)) {\n          return true;\n        }\n        return false;\n      };\n      if (\n        !f.disabled &&\n        (canBeReadOnly || !f.readonly) &&\n        (isPassword || isLikePassword()) &&\n        (canBeHidden || f.viewable) &&\n        (!mustBeEmpty || f.value == null || f.value.trim() === \"\") &&\n        (fillNewPassword || f.autoCompleteType !== \"new-password\")\n      ) {\n        arr.push(f);\n      }\n    });\n    return arr;\n  }\n\n  private findUsernameField(\n    pageDetails: AutofillPageDetails,\n    passwordField: AutofillField,\n    canBeHidden: boolean,\n    canBeReadOnly: boolean,\n    withoutForm: boolean\n  ) {\n    let usernameField: AutofillField = null;\n    for (let i = 0; i < pageDetails.fields.length; i++) {\n      const f = pageDetails.fields[i];\n      if (AutofillService.forCustomFieldsOnly(f)) {\n        continue;\n      }\n\n      if (f.elementNumber >= passwordField.elementNumber) {\n        break;\n      }\n\n      if (\n        !f.disabled &&\n        (canBeReadOnly || !f.readonly) &&\n        (withoutForm || f.form === passwordField.form) &&\n        (canBeHidden || f.viewable) &&\n        (f.type === \"text\" || f.type === \"email\" || f.type === \"tel\")\n      ) {\n        usernameField = f;\n\n        if (this.findMatchingFieldIndex(f, AutoFillConstants.UsernameFieldNames) > -1) {\n          // We found an exact match. No need to keep looking.\n          break;\n        }\n      }\n    }\n\n    return usernameField;\n  }\n\n  private findMatchingFieldIndex(field: AutofillField, names: string[]): number {\n    for (let i = 0; i < names.length; i++) {\n      if (names[i].indexOf(\"=\") > -1) {\n        if (this.fieldPropertyIsPrefixMatch(field, \"htmlID\", names[i], \"id\")) {\n          return i;\n        }\n        if (this.fieldPropertyIsPrefixMatch(field, \"htmlName\", names[i], \"name\")) {\n          return i;\n        }\n        if (this.fieldPropertyIsPrefixMatch(field, \"label-tag\", names[i], \"label\")) {\n          return i;\n        }\n        if (this.fieldPropertyIsPrefixMatch(field, \"label-aria\", names[i], \"label\")) {\n          return i;\n        }\n        if (this.fieldPropertyIsPrefixMatch(field, \"placeholder\", names[i], \"placeholder\")) {\n          return i;\n        }\n      }\n\n      if (this.fieldPropertyIsMatch(field, \"htmlID\", names[i])) {\n        return i;\n      }\n      if (this.fieldPropertyIsMatch(field, \"htmlName\", names[i])) {\n        return i;\n      }\n      if (this.fieldPropertyIsMatch(field, \"label-tag\", names[i])) {\n        return i;\n      }\n      if (this.fieldPropertyIsMatch(field, \"label-aria\", names[i])) {\n        return i;\n      }\n      if (this.fieldPropertyIsMatch(field, \"placeholder\", names[i])) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  private fieldPropertyIsPrefixMatch(\n    field: any,\n    property: string,\n    name: string,\n    prefix: string,\n    separator = \"=\"\n  ): boolean {\n    if (name.indexOf(prefix + separator) === 0) {\n      const sepIndex = name.indexOf(separator);\n      const val = name.substring(sepIndex + 1);\n      return val != null && this.fieldPropertyIsMatch(field, property, val);\n    }\n    return false;\n  }\n\n  private fieldPropertyIsMatch(field: any, property: string, name: string): boolean {\n    let fieldVal = field[property] as string;\n    if (!AutofillService.hasValue(fieldVal)) {\n      return false;\n    }\n\n    fieldVal = fieldVal.trim().replace(/(?:\\r\\n|\\r|\\n)/g, \"\");\n    if (name.startsWith(\"regex=\")) {\n      try {\n        const regexParts = name.split(\"=\", 2);\n        if (regexParts.length === 2) {\n          const regex = new RegExp(regexParts[1], \"i\");\n          return regex.test(fieldVal);\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else if (name.startsWith(\"csv=\")) {\n      const csvParts = name.split(\"=\", 2);\n      if (csvParts.length === 2) {\n        const csvVals = csvParts[1].split(\",\");\n        for (let i = 0; i < csvVals.length; i++) {\n          const val = csvVals[i];\n          if (val != null && val.trim().toLowerCase() === fieldVal.toLowerCase()) {\n            return true;\n          }\n        }\n        return false;\n      }\n    }\n\n    return fieldVal.toLowerCase() === name;\n  }\n\n  static fieldIsFuzzyMatch(field: AutofillField, names: string[]): boolean {\n    if (AutofillService.hasValue(field.htmlID) && this.fuzzyMatch(names, field.htmlID)) {\n      return true;\n    }\n    if (AutofillService.hasValue(field.htmlName) && this.fuzzyMatch(names, field.htmlName)) {\n      return true;\n    }\n    if (\n      AutofillService.hasValue(field[\"label-tag\"]) &&\n      this.fuzzyMatch(names, field[\"label-tag\"])\n    ) {\n      return true;\n    }\n    if (AutofillService.hasValue(field.placeholder) && this.fuzzyMatch(names, field.placeholder)) {\n      return true;\n    }\n    if (\n      AutofillService.hasValue(field[\"label-left\"]) &&\n      this.fuzzyMatch(names, field[\"label-left\"])\n    ) {\n      return true;\n    }\n    if (\n      AutofillService.hasValue(field[\"label-top\"]) &&\n      this.fuzzyMatch(names, field[\"label-top\"])\n    ) {\n      return true;\n    }\n    if (\n      AutofillService.hasValue(field[\"label-aria\"]) &&\n      this.fuzzyMatch(names, field[\"label-aria\"])\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n\n  private static fuzzyMatch(options: string[], value: string): boolean {\n    if (options == null || options.length === 0 || value == null || value === \"\") {\n      return false;\n    }\n\n    value = value\n      .replace(/(?:\\r\\n|\\r|\\n)/g, \"\")\n      .trim()\n      .toLowerCase();\n\n    for (let i = 0; i < options.length; i++) {\n      if (value.indexOf(options[i]) > -1) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  static hasValue(str: string): boolean {\n    return str && str !== \"\";\n  }\n\n  static setFillScriptForFocus(\n    filledFields: { [id: string]: AutofillField },\n    fillScript: AutofillScript\n  ): AutofillScript {\n    let lastField: AutofillField = null;\n    let lastPasswordField: AutofillField = null;\n\n    for (const opid in filledFields) {\n      // eslint-disable-next-line\n      if (filledFields.hasOwnProperty(opid) && filledFields[opid].viewable) {\n        lastField = filledFields[opid];\n\n        if (filledFields[opid].type === \"password\") {\n          lastPasswordField = filledFields[opid];\n        }\n      }\n    }\n\n    // Prioritize password field over others.\n    if (lastPasswordField) {\n      fillScript.script.push([\"focus_by_opid\", lastPasswordField.opid]);\n    } else if (lastField) {\n      fillScript.script.push([\"focus_by_opid\", lastField.opid]);\n    }\n\n    return fillScript;\n  }\n\n  static fillByOpid(fillScript: AutofillScript, field: AutofillField, value: string): void {\n    if (field.maxLength && value && value.length > field.maxLength) {\n      value = value.substr(0, value.length);\n    }\n    if (field.tagName !== \"span\") {\n      fillScript.script.push([\"click_on_opid\", field.opid]);\n      fillScript.script.push([\"focus_by_opid\", field.opid]);\n    }\n    fillScript.script.push([\"fill_by_opid\", field.opid, value]);\n  }\n\n  static forCustomFieldsOnly(field: AutofillField): boolean {\n    return field.tagName === \"span\";\n  }\n}\n","export enum ClientType {\n  Web = \"web\",\n  Browser = \"browser\",\n  Desktop = \"desktop\",\n  Mobile = \"mobile\",\n  Cli = \"cli\",\n  DirectoryConnector = \"connector\",\n}\n","import { KeySuffixOptions } from \"@bitwarden/common/enums/keySuffixOptions\";\nimport { CryptoService } from \"@bitwarden/common/services/crypto.service\";\n\nexport class BrowserCryptoService extends CryptoService {\n  protected async retrieveKeyFromStorage(keySuffix: KeySuffixOptions) {\n    if (keySuffix === \"biometric\") {\n      await this.platformUtilService.authenticateBiometric();\n      return (await this.getKey())?.keyB64;\n    }\n\n    return await super.retrieveKeyFromStorage(keySuffix);\n  }\n}\n","import { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\n\nexport default class BrowserMessagingService implements MessagingService {\n  send(subscriber: string, arg: any = {}) {\n    return BrowserApi.sendMessage(subscriber, arg);\n  }\n}\n","import { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\n\nexport default class BrowserMessagingPrivateModeBackgroundService implements MessagingService {\n  send(subscriber: string, arg: any = {}) {\n    const message = Object.assign({}, { command: subscriber }, arg);\n    (window as any).bitwardenPopupMainMessageListener(message);\n  }\n}\n","import { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ClientType } from \"@bitwarden/common/enums/clientType\";\nimport { DeviceType } from \"@bitwarden/common/enums/deviceType\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { SafariApp } from \"../browser/safariApp\";\nimport { StateService } from \"../services/abstractions/state.service\";\n\nconst DialogPromiseExpiration = 600000; // 10 minutes\n\nexport default class BrowserPlatformUtilsService implements PlatformUtilsService {\n  private showDialogResolves = new Map<number, { resolve: (value: boolean) => void; date: Date }>();\n  private passwordDialogResolves = new Map<\n    number,\n    { tryResolve: (canceled: boolean, password: string) => Promise<boolean>; date: Date }\n  >();\n  private deviceCache: DeviceType = null;\n\n  constructor(\n    private messagingService: MessagingService,\n    private stateService: StateService,\n    private clipboardWriteCallback: (clipboardValue: string, clearMs: number) => void,\n    private biometricCallback: () => Promise<boolean>\n  ) {}\n\n  getDevice(): DeviceType {\n    if (this.deviceCache) {\n      return this.deviceCache;\n    }\n\n    if (\n      navigator.userAgent.indexOf(\" Firefox/\") !== -1 ||\n      navigator.userAgent.indexOf(\" Gecko/\") !== -1\n    ) {\n      this.deviceCache = DeviceType.FirefoxExtension;\n    } else if (\n      (!!(window as any).opr && !!opr.addons) ||\n      !!(window as any).opera ||\n      navigator.userAgent.indexOf(\" OPR/\") >= 0\n    ) {\n      this.deviceCache = DeviceType.OperaExtension;\n    } else if (navigator.userAgent.indexOf(\" Edg/\") !== -1) {\n      this.deviceCache = DeviceType.EdgeExtension;\n    } else if (navigator.userAgent.indexOf(\" Vivaldi/\") !== -1) {\n      this.deviceCache = DeviceType.VivaldiExtension;\n    } else if ((window as any).chrome && navigator.userAgent.indexOf(\" Chrome/\") !== -1) {\n      this.deviceCache = DeviceType.ChromeExtension;\n    } else if (navigator.userAgent.indexOf(\" Safari/\") !== -1) {\n      this.deviceCache = DeviceType.SafariExtension;\n    }\n\n    return this.deviceCache;\n  }\n\n  getDeviceString(): string {\n    const device = DeviceType[this.getDevice()].toLowerCase();\n    return device.replace(\"extension\", \"\");\n  }\n\n  getClientType(): ClientType {\n    return ClientType.Browser;\n  }\n\n  isFirefox(): boolean {\n    return this.getDevice() === DeviceType.FirefoxExtension;\n  }\n\n  isChrome(): boolean {\n    return this.getDevice() === DeviceType.ChromeExtension;\n  }\n\n  isEdge(): boolean {\n    return this.getDevice() === DeviceType.EdgeExtension;\n  }\n\n  isOpera(): boolean {\n    return this.getDevice() === DeviceType.OperaExtension;\n  }\n\n  isVivaldi(): boolean {\n    return this.getDevice() === DeviceType.VivaldiExtension;\n  }\n\n  isSafari(): boolean {\n    return this.getDevice() === DeviceType.SafariExtension;\n  }\n\n  isIE(): boolean {\n    return false;\n  }\n\n  isMacAppStore(): boolean {\n    return false;\n  }\n\n  async isViewOpen(): Promise<boolean> {\n    if (await BrowserApi.isPopupOpen()) {\n      return true;\n    }\n\n    if (this.isSafari()) {\n      return false;\n    }\n\n    const sidebarView = this.sidebarViewName();\n    const sidebarOpen =\n      sidebarView != null && chrome.extension.getViews({ type: sidebarView }).length > 0;\n    if (sidebarOpen) {\n      return true;\n    }\n\n    const tabOpen = chrome.extension.getViews({ type: \"tab\" }).length > 0;\n    return tabOpen;\n  }\n\n  lockTimeout(): number {\n    return null;\n  }\n\n  launchUri(uri: string, options?: any): void {\n    BrowserApi.createNewTab(uri, options && options.extensionPage === true);\n  }\n\n  getApplicationVersion(): Promise<string> {\n    return Promise.resolve(BrowserApi.getApplicationVersion());\n  }\n\n  supportsWebAuthn(win: Window): boolean {\n    return typeof PublicKeyCredential !== \"undefined\";\n  }\n\n  supportsDuo(): boolean {\n    return true;\n  }\n\n  showToast(\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: any\n  ): void {\n    this.messagingService.send(\"showToast\", {\n      text: text,\n      title: title,\n      type: type,\n      options: options,\n    });\n  }\n\n  showDialog(\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml = false\n  ) {\n    const dialogId = Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);\n    this.messagingService.send(\"showDialog\", {\n      text: bodyIsHtml ? null : body,\n      html: bodyIsHtml ? body : null,\n      title: title,\n      confirmText: confirmText,\n      cancelText: cancelText,\n      type: type,\n      dialogId: dialogId,\n    });\n    return new Promise<boolean>((resolve) => {\n      this.showDialogResolves.set(dialogId, { resolve: resolve, date: new Date() });\n    });\n  }\n\n  isDev(): boolean {\n    return process.env.ENV === \"development\";\n  }\n\n  isSelfHost(): boolean {\n    return false;\n  }\n\n  copyToClipboard(text: string, options?: any): void {\n    let win = window;\n    let doc = window.document;\n    if (options && (options.window || options.win)) {\n      win = options.window || options.win;\n      doc = win.document;\n    } else if (options && options.doc) {\n      doc = options.doc;\n    }\n    const clearing = options ? !!options.clearing : false;\n    const clearMs: number = options && options.clearMs ? options.clearMs : null;\n\n    if (this.isSafari()) {\n      SafariApp.sendMessageToApp(\"copyToClipboard\", text).then(() => {\n        if (!clearing && this.clipboardWriteCallback != null) {\n          this.clipboardWriteCallback(text, clearMs);\n        }\n      });\n    } else if (\n      this.isFirefox() &&\n      (win as any).navigator.clipboard &&\n      (win as any).navigator.clipboard.writeText\n    ) {\n      (win as any).navigator.clipboard.writeText(text).then(() => {\n        if (!clearing && this.clipboardWriteCallback != null) {\n          this.clipboardWriteCallback(text, clearMs);\n        }\n      });\n    } else if ((win as any).clipboardData && (win as any).clipboardData.setData) {\n      // IE specific code path to prevent textarea being shown while dialog is visible.\n      (win as any).clipboardData.setData(\"Text\", text);\n      if (!clearing && this.clipboardWriteCallback != null) {\n        this.clipboardWriteCallback(text, clearMs);\n      }\n    } else if (doc.queryCommandSupported && doc.queryCommandSupported(\"copy\")) {\n      if (this.isChrome() && text === \"\") {\n        text = \"\\u0000\";\n      }\n\n      const textarea = doc.createElement(\"textarea\");\n      textarea.textContent = text == null || text === \"\" ? \" \" : text;\n      // Prevent scrolling to bottom of page in MS Edge.\n      textarea.style.position = \"fixed\";\n      doc.body.appendChild(textarea);\n      textarea.select();\n\n      try {\n        // Security exception may be thrown by some browsers.\n        if (doc.execCommand(\"copy\") && !clearing && this.clipboardWriteCallback != null) {\n          this.clipboardWriteCallback(text, clearMs);\n        }\n      } catch (e) {\n        // eslint-disable-next-line\n        console.warn(\"Copy to clipboard failed.\", e);\n      } finally {\n        doc.body.removeChild(textarea);\n      }\n    }\n  }\n\n  async readFromClipboard(options?: any): Promise<string> {\n    let win = window;\n    let doc = window.document;\n    if (options && (options.window || options.win)) {\n      win = options.window || options.win;\n      doc = win.document;\n    } else if (options && options.doc) {\n      doc = options.doc;\n    }\n\n    if (this.isSafari()) {\n      return await SafariApp.sendMessageToApp(\"readFromClipboard\");\n    } else if (\n      this.isFirefox() &&\n      (win as any).navigator.clipboard &&\n      (win as any).navigator.clipboard.readText\n    ) {\n      return await (win as any).navigator.clipboard.readText();\n    } else if (doc.queryCommandSupported && doc.queryCommandSupported(\"paste\")) {\n      const textarea = doc.createElement(\"textarea\");\n      // Prevent scrolling to bottom of page in MS Edge.\n      textarea.style.position = \"fixed\";\n      doc.body.appendChild(textarea);\n      textarea.focus();\n      try {\n        // Security exception may be thrown by some browsers.\n        if (doc.execCommand(\"paste\")) {\n          return textarea.value;\n        }\n      } catch (e) {\n        // eslint-disable-next-line\n        console.warn(\"Read from clipboard failed.\", e);\n      } finally {\n        doc.body.removeChild(textarea);\n      }\n    }\n    return null;\n  }\n\n  resolveDialogPromise(dialogId: number, confirmed: boolean) {\n    if (this.showDialogResolves.has(dialogId)) {\n      const resolveObj = this.showDialogResolves.get(dialogId);\n      resolveObj.resolve(confirmed);\n      this.showDialogResolves.delete(dialogId);\n    }\n\n    // Clean up old promises\n    this.showDialogResolves.forEach((val, key) => {\n      const age = new Date().getTime() - val.date.getTime();\n      if (age > DialogPromiseExpiration) {\n        this.showDialogResolves.delete(key);\n      }\n    });\n  }\n\n  async resolvePasswordDialogPromise(\n    dialogId: number,\n    canceled: boolean,\n    password: string\n  ): Promise<boolean> {\n    let result = false;\n    if (this.passwordDialogResolves.has(dialogId)) {\n      const resolveObj = this.passwordDialogResolves.get(dialogId);\n      if (await resolveObj.tryResolve(canceled, password)) {\n        this.passwordDialogResolves.delete(dialogId);\n        result = true;\n      }\n    }\n\n    // Clean up old promises\n    this.passwordDialogResolves.forEach((val, key) => {\n      const age = new Date().getTime() - val.date.getTime();\n      if (age > DialogPromiseExpiration) {\n        this.passwordDialogResolves.delete(key);\n      }\n    });\n\n    return result;\n  }\n\n  async supportsBiometric() {\n    const platformInfo = await BrowserApi.getPlatformInfo();\n    if (platformInfo.os === \"android\") {\n      return false;\n    }\n\n    if (this.isFirefox()) {\n      return parseInt((await browser.runtime.getBrowserInfo()).version.split(\".\")[0], 10) >= 87;\n    }\n\n    return true;\n  }\n\n  authenticateBiometric() {\n    return this.biometricCallback();\n  }\n\n  sidebarViewName(): string {\n    if ((window as any).chrome.sidebarAction && this.isFirefox()) {\n      return \"sidebar\";\n    } else if (this.isOpera() && typeof opr !== \"undefined\" && opr.sidebarAction) {\n      return \"sidebar_panel\";\n    }\n\n    return null;\n  }\n\n  supportsSecureStorage(): boolean {\n    return false;\n  }\n}\n","import { AbstractCachedStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { GlobalState } from \"@bitwarden/common/models/domain/globalState\";\nimport { StorageOptions } from \"@bitwarden/common/models/domain/storageOptions\";\nimport {\n  StateService as BaseStateService,\n  withPrototype,\n} from \"@bitwarden/common/services/state.service\";\n\nimport { Account } from \"../models/account\";\nimport { BrowserComponentState } from \"../models/browserComponentState\";\nimport { BrowserGroupingsComponentState } from \"../models/browserGroupingsComponentState\";\nimport { BrowserSendComponentState } from \"../models/browserSendComponentState\";\n\nimport { StateService as StateServiceAbstraction } from \"./abstractions/state.service\";\n\nexport class StateService\n  extends BaseStateService<GlobalState, Account>\n  implements StateServiceAbstraction\n{\n  async getFromSessionMemory<T>(key: string): Promise<T> {\n    return this.memoryStorageService instanceof AbstractCachedStorageService\n      ? await this.memoryStorageService.getBypassCache<T>(key)\n      : await this.memoryStorageService.get<T>(key);\n  }\n\n  async setInSessionMemory(key: string, value: any): Promise<void> {\n    await this.memoryStorageService.save(key, value);\n  }\n\n  async addAccount(account: Account) {\n    // Apply browser overrides to default account values\n    account = new Account(account);\n    await super.addAccount(account);\n  }\n\n  async getIsAuthenticated(options?: StorageOptions): Promise<boolean> {\n    // Firefox Private Mode can clash with non-Private Mode because they both read from the same onDiskOptions\n    // Check that there is an account in memory before considering the user authenticated\n    return (\n      (await super.getIsAuthenticated(options)) &&\n      (await this.getAccount(await this.defaultInMemoryOptions())) != null\n    );\n  }\n\n  @withPrototype(BrowserGroupingsComponentState)\n  async getBrowserGroupingComponentState(\n    options?: StorageOptions\n  ): Promise<BrowserGroupingsComponentState> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.groupings;\n  }\n\n  async setBrowserGroupingComponentState(\n    value: BrowserGroupingsComponentState,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.groupings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototype(BrowserComponentState)\n  async getBrowserCipherComponentState(options?: StorageOptions): Promise<BrowserComponentState> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.ciphers;\n  }\n\n  async setBrowserCipherComponentState(\n    value: BrowserComponentState,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.ciphers = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototype(BrowserSendComponentState)\n  async getBrowserSendComponentState(options?: StorageOptions): Promise<BrowserSendComponentState> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.send;\n  }\n\n  async setBrowserSendComponentState(\n    value: BrowserSendComponentState,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.send = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototype(BrowserComponentState)\n  async getBrowserSendTypeComponentState(options?: StorageOptions): Promise<BrowserComponentState> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.sendType;\n  }\n\n  async setBrowserSendTypeComponentState(\n    value: BrowserComponentState,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.sendType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n}\n","export class SyncedItemMetadata {\n  propertyKey: string;\n  sessionKey: string;\n  ctor?: new () => any;\n  initializer?: (keyValuePair: any) => any;\n  initializeAsArray?: boolean;\n\n  static buildFromKeyValuePair(keyValuePair: any, metadata: SyncedItemMetadata): any {\n    const builder = SyncedItemMetadata.getBuilder(metadata);\n\n    if (metadata.initializeAsArray) {\n      return keyValuePair.map((o: any) => builder(o));\n    } else {\n      return builder(keyValuePair);\n    }\n  }\n\n  private static getBuilder(metadata: SyncedItemMetadata): (o: any) => any {\n    return metadata.initializer != null\n      ? metadata.initializer\n      : (o: any) => Object.assign(new metadata.ctor(), o);\n  }\n}\n","import { BehaviorSubject, Subscription } from \"rxjs\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { StateService } from \"../../services/abstractions/state.service\";\n\nimport { SyncedItemMetadata } from \"./sync-item-metadata\";\n\nexport class SessionSyncer {\n  subscription: Subscription;\n  id = Utils.newGuid();\n\n  // everyone gets the same initial values\n  private ignoreNextUpdate = true;\n\n  constructor(\n    private behaviorSubject: BehaviorSubject<any>,\n    private stateService: StateService,\n    private metaData: SyncedItemMetadata\n  ) {\n    if (!(behaviorSubject instanceof BehaviorSubject)) {\n      throw new Error(\"behaviorSubject must be an instance of BehaviorSubject\");\n    }\n\n    if (metaData.ctor == null && metaData.initializer == null) {\n      throw new Error(\"ctor or initializer must be provided\");\n    }\n  }\n\n  init() {\n    if (chrome.runtime.getManifest().manifest_version != 3) {\n      return;\n    }\n\n    this.observe();\n    this.listenForUpdates();\n  }\n\n  private observe() {\n    // This may be a memory leak.\n    // There is no good time to unsubscribe from this observable. Hopefully Manifest V3 clears memory from temporary\n    // contexts. If so, this is handled by destruction of the context.\n    this.subscription = this.behaviorSubject.subscribe(async (next) => {\n      if (this.ignoreNextUpdate) {\n        this.ignoreNextUpdate = false;\n        return;\n      }\n      await this.updateSession(next);\n    });\n  }\n\n  private listenForUpdates() {\n    // This is an unawaited promise, but it will be executed asynchronously in the background.\n    BrowserApi.messageListener(\n      this.updateMessageCommand,\n      async (message) => await this.updateFromMessage(message)\n    );\n  }\n\n  async updateFromMessage(message: any) {\n    if (message.command != this.updateMessageCommand || message.id === this.id) {\n      return;\n    }\n    const keyValuePair = await this.stateService.getFromSessionMemory(this.metaData.sessionKey);\n    const value = SyncedItemMetadata.buildFromKeyValuePair(keyValuePair, this.metaData);\n    this.ignoreNextUpdate = true;\n    this.behaviorSubject.next(value);\n  }\n\n  private async updateSession(value: any) {\n    await this.stateService.setInSessionMemory(this.metaData.sessionKey, value);\n    await BrowserApi.sendMessage(this.updateMessageCommand, { id: this.id });\n  }\n\n  private get updateMessageCommand() {\n    return `${this.metaData.sessionKey}_update`;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { SessionStorable } from \"./session-storable\";\n\nclass BuildOptions<T> {\n  ctor?: new () => T;\n  initializer?: (keyValuePair: Jsonify<T>) => T;\n  initializeAsArray? = false;\n}\n\n/**\n * A decorator used to indicate the BehaviorSubject should be synced for this browser session across all contexts.\n *\n * >**Note** This decorator does nothing if the enclosing class is not decorated with @browserSession.\n *\n * >**Note** The Behavior subject must be initialized with a default or in the constructor of the class. If it is not, an error will be thrown.\n *\n * >**!!Warning!!** If the property is overwritten at any time, the new value will not be synced across the browser session.\n *\n * @param buildOptions\n * Builders for the value, requires either a constructor (ctor) for your BehaviorSubject type or an\n * initializer function that takes a key value pair representation of the BehaviorSubject data\n * and returns your instantiated BehaviorSubject value. `initializeAsArray can optionally be used to indicate\n * the provided initializer function should be used to build an array of values. For example,\n * ```ts\n * \\@sessionSync({ initializer: Foo.fromJSON, initializeAsArray: true })\n * ```\n * is equivalent to\n * ```\n * \\@sessionSync({ initializer: (obj: any[]) => obj.map((f) => Foo.fromJSON })\n * ```\n *\n * @returns decorator function\n */\nexport function sessionSync<T>(buildOptions: BuildOptions<T>) {\n  return (prototype: unknown, propertyKey: string) => {\n    // Force prototype into SessionStorable and implement it.\n    const p = prototype as SessionStorable;\n\n    if (p.__syncedItemMetadata == null) {\n      p.__syncedItemMetadata = [];\n    }\n\n    p.__syncedItemMetadata.push({\n      propertyKey,\n      sessionKey: `${prototype.constructor.name}_${propertyKey}`,\n      ctor: buildOptions.ctor,\n      initializer: buildOptions.initializer,\n      initializeAsArray: buildOptions.initializeAsArray,\n    });\n  };\n}\n","import { BehaviorSubject } from \"rxjs/internal/BehaviorSubject\";\n\nimport { Folder } from \"@bitwarden/common/models/domain/folder\";\nimport { FolderView } from \"@bitwarden/common/models/view/folderView\";\nimport { FolderService as BaseFolderService } from \"@bitwarden/common/services/folder/folder.service\";\n\nimport { browserSession, sessionSync } from \"../../decorators/session-sync-observable\";\n\n@browserSession\nexport class FolderService extends BaseFolderService {\n  @sessionSync({ initializer: Folder.fromJSON, initializeAsArray: true })\n  protected _folders: BehaviorSubject<Folder[]>;\n  @sessionSync({ initializer: FolderView.fromJSON, initializeAsArray: true })\n  protected _folderViews: BehaviorSubject<FolderView[]>;\n}\n","import { Constructor } from \"type-fest\";\n\nimport { StateService } from \"../../services/state.service\";\n\nimport { SessionStorable } from \"./session-storable\";\nimport { SessionSyncer } from \"./session-syncer\";\nimport { SyncedItemMetadata } from \"./sync-item-metadata\";\n\n/**\n * Mark the class as syncing state across the browser session. This decorator finds rxjs BehaviorSubject properties\n * marked with @sessionSync and syncs these values across the browser session.\n *\n * @param constructor\n * @returns A new constructor that extends the original one to add session syncing.\n */\nexport function browserSession<TCtor extends Constructor<any>>(constructor: TCtor) {\n  return class extends constructor implements SessionStorable {\n    __syncedItemMetadata: SyncedItemMetadata[];\n    __sessionSyncers: SessionSyncer[];\n\n    constructor(...args: any[]) {\n      super(...args);\n\n      // Require state service to be injected\n      const stateService = args.find((arg) => arg instanceof StateService);\n      if (!stateService) {\n        throw new Error(\n          `Cannot decorate ${constructor.name} with browserSession, Browser's StateService must be injected`\n        );\n      }\n\n      if (this.__syncedItemMetadata == null || !(this.__syncedItemMetadata instanceof Array)) {\n        return;\n      }\n\n      this.__sessionSyncers = this.__syncedItemMetadata.map((metadata) =>\n        this.buildSyncer(metadata, stateService)\n      );\n    }\n\n    buildSyncer(metadata: SyncedItemMetadata, stateService: StateService) {\n      const syncer = new SessionSyncer((this as any)[metadata.propertyKey], stateService, metadata);\n      syncer.init();\n      return syncer;\n    }\n  };\n}\n","import { I18nService as BaseI18nService } from \"@bitwarden/common/services/i18n.service\";\n\nexport default class I18nService extends BaseI18nService {\n  constructor(systemLanguage: string) {\n    super(systemLanguage, null, async (formattedLocale: string) => {\n      // Deprecated\n      const file = await fetch(this.localesDirectory + formattedLocale + \"/messages.json\");\n      return await file.json();\n    });\n\n    // Please leave 'en' where it is, as it's our fallback language in case no translation can be found\n    this.supportedTranslationLocales = [\n      \"en\",\n      \"az\",\n      \"be\",\n      \"bg\",\n      \"bn\",\n      \"bs\",\n      \"ca\",\n      \"cs\",\n      \"da\",\n      \"de\",\n      \"el\",\n      \"en-GB\",\n      \"en-IN\",\n      \"es\",\n      \"et\",\n      \"eu\",\n      \"fa\",\n      \"fi\",\n      \"fil\",\n      \"fr\",\n      \"he\",\n      \"hi\",\n      \"hr\",\n      \"hu\",\n      \"id\",\n      \"it\",\n      \"ja\",\n      \"ka\",\n      \"km\",\n      \"kn\",\n      \"ko\",\n      \"lt\",\n      \"lv\",\n      \"ml\",\n      \"nb\",\n      \"nl\",\n      \"nn\",\n      \"pl\",\n      \"pt-BR\",\n      \"pt-PT\",\n      \"ro\",\n      \"ru\",\n      \"si\",\n      \"sk\",\n      \"sl\",\n      \"sr\",\n      \"sv\",\n      \"th\",\n      \"tr\",\n      \"uk\",\n      \"vi\",\n      \"zh-CN\",\n      \"zh-TW\",\n    ];\n  }\n\n  t(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.translate(id, p1, p2, p3);\n  }\n\n  translate(id: string, p1?: string, p2?: string, p3?: string): string {\n    if (this.localesDirectory == null) {\n      const placeholders: string[] = [];\n      if (p1 != null) {\n        placeholders.push(p1);\n      }\n      if (p2 != null) {\n        placeholders.push(p2);\n      }\n      if (p3 != null) {\n        placeholders.push(p3);\n      }\n\n      if (placeholders.length) {\n        return chrome.i18n.getMessage(id, placeholders);\n      } else {\n        return chrome.i18n.getMessage(id);\n      }\n    }\n\n    return super.translate(id, p1, p2, p3);\n  }\n}\n","import { Observable, ReplaySubject } from \"rxjs\";\n\nimport { I18nService as I18nServiceAbstraction } from \"../abstractions/i18n.service\";\n\nexport class I18nService implements I18nServiceAbstraction {\n  private _locale = new ReplaySubject<string>(1);\n  locale$: Observable<string> = this._locale.asObservable();\n  // First locale is the default (English)\n  supportedTranslationLocales: string[] = [\"en\"];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames = new Map<string, string>([\n    [\"af\", \"Afrikaans\"],\n    [\"az\", \"Azərbaycanca\"],\n    [\"be\", \"Беларуская\"],\n    [\"bg\", \"български\"],\n    [\"bn\", \"বাংলা\"],\n    [\"bs\", \"bosanski jezik\"],\n    [\"ca\", \"català\"],\n    [\"cs\", \"čeština\"],\n    [\"da\", \"dansk\"],\n    [\"de\", \"Deutsch\"],\n    [\"el\", \"Ελληνικά\"],\n    [\"en\", \"English\"],\n    [\"en-GB\", \"English (British)\"],\n    [\"en-IN\", \"English (India)\"],\n    [\"eo\", \"Esperanto\"],\n    [\"es\", \"español\"],\n    [\"et\", \"eesti\"],\n    [\"eu\", \"euskara\"],\n    [\"fa\", \"فارسی\"],\n    [\"fi\", \"suomi\"],\n    [\"fil\", \"Wikang Filipino\"],\n    [\"fr\", \"français\"],\n    [\"he\", \"עברית\"],\n    [\"hi\", \"हिन्दी\"],\n    [\"hr\", \"hrvatski\"],\n    [\"hu\", \"magyar\"],\n    [\"id\", \"Bahasa Indonesia\"],\n    [\"it\", \"italiano\"],\n    [\"ja\", \"日本語\"],\n    [\"ka\", \"ქართული\"],\n    [\"km\", \"ខ្មែរ, ខេមរភាសា, ភាសាខ្មែរ\"],\n    [\"kn\", \"ಕನ್ನಡ\"],\n    [\"ko\", \"한국어\"],\n    [\"lt\", \"lietuvių kalba\"],\n    [\"lv\", \"Latvietis\"],\n    [\"me\", \"црногорски\"],\n    [\"ml\", \"മലയാളം\"],\n    [\"nb\", \"norsk (bokmål)\"],\n    [\"nl\", \"Nederlands\"],\n    [\"nn\", \"Norsk Nynorsk\"],\n    [\"pl\", \"polski\"],\n    [\"pt-BR\", \"português do Brasil\"],\n    [\"pt-PT\", \"português\"],\n    [\"ro\", \"română\"],\n    [\"ru\", \"русский\"],\n    [\"si\", \"සිංහල\"],\n    [\"sk\", \"slovenčina\"],\n    [\"sl\", \"Slovenski jezik, Slovenščina\"],\n    [\"sr\", \"Српски\"],\n    [\"sv\", \"svenska\"],\n    [\"th\", \"ไทย\"],\n    [\"tr\", \"Türkçe\"],\n    [\"uk\", \"українська\"],\n    [\"vi\", \"Tiếng Việt\"],\n    [\"zh-CN\", \"中文（中国大陆）\"],\n    [\"zh-TW\", \"中文（台灣）\"],\n  ]);\n\n  protected inited: boolean;\n  protected defaultMessages: any = {};\n  protected localeMessages: any = {};\n\n  constructor(\n    protected systemLanguage: string,\n    protected localesDirectory: string,\n    protected getLocalesJson: (formattedLocale: string) => Promise<any>\n  ) {\n    this.systemLanguage = systemLanguage.replace(\"_\", \"-\");\n  }\n\n  async init(locale?: string) {\n    if (this.inited) {\n      throw new Error(\"i18n already initialized.\");\n    }\n    if (this.supportedTranslationLocales == null || this.supportedTranslationLocales.length === 0) {\n      throw new Error(\"supportedTranslationLocales not set.\");\n    }\n\n    this.inited = true;\n    this.translationLocale = locale != null ? locale : this.systemLanguage;\n    this._locale.next(this.translationLocale);\n\n    try {\n      this.collator = new Intl.Collator(this.translationLocale, {\n        numeric: true,\n        sensitivity: \"base\",\n      });\n    } catch {\n      this.collator = null;\n    }\n\n    if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n      this.translationLocale = this.translationLocale.slice(0, 2);\n\n      if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n        this.translationLocale = this.supportedTranslationLocales[0];\n      }\n    }\n\n    if (this.localesDirectory != null) {\n      await this.loadMessages(this.translationLocale, this.localeMessages);\n      if (this.translationLocale !== this.supportedTranslationLocales[0]) {\n        await this.loadMessages(this.supportedTranslationLocales[0], this.defaultMessages);\n      }\n    }\n  }\n\n  t(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.translate(id, p1, p2, p3);\n  }\n\n  translate(id: string, p1?: string, p2?: string, p3?: string): string {\n    let result: string;\n    // eslint-disable-next-line\n    if (this.localeMessages.hasOwnProperty(id) && this.localeMessages[id]) {\n      result = this.localeMessages[id];\n      // eslint-disable-next-line\n    } else if (this.defaultMessages.hasOwnProperty(id) && this.defaultMessages[id]) {\n      result = this.defaultMessages[id];\n    } else {\n      result = \"\";\n    }\n\n    if (result !== \"\") {\n      if (p1 != null) {\n        result = result.split(\"__$1__\").join(p1);\n      }\n      if (p2 != null) {\n        result = result.split(\"__$2__\").join(p2);\n      }\n      if (p3 != null) {\n        result = result.split(\"__$3__\").join(p3);\n      }\n    }\n\n    return result;\n  }\n\n  private async loadMessages(locale: string, messagesObj: any): Promise<any> {\n    const formattedLocale = locale.replace(\"-\", \"_\");\n    const locales = await this.getLocalesJson(formattedLocale);\n    for (const prop in locales) {\n      // eslint-disable-next-line\n      if (!locales.hasOwnProperty(prop)) {\n        continue;\n      }\n      messagesObj[prop] = locales[prop].message;\n\n      if (locales[prop].placeholders) {\n        for (const placeProp in locales[prop].placeholders) {\n          if (\n            !locales[prop].placeholders.hasOwnProperty(placeProp) || // eslint-disable-line\n            !locales[prop].placeholders[placeProp].content\n          ) {\n            continue;\n          }\n\n          const replaceToken = \"\\\\$\" + placeProp.toUpperCase() + \"\\\\$\";\n          let replaceContent = locales[prop].placeholders[placeProp].content;\n          if (replaceContent === \"$1\" || replaceContent === \"$2\" || replaceContent === \"$3\") {\n            replaceContent = \"__$\" + replaceContent + \"__\";\n          }\n          messagesObj[prop] = messagesObj[prop].replace(\n            new RegExp(replaceToken, \"g\"),\n            replaceContent\n          );\n        }\n      }\n    }\n  }\n}\n","import { VaultTimeoutService as BaseVaultTimeoutService } from \"@bitwarden/common/services/vaultTimeout.service\";\n\nimport { SafariApp } from \"../browser/safariApp\";\n\nexport default class VaultTimeoutService extends BaseVaultTimeoutService {\n  startCheck() {\n    this.checkVaultTimeout();\n    if (this.platformUtilsService.isSafari()) {\n      this.checkSafari();\n    } else {\n      setInterval(() => this.checkVaultTimeout(), 10 * 1000); // check every 10 seconds\n    }\n  }\n\n  // This is a work-around to safari adding an arbitary delay to setTimeout and\n  //  setIntervals. It works by calling the native extension which sleeps for 10s,\n  //  efficiently replicating setInterval.\n  async checkSafari() {\n    // eslint-disable-next-line\n    while (true) {\n      try {\n        await SafariApp.sendMessageToApp(\"sleep\");\n        this.checkVaultTimeout();\n      } catch (e) {\n        // eslint-disable-next-line\n        console.log(\"Exception Safari VaultTimeout\", e);\n      }\n    }\n  }\n}\n","import { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\n\nimport MainBackground from \"./main.background\";\nimport LockedVaultPendingNotificationsItem from \"./models/lockedVaultPendingNotificationsItem\";\n\nexport default class CommandsBackground {\n  private isSafari: boolean;\n  private isVivaldi: boolean;\n\n  constructor(\n    private main: MainBackground,\n    private passwordGenerationService: PasswordGenerationService,\n    private platformUtilsService: PlatformUtilsService,\n    private vaultTimeoutService: VaultTimeoutService,\n    private authService: AuthService\n  ) {\n    this.isSafari = this.platformUtilsService.isSafari();\n    this.isVivaldi = this.platformUtilsService.isVivaldi();\n  }\n\n  async init() {\n    BrowserApi.messageListener(\n      \"commands.background\",\n      async (msg: any, sender: chrome.runtime.MessageSender, sendResponse: any) => {\n        if (msg.command === \"unlockCompleted\" && msg.data.target === \"commands.background\") {\n          await this.processCommand(\n            msg.data.commandToRetry.msg.command,\n            msg.data.commandToRetry.sender\n          );\n        }\n\n        if (this.isVivaldi && msg.command === \"keyboardShortcutTriggered\" && msg.shortcut) {\n          await this.processCommand(msg.shortcut, sender);\n        }\n      }\n    );\n\n    if (!this.isVivaldi && chrome && chrome.commands) {\n      chrome.commands.onCommand.addListener(async (command: string) => {\n        await this.processCommand(command);\n      });\n    }\n  }\n\n  private async processCommand(command: string, sender?: chrome.runtime.MessageSender) {\n    switch (command) {\n      case \"generate_password\":\n        await this.generatePasswordToClipboard();\n        break;\n      case \"autofill_login\":\n        await this.autoFillLogin(sender ? sender.tab : null);\n        break;\n      case \"open_popup\":\n        await this.openPopup();\n        break;\n      case \"lock_vault\":\n        await this.vaultTimeoutService.lock(true);\n        break;\n      default:\n        break;\n    }\n  }\n\n  private async generatePasswordToClipboard() {\n    const options = (await this.passwordGenerationService.getOptions())[0];\n    const password = await this.passwordGenerationService.generatePassword(options);\n    this.platformUtilsService.copyToClipboard(password, { window: window });\n    this.passwordGenerationService.addHistory(password);\n  }\n\n  private async autoFillLogin(tab?: chrome.tabs.Tab) {\n    if (!tab) {\n      tab = await BrowserApi.getTabFromCurrentWindowId();\n    }\n\n    if (tab == null) {\n      return;\n    }\n\n    if ((await this.authService.getAuthStatus()) < AuthenticationStatus.Unlocked) {\n      const retryMessage: LockedVaultPendingNotificationsItem = {\n        commandToRetry: {\n          msg: { command: \"autofill_login\" },\n          sender: { tab: tab },\n        },\n        target: \"commands.background\",\n      };\n      await BrowserApi.tabSendMessageData(\n        tab,\n        \"addToLockedVaultPendingNotifications\",\n        retryMessage\n      );\n\n      BrowserApi.tabSendMessageData(tab, \"promptForLogin\");\n      return;\n    }\n\n    await this.main.collectPageDetailsForContentScript(tab, \"autofill_cmd\");\n  }\n\n  private async openPopup() {\n    // Chrome APIs cannot open popup\n    if (!this.isSafari) {\n      return;\n    }\n\n    this.main.openPopup();\n  }\n}\n","import { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\n\nimport MainBackground from \"./main.background\";\nimport LockedVaultPendingNotificationsItem from \"./models/lockedVaultPendingNotificationsItem\";\n\nexport default class ContextMenusBackground {\n  private readonly noopCommandSuffix = \"noop\";\n  private contextMenus: any;\n\n  constructor(\n    private main: MainBackground,\n    private cipherService: CipherService,\n    private passwordGenerationService: PasswordGenerationService,\n    private platformUtilsService: PlatformUtilsService,\n    private authService: AuthService,\n    private eventService: EventService,\n    private totpService: TotpService\n  ) {\n    this.contextMenus = chrome.contextMenus;\n  }\n\n  async init() {\n    if (!this.contextMenus) {\n      return;\n    }\n\n    this.contextMenus.onClicked.addListener(\n      async (info: chrome.contextMenus.OnClickData, tab: chrome.tabs.Tab) => {\n        if (info.menuItemId === \"generate-password\") {\n          await this.generatePasswordToClipboard();\n        } else if (info.menuItemId === \"copy-identifier\") {\n          await this.getClickedElement(tab, info.frameId);\n        } else if (\n          info.parentMenuItemId === \"autofill\" ||\n          info.parentMenuItemId === \"copy-username\" ||\n          info.parentMenuItemId === \"copy-password\" ||\n          info.parentMenuItemId === \"copy-totp\"\n        ) {\n          await this.cipherAction(tab, info);\n        }\n      }\n    );\n\n    BrowserApi.messageListener(\n      \"contextmenus.background\",\n      async (msg: any, sender: chrome.runtime.MessageSender, sendResponse: any) => {\n        if (msg.command === \"unlockCompleted\" && msg.data.target === \"contextmenus.background\") {\n          await this.cipherAction(\n            msg.data.commandToRetry.sender.tab,\n            msg.data.commandToRetry.msg.data\n          );\n        }\n      }\n    );\n  }\n\n  private async generatePasswordToClipboard() {\n    const options = (await this.passwordGenerationService.getOptions())[0];\n    const password = await this.passwordGenerationService.generatePassword(options);\n    this.platformUtilsService.copyToClipboard(password, { window: window });\n    this.passwordGenerationService.addHistory(password);\n  }\n\n  private async getClickedElement(tab: chrome.tabs.Tab, frameId: number) {\n    if (tab == null) {\n      return;\n    }\n\n    BrowserApi.tabSendMessage(tab, { command: \"getClickedElement\" }, { frameId: frameId });\n  }\n\n  private async cipherAction(tab: chrome.tabs.Tab, info: chrome.contextMenus.OnClickData) {\n    if (typeof info.menuItemId !== \"string\") {\n      return;\n    }\n\n    const id = info.menuItemId.split(\"_\")[1];\n\n    if ((await this.authService.getAuthStatus()) < AuthenticationStatus.Unlocked) {\n      const retryMessage: LockedVaultPendingNotificationsItem = {\n        commandToRetry: {\n          msg: { command: this.noopCommandSuffix, data: info },\n          sender: { tab: tab },\n        },\n        target: \"contextmenus.background\",\n      };\n      await BrowserApi.tabSendMessageData(\n        tab,\n        \"addToLockedVaultPendingNotifications\",\n        retryMessage\n      );\n\n      BrowserApi.tabSendMessageData(tab, \"promptForLogin\");\n      return;\n    }\n\n    let cipher: CipherView;\n    if (id === this.noopCommandSuffix) {\n      const ciphers = await this.cipherService.getAllDecryptedForUrl(tab.url);\n      cipher = ciphers.find((c) => c.reprompt === CipherRepromptType.None);\n    } else {\n      const ciphers = await this.cipherService.getAllDecrypted();\n      cipher = ciphers.find((c) => c.id === id);\n    }\n\n    if (cipher == null) {\n      return;\n    }\n\n    if (info.parentMenuItemId === \"autofill\") {\n      await this.startAutofillPage(tab, cipher);\n    } else if (info.parentMenuItemId === \"copy-username\") {\n      this.platformUtilsService.copyToClipboard(cipher.login.username, { window: window });\n    } else if (info.parentMenuItemId === \"copy-password\") {\n      this.platformUtilsService.copyToClipboard(cipher.login.password, { window: window });\n      this.eventService.collect(EventType.Cipher_ClientCopiedPassword, cipher.id);\n    } else if (info.parentMenuItemId === \"copy-totp\") {\n      const totpValue = await this.totpService.getCode(cipher.login.totp);\n      this.platformUtilsService.copyToClipboard(totpValue, { window: window });\n    }\n  }\n\n  private async startAutofillPage(tab: chrome.tabs.Tab, cipher: CipherView) {\n    this.main.loginToAutoFill = cipher;\n    if (tab == null) {\n      return;\n    }\n\n    BrowserApi.tabSendMessage(tab, {\n      command: \"collectPageDetails\",\n      tab: tab,\n      sender: \"contextMenu\",\n    });\n  }\n}\n","import { NotificationsService } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout.service\";\n\nimport { StateService } from \"../services/abstractions/state.service\";\n\nconst IdleInterval = 60 * 5; // 5 minutes\n\nexport default class IdleBackground {\n  private idle: any;\n  private idleTimer: number = null;\n  private idleState = \"active\";\n\n  constructor(\n    private vaultTimeoutService: VaultTimeoutService,\n    private stateService: StateService,\n    private notificationsService: NotificationsService\n  ) {\n    this.idle = chrome.idle || (browser != null ? browser.idle : null);\n  }\n\n  async init() {\n    if (!this.idle) {\n      return;\n    }\n\n    const idleHandler = (newState: string) => {\n      if (newState === \"active\") {\n        this.notificationsService.reconnectFromActivity();\n      } else {\n        this.notificationsService.disconnectFromInactivity();\n      }\n    };\n    if (this.idle.onStateChanged && this.idle.setDetectionInterval) {\n      this.idle.setDetectionInterval(IdleInterval);\n      this.idle.onStateChanged.addListener(idleHandler);\n    } else {\n      this.pollIdle(idleHandler);\n    }\n\n    if (this.idle.onStateChanged) {\n      this.idle.onStateChanged.addListener(async (newState: string) => {\n        if (newState === \"locked\") {\n          // If the screen is locked or the screensaver activates\n          const timeout = await this.stateService.getVaultTimeout();\n          if (timeout === -2) {\n            // On System Lock vault timeout option\n            const action = await this.stateService.getVaultTimeoutAction();\n            if (action === \"logOut\") {\n              await this.vaultTimeoutService.logOut();\n            } else {\n              await this.vaultTimeoutService.lock(true);\n            }\n          }\n        }\n      });\n    }\n  }\n\n  private pollIdle(handler: (newState: string) => void) {\n    if (this.idleTimer != null) {\n      window.clearTimeout(this.idleTimer);\n      this.idleTimer = null;\n    }\n    this.idle.queryState(IdleInterval, (state: string) => {\n      if (state !== this.idleState) {\n        this.idleState = state;\n        handler(state);\n      }\n      this.idleTimer = window.setTimeout(() => this.pollIdle(handler), 5000);\n    });\n  }\n}\n","import { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\n\nimport RuntimeBackground from \"./runtime.background\";\n\nconst MessageValidTimeout = 10 * 1000;\nconst EncryptionAlgorithm = \"sha1\";\n\ntype Message = {\n  command: string;\n\n  // Filled in by this service\n  userId?: string;\n  timestamp?: number;\n\n  // Used for sharing secret\n  publicKey?: string;\n};\n\ntype OuterMessage = {\n  message: Message | EncString;\n  appId: string;\n};\n\ntype ReceiveMessage = {\n  timestamp: number;\n  command: string;\n  response?: any;\n\n  // Unlock key\n  keyB64?: string;\n};\n\ntype ReceiveMessageOuter = {\n  command: string;\n  appId: string;\n\n  // Should only have one of these.\n  message?: EncString;\n  sharedSecret?: string;\n};\n\nexport class NativeMessagingBackground {\n  private connected = false;\n  private connecting: boolean;\n  private port: browser.runtime.Port | chrome.runtime.Port;\n\n  private resolver: any = null;\n  private privateKey: ArrayBuffer = null;\n  private publicKey: ArrayBuffer = null;\n  private secureSetupResolve: any = null;\n  private sharedSecret: SymmetricCryptoKey;\n  private appId: string;\n  private validatingFingerprint: boolean;\n\n  constructor(\n    private cryptoService: CryptoService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private runtimeBackground: RuntimeBackground,\n    private i18nService: I18nService,\n    private messagingService: MessagingService,\n    private appIdService: AppIdService,\n    private platformUtilsService: PlatformUtilsService,\n    private stateService: StateService,\n    private logService: LogService,\n    private authService: AuthService\n  ) {\n    this.stateService.setBiometricFingerprintValidated(false);\n\n    if (chrome?.permissions?.onAdded) {\n      // Reload extension to activate nativeMessaging\n      chrome.permissions.onAdded.addListener((permissions) => {\n        BrowserApi.reloadExtension(null);\n      });\n    }\n  }\n\n  async connect() {\n    this.appId = await this.appIdService.getAppId();\n    this.stateService.setBiometricFingerprintValidated(false);\n\n    return new Promise<void>((resolve, reject) => {\n      this.port = BrowserApi.connectNative(\"com.8bit.bitwarden\");\n\n      this.connecting = true;\n\n      const connectedCallback = () => {\n        this.connected = true;\n        this.connecting = false;\n        resolve();\n      };\n\n      // Safari has a bundled native component which is always available, no need to\n      // check if the desktop app is running.\n      if (this.platformUtilsService.isSafari()) {\n        connectedCallback();\n      }\n\n      this.port.onMessage.addListener(async (message: ReceiveMessageOuter) => {\n        switch (message.command) {\n          case \"connected\":\n            connectedCallback();\n            break;\n          case \"disconnected\":\n            if (this.connecting) {\n              reject(\"startDesktop\");\n            }\n            this.connected = false;\n            this.port.disconnect();\n            break;\n          case \"setupEncryption\": {\n            // Ignore since it belongs to another device\n            if (message.appId !== this.appId) {\n              return;\n            }\n\n            const encrypted = Utils.fromB64ToArray(message.sharedSecret);\n            const decrypted = await this.cryptoFunctionService.rsaDecrypt(\n              encrypted.buffer,\n              this.privateKey,\n              EncryptionAlgorithm\n            );\n\n            if (this.validatingFingerprint) {\n              this.validatingFingerprint = false;\n              this.stateService.setBiometricFingerprintValidated(true);\n            }\n            this.sharedSecret = new SymmetricCryptoKey(decrypted);\n            this.secureSetupResolve();\n            break;\n          }\n          case \"invalidateEncryption\":\n            // Ignore since it belongs to another device\n            if (message.appId !== this.appId) {\n              return;\n            }\n\n            this.sharedSecret = null;\n            this.privateKey = null;\n            this.connected = false;\n\n            this.messagingService.send(\"showDialog\", {\n              text: this.i18nService.t(\"nativeMessagingInvalidEncryptionDesc\"),\n              title: this.i18nService.t(\"nativeMessagingInvalidEncryptionTitle\"),\n              confirmText: this.i18nService.t(\"ok\"),\n              type: \"error\",\n            });\n            break;\n          case \"verifyFingerprint\": {\n            if (this.sharedSecret == null) {\n              this.validatingFingerprint = true;\n              this.showFingerprintDialog();\n            }\n            break;\n          }\n          case \"wrongUserId\":\n            this.showWrongUserDialog();\n            break;\n          default:\n            // Ignore since it belongs to another device\n            if (!this.platformUtilsService.isSafari() && message.appId !== this.appId) {\n              return;\n            }\n\n            this.onMessage(message.message);\n        }\n      });\n\n      this.port.onDisconnect.addListener((p: any) => {\n        let error;\n        if (BrowserApi.isWebExtensionsApi) {\n          error = p.error.message;\n        } else {\n          error = chrome.runtime.lastError.message;\n        }\n\n        this.sharedSecret = null;\n        this.privateKey = null;\n        this.connected = false;\n\n        const reason = error != null ? \"desktopIntegrationDisabled\" : null;\n        reject(reason);\n      });\n    });\n  }\n\n  showWrongUserDialog() {\n    this.messagingService.send(\"showDialog\", {\n      text: this.i18nService.t(\"nativeMessagingWrongUserDesc\"),\n      title: this.i18nService.t(\"nativeMessagingWrongUserTitle\"),\n      confirmText: this.i18nService.t(\"ok\"),\n      type: \"error\",\n    });\n  }\n\n  async send(message: Message) {\n    if (!this.connected) {\n      await this.connect();\n    }\n\n    message.userId = await this.stateService.getUserId();\n    message.timestamp = Date.now();\n\n    if (this.platformUtilsService.isSafari()) {\n      this.postMessage(message as any);\n    } else {\n      this.postMessage({ appId: this.appId, message: await this.encryptMessage(message) });\n    }\n  }\n\n  async encryptMessage(message: Message) {\n    if (this.sharedSecret == null) {\n      await this.secureCommunication();\n    }\n\n    return await this.cryptoService.encrypt(JSON.stringify(message), this.sharedSecret);\n  }\n\n  getResponse(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.resolver = resolve;\n    });\n  }\n\n  private postMessage(message: OuterMessage) {\n    // Wrap in try-catch to when the port disconnected without triggering `onDisconnect`.\n    try {\n      const msg: any = message;\n      if (message.message instanceof EncString) {\n        // Alternative, backwards-compatible serialization of EncString\n        msg.message = {\n          encryptedString: message.message.encryptedString,\n          encryptionType: message.message.encryptionType,\n          data: message.message.data,\n          iv: message.message.iv,\n          mac: message.message.mac,\n        };\n      }\n      this.port.postMessage(msg);\n    } catch (e) {\n      this.logService.error(\"NativeMessaging port disconnected, disconnecting.\");\n\n      this.sharedSecret = null;\n      this.privateKey = null;\n      this.connected = false;\n\n      this.messagingService.send(\"showDialog\", {\n        text: this.i18nService.t(\"nativeMessagingInvalidEncryptionDesc\"),\n        title: this.i18nService.t(\"nativeMessagingInvalidEncryptionTitle\"),\n        confirmText: this.i18nService.t(\"ok\"),\n        type: \"error\",\n      });\n    }\n  }\n\n  private async onMessage(rawMessage: ReceiveMessage | EncString) {\n    let message = rawMessage as ReceiveMessage;\n    if (!this.platformUtilsService.isSafari()) {\n      message = JSON.parse(\n        await this.cryptoService.decryptToUtf8(rawMessage as EncString, this.sharedSecret)\n      );\n    }\n\n    if (Math.abs(message.timestamp - Date.now()) > MessageValidTimeout) {\n      this.logService.error(\"NativeMessage is to old, ignoring.\");\n      return;\n    }\n\n    switch (message.command) {\n      case \"biometricUnlock\": {\n        await this.stateService.setBiometricAwaitingAcceptance(null);\n\n        if (message.response === \"not enabled\") {\n          this.messagingService.send(\"showDialog\", {\n            text: this.i18nService.t(\"biometricsNotEnabledDesc\"),\n            title: this.i18nService.t(\"biometricsNotEnabledTitle\"),\n            confirmText: this.i18nService.t(\"ok\"),\n            type: \"error\",\n          });\n          break;\n        } else if (message.response === \"not supported\") {\n          this.messagingService.send(\"showDialog\", {\n            text: this.i18nService.t(\"biometricsNotSupportedDesc\"),\n            title: this.i18nService.t(\"biometricsNotSupportedTitle\"),\n            confirmText: this.i18nService.t(\"ok\"),\n            type: \"error\",\n          });\n          break;\n        }\n\n        const enabled = await this.stateService.getBiometricUnlock();\n        if (enabled === null || enabled === false) {\n          if (message.response === \"unlocked\") {\n            await this.stateService.setBiometricUnlock(true);\n          }\n          break;\n        }\n\n        // Ignore unlock if already unlocked\n        if ((await this.authService.getAuthStatus()) === AuthenticationStatus.Unlocked) {\n          break;\n        }\n\n        if (message.response === \"unlocked\") {\n          await this.cryptoService.setKey(\n            new SymmetricCryptoKey(Utils.fromB64ToArray(message.keyB64).buffer)\n          );\n\n          // Verify key is correct by attempting to decrypt a secret\n          try {\n            await this.cryptoService.getFingerprint(await this.stateService.getUserId());\n          } catch (e) {\n            this.logService.error(\"Unable to verify key: \" + e);\n            await this.cryptoService.clearKey();\n            this.showWrongUserDialog();\n\n            // Exit early\n            if (this.resolver) {\n              this.resolver(message);\n            }\n            return;\n          }\n\n          this.runtimeBackground.processMessage({ command: \"unlocked\" }, null, null);\n        }\n        break;\n      }\n      default:\n        this.logService.error(\"NativeMessage, got unknown command: \" + message.command);\n        break;\n    }\n\n    if (this.resolver) {\n      this.resolver(message);\n    }\n  }\n\n  private async secureCommunication() {\n    const [publicKey, privateKey] = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n    this.publicKey = publicKey;\n    this.privateKey = privateKey;\n\n    this.sendUnencrypted({\n      command: \"setupEncryption\",\n      publicKey: Utils.fromBufferToB64(publicKey),\n      userId: await this.stateService.getUserId(),\n    });\n\n    return new Promise((resolve, reject) => (this.secureSetupResolve = resolve));\n  }\n\n  private async sendUnencrypted(message: Message) {\n    if (!this.connected) {\n      await this.connect();\n    }\n\n    message.timestamp = Date.now();\n\n    this.postMessage({ appId: this.appId, message: message });\n  }\n\n  private async showFingerprintDialog() {\n    const fingerprint = (\n      await this.cryptoService.getFingerprint(await this.stateService.getUserId(), this.publicKey)\n    ).join(\" \");\n\n    this.messagingService.send(\"showDialog\", {\n      html: `${this.i18nService.t(\n        \"desktopIntegrationVerificationText\"\n      )}<br><br><strong>${fingerprint}</strong>`,\n      title: this.i18nService.t(\"desktopSyncVerificationTitle\"),\n      confirmText: this.i18nService.t(\"ok\"),\n      type: \"warning\",\n    });\n  }\n}\n","export enum NotificationQueueMessageType {\n  AddLogin = 0,\n  ChangePassword = 1,\n}\n","import { firstValueFrom } from \"rxjs\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { LoginUriView } from \"@bitwarden/common/models/view/loginUriView\";\nimport { LoginView } from \"@bitwarden/common/models/view/loginView\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { AutofillService } from \"../services/abstractions/autofill.service\";\nimport { StateService } from \"../services/abstractions/state.service\";\n\nimport AddChangePasswordQueueMessage from \"./models/addChangePasswordQueueMessage\";\nimport AddLoginQueueMessage from \"./models/addLoginQueueMessage\";\nimport AddLoginRuntimeMessage from \"./models/addLoginRuntimeMessage\";\nimport ChangePasswordRuntimeMessage from \"./models/changePasswordRuntimeMessage\";\nimport LockedVaultPendingNotificationsItem from \"./models/lockedVaultPendingNotificationsItem\";\nimport { NotificationQueueMessageType } from \"./models/notificationQueueMessageType\";\n\nexport default class NotificationBackground {\n  private notificationQueue: (AddLoginQueueMessage | AddChangePasswordQueueMessage)[] = [];\n\n  constructor(\n    private autofillService: AutofillService,\n    private cipherService: CipherService,\n    private authService: AuthService,\n    private policyService: PolicyService,\n    private folderService: FolderService,\n    private stateService: StateService\n  ) {}\n\n  async init() {\n    if (chrome.runtime == null) {\n      return;\n    }\n\n    BrowserApi.messageListener(\n      \"notification.background\",\n      async (msg: any, sender: chrome.runtime.MessageSender) => {\n        await this.processMessage(msg, sender);\n      }\n    );\n\n    this.cleanupNotificationQueue();\n  }\n\n  async processMessage(msg: any, sender: chrome.runtime.MessageSender) {\n    switch (msg.command) {\n      case \"unlockCompleted\":\n        if (msg.data.target !== \"notification.background\") {\n          return;\n        }\n        await this.processMessage(msg.data.commandToRetry.msg, msg.data.commandToRetry.sender);\n        break;\n      case \"bgGetDataForTab\":\n        await this.getDataForTab(sender.tab, msg.responseCommand);\n        break;\n      case \"bgCloseNotificationBar\":\n        await BrowserApi.tabSendMessageData(sender.tab, \"closeNotificationBar\");\n        break;\n      case \"bgAdjustNotificationBar\":\n        await BrowserApi.tabSendMessageData(sender.tab, \"adjustNotificationBar\", msg.data);\n        break;\n      case \"bgAddLogin\":\n        await this.addLogin(msg.login, sender.tab);\n        break;\n      case \"bgChangedPassword\":\n        await this.changedPassword(msg.data, sender.tab);\n        break;\n      case \"bgAddClose\":\n      case \"bgChangeClose\":\n        this.removeTabFromNotificationQueue(sender.tab);\n        break;\n      case \"bgAddSave\":\n      case \"bgChangeSave\":\n        if ((await this.authService.getAuthStatus()) < AuthenticationStatus.Unlocked) {\n          const retryMessage: LockedVaultPendingNotificationsItem = {\n            commandToRetry: {\n              msg: msg,\n              sender: sender,\n            },\n            target: \"notification.background\",\n          };\n          await BrowserApi.tabSendMessageData(\n            sender.tab,\n            \"addToLockedVaultPendingNotifications\",\n            retryMessage\n          );\n          await BrowserApi.tabSendMessageData(sender.tab, \"promptForLogin\");\n          return;\n        }\n        await this.saveOrUpdateCredentials(sender.tab, msg.folder);\n        break;\n      case \"bgNeverSave\":\n        await this.saveNever(sender.tab);\n        break;\n      case \"collectPageDetailsResponse\":\n        switch (msg.sender) {\n          case \"notificationBar\": {\n            const forms = this.autofillService.getFormsWithPasswordFields(msg.details);\n            await BrowserApi.tabSendMessageData(msg.tab, \"notificationBarPageDetails\", {\n              details: msg.details,\n              forms: forms,\n            });\n            break;\n          }\n          default:\n            break;\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  async checkNotificationQueue(tab: chrome.tabs.Tab = null): Promise<void> {\n    if (this.notificationQueue.length === 0) {\n      return;\n    }\n\n    if (tab != null) {\n      this.doNotificationQueueCheck(tab);\n      return;\n    }\n\n    const currentTab = await BrowserApi.getTabFromCurrentWindow();\n    if (currentTab != null) {\n      this.doNotificationQueueCheck(currentTab);\n    }\n  }\n\n  private cleanupNotificationQueue() {\n    for (let i = this.notificationQueue.length - 1; i >= 0; i--) {\n      if (this.notificationQueue[i].expires < new Date()) {\n        this.notificationQueue.splice(i, 1);\n      }\n    }\n    setTimeout(() => this.cleanupNotificationQueue(), 2 * 60 * 1000); // check every 2 minutes\n  }\n\n  private doNotificationQueueCheck(tab: chrome.tabs.Tab): void {\n    if (tab == null) {\n      return;\n    }\n\n    const tabDomain = Utils.getDomain(tab.url);\n    if (tabDomain == null) {\n      return;\n    }\n\n    for (let i = 0; i < this.notificationQueue.length; i++) {\n      if (\n        this.notificationQueue[i].tabId !== tab.id ||\n        this.notificationQueue[i].domain !== tabDomain\n      ) {\n        continue;\n      }\n\n      if (this.notificationQueue[i].type === NotificationQueueMessageType.AddLogin) {\n        BrowserApi.tabSendMessageData(tab, \"openNotificationBar\", {\n          type: \"add\",\n          typeData: {\n            isVaultLocked: this.notificationQueue[i].wasVaultLocked,\n          },\n        });\n      } else if (this.notificationQueue[i].type === NotificationQueueMessageType.ChangePassword) {\n        BrowserApi.tabSendMessageData(tab, \"openNotificationBar\", {\n          type: \"change\",\n          typeData: {\n            isVaultLocked: this.notificationQueue[i].wasVaultLocked,\n          },\n        });\n      }\n      break;\n    }\n  }\n\n  private removeTabFromNotificationQueue(tab: chrome.tabs.Tab) {\n    for (let i = this.notificationQueue.length - 1; i >= 0; i--) {\n      if (this.notificationQueue[i].tabId === tab.id) {\n        this.notificationQueue.splice(i, 1);\n      }\n    }\n  }\n\n  private async addLogin(loginInfo: AddLoginRuntimeMessage, tab: chrome.tabs.Tab) {\n    const authStatus = await this.authService.getAuthStatus();\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      return;\n    }\n\n    const loginDomain = Utils.getDomain(loginInfo.url);\n    if (loginDomain == null) {\n      return;\n    }\n\n    let normalizedUsername = loginInfo.username;\n    if (normalizedUsername != null) {\n      normalizedUsername = normalizedUsername.toLowerCase();\n    }\n\n    const disabledAddLogin = await this.stateService.getDisableAddLoginNotification();\n    if (authStatus === AuthenticationStatus.Locked) {\n      if (disabledAddLogin) {\n        return;\n      }\n\n      if (!(await this.allowPersonalOwnership())) {\n        return;\n      }\n\n      this.pushAddLoginToQueue(loginDomain, loginInfo, tab, true);\n      return;\n    }\n\n    const ciphers = await this.cipherService.getAllDecryptedForUrl(loginInfo.url);\n    const usernameMatches = ciphers.filter(\n      (c) => c.login.username != null && c.login.username.toLowerCase() === normalizedUsername\n    );\n    if (usernameMatches.length === 0) {\n      if (disabledAddLogin) {\n        return;\n      }\n\n      if (!(await this.allowPersonalOwnership())) {\n        return;\n      }\n\n      this.pushAddLoginToQueue(loginDomain, loginInfo, tab);\n    } else if (\n      usernameMatches.length === 1 &&\n      usernameMatches[0].login.password !== loginInfo.password\n    ) {\n      const disabledChangePassword =\n        await this.stateService.getDisableChangedPasswordNotification();\n      if (disabledChangePassword) {\n        return;\n      }\n      this.pushChangePasswordToQueue(usernameMatches[0].id, loginDomain, loginInfo.password, tab);\n    }\n  }\n\n  private async pushAddLoginToQueue(\n    loginDomain: string,\n    loginInfo: AddLoginRuntimeMessage,\n    tab: chrome.tabs.Tab,\n    isVaultLocked = false\n  ) {\n    // remove any old messages for this tab\n    this.removeTabFromNotificationQueue(tab);\n    const message: AddLoginQueueMessage = {\n      type: NotificationQueueMessageType.AddLogin,\n      username: loginInfo.username,\n      password: loginInfo.password,\n      domain: loginDomain,\n      uri: loginInfo.url,\n      tabId: tab.id,\n      expires: new Date(new Date().getTime() + 5 * 60000), // 5 minutes\n      wasVaultLocked: isVaultLocked,\n    };\n    this.notificationQueue.push(message);\n    await this.checkNotificationQueue(tab);\n  }\n\n  private async changedPassword(changeData: ChangePasswordRuntimeMessage, tab: chrome.tabs.Tab) {\n    const loginDomain = Utils.getDomain(changeData.url);\n    if (loginDomain == null) {\n      return;\n    }\n\n    if ((await this.authService.getAuthStatus()) < AuthenticationStatus.Unlocked) {\n      this.pushChangePasswordToQueue(null, loginDomain, changeData.newPassword, tab, true);\n      return;\n    }\n\n    let id: string = null;\n    const ciphers = await this.cipherService.getAllDecryptedForUrl(changeData.url);\n    if (changeData.currentPassword != null) {\n      const passwordMatches = ciphers.filter(\n        (c) => c.login.password === changeData.currentPassword\n      );\n      if (passwordMatches.length === 1) {\n        id = passwordMatches[0].id;\n      }\n    } else if (ciphers.length === 1) {\n      id = ciphers[0].id;\n    }\n    if (id != null) {\n      this.pushChangePasswordToQueue(id, loginDomain, changeData.newPassword, tab);\n    }\n  }\n\n  private async pushChangePasswordToQueue(\n    cipherId: string,\n    loginDomain: string,\n    newPassword: string,\n    tab: chrome.tabs.Tab,\n    isVaultLocked = false\n  ) {\n    // remove any old messages for this tab\n    this.removeTabFromNotificationQueue(tab);\n    const message: AddChangePasswordQueueMessage = {\n      type: NotificationQueueMessageType.ChangePassword,\n      cipherId: cipherId,\n      newPassword: newPassword,\n      domain: loginDomain,\n      tabId: tab.id,\n      expires: new Date(new Date().getTime() + 5 * 60000), // 5 minutes\n      wasVaultLocked: isVaultLocked,\n    };\n    this.notificationQueue.push(message);\n    await this.checkNotificationQueue(tab);\n  }\n\n  private async saveOrUpdateCredentials(tab: chrome.tabs.Tab, folderId?: string) {\n    for (let i = this.notificationQueue.length - 1; i >= 0; i--) {\n      const queueMessage = this.notificationQueue[i];\n      if (\n        queueMessage.tabId !== tab.id ||\n        (queueMessage.type !== NotificationQueueMessageType.AddLogin &&\n          queueMessage.type !== NotificationQueueMessageType.ChangePassword)\n      ) {\n        continue;\n      }\n\n      const tabDomain = Utils.getDomain(tab.url);\n      if (tabDomain != null && tabDomain !== queueMessage.domain) {\n        continue;\n      }\n\n      this.notificationQueue.splice(i, 1);\n      BrowserApi.tabSendMessageData(tab, \"closeNotificationBar\");\n\n      if (queueMessage.type === NotificationQueueMessageType.ChangePassword) {\n        const changePasswordMessage = queueMessage as AddChangePasswordQueueMessage;\n        const cipher = await this.getDecryptedCipherById(changePasswordMessage.cipherId);\n        if (cipher == null) {\n          return;\n        }\n        await this.updateCipher(cipher, changePasswordMessage.newPassword);\n        return;\n      }\n\n      if (queueMessage.type === NotificationQueueMessageType.AddLogin) {\n        if (!queueMessage.wasVaultLocked) {\n          await this.createNewCipher(queueMessage as AddLoginQueueMessage, folderId);\n          BrowserApi.tabSendMessageData(tab, \"addedCipher\");\n          return;\n        }\n\n        // If the vault was locked, check if a cipher needs updating instead of creating a new one\n        const addLoginMessage = queueMessage as AddLoginQueueMessage;\n        const ciphers = await this.cipherService.getAllDecryptedForUrl(addLoginMessage.uri);\n        const usernameMatches = ciphers.filter(\n          (c) =>\n            c.login.username != null && c.login.username.toLowerCase() === addLoginMessage.username\n        );\n\n        if (usernameMatches.length >= 1) {\n          await this.updateCipher(usernameMatches[0], addLoginMessage.password);\n          return;\n        }\n\n        await this.createNewCipher(addLoginMessage, folderId);\n        BrowserApi.tabSendMessageData(tab, \"addedCipher\");\n      }\n    }\n  }\n\n  private async createNewCipher(queueMessage: AddLoginQueueMessage, folderId: string) {\n    const loginModel = new LoginView();\n    const loginUri = new LoginUriView();\n    loginUri.uri = queueMessage.uri;\n    loginModel.uris = [loginUri];\n    loginModel.username = queueMessage.username;\n    loginModel.password = queueMessage.password;\n    const model = new CipherView();\n    model.name = Utils.getHostname(queueMessage.uri) || queueMessage.domain;\n    model.name = model.name.replace(/^www\\./, \"\");\n    model.type = CipherType.Login;\n    model.login = loginModel;\n\n    if (!Utils.isNullOrWhitespace(folderId)) {\n      const folders = await firstValueFrom(this.folderService.folderViews$);\n      if (folders.some((x) => x.id === folderId)) {\n        model.folderId = folderId;\n      }\n    }\n\n    const cipher = await this.cipherService.encrypt(model);\n    await this.cipherService.saveWithServer(cipher);\n  }\n\n  private async getDecryptedCipherById(cipherId: string) {\n    const cipher = await this.cipherService.get(cipherId);\n    if (cipher != null && cipher.type === CipherType.Login) {\n      return await cipher.decrypt();\n    }\n    return null;\n  }\n\n  private async updateCipher(cipher: CipherView, newPassword: string) {\n    if (cipher != null && cipher.type === CipherType.Login) {\n      cipher.login.password = newPassword;\n      const newCipher = await this.cipherService.encrypt(cipher);\n      await this.cipherService.saveWithServer(newCipher);\n    }\n  }\n\n  private async saveNever(tab: chrome.tabs.Tab) {\n    for (let i = this.notificationQueue.length - 1; i >= 0; i--) {\n      const queueMessage = this.notificationQueue[i];\n      if (\n        queueMessage.tabId !== tab.id ||\n        queueMessage.type !== NotificationQueueMessageType.AddLogin\n      ) {\n        continue;\n      }\n\n      const tabDomain = Utils.getDomain(tab.url);\n      if (tabDomain != null && tabDomain !== queueMessage.domain) {\n        continue;\n      }\n\n      this.notificationQueue.splice(i, 1);\n      BrowserApi.tabSendMessageData(tab, \"closeNotificationBar\");\n\n      const hostname = Utils.getHostname(tab.url);\n      await this.cipherService.saveNeverDomain(hostname);\n    }\n  }\n\n  private async getDataForTab(tab: chrome.tabs.Tab, responseCommand: string) {\n    const responseData: any = {};\n    if (responseCommand === \"notificationBarGetFoldersList\") {\n      responseData.folders = await firstValueFrom(this.folderService.folderViews$);\n    }\n\n    await BrowserApi.tabSendMessageData(tab, responseCommand, responseData);\n  }\n\n  private async allowPersonalOwnership(): Promise<boolean> {\n    return !(await this.policyService.policyAppliesToUser(PolicyType.PersonalOwnership));\n  }\n}\n","import { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { NotificationsService } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { SystemService } from \"@bitwarden/common/abstractions/system.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nimport { BrowserEnvironmentService } from \"src/services/browser-environment.service\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { AutofillService } from \"../services/abstractions/autofill.service\";\nimport BrowserPlatformUtilsService from \"../services/browserPlatformUtils.service\";\n\nimport MainBackground from \"./main.background\";\nimport LockedVaultPendingNotificationsItem from \"./models/lockedVaultPendingNotificationsItem\";\n\nexport default class RuntimeBackground {\n  private autofillTimeout: any;\n  private pageDetailsToAutoFill: any[] = [];\n  private onInstalledReason: string = null;\n  private lockedVaultPendingNotifications: LockedVaultPendingNotificationsItem[] = [];\n\n  constructor(\n    private main: MainBackground,\n    private autofillService: AutofillService,\n    private platformUtilsService: BrowserPlatformUtilsService,\n    private i18nService: I18nService,\n    private notificationsService: NotificationsService,\n    private systemService: SystemService,\n    private environmentService: BrowserEnvironmentService,\n    private messagingService: MessagingService,\n    private logService: LogService\n  ) {\n    // onInstalled listener must be wired up before anything else, so we do it in the ctor\n    chrome.runtime.onInstalled.addListener((details: any) => {\n      this.onInstalledReason = details.reason;\n    });\n  }\n\n  async init() {\n    if (!chrome.runtime) {\n      return;\n    }\n\n    await this.checkOnInstalled();\n    const backgroundMessageListener = async (\n      msg: any,\n      sender: chrome.runtime.MessageSender,\n      sendResponse: any\n    ) => {\n      await this.processMessage(msg, sender, sendResponse);\n    };\n\n    BrowserApi.messageListener(\"runtime.background\", backgroundMessageListener);\n    if (this.main.isPrivateMode) {\n      (window as any).bitwardenBackgroundMessageListener = backgroundMessageListener;\n    }\n  }\n\n  async processMessage(msg: any, sender: any, sendResponse: any) {\n    switch (msg.command) {\n      case \"loggedIn\":\n      case \"unlocked\": {\n        let item: LockedVaultPendingNotificationsItem;\n\n        if (this.lockedVaultPendingNotifications?.length > 0) {\n          await BrowserApi.closeLoginTab();\n\n          item = this.lockedVaultPendingNotifications.pop();\n          if (item.commandToRetry.sender?.tab?.id) {\n            await BrowserApi.focusSpecifiedTab(item.commandToRetry.sender.tab.id);\n          }\n        }\n\n        await this.main.setIcon();\n        await this.main.refreshBadgeAndMenu(false);\n        this.notificationsService.updateConnection(msg.command === \"unlocked\");\n        this.systemService.cancelProcessReload();\n\n        if (item) {\n          await BrowserApi.tabSendMessageData(\n            item.commandToRetry.sender.tab,\n            \"unlockCompleted\",\n            item\n          );\n        }\n        break;\n      }\n      case \"addToLockedVaultPendingNotifications\":\n        this.lockedVaultPendingNotifications.push(msg.data);\n        break;\n      case \"logout\":\n        await this.main.logout(msg.expired, msg.userId);\n        break;\n      case \"syncCompleted\":\n        if (msg.successfully) {\n          setTimeout(async () => await this.main.refreshBadgeAndMenu(), 2000);\n        }\n        break;\n      case \"openPopup\":\n        await this.main.openPopup();\n        break;\n      case \"promptForLogin\":\n        await BrowserApi.createNewTab(\"popup/index.html?uilocation=popout\", true, true);\n        break;\n      case \"showDialogResolve\":\n        this.platformUtilsService.resolveDialogPromise(msg.dialogId, msg.confirmed);\n        break;\n      case \"bgCollectPageDetails\":\n        await this.main.collectPageDetailsForContentScript(sender.tab, msg.sender, sender.frameId);\n        break;\n      case \"bgUpdateContextMenu\":\n      case \"editedCipher\":\n      case \"addedCipher\":\n      case \"deletedCipher\":\n        await this.main.refreshBadgeAndMenu();\n        break;\n      case \"bgReseedStorage\":\n        await this.main.reseedStorage();\n        break;\n      case \"collectPageDetailsResponse\":\n        switch (msg.sender) {\n          case \"autofiller\":\n          case \"autofill_cmd\": {\n            const totpCode = await this.autofillService.doAutoFillActiveTab(\n              [\n                {\n                  frameId: sender.frameId,\n                  tab: msg.tab,\n                  details: msg.details,\n                },\n              ],\n              msg.sender === \"autofill_cmd\"\n            );\n            if (totpCode != null) {\n              this.platformUtilsService.copyToClipboard(totpCode, { window: window });\n            }\n            break;\n          }\n          case \"contextMenu\":\n            clearTimeout(this.autofillTimeout);\n            this.pageDetailsToAutoFill.push({\n              frameId: sender.frameId,\n              tab: msg.tab,\n              details: msg.details,\n            });\n            this.autofillTimeout = setTimeout(async () => await this.autofillPage(msg.tab), 300);\n            break;\n          default:\n            break;\n        }\n        break;\n      case \"authResult\": {\n        const vaultUrl = this.environmentService.getWebVaultUrl();\n\n        if (msg.referrer == null || Utils.getHostname(vaultUrl) !== msg.referrer) {\n          return;\n        }\n\n        try {\n          BrowserApi.createNewTab(\n            \"popup/index.html?uilocation=popout#/sso?code=\" +\n              encodeURIComponent(msg.code) +\n              \"&state=\" +\n              encodeURIComponent(msg.state)\n          );\n        } catch {\n          this.logService.error(\"Unable to open sso popout tab\");\n        }\n        break;\n      }\n      case \"webAuthnResult\": {\n        const vaultUrl = this.environmentService.getWebVaultUrl();\n\n        if (msg.referrer == null || Utils.getHostname(vaultUrl) !== msg.referrer) {\n          return;\n        }\n\n        const params =\n          `webAuthnResponse=${encodeURIComponent(msg.data)};` +\n          `remember=${encodeURIComponent(msg.remember)}`;\n        BrowserApi.createNewTab(\n          `popup/index.html?uilocation=popout#/2fa;${params}`,\n          undefined,\n          false\n        );\n        break;\n      }\n      case \"reloadPopup\":\n        this.messagingService.send(\"reloadPopup\");\n        break;\n      case \"emailVerificationRequired\":\n        this.messagingService.send(\"showDialog\", {\n          dialogId: \"emailVerificationRequired\",\n          title: this.i18nService.t(\"emailVerificationRequired\"),\n          text: this.i18nService.t(\"emailVerificationRequiredDesc\"),\n          confirmText: this.i18nService.t(\"ok\"),\n          type: \"info\",\n        });\n        break;\n      case \"getClickedElementResponse\":\n        this.platformUtilsService.copyToClipboard(msg.identifier, { window: window });\n        break;\n      default:\n        break;\n    }\n  }\n\n  private async autofillPage(tabToAutoFill: chrome.tabs.Tab) {\n    const totpCode = await this.autofillService.doAutoFill({\n      tab: tabToAutoFill,\n      cipher: this.main.loginToAutoFill,\n      pageDetails: this.pageDetailsToAutoFill,\n      fillNewPassword: true,\n    });\n\n    if (totpCode != null) {\n      this.platformUtilsService.copyToClipboard(totpCode, { window: window });\n    }\n\n    // reset\n    this.main.loginToAutoFill = null;\n    this.pageDetailsToAutoFill = [];\n  }\n\n  private async checkOnInstalled() {\n    setTimeout(async () => {\n      if (this.onInstalledReason != null) {\n        if (this.onInstalledReason === \"install\") {\n          BrowserApi.createNewTab(\"https://bitwarden.com/browser-start/\");\n\n          if (await this.environmentService.hasManagedEnvironment()) {\n            await this.environmentService.setUrlsToManagedEnvironment();\n          }\n        }\n\n        this.onInstalledReason = null;\n      }\n    }, 100);\n  }\n}\n","export type CachedServices = Record<string, any>;\n\nexport type FactoryOptions = {\n  alwaysInitializeNewService?: boolean;\n  doNotStoreInitializedService?: boolean;\n  [optionsKey: string]: unknown;\n};\n\nexport function factory<\n  TCache extends CachedServices,\n  TName extends keyof TCache,\n  TOpts extends FactoryOptions\n>(cachedServices: TCache, name: TName, opts: TOpts, factory: () => TCache[TName]): TCache[TName] {\n  let instance = cachedServices[name];\n  if (opts.alwaysInitializeNewService || !instance) {\n    instance = factory();\n  }\n\n  if (!opts.doNotStoreInitializedService) {\n    cachedServices[name] = instance;\n  }\n\n  return instance as TCache[TName];\n}\n","import { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { WebCryptoFunctionService } from \"@bitwarden/common/services/webCryptoFunction.service\";\n\nimport { CachedServices, factory, FactoryOptions } from \"./factory-options\";\n\ntype CryptoFunctionServiceFactoryOptions = FactoryOptions & {\n  cryptoFunctionServiceOptions: {\n    win: Window | typeof global;\n  };\n};\n\nexport type CryptoFunctionServiceInitOptions = CryptoFunctionServiceFactoryOptions;\n\nexport function cryptoFunctionServiceFactory(\n  cache: { cryptoFunctionService?: CryptoFunctionService } & CachedServices,\n  opts: CryptoFunctionServiceFactoryOptions\n): CryptoFunctionService {\n  return factory(\n    cache,\n    \"cryptoFunctionService\",\n    opts,\n    () => new WebCryptoFunctionService(opts.cryptoFunctionServiceOptions.win)\n  );\n}\n","import { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { LogLevelType } from \"@bitwarden/common/enums/logLevelType\";\nimport { ConsoleLogService } from \"@bitwarden/common/services/consoleLog.service\";\n\nimport { CachedServices, factory, FactoryOptions } from \"./factory-options\";\n\ntype LogServiceFactoryOptions = FactoryOptions & {\n  logServiceOptions: {\n    isDev: boolean;\n    filter?: (level: LogLevelType) => boolean;\n  };\n};\n\nexport type LogServiceInitOptions = LogServiceFactoryOptions;\n\nexport function logServiceFactory(\n  cache: { logService?: LogService } & CachedServices,\n  opts: LogServiceInitOptions\n): LogService {\n  return factory(\n    cache,\n    \"logService\",\n    opts,\n    () => new ConsoleLogService(opts.logServiceOptions.isDev, opts.logServiceOptions.filter)\n  );\n}\n","import { EncryptService } from \"@bitwarden/common/services/encrypt.service\";\n\nimport {\n  cryptoFunctionServiceFactory,\n  CryptoFunctionServiceInitOptions,\n} from \"./crypto-function-service.factory\";\nimport { CachedServices, factory, FactoryOptions } from \"./factory-options\";\nimport { LogServiceInitOptions, logServiceFactory } from \"./log-service.factory\";\n\ntype EncryptServiceFactoryOptions = FactoryOptions & {\n  encryptServiceOptions: {\n    logMacFailures: boolean;\n  };\n};\n\nexport type EncryptServiceInitOptions = EncryptServiceFactoryOptions &\n  CryptoFunctionServiceInitOptions &\n  LogServiceInitOptions;\n\nexport function encryptServiceFactory(\n  cache: { encryptService?: EncryptService } & CachedServices,\n  opts: EncryptServiceInitOptions\n): EncryptService {\n  return factory(\n    cache,\n    \"encryptService\",\n    opts,\n    () =>\n      new EncryptService(\n        cryptoFunctionServiceFactory(cache, opts),\n        logServiceFactory(cache, opts),\n        opts.encryptServiceOptions.logMacFailures\n      )\n  );\n}\n","import { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\n\nexport class MemoryStorageService implements AbstractStorageService {\n  private store = new Map<string, any>();\n\n  get<T>(key: string): Promise<T> {\n    if (this.store.has(key)) {\n      const obj = this.store.get(key);\n      return Promise.resolve(obj as T);\n    }\n    return Promise.resolve(null);\n  }\n\n  async has(key: string): Promise<boolean> {\n    return this.get(key) != null;\n  }\n\n  save(key: string, obj: any): Promise<any> {\n    if (obj == null) {\n      return this.remove(key);\n    }\n    this.store.set(key, obj);\n    return Promise.resolve();\n  }\n\n  remove(key: string): Promise<any> {\n    this.store.delete(key);\n    return Promise.resolve();\n  }\n}\n","import { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\n\nexport default abstract class AbstractChromeStorageService implements AbstractStorageService {\n  protected abstract chromeStorageApi: chrome.storage.StorageArea;\n\n  async get<T>(key: string): Promise<T> {\n    return new Promise((resolve) => {\n      this.chromeStorageApi.get(key, (obj: any) => {\n        if (obj != null && obj[key] != null) {\n          resolve(obj[key] as T);\n          return;\n        }\n        resolve(null);\n      });\n    });\n  }\n\n  async has(key: string): Promise<boolean> {\n    return (await this.get(key)) != null;\n  }\n\n  async save(key: string, obj: any): Promise<void> {\n    if (obj == null) {\n      // Fix safari not liking null in set\n      return new Promise<void>((resolve) => {\n        this.chromeStorageApi.remove(key, () => {\n          resolve();\n        });\n      });\n    }\n\n    if (obj instanceof Set) {\n      obj = Array.from(obj);\n    }\n\n    const keyedObj = { [key]: obj };\n    return new Promise<void>((resolve) => {\n      this.chromeStorageApi.set(keyedObj, () => {\n        resolve();\n      });\n    });\n  }\n\n  async remove(key: string): Promise<void> {\n    return new Promise<void>((resolve) => {\n      this.chromeStorageApi.remove(key, () => {\n        resolve();\n      });\n    });\n  }\n}\n","import AbstractChromeStorageService from \"./abstractChromeStorageApi.service\";\n\nexport default class BrowserLocalStorageService extends AbstractChromeStorageService {\n  protected chromeStorageApi = chrome.storage.local;\n}\n","import AbstractChromeStorageService from \"./abstractChromeStorageApi.service\";\n\nexport default class BrowserMemoryStorageService extends AbstractChromeStorageService {\n  protected chromeStorageApi = chrome.storage.session;\n}\n","import { AbstractEncryptService } from \"@bitwarden/common/abstractions/abstractEncrypt.service\";\nimport { AbstractCachedStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { EncString } from \"@bitwarden/common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\n\nimport { devFlag } from \"../decorators/dev-flag.decorator\";\nimport { devFlagEnabled } from \"../flags\";\n\nimport { AbstractKeyGenerationService } from \"./abstractions/abstractKeyGeneration.service\";\nimport BrowserLocalStorageService from \"./browserLocalStorage.service\";\nimport BrowserMemoryStorageService from \"./browserMemoryStorage.service\";\n\nconst keys = {\n  encKey: \"localEncryptionKey\",\n  sessionKey: \"session\",\n};\n\nexport class LocalBackedSessionStorageService extends AbstractCachedStorageService {\n  private cache = new Map<string, unknown>();\n  private localStorage = new BrowserLocalStorageService();\n  private sessionStorage = new BrowserMemoryStorageService();\n\n  constructor(\n    private encryptService: AbstractEncryptService,\n    private keyGenerationService: AbstractKeyGenerationService\n  ) {\n    super();\n  }\n\n  async get<T>(key: string): Promise<T> {\n    if (this.cache.has(key)) {\n      return this.cache.get(key) as T;\n    }\n\n    return await this.getBypassCache(key);\n  }\n\n  async getBypassCache<T>(key: string): Promise<T> {\n    const session = await this.getLocalSession(await this.getSessionEncKey());\n    if (session == null || !Object.keys(session).includes(key)) {\n      return null;\n    }\n\n    this.cache.set(key, session[key]);\n    return this.cache.get(key) as T;\n  }\n\n  async has(key: string): Promise<boolean> {\n    return (await this.get(key)) != null;\n  }\n\n  async save<T>(key: string, obj: T): Promise<void> {\n    if (obj == null) {\n      this.cache.delete(key);\n    } else {\n      this.cache.set(key, obj);\n    }\n\n    const sessionEncKey = await this.getSessionEncKey();\n    const localSession = (await this.getLocalSession(sessionEncKey)) ?? {};\n    localSession[key] = obj;\n    await this.setLocalSession(localSession, sessionEncKey);\n  }\n\n  async remove(key: string): Promise<void> {\n    await this.save(key, null);\n  }\n\n  async getLocalSession(encKey: SymmetricCryptoKey): Promise<Record<string, unknown>> {\n    const local = await this.localStorage.get<string>(keys.sessionKey);\n\n    if (local == null) {\n      return null;\n    }\n\n    if (devFlagEnabled(\"storeSessionDecrypted\")) {\n      return local as any as Record<string, unknown>;\n    }\n\n    const sessionJson = await this.encryptService.decryptToUtf8(new EncString(local), encKey);\n    if (sessionJson == null) {\n      // Error with decryption -- session is lost, delete state and key and start over\n      await this.setSessionEncKey(null);\n      await this.localStorage.remove(keys.sessionKey);\n      return null;\n    }\n    return JSON.parse(sessionJson);\n  }\n\n  async setLocalSession(session: Record<string, unknown>, key: SymmetricCryptoKey) {\n    if (devFlagEnabled(\"storeSessionDecrypted\")) {\n      await this.setDecryptedLocalSession(session);\n    } else {\n      await this.setEncryptedLocalSession(session, key);\n    }\n  }\n\n  @devFlag(\"storeSessionDecrypted\")\n  async setDecryptedLocalSession(session: Record<string, unknown>): Promise<void> {\n    // Make sure we're storing the jsonified version of the session\n    const jsonSession = JSON.parse(JSON.stringify(session));\n    if (session == null) {\n      await this.localStorage.remove(keys.sessionKey);\n    } else {\n      await this.localStorage.save(keys.sessionKey, jsonSession);\n    }\n  }\n\n  async setEncryptedLocalSession(session: Record<string, unknown>, key: SymmetricCryptoKey) {\n    const jsonSession = JSON.stringify(session);\n    const encSession = await this.encryptService.encrypt(jsonSession, key);\n\n    if (encSession == null) {\n      return await this.localStorage.remove(keys.sessionKey);\n    }\n    await this.localStorage.save(keys.sessionKey, encSession.encryptedString);\n  }\n\n  async getSessionEncKey(): Promise<SymmetricCryptoKey> {\n    let storedKey = await this.sessionStorage.get<SymmetricCryptoKey>(keys.encKey);\n    if (storedKey == null || Object.keys(storedKey).length == 0) {\n      storedKey = await this.keyGenerationService.makeEphemeralKey();\n      await this.setSessionEncKey(storedKey);\n    }\n    return SymmetricCryptoKey.fromJSON(storedKey);\n  }\n\n  async setSessionEncKey(input: SymmetricCryptoKey): Promise<void> {\n    if (input == null) {\n      await this.sessionStorage.remove(keys.encKey);\n    } else {\n      await this.sessionStorage.save(keys.encKey, input);\n    }\n  }\n}\n","import { devFlagEnabled, DevFlagName } from \"../flags\";\n\nexport function devFlag(flag: DevFlagName) {\n  return function (target: any, propertyKey: string, descriptor: PropertyDescriptor) {\n    const originalMethod = descriptor.value;\n    descriptor.value = function (...args: any[]) {\n      if (!devFlagEnabled(flag)) {\n        throw new Error(\n          `This method should not be called, it is protected by a disabled dev flag.`\n        );\n      }\n      return originalMethod.apply(this, args);\n    };\n  };\n}\n","import { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetricCryptoKey\";\n\nimport { AbstractKeyGenerationService } from \"./abstractions/abstractKeyGeneration.service\";\n\nexport class KeyGenerationService implements AbstractKeyGenerationService {\n  constructor(private cryptoFunctionService: CryptoFunctionService) {}\n\n  async makeEphemeralKey(numBytes = 16): Promise<SymmetricCryptoKey> {\n    const keyMaterial = await this.cryptoFunctionService.randomBytes(numBytes);\n    const key = await this.cryptoFunctionService.hkdf(\n      keyMaterial,\n      \"bitwarden-ephemeral\",\n      \"ephemeral\",\n      64,\n      \"sha256\"\n    );\n    return new SymmetricCryptoKey(key);\n  }\n}\n","import { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { MemoryStorageService } from \"@bitwarden/common/services/memoryStorage.service\";\n\nimport BrowserLocalStorageService from \"../../services/browserLocalStorage.service\";\nimport { LocalBackedSessionStorageService } from \"../../services/localBackedSessionStorage.service\";\n\nimport { encryptServiceFactory, EncryptServiceInitOptions } from \"./encrypt-service.factory\";\nimport { CachedServices, factory, FactoryOptions } from \"./factory-options\";\nimport {\n  keyGenerationServiceFactory,\n  KeyGenerationServiceInitOptions,\n} from \"./key-generation-service.factory\";\n\ntype StorageServiceFactoryOptions = FactoryOptions;\n\nexport type DiskStorageServiceInitOptions = StorageServiceFactoryOptions;\nexport type SecureStorageServiceInitOptions = StorageServiceFactoryOptions;\nexport type MemoryStorageServiceInitOptions = StorageServiceFactoryOptions &\n  EncryptServiceInitOptions &\n  KeyGenerationServiceInitOptions;\n\nexport function diskStorageServiceFactory(\n  cache: { diskStorageService?: AbstractStorageService } & CachedServices,\n  opts: DiskStorageServiceInitOptions\n): AbstractStorageService {\n  return factory(cache, \"diskStorageService\", opts, () => new BrowserLocalStorageService());\n}\n\nexport function secureStorageServiceFactory(\n  cache: { secureStorageService?: AbstractStorageService } & CachedServices,\n  opts: SecureStorageServiceInitOptions\n): AbstractStorageService {\n  return factory(cache, \"secureStorageService\", opts, () => new BrowserLocalStorageService());\n}\n\nexport function memoryStorageServiceFactory(\n  cache: { memoryStorageService?: AbstractStorageService } & CachedServices,\n  opts: MemoryStorageServiceInitOptions\n): AbstractStorageService {\n  return factory(cache, \"memoryStorageService\", opts, () => {\n    if (chrome.runtime.getManifest().manifest_version == 3) {\n      return new LocalBackedSessionStorageService(\n        encryptServiceFactory(cache, opts),\n        keyGenerationServiceFactory(cache, opts)\n      );\n    }\n    return new MemoryStorageService();\n  });\n}\n","import { KeyGenerationService } from \"../../services/keyGeneration.service\";\n\nimport {\n  cryptoFunctionServiceFactory,\n  CryptoFunctionServiceInitOptions,\n} from \"./crypto-function-service.factory\";\nimport { CachedServices, factory, FactoryOptions } from \"./factory-options\";\n\ntype KeyGenerationServiceFactoryOptions = FactoryOptions;\n\nexport type KeyGenerationServiceInitOptions = KeyGenerationServiceFactoryOptions &\n  CryptoFunctionServiceInitOptions;\n\nexport function keyGenerationServiceFactory(\n  cache: { keyGenerationService?: KeyGenerationService } & CachedServices,\n  opts: KeyGenerationServiceInitOptions\n): KeyGenerationService {\n  return factory(\n    cache,\n    \"keyGenerationService\",\n    opts,\n    () => new KeyGenerationService(cryptoFunctionServiceFactory(cache, opts))\n  );\n}\n","import { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { GlobalState } from \"@bitwarden/common/models/domain/globalState\";\nimport { StateMigrationService } from \"@bitwarden/common/services/stateMigration.service\";\n\nimport { Account } from \"../../models/account\";\n\nimport { CachedServices, factory, FactoryOptions } from \"./factory-options\";\nimport {\n  diskStorageServiceFactory,\n  DiskStorageServiceInitOptions,\n  secureStorageServiceFactory,\n  SecureStorageServiceInitOptions,\n} from \"./storage-service.factory\";\n\ntype StateMigrationServiceFactoryOptions = FactoryOptions & {\n  stateMigrationServiceOptions: {\n    stateFactory: StateFactory<GlobalState, Account>;\n  };\n};\n\nexport type StateMigrationServiceInitOptions = StateMigrationServiceFactoryOptions &\n  DiskStorageServiceInitOptions &\n  SecureStorageServiceInitOptions;\n\nexport function stateMigrationServiceFactory(\n  cache: { stateMigrationService?: StateMigrationService } & CachedServices,\n  opts: StateMigrationServiceInitOptions\n): StateMigrationService {\n  return factory(\n    cache,\n    \"stateMigrationService\",\n    opts,\n    () =>\n      new StateMigrationService(\n        diskStorageServiceFactory(cache, opts),\n        secureStorageServiceFactory(cache, opts),\n        opts.stateMigrationServiceOptions.stateFactory\n      )\n  );\n}\n","import { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { GlobalState } from \"@bitwarden/common/models/domain/globalState\";\n\nimport { Account } from \"../../models/account\";\nimport { StateService } from \"../../services/state.service\";\n\nimport { CachedServices, factory, FactoryOptions } from \"./factory-options\";\nimport { logServiceFactory, LogServiceInitOptions } from \"./log-service.factory\";\nimport {\n  stateMigrationServiceFactory,\n  StateMigrationServiceInitOptions,\n} from \"./state-migration-service.factory\";\nimport {\n  diskStorageServiceFactory,\n  secureStorageServiceFactory,\n  memoryStorageServiceFactory,\n  DiskStorageServiceInitOptions,\n  SecureStorageServiceInitOptions,\n  MemoryStorageServiceInitOptions,\n} from \"./storage-service.factory\";\n\ntype StateServiceFactoryOptions = FactoryOptions & {\n  stateServiceOptions: {\n    useAccountCache?: boolean;\n    stateFactory: StateFactory<GlobalState, Account>;\n  };\n};\n\nexport type StateServiceInitOptions = StateServiceFactoryOptions &\n  DiskStorageServiceInitOptions &\n  SecureStorageServiceInitOptions &\n  MemoryStorageServiceInitOptions &\n  LogServiceInitOptions &\n  StateMigrationServiceInitOptions;\n\nexport function stateServiceFactory(\n  cache: { stateService?: StateService } & CachedServices,\n  opts: StateServiceInitOptions\n): StateService {\n  return factory(\n    cache,\n    \"stateService\",\n    opts,\n    () =>\n      new StateService(\n        diskStorageServiceFactory(cache, opts),\n        secureStorageServiceFactory(cache, opts),\n        memoryStorageServiceFactory(cache, opts),\n        logServiceFactory(cache, opts),\n        stateMigrationServiceFactory(cache, opts),\n        opts.stateServiceOptions.stateFactory,\n        opts.stateServiceOptions.useAccountCache\n      )\n  );\n}\n","import MainBackground from \"./main.background\";\nimport NotificationBackground from \"./notification.background\";\n\nexport default class TabsBackground {\n  constructor(\n    private main: MainBackground,\n    private notificationBackground: NotificationBackground\n  ) {}\n\n  private focusedWindowId: number;\n\n  async init() {\n    if (!chrome.tabs || !chrome.windows) {\n      return;\n    }\n\n    chrome.windows.onFocusChanged.addListener(async (windowId: number) => {\n      if (windowId === null || windowId < 0) {\n        return;\n      }\n\n      this.focusedWindowId = windowId;\n      this.main.messagingService.send(\"windowChanged\");\n    });\n\n    chrome.tabs.onActivated.addListener(async (activeInfo: chrome.tabs.TabActiveInfo) => {\n      await this.main.refreshBadgeAndMenu();\n      this.main.messagingService.send(\"tabChanged\");\n    });\n\n    chrome.tabs.onReplaced.addListener(async (addedTabId: number, removedTabId: number) => {\n      if (this.main.onReplacedRan) {\n        return;\n      }\n      this.main.onReplacedRan = true;\n\n      await this.notificationBackground.checkNotificationQueue();\n      await this.main.refreshBadgeAndMenu();\n      this.main.messagingService.send(\"tabChanged\");\n    });\n\n    chrome.tabs.onUpdated.addListener(\n      async (tabId: number, changeInfo: chrome.tabs.TabChangeInfo, tab: chrome.tabs.Tab) => {\n        if (this.focusedWindowId > 0 && tab.windowId != this.focusedWindowId) {\n          return;\n        }\n\n        if (!tab.active) {\n          return;\n        }\n\n        if (this.main.onUpdatedRan) {\n          return;\n        }\n        this.main.onUpdatedRan = true;\n\n        await this.notificationBackground.checkNotificationQueue(tab);\n        await this.main.refreshBadgeAndMenu();\n        this.main.messagingService.send(\"tabChanged\");\n      }\n    );\n  }\n}\n","import { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\nimport { UriMatchType } from \"@bitwarden/common/enums/uriMatchType\";\n\nexport default class WebRequestBackground {\n  private pendingAuthRequests: any[] = [];\n  private webRequest: any;\n  private isFirefox: boolean;\n\n  constructor(\n    platformUtilsService: PlatformUtilsService,\n    private cipherService: CipherService,\n    private authService: AuthService\n  ) {\n    const manifest = chrome.runtime.getManifest();\n    if (manifest.manifest_version === 2) {\n      this.webRequest = (window as any).chrome.webRequest;\n    }\n    this.isFirefox = platformUtilsService.isFirefox();\n  }\n\n  async init() {\n    if (!this.webRequest || !this.webRequest.onAuthRequired) {\n      return;\n    }\n\n    this.webRequest.onAuthRequired.addListener(\n      async (details: any, callback: any) => {\n        if (!details.url || this.pendingAuthRequests.indexOf(details.requestId) !== -1) {\n          if (callback) {\n            callback();\n          }\n          return;\n        }\n\n        this.pendingAuthRequests.push(details.requestId);\n\n        if (this.isFirefox) {\n          // eslint-disable-next-line\n          return new Promise(async (resolve, reject) => {\n            await this.resolveAuthCredentials(details.url, resolve, reject);\n          });\n        } else {\n          await this.resolveAuthCredentials(details.url, callback, callback);\n        }\n      },\n      { urls: [\"http://*/*\", \"https://*/*\"] },\n      [this.isFirefox ? \"blocking\" : \"asyncBlocking\"]\n    );\n\n    this.webRequest.onCompleted.addListener((details: any) => this.completeAuthRequest(details), {\n      urls: [\"http://*/*\"],\n    });\n    this.webRequest.onErrorOccurred.addListener(\n      (details: any) => this.completeAuthRequest(details),\n      {\n        urls: [\"http://*/*\"],\n      }\n    );\n  }\n\n  // eslint-disable-next-line\n  private async resolveAuthCredentials(domain: string, success: Function, error: Function) {\n    if ((await this.authService.getAuthStatus()) < AuthenticationStatus.Unlocked) {\n      error();\n      return;\n    }\n\n    try {\n      const ciphers = await this.cipherService.getAllDecryptedForUrl(\n        domain,\n        null,\n        UriMatchType.Host\n      );\n      if (ciphers == null || ciphers.length !== 1) {\n        error();\n        return;\n      }\n\n      success({\n        authCredentials: {\n          username: ciphers[0].login.username,\n          password: ciphers[0].login.password,\n        },\n      });\n    } catch {\n      error();\n    }\n  }\n\n  private completeAuthRequest(details: any) {\n    const i = this.pendingAuthRequests.indexOf(details.requestId);\n    if (i > -1) {\n      this.pendingAuthRequests.splice(i, 1);\n    }\n  }\n}\n","import { ApiService as ApiServiceAbstraction } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService as AppIdServiceAbstraction } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuditService as AuditServiceAbstraction } from \"@bitwarden/common/abstractions/audit.service\";\nimport { AuthService as AuthServiceAbstraction } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CipherService as CipherServiceAbstraction } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService as CollectionServiceAbstraction } from \"@bitwarden/common/abstractions/collection.service\";\nimport { CryptoService as CryptoServiceAbstraction } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService as CryptoFunctionServiceAbstraction } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EventService as EventServiceAbstraction } from \"@bitwarden/common/abstractions/event.service\";\nimport { ExportService as ExportServiceAbstraction } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"@bitwarden/common/abstractions/fileUpload.service\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { InternalFolderService as InternalFolderServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService as I18nServiceAbstraction } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService as LogServiceAbstraction } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { OrganizationService as OrganizationServiceAbstraction } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { InternalPolicyService as InternalPolicyServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { ProviderService as ProviderServiceAbstraction } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SearchService as SearchServiceAbstraction } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService as SendServiceAbstraction } from \"@bitwarden/common/abstractions/send.service\";\nimport { SettingsService as SettingsServiceAbstraction } from \"@bitwarden/common/abstractions/settings.service\";\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { SyncService as SyncServiceAbstraction } from \"@bitwarden/common/abstractions/sync.service\";\nimport { SystemService as SystemServiceAbstraction } from \"@bitwarden/common/abstractions/system.service\";\nimport { TokenService as TokenServiceAbstraction } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService as TotpServiceAbstraction } from \"@bitwarden/common/abstractions/totp.service\";\nimport { TwoFactorService as TwoFactorServiceAbstraction } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { UserVerificationApiServiceAbstraction } from \"@bitwarden/common/abstractions/userVerification/userVerification-api.service.abstraction\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { UsernameGenerationService as UsernameGenerationServiceAbstraction } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"@bitwarden/common/abstractions/vaultTimeout.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { GlobalState } from \"@bitwarden/common/models/domain/globalState\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipherView\";\nimport { ApiService } from \"@bitwarden/common/services/api.service\";\nimport { AppIdService } from \"@bitwarden/common/services/appId.service\";\nimport { AuditService } from \"@bitwarden/common/services/audit.service\";\nimport { AuthService } from \"@bitwarden/common/services/auth.service\";\nimport { CipherService } from \"@bitwarden/common/services/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/services/collection.service\";\nimport { ContainerService } from \"@bitwarden/common/services/container.service\";\nimport { EncryptService } from \"@bitwarden/common/services/encrypt.service\";\nimport { EventService } from \"@bitwarden/common/services/event.service\";\nimport { ExportService } from \"@bitwarden/common/services/export.service\";\nimport { FileUploadService } from \"@bitwarden/common/services/fileUpload.service\";\nimport { FolderApiService } from \"@bitwarden/common/services/folder/folder-api.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/services/keyConnector.service\";\nimport { NotificationsService } from \"@bitwarden/common/services/notifications.service\";\nimport { OrganizationService } from \"@bitwarden/common/services/organization.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/services/passwordGeneration.service\";\nimport { PolicyApiService } from \"@bitwarden/common/services/policy/policy-api.service\";\nimport { PolicyService } from \"@bitwarden/common/services/policy/policy.service\";\nimport { ProviderService } from \"@bitwarden/common/services/provider.service\";\nimport { SearchService } from \"@bitwarden/common/services/search.service\";\nimport { SendService } from \"@bitwarden/common/services/send.service\";\nimport { SettingsService } from \"@bitwarden/common/services/settings.service\";\nimport { StateMigrationService } from \"@bitwarden/common/services/stateMigration.service\";\nimport { SyncService } from \"@bitwarden/common/services/sync.service\";\nimport { SystemService } from \"@bitwarden/common/services/system.service\";\nimport { TokenService } from \"@bitwarden/common/services/token.service\";\nimport { TotpService } from \"@bitwarden/common/services/totp.service\";\nimport { TwoFactorService } from \"@bitwarden/common/services/twoFactor.service\";\nimport { UserVerificationApiService } from \"@bitwarden/common/services/userVerification/userVerification-api.service\";\nimport { UserVerificationService } from \"@bitwarden/common/services/userVerification/userVerification.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/services/usernameGeneration.service\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { SafariApp } from \"../browser/safariApp\";\nimport { Account } from \"../models/account\";\nimport { PopupUtilsService } from \"../popup/services/popup-utils.service\";\nimport { AutofillService as AutofillServiceAbstraction } from \"../services/abstractions/autofill.service\";\nimport { StateService as StateServiceAbstraction } from \"../services/abstractions/state.service\";\nimport AutofillService from \"../services/autofill.service\";\nimport { BrowserEnvironmentService } from \"../services/browser-environment.service\";\nimport { BrowserCryptoService } from \"../services/browserCrypto.service\";\nimport BrowserMessagingService from \"../services/browserMessaging.service\";\nimport BrowserMessagingPrivateModeBackgroundService from \"../services/browserMessagingPrivateModeBackground.service\";\nimport BrowserPlatformUtilsService from \"../services/browserPlatformUtils.service\";\nimport { FolderService } from \"../services/folders/folder.service\";\nimport I18nService from \"../services/i18n.service\";\nimport { VaultFilterService } from \"../services/vaultFilter.service\";\nimport VaultTimeoutService from \"../services/vaultTimeout.service\";\n\nimport CommandsBackground from \"./commands.background\";\nimport ContextMenusBackground from \"./contextMenus.background\";\nimport IdleBackground from \"./idle.background\";\nimport IconDetails from \"./models/iconDetails\";\nimport { NativeMessagingBackground } from \"./nativeMessaging.background\";\nimport NotificationBackground from \"./notification.background\";\nimport RuntimeBackground from \"./runtime.background\";\nimport { cryptoFunctionServiceFactory } from \"./service_factories/crypto-function-service.factory\";\nimport { encryptServiceFactory } from \"./service_factories/encrypt-service.factory\";\nimport { environmentServiceFactory } from \"./service_factories/environment-service.factory\";\nimport { logServiceFactory } from \"./service_factories/log-service.factory\";\nimport { stateMigrationServiceFactory } from \"./service_factories/state-migration-service.factory\";\nimport { stateServiceFactory } from \"./service_factories/state-service.factory\";\nimport {\n  diskStorageServiceFactory,\n  memoryStorageServiceFactory,\n  secureStorageServiceFactory,\n} from \"./service_factories/storage-service.factory\";\nimport TabsBackground from \"./tabs.background\";\nimport WebRequestBackground from \"./webRequest.background\";\n\nexport default class MainBackground {\n  messagingService: MessagingServiceAbstraction;\n  storageService: AbstractStorageService;\n  secureStorageService: AbstractStorageService;\n  memoryStorageService: AbstractStorageService;\n  i18nService: I18nServiceAbstraction;\n  platformUtilsService: PlatformUtilsServiceAbstraction;\n  logService: LogServiceAbstraction;\n  cryptoService: CryptoServiceAbstraction;\n  cryptoFunctionService: CryptoFunctionServiceAbstraction;\n  tokenService: TokenServiceAbstraction;\n  appIdService: AppIdServiceAbstraction;\n  apiService: ApiServiceAbstraction;\n  environmentService: BrowserEnvironmentService;\n  settingsService: SettingsServiceAbstraction;\n  cipherService: CipherServiceAbstraction;\n  folderService: InternalFolderServiceAbstraction;\n  collectionService: CollectionServiceAbstraction;\n  vaultTimeoutService: VaultTimeoutServiceAbstraction;\n  syncService: SyncServiceAbstraction;\n  passwordGenerationService: PasswordGenerationServiceAbstraction;\n  totpService: TotpServiceAbstraction;\n  autofillService: AutofillServiceAbstraction;\n  containerService: ContainerService;\n  auditService: AuditServiceAbstraction;\n  authService: AuthServiceAbstraction;\n  exportService: ExportServiceAbstraction;\n  searchService: SearchServiceAbstraction;\n  notificationsService: NotificationsServiceAbstraction;\n  stateService: StateServiceAbstraction;\n  stateMigrationService: StateMigrationService;\n  systemService: SystemServiceAbstraction;\n  eventService: EventServiceAbstraction;\n  policyService: InternalPolicyServiceAbstraction;\n  popupUtilsService: PopupUtilsService;\n  sendService: SendServiceAbstraction;\n  fileUploadService: FileUploadServiceAbstraction;\n  organizationService: OrganizationServiceAbstraction;\n  providerService: ProviderServiceAbstraction;\n  keyConnectorService: KeyConnectorServiceAbstraction;\n  userVerificationService: UserVerificationServiceAbstraction;\n  twoFactorService: TwoFactorServiceAbstraction;\n  vaultFilterService: VaultFilterService;\n  usernameGenerationService: UsernameGenerationServiceAbstraction;\n  encryptService: EncryptService;\n  folderApiService: FolderApiServiceAbstraction;\n  policyApiService: PolicyApiServiceAbstraction;\n  userVerificationApiService: UserVerificationApiServiceAbstraction;\n\n  // Passed to the popup for Safari to workaround issues with theming, downloading, etc.\n  backgroundWindow = window;\n\n  onUpdatedRan: boolean;\n  onReplacedRan: boolean;\n  loginToAutoFill: CipherView = null;\n\n  private commandsBackground: CommandsBackground;\n  private contextMenusBackground: ContextMenusBackground;\n  private idleBackground: IdleBackground;\n  private notificationBackground: NotificationBackground;\n  private runtimeBackground: RuntimeBackground;\n  private tabsBackground: TabsBackground;\n  private webRequestBackground: WebRequestBackground;\n\n  private sidebarAction: any;\n  private buildingContextMenu: boolean;\n  private menuOptionsLoaded: any[] = [];\n  private syncTimeout: any;\n  private isSafari: boolean;\n  private nativeMessagingBackground: NativeMessagingBackground;\n\n  constructor(public isPrivateMode: boolean = false) {\n    // Services\n    const lockedCallback = async (userId?: string) => {\n      if (this.notificationsService != null) {\n        this.notificationsService.updateConnection(false);\n      }\n      await this.setIcon();\n      await this.refreshBadgeAndMenu(true);\n      if (this.systemService != null) {\n        await this.systemService.clearPendingClipboard();\n        await this.systemService.startProcessReload(this.authService);\n      }\n    };\n\n    const logoutCallback = async (expired: boolean, userId?: string) =>\n      await this.logout(expired, userId);\n\n    const services: Record<string, unknown> = {};\n    const factoryOptions = {\n      logServiceOptions: {\n        isDev: false,\n      },\n      cryptoFunctionServiceOptions: {\n        win: window,\n      },\n      stateMigrationServiceOptions: {\n        stateFactory: new StateFactory(GlobalState, Account),\n      },\n      stateServiceOptions: {\n        stateFactory: new StateFactory(GlobalState, Account),\n      },\n    };\n\n    this.messagingService = isPrivateMode\n      ? new BrowserMessagingPrivateModeBackgroundService()\n      : new BrowserMessagingService();\n    this.logService = logServiceFactory(services, factoryOptions);\n    this.cryptoFunctionService = cryptoFunctionServiceFactory(services, factoryOptions);\n    this.storageService = diskStorageServiceFactory(services, factoryOptions);\n    this.secureStorageService = secureStorageServiceFactory(services, factoryOptions);\n    this.memoryStorageService = memoryStorageServiceFactory(services, {\n      ...factoryOptions,\n      encryptServiceOptions: {\n        logMacFailures: false,\n      },\n    });\n    this.stateMigrationService = stateMigrationServiceFactory(services, factoryOptions);\n    this.stateService = stateServiceFactory(services, {\n      ...factoryOptions,\n      encryptServiceOptions: { logMacFailures: false },\n    });\n    this.platformUtilsService = new BrowserPlatformUtilsService(\n      this.messagingService,\n      this.stateService,\n      (clipboardValue, clearMs) => {\n        if (this.systemService != null) {\n          this.systemService.clearClipboard(clipboardValue, clearMs);\n        }\n      },\n      async () => {\n        if (this.nativeMessagingBackground != null) {\n          const promise = this.nativeMessagingBackground.getResponse();\n\n          try {\n            await this.nativeMessagingBackground.send({ command: \"biometricUnlock\" });\n          } catch (e) {\n            return Promise.reject(e);\n          }\n\n          return promise.then((result) => result.response === \"unlocked\");\n        }\n      }\n    );\n    this.i18nService = new I18nService(BrowserApi.getUILanguage(window));\n    this.encryptService = encryptServiceFactory(services, {\n      ...factoryOptions,\n      encryptServiceOptions: {\n        logMacFailures: true,\n      },\n      alwaysInitializeNewService: true,\n    }); // Update encrypt service with new instances\n    this.cryptoService = new BrowserCryptoService(\n      this.cryptoFunctionService,\n      this.encryptService,\n      this.platformUtilsService,\n      this.logService,\n      this.stateService\n    );\n    this.tokenService = new TokenService(this.stateService);\n    this.appIdService = new AppIdService(this.storageService);\n    this.environmentService = environmentServiceFactory(services, {\n      ...factoryOptions,\n      encryptServiceOptions: {\n        logMacFailures: false,\n      },\n    });\n    this.apiService = new ApiService(\n      this.tokenService,\n      this.platformUtilsService,\n      this.environmentService,\n      this.appIdService,\n      (expired: boolean) => this.logout(expired)\n    );\n    this.settingsService = new SettingsService(this.stateService);\n    this.fileUploadService = new FileUploadService(this.logService, this.apiService);\n    this.cipherService = new CipherService(\n      this.cryptoService,\n      this.settingsService,\n      this.apiService,\n      this.fileUploadService,\n      this.i18nService,\n      () => this.searchService,\n      this.logService,\n      this.stateService\n    );\n    this.folderService = new FolderService(\n      this.cryptoService,\n      this.i18nService,\n      this.cipherService,\n      this.stateService\n    );\n    this.folderApiService = new FolderApiService(this.folderService, this.apiService);\n    this.collectionService = new CollectionService(\n      this.cryptoService,\n      this.i18nService,\n      this.stateService\n    );\n    this.searchService = new SearchService(this.cipherService, this.logService, this.i18nService);\n    this.sendService = new SendService(\n      this.cryptoService,\n      this.apiService,\n      this.fileUploadService,\n      this.i18nService,\n      this.cryptoFunctionService,\n      this.stateService\n    );\n    this.organizationService = new OrganizationService(this.stateService);\n    this.policyService = new PolicyService(this.stateService, this.organizationService);\n    this.policyApiService = new PolicyApiService(\n      this.policyService,\n      this.apiService,\n      this.stateService,\n      this.organizationService\n    );\n    this.keyConnectorService = new KeyConnectorService(\n      this.stateService,\n      this.cryptoService,\n      this.apiService,\n      this.tokenService,\n      this.logService,\n      this.organizationService,\n      this.cryptoFunctionService,\n      logoutCallback\n    );\n    this.vaultFilterService = new VaultFilterService(\n      this.stateService,\n      this.organizationService,\n      this.folderService,\n      this.cipherService,\n      this.collectionService,\n      this.policyService\n    );\n\n    this.twoFactorService = new TwoFactorService(this.i18nService, this.platformUtilsService);\n\n    // eslint-disable-next-line\n    const that = this;\n    const backgroundMessagingService = new (class extends MessagingServiceAbstraction {\n      // AuthService should send the messages to the background not popup.\n      send = (subscriber: string, arg: any = {}) => {\n        const message = Object.assign({}, { command: subscriber }, arg);\n        that.runtimeBackground.processMessage(message, that, null);\n      };\n    })();\n    this.authService = new AuthService(\n      this.cryptoService,\n      this.apiService,\n      this.tokenService,\n      this.appIdService,\n      this.platformUtilsService,\n      backgroundMessagingService,\n      this.logService,\n      this.keyConnectorService,\n      this.environmentService,\n      this.stateService,\n      this.twoFactorService,\n      this.i18nService\n    );\n\n    this.vaultTimeoutService = new VaultTimeoutService(\n      this.cipherService,\n      this.folderService,\n      this.collectionService,\n      this.cryptoService,\n      this.platformUtilsService,\n      this.messagingService,\n      this.searchService,\n      this.tokenService,\n      this.policyService,\n      this.keyConnectorService,\n      this.stateService,\n      this.authService,\n      lockedCallback,\n      logoutCallback\n    );\n    this.providerService = new ProviderService(this.stateService);\n    this.syncService = new SyncService(\n      this.apiService,\n      this.settingsService,\n      this.folderService,\n      this.cipherService,\n      this.cryptoService,\n      this.collectionService,\n      this.messagingService,\n      this.policyService,\n      this.sendService,\n      this.logService,\n      this.keyConnectorService,\n      this.stateService,\n      this.organizationService,\n      this.providerService,\n      this.folderApiService,\n      logoutCallback\n    );\n    this.eventService = new EventService(\n      this.apiService,\n      this.cipherService,\n      this.stateService,\n      this.logService,\n      this.organizationService\n    );\n    this.passwordGenerationService = new PasswordGenerationService(\n      this.cryptoService,\n      this.policyService,\n      this.stateService\n    );\n    this.totpService = new TotpService(this.cryptoFunctionService, this.logService);\n    this.autofillService = new AutofillService(\n      this.cipherService,\n      this.stateService,\n      this.totpService,\n      this.eventService,\n      this.logService\n    );\n    this.containerService = new ContainerService(this.cryptoService);\n    this.auditService = new AuditService(this.cryptoFunctionService, this.apiService);\n    this.exportService = new ExportService(\n      this.folderService,\n      this.cipherService,\n      this.apiService,\n      this.cryptoService,\n      this.cryptoFunctionService\n    );\n    this.notificationsService = new NotificationsService(\n      this.syncService,\n      this.appIdService,\n      this.apiService,\n      this.environmentService,\n      logoutCallback,\n      this.logService,\n      this.stateService,\n      this.authService\n    );\n    this.popupUtilsService = new PopupUtilsService(isPrivateMode);\n\n    this.userVerificationApiService = new UserVerificationApiService(this.apiService);\n\n    this.userVerificationService = new UserVerificationService(\n      this.cryptoService,\n      this.i18nService,\n      this.userVerificationApiService\n    );\n\n    const systemUtilsServiceReloadCallback = () => {\n      const forceWindowReload =\n        this.platformUtilsService.isSafari() ||\n        this.platformUtilsService.isFirefox() ||\n        this.platformUtilsService.isOpera();\n      BrowserApi.reloadExtension(forceWindowReload ? window : null);\n      return Promise.resolve();\n    };\n\n    this.systemService = new SystemService(\n      this.messagingService,\n      this.platformUtilsService,\n      systemUtilsServiceReloadCallback,\n      this.stateService\n    );\n\n    // Other fields\n    this.isSafari = this.platformUtilsService.isSafari();\n    this.sidebarAction = this.isSafari\n      ? null\n      : typeof opr !== \"undefined\" && opr.sidebarAction\n      ? opr.sidebarAction\n      : (window as any).chrome.sidebarAction;\n\n    // Background\n    this.runtimeBackground = new RuntimeBackground(\n      this,\n      this.autofillService,\n      this.platformUtilsService as BrowserPlatformUtilsService,\n      this.i18nService,\n      this.notificationsService,\n      this.systemService,\n      this.environmentService,\n      this.messagingService,\n      this.logService\n    );\n    this.nativeMessagingBackground = new NativeMessagingBackground(\n      this.cryptoService,\n      this.cryptoFunctionService,\n      this.runtimeBackground,\n      this.i18nService,\n      this.messagingService,\n      this.appIdService,\n      this.platformUtilsService,\n      this.stateService,\n      this.logService,\n      this.authService\n    );\n    this.commandsBackground = new CommandsBackground(\n      this,\n      this.passwordGenerationService,\n      this.platformUtilsService,\n      this.vaultTimeoutService,\n      this.authService\n    );\n    this.notificationBackground = new NotificationBackground(\n      this.autofillService,\n      this.cipherService,\n      this.authService,\n      this.policyService,\n      this.folderService,\n      this.stateService\n    );\n\n    this.tabsBackground = new TabsBackground(this, this.notificationBackground);\n    this.contextMenusBackground = new ContextMenusBackground(\n      this,\n      this.cipherService,\n      this.passwordGenerationService,\n      this.platformUtilsService,\n      this.authService,\n      this.eventService,\n      this.totpService\n    );\n    this.idleBackground = new IdleBackground(\n      this.vaultTimeoutService,\n      this.stateService,\n      this.notificationsService\n    );\n    this.webRequestBackground = new WebRequestBackground(\n      this.platformUtilsService,\n      this.cipherService,\n      this.authService\n    );\n\n    this.usernameGenerationService = new UsernameGenerationService(\n      this.cryptoService,\n      this.stateService,\n      this.apiService\n    );\n  }\n\n  async bootstrap() {\n    this.containerService.attachToGlobal(window);\n\n    await this.stateService.init();\n\n    await (this.vaultTimeoutService as VaultTimeoutService).init(true);\n    await (this.i18nService as I18nService).init();\n    await (this.eventService as EventService).init(true);\n    await this.runtimeBackground.init();\n    await this.notificationBackground.init();\n    await this.commandsBackground.init();\n\n    this.twoFactorService.init();\n\n    await this.tabsBackground.init();\n    await this.contextMenusBackground.init();\n    await this.idleBackground.init();\n    await this.webRequestBackground.init();\n\n    if (this.platformUtilsService.isFirefox() && !this.isPrivateMode) {\n      // Set Private Mode windows to the default icon - they do not share state with the background page\n      const privateWindows = await BrowserApi.getPrivateModeWindows();\n      privateWindows.forEach(async (win) => {\n        await this.actionSetIcon(chrome.browserAction, \"\", win.id);\n        await this.actionSetIcon(this.sidebarAction, \"\", win.id);\n      });\n\n      BrowserApi.onWindowCreated(async (win) => {\n        if (win.incognito) {\n          await this.actionSetIcon(chrome.browserAction, \"\", win.id);\n          await this.actionSetIcon(this.sidebarAction, \"\", win.id);\n        }\n      });\n    }\n\n    return new Promise<void>((resolve) => {\n      setTimeout(async () => {\n        await this.environmentService.setUrlsFromStorage();\n        await this.setIcon();\n        this.fullSync(true);\n        setTimeout(() => this.notificationsService.init(), 2500);\n        resolve();\n      }, 500);\n    });\n  }\n\n  async setIcon() {\n    if ((!chrome.browserAction && !this.sidebarAction) || this.isPrivateMode) {\n      return;\n    }\n\n    const authStatus = await this.authService.getAuthStatus();\n\n    let suffix = \"\";\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      suffix = \"_gray\";\n    } else if (authStatus === AuthenticationStatus.Locked) {\n      suffix = \"_locked\";\n    }\n\n    await this.actionSetIcon(chrome.browserAction, suffix);\n    await this.actionSetIcon(this.sidebarAction, suffix);\n  }\n\n  async refreshBadgeAndMenu(forLocked = false) {\n    if (!chrome.windows || !chrome.contextMenus) {\n      return;\n    }\n\n    const menuDisabled = await this.stateService.getDisableContextMenuItem();\n    if (!menuDisabled) {\n      await this.buildContextMenu();\n    } else {\n      await this.contextMenusRemoveAll();\n    }\n\n    if (forLocked) {\n      await this.loadMenuAndUpdateBadgeForNoAccessState(!menuDisabled);\n      this.onUpdatedRan = this.onReplacedRan = false;\n      return;\n    }\n\n    const tab = await BrowserApi.getTabFromCurrentWindow();\n    if (tab) {\n      await this.contextMenuReady(tab, !menuDisabled);\n    }\n  }\n\n  async logout(expired: boolean, userId?: string) {\n    await this.eventService.uploadEvents(userId);\n\n    await Promise.all([\n      this.eventService.clearEvents(userId),\n      this.syncService.setLastSync(new Date(0), userId),\n      this.cryptoService.clearKeys(userId),\n      this.settingsService.clear(userId),\n      this.cipherService.clear(userId),\n      this.folderService.clear(userId),\n      this.collectionService.clear(userId),\n      this.policyService.clear(userId),\n      this.passwordGenerationService.clear(userId),\n      this.vaultTimeoutService.clear(userId),\n      this.keyConnectorService.clear(),\n      this.vaultFilterService.clear(),\n    ]);\n\n    await this.stateService.clean({ userId: userId });\n\n    if (userId == null || userId === (await this.stateService.getUserId())) {\n      this.searchService.clearIndex();\n      this.messagingService.send(\"doneLoggingOut\", { expired: expired, userId: userId });\n    }\n\n    await this.setIcon();\n    await this.refreshBadgeAndMenu(true);\n    await this.reseedStorage();\n    this.notificationsService.updateConnection(false);\n    await this.systemService.clearPendingClipboard();\n    await this.systemService.startProcessReload(this.authService);\n  }\n\n  async collectPageDetailsForContentScript(tab: any, sender: string, frameId: number = null) {\n    if (tab == null || !tab.id) {\n      return;\n    }\n\n    const options: any = {};\n    if (frameId != null) {\n      options.frameId = frameId;\n    }\n\n    BrowserApi.tabSendMessage(\n      tab,\n      {\n        command: \"collectPageDetails\",\n        tab: tab,\n        sender: sender,\n      },\n      options\n    );\n  }\n\n  async openPopup() {\n    // Chrome APIs cannot open popup\n\n    // TODO: Do we need to open this popup?\n    if (!this.isSafari) {\n      return;\n    }\n    await SafariApp.sendMessageToApp(\"showPopover\", null, true);\n  }\n\n  async reseedStorage() {\n    if (\n      !this.platformUtilsService.isChrome() &&\n      !this.platformUtilsService.isVivaldi() &&\n      !this.platformUtilsService.isOpera()\n    ) {\n      return;\n    }\n\n    const currentVaultTimeout = await this.stateService.getVaultTimeout();\n    if (currentVaultTimeout == null) {\n      return;\n    }\n\n    const getStorage = (): Promise<any> =>\n      new Promise((resolve) => {\n        chrome.storage.local.get(null, (o: any) => resolve(o));\n      });\n\n    const clearStorage = (): Promise<void> =>\n      new Promise((resolve) => {\n        chrome.storage.local.clear(() => resolve());\n      });\n\n    const storage = await getStorage();\n    await clearStorage();\n\n    for (const key in storage) {\n      // eslint-disable-next-line\n      if (!storage.hasOwnProperty(key)) {\n        continue;\n      }\n      await this.storageService.save(key, storage[key]);\n    }\n  }\n\n  private async buildContextMenu() {\n    if (!chrome.contextMenus || this.buildingContextMenu) {\n      return;\n    }\n\n    this.buildingContextMenu = true;\n    await this.contextMenusRemoveAll();\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"root\",\n      contexts: [\"all\"],\n      title: \"Bitwarden\",\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"autofill\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"autoFill\"),\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"copy-username\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"copyUsername\"),\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"copy-password\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"copyPassword\"),\n    });\n\n    if (await this.stateService.getCanAccessPremium()) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"copy-totp\",\n        parentId: \"root\",\n        contexts: [\"all\"],\n        title: this.i18nService.t(\"copyVerificationCode\"),\n      });\n    }\n\n    await this.contextMenusCreate({\n      type: \"separator\",\n      parentId: \"root\",\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"generate-password\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"generatePasswordCopied\"),\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"copy-identifier\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"copyElementIdentifier\"),\n    });\n\n    this.buildingContextMenu = false;\n  }\n\n  private async contextMenuReady(tab: any, contextMenuEnabled: boolean) {\n    await this.loadMenuAndUpdateBadge(tab.url, tab.id, contextMenuEnabled);\n    this.onUpdatedRan = this.onReplacedRan = false;\n  }\n\n  private async loadMenuAndUpdateBadge(url: string, tabId: number, contextMenuEnabled: boolean) {\n    if (!url || (!chrome.browserAction && !this.sidebarAction)) {\n      return;\n    }\n\n    this.actionSetBadgeBackgroundColor(chrome.browserAction);\n    this.actionSetBadgeBackgroundColor(this.sidebarAction);\n\n    this.menuOptionsLoaded = [];\n    const authStatus = await this.authService.getAuthStatus();\n    if (authStatus === AuthenticationStatus.Unlocked) {\n      try {\n        const ciphers = await this.cipherService.getAllDecryptedForUrl(url);\n        ciphers.sort((a, b) => this.cipherService.sortCiphersByLastUsedThenName(a, b));\n\n        if (contextMenuEnabled) {\n          ciphers.forEach((cipher) => {\n            this.loadLoginContextMenuOptions(cipher);\n          });\n        }\n\n        const disableBadgeCounter = await this.stateService.getDisableBadgeCounter();\n        let theText = \"\";\n\n        if (!disableBadgeCounter) {\n          if (ciphers.length > 0 && ciphers.length <= 9) {\n            theText = ciphers.length.toString();\n          } else if (ciphers.length > 0) {\n            theText = \"9+\";\n          }\n        }\n\n        if (contextMenuEnabled && ciphers.length === 0) {\n          await this.loadNoLoginsContextMenuOptions(this.i18nService.t(\"noMatchingLogins\"));\n        }\n\n        this.sidebarActionSetBadgeText(theText, tabId);\n        this.browserActionSetBadgeText(theText, tabId);\n\n        return;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    await this.loadMenuAndUpdateBadgeForNoAccessState(contextMenuEnabled);\n  }\n\n  private async loadMenuAndUpdateBadgeForNoAccessState(contextMenuEnabled: boolean) {\n    if (contextMenuEnabled) {\n      const authed = await this.stateService.getIsAuthenticated();\n      await this.loadNoLoginsContextMenuOptions(\n        this.i18nService.t(authed ? \"unlockVaultMenu\" : \"loginToVaultMenu\")\n      );\n    }\n\n    const tabs = await BrowserApi.getActiveTabs();\n    if (tabs != null) {\n      tabs.forEach((tab) => {\n        if (tab.id != null) {\n          this.browserActionSetBadgeText(\"\", tab.id);\n          this.sidebarActionSetBadgeText(\"\", tab.id);\n        }\n      });\n    }\n  }\n\n  private async loadLoginContextMenuOptions(cipher: any) {\n    if (\n      cipher == null ||\n      cipher.type !== CipherType.Login ||\n      cipher.reprompt !== CipherRepromptType.None\n    ) {\n      return;\n    }\n\n    let title = cipher.name;\n    if (cipher.login.username && cipher.login.username !== \"\") {\n      title += \" (\" + cipher.login.username + \")\";\n    }\n    await this.loadContextMenuOptions(title, cipher.id, cipher);\n  }\n\n  private async loadNoLoginsContextMenuOptions(noLoginsMessage: string) {\n    await this.loadContextMenuOptions(noLoginsMessage, \"noop\", null);\n  }\n\n  private async loadContextMenuOptions(title: string, idSuffix: string, cipher: any) {\n    if (\n      !chrome.contextMenus ||\n      this.menuOptionsLoaded.indexOf(idSuffix) > -1 ||\n      (cipher != null && cipher.type !== CipherType.Login)\n    ) {\n      return;\n    }\n\n    this.menuOptionsLoaded.push(idSuffix);\n\n    if (cipher == null || (cipher.login.password && cipher.login.password !== \"\")) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"autofill_\" + idSuffix,\n        parentId: \"autofill\",\n        contexts: [\"all\"],\n        title: this.sanitizeContextMenuTitle(title),\n      });\n    }\n\n    if (cipher == null || (cipher.login.username && cipher.login.username !== \"\")) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"copy-username_\" + idSuffix,\n        parentId: \"copy-username\",\n        contexts: [\"all\"],\n        title: this.sanitizeContextMenuTitle(title),\n      });\n    }\n\n    if (\n      cipher == null ||\n      (cipher.login.password && cipher.login.password !== \"\" && cipher.viewPassword)\n    ) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"copy-password_\" + idSuffix,\n        parentId: \"copy-password\",\n        contexts: [\"all\"],\n        title: this.sanitizeContextMenuTitle(title),\n      });\n    }\n\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    if (canAccessPremium && (cipher == null || (cipher.login.totp && cipher.login.totp !== \"\"))) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"copy-totp_\" + idSuffix,\n        parentId: \"copy-totp\",\n        contexts: [\"all\"],\n        title: this.sanitizeContextMenuTitle(title),\n      });\n    }\n  }\n\n  private sanitizeContextMenuTitle(title: string): string {\n    return title.replace(/&/g, \"&&\");\n  }\n\n  private async fullSync(override = false) {\n    const syncInternal = 6 * 60 * 60 * 1000; // 6 hours\n    const lastSync = await this.syncService.getLastSync();\n\n    let lastSyncAgo = syncInternal + 1;\n    if (lastSync != null) {\n      lastSyncAgo = new Date().getTime() - lastSync.getTime();\n    }\n\n    if (override || lastSyncAgo >= syncInternal) {\n      await this.syncService.fullSync(override);\n      this.scheduleNextSync();\n    } else {\n      this.scheduleNextSync();\n    }\n  }\n\n  private scheduleNextSync() {\n    if (this.syncTimeout) {\n      clearTimeout(this.syncTimeout);\n    }\n\n    this.syncTimeout = setTimeout(async () => await this.fullSync(), 5 * 60 * 1000); // check every 5 minutes\n  }\n\n  // Browser API Helpers\n\n  private contextMenusRemoveAll() {\n    return new Promise<void>((resolve) => {\n      chrome.contextMenus.removeAll(() => {\n        resolve();\n        if (chrome.runtime.lastError) {\n          return;\n        }\n      });\n    });\n  }\n\n  private contextMenusCreate(options: any) {\n    return new Promise<void>((resolve) => {\n      chrome.contextMenus.create(options, () => {\n        resolve();\n        if (chrome.runtime.lastError) {\n          return;\n        }\n      });\n    });\n  }\n\n  private async actionSetIcon(theAction: any, suffix: string, windowId?: number): Promise<any> {\n    if (!theAction || !theAction.setIcon) {\n      return;\n    }\n\n    const options: IconDetails = {\n      path: {\n        19: \"images/icon19\" + suffix + \".png\",\n        38: \"images/icon38\" + suffix + \".png\",\n      },\n    };\n\n    if (this.platformUtilsService.isFirefox()) {\n      options.windowId = windowId;\n      await theAction.setIcon(options);\n    } else if (this.platformUtilsService.isSafari()) {\n      // Workaround since Safari 14.0.3 returns a pending promise\n      // which doesn't resolve within a reasonable time.\n      theAction.setIcon(options);\n    } else {\n      return new Promise<void>((resolve) => {\n        theAction.setIcon(options, () => resolve());\n      });\n    }\n  }\n\n  private actionSetBadgeBackgroundColor(action: any) {\n    if (action && action.setBadgeBackgroundColor) {\n      action.setBadgeBackgroundColor({ color: \"#294e5f\" });\n    }\n  }\n\n  private browserActionSetBadgeText(text: string, tabId: number) {\n    if (chrome.browserAction && chrome.browserAction.setBadgeText) {\n      chrome.browserAction.setBadgeText({\n        text: text,\n        tabId: tabId,\n      });\n    }\n  }\n\n  private sidebarActionSetBadgeText(text: string, tabId: number) {\n    if (!this.sidebarAction) {\n      return;\n    }\n\n    if (this.sidebarAction.setBadgeText) {\n      this.sidebarAction.setBadgeText({\n        text: text,\n        tabId: tabId,\n      });\n    } else if (this.sidebarAction.setTitle) {\n      let title = \"Bitwarden\";\n      if (text && text !== \"\") {\n        title += \" [\" + text + \"]\";\n      }\n\n      this.sidebarAction.setTitle({\n        title: title,\n        tabId: tabId,\n      });\n    }\n  }\n}\n","import { BrowserEnvironmentService } from \"../../services/browser-environment.service\";\n\nimport { CachedServices, factory, FactoryOptions } from \"./factory-options\";\nimport { logServiceFactory, LogServiceInitOptions } from \"./log-service.factory\";\nimport {\n  stateServiceFactory as stateServiceFactory,\n  StateServiceInitOptions,\n} from \"./state-service.factory\";\n\ntype EnvironmentServiceFactoryOptions = FactoryOptions;\n\nexport type EnvironmentServiceInitOptions = EnvironmentServiceFactoryOptions &\n  StateServiceInitOptions &\n  LogServiceInitOptions;\n\nexport function environmentServiceFactory(\n  cache: { environmentService?: BrowserEnvironmentService } & CachedServices,\n  opts: EnvironmentServiceInitOptions\n): BrowserEnvironmentService {\n  return factory(\n    cache,\n    \"environmentService\",\n    opts,\n    () =>\n      new BrowserEnvironmentService(\n        stateServiceFactory(cache, opts),\n        logServiceFactory(cache, opts)\n      )\n  );\n}\n","import { FileDownloadRequest } from \"./fileDownloadRequest\";\n\nexport class FileDownloadBuilder {\n  get blobOptions(): any {\n    const options = this._request.blobOptions ?? {};\n    if (options.type == null) {\n      options.type = this.fileType;\n    }\n    return options;\n  }\n\n  get blob(): Blob {\n    if (this.blobOptions != null) {\n      return new Blob([this._request.blobData], this.blobOptions);\n    } else {\n      return new Blob([this._request.blobData]);\n    }\n  }\n\n  get downloadMethod(): \"save\" | \"open\" {\n    if (this._request.downloadMethod != null) {\n      return this._request.downloadMethod;\n    }\n    return this.fileType != \"application/pdf\" ? \"save\" : \"open\";\n  }\n\n  private get fileType() {\n    const fileNameLower = this._request.fileName.toLowerCase();\n    if (fileNameLower.endsWith(\".pdf\")) {\n      return \"application/pdf\";\n    } else if (fileNameLower.endsWith(\".xlsx\")) {\n      return \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n    } else if (fileNameLower.endsWith(\".docx\")) {\n      return \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\";\n    } else if (fileNameLower.endsWith(\".pptx\")) {\n      return \"application/vnd.openxmlformats-officedocument.presentationml.presentation\";\n    } else if (fileNameLower.endsWith(\".csv\")) {\n      return \"text/csv\";\n    } else if (fileNameLower.endsWith(\".png\")) {\n      return \"image/png\";\n    } else if (fileNameLower.endsWith(\".jpg\") || fileNameLower.endsWith(\".jpeg\")) {\n      return \"image/jpeg\";\n    } else if (fileNameLower.endsWith(\".gif\")) {\n      return \"image/gif\";\n    }\n    return null;\n  }\n\n  constructor(private readonly _request: FileDownloadRequest) {}\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { FileDownloadBuilder } from \"@bitwarden/common/abstractions/fileDownload/fileDownloadBuilder\";\nimport { FileDownloadRequest } from \"@bitwarden/common/abstractions/fileDownload/fileDownloadRequest\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { SafariApp } from \"../browser/safariApp\";\n\n@Injectable()\nexport class BrowserFileDownloadService implements FileDownloadService {\n  download(request: FileDownloadRequest): void {\n    const builder = new FileDownloadBuilder(request);\n    if (BrowserApi.isSafariApi) {\n      let data: BlobPart = null;\n      if (builder.blobOptions.type === \"text/plain\" && typeof request.blobData === \"string\") {\n        data = request.blobData;\n      } else {\n        data = Utils.fromBufferToB64(request.blobData as ArrayBuffer);\n      }\n      SafariApp.sendMessageToApp(\n        \"downloadFile\",\n        JSON.stringify({\n          blobData: data,\n          blobOptions: request.blobOptions,\n          fileName: request.fileName,\n        }),\n        true\n      );\n    } else {\n      if ((navigator as any).msSaveOrOpenBlob) {\n        (navigator as any).msSaveBlob(builder.blob, request.fileName);\n      } else {\n        const a = window.document.createElement(\"a\");\n        a.href = URL.createObjectURL(builder.blob);\n        a.download = request.fileName;\n        window.document.body.appendChild(a);\n        a.click();\n        window.document.body.removeChild(a);\n      }\n    }\n  }\n}\n","import { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\n\nexport default class BrowserMessagingPrivateModePopupService implements MessagingService {\n  send(subscriber: string, arg: any = {}) {\n    const message = Object.assign({}, { command: subscriber }, arg);\n    (window as any).bitwardenBackgroundMessageListener(message);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService as LogServiceAbstraction } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\nimport { StateService as StateServiceAbstraction } from \"../../services/abstractions/state.service\";\n\nimport { PopupUtilsService } from \"./popup-utils.service\";\n\n@Injectable()\nexport class InitService {\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private popupUtilsService: PopupUtilsService,\n    private stateService: StateServiceAbstraction,\n    private logService: LogServiceAbstraction,\n    private themingService: AbstractThemingService\n  ) {}\n\n  init() {\n    return async () => {\n      await this.stateService.init();\n\n      if (!this.popupUtilsService.inPopup(window)) {\n        window.document.body.classList.add(\"body-full\");\n      } else if (window.screen.availHeight < 600) {\n        window.document.body.classList.add(\"body-xs\");\n      } else if (window.screen.availHeight <= 800) {\n        window.document.body.classList.add(\"body-sm\");\n      }\n\n      const htmlEl = window.document.documentElement;\n      await this.themingService.monitorThemeChanges();\n      htmlEl.classList.add(\"locale_\" + this.i18nService.translationLocale);\n\n      // Workaround for slow performance on external monitors on Chrome + MacOS\n      // See: https://bugs.chromium.org/p/chromium/issues/detail?id=971701#c64\n      if (\n        this.platformUtilsService.isChrome() &&\n        navigator.platform.indexOf(\"Mac\") > -1 &&\n        this.popupUtilsService.inPopup(window) &&\n        (window.screenLeft < 0 ||\n          window.screenTop < 0 ||\n          window.screenLeft > window.screen.width ||\n          window.screenTop > window.screen.height)\n      ) {\n        htmlEl.classList.add(\"force_redraw\");\n        this.logService.info(\"Force redraw is on\");\n      }\n    };\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { LockGuard as BaseLockGuardService } from \"@bitwarden/angular/guards/lock.guard\";\n\n@Injectable()\nexport class LockGuardService extends BaseLockGuardService {\n  protected homepage = \"tabs/current\";\n}\n","import { Component } from \"@angular/core\";\n\nimport { PasswordRepromptComponent as BasePasswordRepromptComponent } from \"@bitwarden/angular/components/password-reprompt.component\";\n\n@Component({\n  templateUrl: \"password-reprompt.component.html\",\n})\nexport class PasswordRepromptComponent extends BasePasswordRepromptComponent {}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\">\n      <div class=\"modal-body\">\n        <div class=\"box\">\n          <h1 class=\"box-header\">{{ \"passwordConfirmation\" | i18n }}</h1>\n          <div class=\"box-content\">\n            <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n              <div class=\"row-main\">\n                <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPassword\"\n                  class=\"monospaced\"\n                  [(ngModel)]=\"masterPassword\"\n                  required\n                  appAutofocus\n                />\n              </div>\n              <div class=\"action-buttons\">\n                <button\n                  type=\"button\"\n                  class=\"row-btn\"\n                  appStopClick\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword()\"\n                  [attr.aria-pressed]=\"showPassword\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n              </div>\n            </div>\n          </div>\n          <div class=\"box-footer\">\n            {{ \"passwordConfirmationDesc\" | i18n }}\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\">\n          <span>{{ \"ok\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Injectable } from \"@angular/core\";\n\nimport { PasswordRepromptService as BasePasswordRepromptService } from \"@bitwarden/angular/services/passwordReprompt.service\";\n\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\n\n@Injectable()\nexport class PasswordRepromptService extends BasePasswordRepromptService {\n  component = PasswordRepromptComponent;\n}\n","import { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { ConsoleLogService } from \"@bitwarden/common/services/consoleLog.service\";\nimport { SearchService } from \"@bitwarden/common/services/search.service\";\n\nexport class PopupSearchService extends SearchService {\n  constructor(\n    private mainSearchService: SearchService,\n    cipherService: CipherService,\n    consoleLogService: ConsoleLogService,\n    i18nService: I18nService\n  ) {\n    super(cipherService, consoleLogService, i18nService);\n  }\n\n  clearIndex() {\n    throw new Error(\"Not available.\");\n  }\n\n  indexCiphers(): Promise<void> {\n    throw new Error(\"Not available.\");\n  }\n\n  getIndexForSearch() {\n    return this.mainSearchService.getIndexForSearch();\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { UnauthGuard as BaseUnauthGuardService } from \"@bitwarden/angular/guards/unauth.guard\";\n\n@Injectable()\nexport class UnauthGuardService extends BaseUnauthGuardService {\n  protected homepage = \"tabs/current\";\n}\n","import { APP_INITIALIZER, LOCALE_ID, NgModule } from \"@angular/core\";\n\nimport { LockGuard as BaseLockGuardService } from \"@bitwarden/angular/guards/lock.guard\";\nimport { UnauthGuard as BaseUnauthGuardService } from \"@bitwarden/angular/guards/unauth.guard\";\nimport {\n  JslibServicesModule,\n  MEMORY_STORAGE,\n  SECURE_STORAGE,\n} from \"@bitwarden/angular/services/jslib-services.module\";\nimport { ThemingService } from \"@bitwarden/angular/services/theming/theming.service\";\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { AuthService as AuthServiceAbstraction } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { ExportService } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { FileUploadService } from \"@bitwarden/common/abstractions/fileUpload.service\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService as LogServiceAbstraction } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { NotificationsService } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SearchService as SearchServiceAbstraction } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { SettingsService } from \"@bitwarden/common/abstractions/settings.service\";\nimport { StateService as BaseStateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { UsernameGenerationService } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout.service\";\nimport { AuthService } from \"@bitwarden/common/services/auth.service\";\nimport { ConsoleLogService } from \"@bitwarden/common/services/consoleLog.service\";\nimport { SearchService } from \"@bitwarden/common/services/search.service\";\n\nimport MainBackground from \"../../background/main.background\";\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { AutofillService } from \"../../services/abstractions/autofill.service\";\nimport { StateService as StateServiceAbstraction } from \"../../services/abstractions/state.service\";\nimport { BrowserEnvironmentService } from \"../../services/browser-environment.service\";\nimport { BrowserFileDownloadService } from \"../../services/browserFileDownloadService\";\nimport BrowserMessagingService from \"../../services/browserMessaging.service\";\nimport BrowserMessagingPrivateModePopupService from \"../../services/browserMessagingPrivateModePopup.service\";\nimport { VaultFilterService } from \"../../services/vaultFilter.service\";\n\nimport { DebounceNavigationService } from \"./debounceNavigationService\";\nimport { InitService } from \"./init.service\";\nimport { LockGuardService } from \"./lock-guard.service\";\nimport { PasswordRepromptService } from \"./password-reprompt.service\";\nimport { PopupSearchService } from \"./popup-search.service\";\nimport { PopupUtilsService } from \"./popup-utils.service\";\nimport { UnauthGuardService } from \"./unauth-guard.service\";\n\nconst isPrivateMode = BrowserApi.getBackgroundPage() == null;\nconst mainBackground: MainBackground = isPrivateMode\n  ? createLocalBgService()\n  : BrowserApi.getBackgroundPage().bitwardenMain;\n\nfunction createLocalBgService() {\n  const localBgService = new MainBackground(true);\n  localBgService.bootstrap();\n  return localBgService;\n}\n\nfunction getBgService<T>(service: keyof MainBackground) {\n  return (): T => {\n    return mainBackground ? (mainBackground[service] as any as T) : null;\n  };\n}\n\n@NgModule({\n  imports: [JslibServicesModule],\n  declarations: [],\n  providers: [\n    InitService,\n    DebounceNavigationService,\n    {\n      provide: LOCALE_ID,\n      useFactory: () => getBgService<I18nService>(\"i18nService\")().translationLocale,\n      deps: [],\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: (initService: InitService) => initService.init(),\n      deps: [InitService],\n      multi: true,\n    },\n    { provide: BaseLockGuardService, useClass: LockGuardService },\n    { provide: BaseUnauthGuardService, useClass: UnauthGuardService },\n    { provide: PopupUtilsService, useFactory: () => new PopupUtilsService(isPrivateMode) },\n    {\n      provide: MessagingService,\n      useFactory: () => {\n        return isPrivateMode\n          ? new BrowserMessagingPrivateModePopupService()\n          : new BrowserMessagingService();\n      },\n    },\n    {\n      provide: TwoFactorService,\n      useFactory: getBgService<TwoFactorService>(\"twoFactorService\"),\n      deps: [],\n    },\n    {\n      provide: AuthServiceAbstraction,\n      useFactory: getBgService<AuthService>(\"authService\"),\n      deps: [],\n    },\n    {\n      provide: SearchServiceAbstraction,\n      useFactory: (\n        cipherService: CipherService,\n        logService: ConsoleLogService,\n        i18nService: I18nService\n      ) => {\n        return new PopupSearchService(\n          getBgService<SearchService>(\"searchService\")(),\n          cipherService,\n          logService,\n          i18nService\n        );\n      },\n      deps: [CipherService, LogServiceAbstraction, I18nService],\n    },\n    { provide: AuditService, useFactory: getBgService<AuditService>(\"auditService\"), deps: [] },\n    {\n      provide: FileUploadService,\n      useFactory: getBgService<FileUploadService>(\"fileUploadService\"),\n      deps: [],\n    },\n    { provide: CipherService, useFactory: getBgService<CipherService>(\"cipherService\"), deps: [] },\n    {\n      provide: CryptoFunctionService,\n      useFactory: getBgService<CryptoFunctionService>(\"cryptoFunctionService\"),\n      deps: [],\n    },\n    {\n      provide: FolderService,\n      useFactory: getBgService<FolderService>(\"folderService\"),\n      deps: [],\n    },\n    {\n      provide: FolderApiServiceAbstraction,\n      useFactory: getBgService<FolderApiServiceAbstraction>(\"folderApiService\"),\n      deps: [],\n    },\n    {\n      provide: CollectionService,\n      useFactory: getBgService<CollectionService>(\"collectionService\"),\n      deps: [],\n    },\n    {\n      provide: LogServiceAbstraction,\n      useFactory: getBgService<ConsoleLogService>(\"logService\"),\n      deps: [],\n    },\n    {\n      provide: BrowserEnvironmentService,\n      useExisting: EnvironmentService,\n    },\n    {\n      provide: EnvironmentService,\n      useFactory: getBgService<EnvironmentService>(\"environmentService\"),\n      deps: [],\n    },\n    { provide: TotpService, useFactory: getBgService<TotpService>(\"totpService\"), deps: [] },\n    { provide: TokenService, useFactory: getBgService<TokenService>(\"tokenService\"), deps: [] },\n    { provide: I18nService, useFactory: getBgService<I18nService>(\"i18nService\"), deps: [] },\n    { provide: CryptoService, useFactory: getBgService<CryptoService>(\"cryptoService\"), deps: [] },\n    { provide: EventService, useFactory: getBgService<EventService>(\"eventService\"), deps: [] },\n    {\n      provide: PolicyService,\n      useFactory: getBgService<PolicyService>(\"policyService\"),\n      deps: [],\n    },\n    {\n      provide: PolicyApiServiceAbstraction,\n      useFactory: getBgService<PolicyApiServiceAbstraction>(\"policyApiService\"),\n      deps: [],\n    },\n    {\n      provide: PlatformUtilsService,\n      useFactory: getBgService<PlatformUtilsService>(\"platformUtilsService\"),\n      deps: [],\n    },\n    {\n      provide: PasswordGenerationService,\n      useFactory: getBgService<PasswordGenerationService>(\"passwordGenerationService\"),\n      deps: [],\n    },\n    { provide: ApiService, useFactory: getBgService<ApiService>(\"apiService\"), deps: [] },\n    { provide: SyncService, useFactory: getBgService<SyncService>(\"syncService\"), deps: [] },\n    {\n      provide: SettingsService,\n      useFactory: getBgService<SettingsService>(\"settingsService\"),\n      deps: [],\n    },\n    {\n      provide: AbstractStorageService,\n      useFactory: getBgService<AbstractStorageService>(\"storageService\"),\n      deps: [],\n    },\n    { provide: AppIdService, useFactory: getBgService<AppIdService>(\"appIdService\"), deps: [] },\n    {\n      provide: AutofillService,\n      useFactory: getBgService<AutofillService>(\"autofillService\"),\n      deps: [],\n    },\n    { provide: ExportService, useFactory: getBgService<ExportService>(\"exportService\"), deps: [] },\n    { provide: SendService, useFactory: getBgService<SendService>(\"sendService\"), deps: [] },\n    {\n      provide: KeyConnectorService,\n      useFactory: getBgService<KeyConnectorService>(\"keyConnectorService\"),\n      deps: [],\n    },\n    {\n      provide: UserVerificationService,\n      useFactory: getBgService<UserVerificationService>(\"userVerificationService\"),\n      deps: [],\n    },\n    {\n      provide: VaultTimeoutService,\n      useFactory: getBgService<VaultTimeoutService>(\"vaultTimeoutService\"),\n      deps: [],\n    },\n    {\n      provide: NotificationsService,\n      useFactory: getBgService<NotificationsService>(\"notificationsService\"),\n      deps: [],\n    },\n    {\n      provide: LogServiceAbstraction,\n      useFactory: getBgService<ConsoleLogService>(\"logService\"),\n      deps: [],\n    },\n    { provide: PasswordRepromptServiceAbstraction, useClass: PasswordRepromptService },\n    {\n      provide: OrganizationService,\n      useFactory: getBgService<OrganizationService>(\"organizationService\"),\n      deps: [],\n    },\n    {\n      provide: VaultFilterService,\n      useFactory: () => {\n        return new VaultFilterService(\n          getBgService<StateServiceAbstraction>(\"stateService\")(),\n          getBgService<OrganizationService>(\"organizationService\")(),\n          getBgService<FolderService>(\"folderService\")(),\n          getBgService<CipherService>(\"cipherService\")(),\n          getBgService<CollectionService>(\"collectionService\")(),\n          getBgService<PolicyService>(\"policyService\")()\n        );\n      },\n      deps: [],\n    },\n    {\n      provide: ProviderService,\n      useFactory: getBgService<ProviderService>(\"providerService\"),\n      deps: [],\n    },\n    {\n      provide: SECURE_STORAGE,\n      useFactory: getBgService<AbstractStorageService>(\"secureStorageService\"),\n      deps: [],\n    },\n    {\n      provide: MEMORY_STORAGE,\n      useFactory: getBgService<AbstractStorageService>(\"memoryStorageService\"),\n    },\n    {\n      provide: StateServiceAbstraction,\n      useFactory: getBgService<StateServiceAbstraction>(\"stateService\"),\n      deps: [],\n    },\n    {\n      provide: UsernameGenerationService,\n      useFactory: getBgService<UsernameGenerationService>(\"usernameGenerationService\"),\n      deps: [],\n    },\n    {\n      provide: BaseStateServiceAbstraction,\n      useExisting: StateServiceAbstraction,\n      deps: [],\n    },\n    {\n      provide: FileDownloadService,\n      useClass: BrowserFileDownloadService,\n    },\n    {\n      provide: AbstractThemingService,\n      useFactory: () => {\n        return new ThemingService(\n          getBgService<StateServiceAbstraction>(\"stateService\")(),\n          // Safari doesn't properly handle the (prefers-color-scheme) media query in the popup window, it always returns light.\n          // In Safari we have to use the background page instead, which comes with limitations like not dynamically changing the extension theme when the system theme is changed.\n          getBgService<PlatformUtilsService>(\"platformUtilsService\")().isSafari()\n            ? getBgService<Window>(\"backgroundWindow\")()\n            : window,\n          document\n        );\n      },\n    },\n  ],\n})\nexport class ServicesModule {}\n","import { A11yModule } from \"@angular/cdk/a11y\";\nimport { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { LayoutModule } from \"@angular/cdk/layout\";\nimport { OverlayModule } from \"@angular/cdk/overlay\";\nimport { ScrollingModule } from \"@angular/cdk/scrolling\";\nimport { CurrencyPipe, DatePipe, registerLocaleData } from \"@angular/common\";\nimport localeAz from \"@angular/common/locales/az\";\nimport localeBe from \"@angular/common/locales/be\";\nimport localeBg from \"@angular/common/locales/bg\";\nimport localeBn from \"@angular/common/locales/bn\";\nimport localeBs from \"@angular/common/locales/bs\";\nimport localeCa from \"@angular/common/locales/ca\";\nimport localeCs from \"@angular/common/locales/cs\";\nimport localeDa from \"@angular/common/locales/da\";\nimport localeDe from \"@angular/common/locales/de\";\nimport localeEl from \"@angular/common/locales/el\";\nimport localeEnGb from \"@angular/common/locales/en-GB\";\nimport localeEnIn from \"@angular/common/locales/en-IN\";\nimport localeEs from \"@angular/common/locales/es\";\nimport localeEt from \"@angular/common/locales/et\";\nimport localeEu from \"@angular/common/locales/eu\";\nimport localeFa from \"@angular/common/locales/fa\";\nimport localeFi from \"@angular/common/locales/fi\";\nimport localeFil from \"@angular/common/locales/fil\";\nimport localeFr from \"@angular/common/locales/fr\";\nimport localeHe from \"@angular/common/locales/he\";\nimport localeHi from \"@angular/common/locales/hi\";\nimport localeHr from \"@angular/common/locales/hr\";\nimport localeHu from \"@angular/common/locales/hu\";\nimport localeId from \"@angular/common/locales/id\";\nimport localeIt from \"@angular/common/locales/it\";\nimport localeJa from \"@angular/common/locales/ja\";\nimport localeKa from \"@angular/common/locales/ka\";\nimport localeKm from \"@angular/common/locales/km\";\nimport localeKn from \"@angular/common/locales/kn\";\nimport localeKo from \"@angular/common/locales/ko\";\nimport localeLt from \"@angular/common/locales/lt\";\nimport localeLv from \"@angular/common/locales/lv\";\nimport localeMl from \"@angular/common/locales/ml\";\nimport localeNb from \"@angular/common/locales/nb\";\nimport localeNl from \"@angular/common/locales/nl\";\nimport localeNn from \"@angular/common/locales/nn\";\nimport localePl from \"@angular/common/locales/pl\";\nimport localePtBr from \"@angular/common/locales/pt\";\nimport localePtPt from \"@angular/common/locales/pt-PT\";\nimport localeRo from \"@angular/common/locales/ro\";\nimport localeRu from \"@angular/common/locales/ru\";\nimport localeSi from \"@angular/common/locales/si\";\nimport localeSk from \"@angular/common/locales/sk\";\nimport localeSl from \"@angular/common/locales/sl\";\nimport localeSr from \"@angular/common/locales/sr\";\nimport localeSv from \"@angular/common/locales/sv\";\nimport localeTh from \"@angular/common/locales/th\";\nimport localeTr from \"@angular/common/locales/tr\";\nimport localeUk from \"@angular/common/locales/uk\";\nimport localeVi from \"@angular/common/locales/vi\";\nimport localeZhCn from \"@angular/common/locales/zh-Hans\";\nimport localeZhTw from \"@angular/common/locales/zh-Hant\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\n\nimport { BitwardenToastModule } from \"@bitwarden/angular/components/toastr.component\";\nimport { JslibModule } from \"@bitwarden/angular/jslib.module\";\n\nimport { EnvironmentComponent } from \"./accounts/environment.component\";\nimport { HintComponent } from \"./accounts/hint.component\";\nimport { HomeComponent } from \"./accounts/home.component\";\nimport { LockComponent } from \"./accounts/lock.component\";\nimport { LoginComponent } from \"./accounts/login.component\";\nimport { RegisterComponent } from \"./accounts/register.component\";\nimport { RemovePasswordComponent } from \"./accounts/remove-password.component\";\nimport { SetPasswordComponent } from \"./accounts/set-password.component\";\nimport { SsoComponent } from \"./accounts/sso.component\";\nimport { TwoFactorOptionsComponent } from \"./accounts/two-factor-options.component\";\nimport { TwoFactorComponent } from \"./accounts/two-factor.component\";\nimport { UpdateTempPasswordComponent } from \"./accounts/update-temp-password.component\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { ActionButtonsComponent } from \"./components/action-buttons.component\";\nimport { CipherRowComponent } from \"./components/cipher-row.component\";\nimport { PasswordRepromptComponent } from \"./components/password-reprompt.component\";\nimport { PopOutComponent } from \"./components/pop-out.component\";\nimport { PrivateModeWarningComponent } from \"./components/private-mode-warning.component\";\nimport { SendListComponent } from \"./components/send-list.component\";\nimport { SetPinComponent } from \"./components/set-pin.component\";\nimport { UserVerificationComponent } from \"./components/user-verification.component\";\nimport { GeneratorComponent } from \"./generator/generator.component\";\nimport { PasswordGeneratorHistoryComponent } from \"./generator/password-generator-history.component\";\nimport { EffluxDatesComponent as SendEffluxDatesComponent } from \"./send/efflux-dates.component\";\nimport { SendAddEditComponent } from \"./send/send-add-edit.component\";\nimport { SendGroupingsComponent } from \"./send/send-groupings.component\";\nimport { SendTypeComponent } from \"./send/send-type.component\";\nimport { ServicesModule } from \"./services/services.module\";\nimport { ExcludedDomainsComponent } from \"./settings/excluded-domains.component\";\nimport { ExportComponent } from \"./settings/export.component\";\nimport { FolderAddEditComponent } from \"./settings/folder-add-edit.component\";\nimport { FoldersComponent } from \"./settings/folders.component\";\nimport { OptionsComponent } from \"./settings/options.component\";\nimport { PremiumComponent } from \"./settings/premium.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SyncComponent } from \"./settings/sync.component\";\nimport { VaultTimeoutInputComponent } from \"./settings/vault-timeout-input.component\";\nimport { TabsComponent } from \"./tabs.component\";\nimport { AddEditCustomFieldsComponent } from \"./vault/add-edit-custom-fields.component\";\nimport { AddEditComponent } from \"./vault/add-edit.component\";\nimport { AttachmentsComponent } from \"./vault/attachments.component\";\nimport { CiphersComponent } from \"./vault/ciphers.component\";\nimport { CollectionsComponent } from \"./vault/collections.component\";\nimport { CurrentTabComponent } from \"./vault/current-tab.component\";\nimport { PasswordHistoryComponent } from \"./vault/password-history.component\";\nimport { ShareComponent } from \"./vault/share.component\";\nimport { VaultFilterComponent } from \"./vault/vault-filter.component\";\nimport { VaultSelectComponent } from \"./vault/vault-select.component\";\nimport { ViewCustomFieldsComponent } from \"./vault/view-custom-fields.component\";\nimport { ViewComponent } from \"./vault/view.component\";\n\nregisterLocaleData(localeAz, \"az\");\nregisterLocaleData(localeBe, \"be\");\nregisterLocaleData(localeBg, \"bg\");\nregisterLocaleData(localeBn, \"bn\");\nregisterLocaleData(localeBs, \"bs\");\nregisterLocaleData(localeCa, \"ca\");\nregisterLocaleData(localeCs, \"cs\");\nregisterLocaleData(localeDa, \"da\");\nregisterLocaleData(localeDe, \"de\");\nregisterLocaleData(localeEl, \"el\");\nregisterLocaleData(localeEnGb, \"en-GB\");\nregisterLocaleData(localeEnIn, \"en-IN\");\nregisterLocaleData(localeEs, \"es\");\nregisterLocaleData(localeEt, \"et\");\nregisterLocaleData(localeEu, \"eu\");\nregisterLocaleData(localeFa, \"fa\");\nregisterLocaleData(localeFi, \"fi\");\nregisterLocaleData(localeFil, \"fil\");\nregisterLocaleData(localeFr, \"fr\");\nregisterLocaleData(localeHe, \"he\");\nregisterLocaleData(localeHi, \"hi\");\nregisterLocaleData(localeHr, \"hr\");\nregisterLocaleData(localeHu, \"hu\");\nregisterLocaleData(localeId, \"id\");\nregisterLocaleData(localeIt, \"it\");\nregisterLocaleData(localeJa, \"ja\");\nregisterLocaleData(localeKa, \"ka\");\nregisterLocaleData(localeKm, \"km\");\nregisterLocaleData(localeKn, \"kn\");\nregisterLocaleData(localeKo, \"ko\");\nregisterLocaleData(localeLt, \"lt\");\nregisterLocaleData(localeLv, \"lv\");\nregisterLocaleData(localeMl, \"ml\");\nregisterLocaleData(localeNb, \"nb\");\nregisterLocaleData(localeNl, \"nl\");\nregisterLocaleData(localeNn, \"nn\");\nregisterLocaleData(localePl, \"pl\");\nregisterLocaleData(localePtBr, \"pt-BR\");\nregisterLocaleData(localePtPt, \"pt-PT\");\nregisterLocaleData(localeRo, \"ro\");\nregisterLocaleData(localeRu, \"ru\");\nregisterLocaleData(localeSi, \"si\");\nregisterLocaleData(localeSk, \"sk\");\nregisterLocaleData(localeSl, \"sl\");\nregisterLocaleData(localeSr, \"sr\");\nregisterLocaleData(localeSv, \"sv\");\nregisterLocaleData(localeTh, \"th\");\nregisterLocaleData(localeTr, \"tr\");\nregisterLocaleData(localeUk, \"uk\");\nregisterLocaleData(localeVi, \"vi\");\nregisterLocaleData(localeZhCn, \"zh-CN\");\nregisterLocaleData(localeZhTw, \"zh-TW\");\n\n@NgModule({\n  imports: [\n    A11yModule,\n    AppRoutingModule,\n    BitwardenToastModule.forRoot({\n      maxOpened: 2,\n      autoDismiss: true,\n      closeButton: true,\n      positionClass: \"toast-bottom-full-width\",\n    }),\n    BrowserAnimationsModule,\n    BrowserModule,\n    DragDropModule,\n    FormsModule,\n    JslibModule,\n    LayoutModule,\n    OverlayModule,\n    ReactiveFormsModule,\n    ScrollingModule,\n    ServicesModule,\n  ],\n  declarations: [\n    ActionButtonsComponent,\n    AddEditComponent,\n    AddEditCustomFieldsComponent,\n    AppComponent,\n    AttachmentsComponent,\n    CipherRowComponent,\n    CiphersComponent,\n    CollectionsComponent,\n    CurrentTabComponent,\n    EnvironmentComponent,\n    ExcludedDomainsComponent,\n    ExportComponent,\n    FolderAddEditComponent,\n    FoldersComponent,\n    VaultFilterComponent,\n    HintComponent,\n    HomeComponent,\n    LockComponent,\n    LoginComponent,\n    OptionsComponent,\n    GeneratorComponent,\n    PasswordGeneratorHistoryComponent,\n    PasswordHistoryComponent,\n    PasswordRepromptComponent,\n    PopOutComponent,\n    PremiumComponent,\n    PrivateModeWarningComponent,\n    RegisterComponent,\n    SendAddEditComponent,\n    SendEffluxDatesComponent,\n    SendGroupingsComponent,\n    SendListComponent,\n    SendTypeComponent,\n    SetPasswordComponent,\n    SetPinComponent,\n    SettingsComponent,\n    ShareComponent,\n    SsoComponent,\n    SyncComponent,\n    TabsComponent,\n    TwoFactorComponent,\n    TwoFactorOptionsComponent,\n    UpdateTempPasswordComponent,\n    UserVerificationComponent,\n    VaultTimeoutInputComponent,\n    ViewComponent,\n    ViewCustomFieldsComponent,\n    RemovePasswordComponent,\n    VaultSelectComponent,\n  ],\n  providers: [CurrencyPipe, DatePipe],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\nrequire(\"./scss/popup.scss\");\n\nimport { AppModule } from \"./app.module\";\n\nif (process.env.ENV === \"production\") {\n  enableProdMode();\n}\n\nfunction init() {\n  platformBrowserDynamic().bootstrapModule(AppModule, { preserveWhitespaces: true });\n}\n\ninit();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t347: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_bitwarden_browser\"] = self[\"webpackChunk_bitwarden_browser\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [286,902], () => (__webpack_require__(29308)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","remove","BitwardenToast","constructor","toastrService","toastPackage","super","opacity","BitwardenToastGlobalConfig","toastComponent","BitwardenToastModule","static","config","ngModule","providers","provide","useValue","default","numberFormats","Visa","cardLength","blocks","Mastercard","Maestro","Discover","JCB","UnionPay","Amex","Mir","Other","CreditCardNumberPipe","transform","creditCardNumber","brand","rules","length","matchingRule","find","r","chunks","total","forEach","c","push","slice","join","I18nService","I18nPipe","i18nService","id","p1","p2","p3","this","t","SearchPipe","items","searchText","prop1","prop2","prop3","trim","toLowerCase","filter","i","toString","indexOf","UserNamePipe","user","name","email","JslibModule","forRoot","maxOpened","autoDismiss","closeButton","AuthenticationStatus","AuthService","MessagingService","KeyConnectorService","AuthGuard","authService","router","messagingService","keyConnectorService","canActivate","route","routerState","authStatus","getAuthStatus","LoggedOut","send","url","Locked","createUrlTree","queryParams","promptBiometric","includes","getConvertAccountRequired","LockGuard","homepage","loginpage","redirectUrl","UnauthGuard","PlatformUtilsService","EnvironmentService","platformUtilsService","environmentService","onSaved","showCustom","urls","getUrls","baseUrl","base","webVaultUrl","webVault","apiUrl","api","identityUrl","identity","iconsUrl","icons","notificationsUrl","notifications","submit","resUrls","setUrls","showToast","saved","toggleCustom","emit","EnvironmentUrls","events","keyConnector","stateService","urlsSubject","Subject","scimUrl","activeAccount$","subscribe","setUrlsFromStorage","hasBaseUrl","getNotificationsUrl","getWebVaultUrl","getSendUrl","getIconsUrl","getApiUrl","getIdentityUrl","getEventsUrl","eventsUrl","getKeyConnectorUrl","keyConnectorUrl","getScimUrl","getEnvironmentUrls","envUrls","formatUrl","scim","setEnvironmentUrls","next","replace","startsWith","EncryptionType","BrowserEnvironmentService","logService","hasManagedEnvironment","getManagedEnvironment","e","error","settingsHaveChanged","env","Promise","resolve","reject","chrome","storage","managed","get","result","runtime","lastError","environment","setUrlsToManagedEnvironment","BoxRowDirective","elRef","el","nativeElement","ngOnInit","formEls","Array","from","querySelectorAll","formEl","addEventListener","classList","add","onClick","event","target","contains","tagName","inputEl","type","click","focus","nodeURL","window","Utils","inited","isNode","process","release","isBrowser","isMobileBrowser","isMobile","isAppleMobileBrowser","isAppleMobile","global","g","self","str","Uint8Array","Buffer","binaryString","atob","bytes","charCodeAt","fromB64ToArray","fromUrlB64ToB64","parseInt","substr","strUtf8","unescape","encodeURIComponent","arr","buffer","binary","byteLength","String","fromCharCode","btoa","fromB64toUrlB64","fromBufferToB64","b64Str","encodedString","apply","decodeURIComponent","escape","prototype","map","call","x","urlB64Str","output","Error","fromB64ToUtf8","utfStr","fromBufferToUrlB64","fromUtf8ToArray","Math","random","RegExp","test","uriString","getUrl","hostname","host","httpUrl","tldEndingRegex","getUrlObject","tldjs","isValid","validIpAddress","urlDomain","getDomain","domain","search","Map","split","pair","parts","set","prop","a","b","collator","compare","localeCompare","source","Object","assign","obj","keys","k","Number","isNaN","s","charAt","toUpperCase","ipString","win","mobile","navigator","userAgent","vendor","opera","match","URL","hasProtocol","anchor","document","createElement","href","regexpEmojiPresentation","init","EncString","encryptedStringOrType","data","iv","mac","initFromData","initFromEncryptedString","decrypt","orgId","key","decryptedValue","cryptoService","containerService","bitwardenContainerService","getCryptoService","getOrgKey","decryptToUtf8","ivBytes","macBytes","dataBytes","toJSON","encryptedString","encType","encryptionType","encPieces","parseEncryptedString","AesCbc128_HmacSha256_B64","AesCbc256_HmacSha256_B64","AesCbc256_B64","Rsa2048_OaepSha256_B64","Rsa2048_OaepSha1_B64","headerPieces","Domain","buildDomainModel","dataObj","notEncList","hasOwnProperty","objProp","buildDataModel","notEncStringList","decryptObj","viewModel","promises","theProp","p","then","mapProp","val","all","MasterPasswordPolicyOptions","minComplexity","minLength","requireUpper","requireLower","requireNumbers","requireSpecial","CalloutComponent","useAlertRole","calloutStyle","undefined","enforcedPolicyMessage","title","icon","getPasswordScoreAlertDisplay","enforcedPolicyOptions","InputVerbatimDirective","renderer","appInputVerbatim","condition","disableComplete","hasAttribute","setAttribute","StopClickDirective","$event","preventDefault","resetEnvironment","EnvironmentComponent","showEditedManagedSettings","navigate","PasswordHintRequest","ApiService","LogService","ValidationService","showError","defaultErrorMessage","errors","validationErrors","concat","getAllMessages","message","timeout","ApiActionDirective","validationService","ngOnChanges","changes","appApiAction","loading","response","captchaRequired","getSingleMessage","AutofocusDirective","ngZone","appAutofocus","autofocus","isStable","onStable","pipe","take","HintComponent","apiService","successRoute","formPromise","postPasswordHint","onSuccessfulSubmit","PasswordGenerationService","CryptoFunctionService","HashPurpose","KeySuffixOptions","HomeComponent","passwordGenerationService","cryptoFunctionService","launchSsoBrowser","passwordOptions","uppercase","lowercase","numbers","special","state","generatePassword","codeVerifier","codeVerifierHash","hash","codeChallenge","setSsoCodeVerifier","setSsoState","redirectUri","launchUri","SecretVerificationRequest","CryptoService","VaultTimeoutService","vaultTimeoutService","masterPassword","pin","showPassword","pinLock","webVaultHostname","invalidPinAttempts","activeAccountSubscription","load","ngOnDestroy","unsubscribe","handlePinRequiredUnlock","handleMasterPasswordRequiredUnlock","logOut","showDialog","unlockBiometric","biometricLock","success","getKey","Biometric","doContinue","togglePassword","input","getElementById","doUnlockWithPin","failed","kdf","getKdfType","kdfIterations","getKdfIterations","pinSet","makeKeyFromPin","getDecryptedPinProtected","encKey","getEncKey","protectedPin","getProtectedPin","setKeyAndContinue","doUnlockWithMasterPassword","makeKey","passwordValid","getKeyHash","compareAndUpdateKeyHash","request","serverKeyHash","hashPassword","ServerAuthorization","masterPasswordHash","postAccountVerifyPassword","localKeyHash","LocalAuthorization","setKeyHash","decPin","pinKey","makePinKey","setDecryptedPinProtected","encrypt","setKey","setEverBeenUnlocked","disableFavicon","getDisableFavicon","setDisableFavicon","isPinLockSet","supportsBiometric","isBiometricLockSet","hasKeyStored","supportsSecureStorage","biometricText","getBiometricText","getEmail","usesKeyConnector","getUsesKeyConnector","hideInput","vaultUrl","getHostname","BiometricErrors","startDesktop","description","desktopIntegrationDisabled","SyncService","A11yTitleDirective","appA11yTitle","BrowserApi","tabsQueryFirst","active","windowId","windows","WINDOW_ID_CURRENT","currentWindow","tabsQuery","options","tabs","query","tab","command","tabSendMessage","sendMessage","browser","getAll","incognito","callback","onCreated","addListener","extension","getBackgroundPage","getManifest","version","getViews","extensionPage","create","onMessage","msg","sender","subscriber","arg","windowType","tabToClose","tabId","update","highlighted","isWebExtensionsApi","isFirefoxOnAndroid","finally","close","i18n","getUILanguage","location","reload","w","application","connectNative","isChromeApi","permission","permissions","getPlatformInfo","isSafariApi","PopupUtilsService","privateMode","inSidebar","inTab","inPopout","inPopup","inPrivateMode","getContentScrollY","scrollingContainer","getElementsByTagName","scrollTop","setContentScrollY","scrollY","popOut","hrefParts","bodyRect","querySelector","getBoundingClientRect","width","round","height","closePopup","PrivateModeWarningComponent","popupUtilsService","showWarning","LockComponent","syncService","pendingBiometric","authenicatedUrl","unAuthenicatedUrl","isInitialLockScreen","previousPopupUrl","fullSync","forcePasswordReset","getForcePasswordReset","disableAutoBiometricsPrompt","getDisableAutoBiometricsPrompt","setTimeout","biometricError","AuthenticationType","PasswordLogInCredentials","captchaToken","twoFactor","SsoLogInCredentials","code","CaptchaIFrame","path","iframeId","successCallback","errorCallback","infoCallback","parseFunction","parseMessage","bind","connectorLink","stop","start","iframe","src","contentWindow","postMessage","base64Encode","cleanup","removeEventListener","createParams","URLSearchParams","JSON","stringify","parent","v","initComponent","params","validMessage","origin","parsedMessage","parse","siteKey","locale","translationLocale","CaptchaProtectedComponent","captchaSiteKey","setupCaptcha","captcha","token","info","showCaptcha","isNullOrWhitespace","handleCaptchaRequired","rememberEmail","twoFactorRoute","forcePasswordResetRoute","alwaysRememberEmail","selfHostedDomain","getRememberedEmail","focusInput","credentials","logIn","setRememberedEmail","requiresTwoFactor","onSuccessfulLoginTwoFactorNavigate","onSuccessfulLoginForceResetNavigate","onSuccessfulLogin","onSuccessfulLoginNavigate","clientId","ssoRedirectUri","ssoCodeVerifier","webUrl","LoginComponent","settings","InputsFieldMatch","matchTo","errorMessage","control","controls","value","inputsMatchError","inputsDoesntMatchError","field","fieldMatchTo","formGroup","fieldCtrl","fieldMatchToCtrl","setErrors","KdfType","DEFAULT_KDF_TYPE","PBKDF2_SHA256","DEFAULT_KDF_ITERATIONS","KeysRequest","publicKey","encryptedPrivateKey","RegisterRequest","masterPasswordHint","referenceData","captchaResponse","FormValidationErrorsService","formValidationErrorService","formBuilder","isInTrialFlow","createdAccount","showTerms","showErrorSummary","group","confirmMasterPassword","hint","validateInputsDoesntMatch","acceptPolicies","acceptPoliciesValidation","validator","validateFormInputsMatch","isSelfHost","markAllAsTouched","hasError","invalid","errorText","getErrorToastMessage","passwordStrengthResult","score","makeEncKey","hashedPassword","makeKeyPair","orgInvite","getOrganizationInvitation","organizationUserId","postRegister","getStrengthResult","getPasswordScoreText","color","text","getFormValidationErrors","shift","errorName","errorTag","controlName","required","PasswordStrengthComponent","showText","passwordScoreColor","scoreWidth","password","updatePasswordStrength","masterPasswordScoreColor","masterPasswordScore","masterPasswordScoreText","masterPasswordStrengthTimeout","setPasswordScoreText","clearTimeout","strengthResult","passwordStrength","getPasswordStrengthUserInput","userInput","atPosition","RegisterComponent","continuing","leaving","organization","getManagingOrganization","convert","actionPromise","migrateUser","removeConvertAccountRequired","leave","postLeaveOrganization","RemovePasswordComponent","OrganizationUserResetPasswordEnrollmentRequest","SetPasswordRequest","orgIdentifier","PolicyService","ChangePasswordComponent","policyService","getMasterPasswordPolicyOptions","strongPassword","setupSubmitActions","remakeEncKey","performSubmitActions","masterPasswordRetype","evaluateMasterPassword","PolicyApiServiceAbstraction","policyApiService","syncLoading","identifier","resetPasswordAutoEnroll","first","qParams","getOrganizationAutoEnrollStatus","resetPasswordEnabled","getMasterPasswordPoliciesForInvitedUsers","setPassword","onSetPasswordSuccess","getOrganizationKeys","userId","getUserId","userEncKey","encryptedKey","rsaEncrypt","resetRequest","resetPasswordKey","putOrganizationUserResetPasswordEnrollment","onSuccessfulChangePassword","confirmField","setKdfType","setKdfIterations","setEncKey","setEncPrivateKey","SetPasswordComponent","loggingIn","changePasswordRoute","getSsoCodeVerifier","getSsoState","checkState","getOrgIdentifierFromState","returnUri","includeUserIdentifier","initiateSsoFormPromise","preValidateSso","authorizeUrl","buildAuthorizeUrl","sameWindow","userIdentifier","getSsoUserIdentifier","orgIdFromState","sso","resetMasterPassword","onSuccessfulLoginChangePasswordNavigate","stateSplit","checkStateSplit","SsoComponent","Unlocked","reloadOpenWindows","open","TwoFactorService","twoFactorService","onProviderSelected","onRecoverSelected","getSupportedProviders","choose","recover","Window","TwoFactorOptionsComponent","setSelectedProvider","TwoFactorProviderType","WebAuthnIFrame","webAuthnNewTab","btnText","append","allow","TokenRequestTwoFactor","provider","remember","TwoFactorEmailRequest","TwoFactorProviders","Authenticator","priority","sort","premium","Yubikey","Duo","OrganizationDuo","Email","WebAuthn","selectedTwoFactorProviderType","twoFactorProvidersData","has","supportsDuo","supportsWebAuthn","getDefaultProvider","webAuthnSupported","providerType","providerPriority","_value","clearSelectedProvider","setProviders","twoFactorProviders2","clearProviders","getProviders","AppIdService","appIdService","webAuthnReady","selectedProviderType","webAuthn","twoFactorEmail","loginRoute","webAuthnAllow","authing","needsLock","cleanupWebAuthn","providerData","authWebAuthn","Host","sig_request","Signature","submit_callback","f","sig","size","sendEmail","doSubmit","logInTwoFactor","doToast","emailPromise","deviceIdentifier","getAppId","postTwoFactorEmail","authingWithPassword","authingWithSso","authingWithApiKey","BroadcasterService","anotherMethod","TwoFactorComponent","broadcasterService","showNewWindowMessage","isFirefox","isSafari","snapshot","paramMap","isLinux","body","os","UpdateTempPasswordRequest","newKey","newPasswordHash","newEncKey","newMasterPasswordHash","putUpdateTempPassword","UpdateTempPasswordComponent","UsernameGenerationService","usernameGenerationService","comingFromAddEdit","onSelected","usernameOptions","username","showOptions","avoidAmbiguous","usernameWebsite","typeOptions","passTypeOptions","usernameTypeOptions","desc","subaddressOptions","catchallOptions","forwardOptions","passwordOptionsResponse","getOptions","enforcedPasswordPolicyOptions","ambiguous","subaddressEmail","subaddressType","catchallType","website","websiteOption","generatorOptions","getGeneratorOptions","regenerateWithoutButtonPress","regenerate","typeChanged","setGeneratorOptions","regeneratePassword","regenerateUsername","sliderChanged","savePasswordOptions","addHistory","sliderInput","normalizePasswordOptions","saveOptions","saveUsernameOptions","generateUsername","usernameGeneratingPromise","copy","copyOptions","copyToClipboard","select","toggleOptions","number","checked","normalizeOptions","SelectCopyDirective","onCopy","copyText","selection","getSelection","rangeCount","getRangeAt","stringEndPos","newLinePos","substring","expand","PopOutComponent","show","ColorPasswordPipe","generateTemplate","character","templateGenerator","passwordArray","colorizedPassword","isSpecial","GeneratorComponent","addEditCipherInfo","getAddEditCipherInfo","cipherState","cipher","login","hasUris","uris","setAddEditCipherInfo","back","PolicyType","SendType","history","getHistory","clear","PasswordGeneratorHistoryComponent","SendFileView","sizeName","fileName","fileSize","SendTextView","hidden","maskedText","SendView","accessId","notes","file","maxAccessCount","accessCount","revisionDate","deletionDate","expirationDate","disabled","hideEmail","urlB64Key","maxAccessCountReached","expired","Date","pendingDelete","SendService","BrowserPath","DateField","DatePreset","AddEditComponent","datePipe","sendService","onSavedSend","onDeletedSend","onCancelled","copyLink","disableSend","disableHideEmail","sendType","canAccessPremium","emailVerified","alertShown","File","Text","sendLinkBaseUrl","link","isDateTimeLocalSupported","editMode","sendId","setDates","policyAppliesToUser","DisableSend","SendOptions","getCanAccessPremium","getEmailVerified","loadSend","setDate","getDate","hasPassword","files","encryptSend","encSend","uploadPromise","saveWithServer","copySuccess","copyLinkToClipboard","delete","deletePromise","deleteWithServer","sendData","togglePasswordVisible","StateService","datesChanged","datesForm","selectedDeletionDatePreset","selectedExpirationDatePreset","defaultDeletionDateTime","defaultExpirationDateTime","fallbackDeletionDate","fallbackDeletionTime","fallbackExpirationDate","fallbackExpirationTime","deletionDatePresets","OneHour","OneDay","TwoDays","ThreeDays","SevenDays","ThirtyDays","Custom","expirationDatePresets","Never","browserPath","Firefox","Safari","Default","formattedDeletionDate","setValue","now","miliseconds","setTime","getTime","formattedExpirationDate","safariDeletionTimePresetOptions","safariTimePresetOptions","DeletionDate","safariExpirationTimePresetOptions","ExpriationDate","nextWeek","setInitialFormValues","emitDates","valueChanges","onDeletionDatePresetSelect","clearExpiration","initialDeletionDate","toISOString","toTimeString","initialExpirationDate","twentyFourHour","noon","midnight","ams","pms","h","m","hour","minutes","midnightOption","twelveHour","noonOption","amOption","pmOption","validTimes","popOutWindow","EffluxDatesComponent","useExisting","SendAddEditComponent","isUnsupportedMac","showFileSelector","showFilePopoutMessage","showFirefoxFileWarning","showSafariFileWarning","showChromiumFileWarning","isChrome","appVersion","cancel","SearchService","indexedEntityId","SendComponent","searchService","loaded","refreshing","sends","filteredSends","searchPending","hasSearched","getAllDecrypted","onSuccessfulLoad","selectAll","refresh","applyFilter","searchTimeout","isSearchable","applyTextSearch","removePassword","removePasswordWithServer","onSuccessfulRemovePassword","onSuccessfulDelete","searchTextChanged","clearSelections","selectedAll","selectType","selectedType","searchSends","StopPropDirective","stopPropagation","selectSend","copySendLink","SendListComponent","disabledByPolicy","onCopySendLink","onRemovePassword","onDeleteSend","addSend","ComponentId","SendGroupingsComponent","popupUtils","changeDetectorRef","showLeftHeader","typeCounts","calculateTypeCounts","setBrowserSendTypeComponentState","restoredScopeState","restoreState","syncInProgress","loadedTimeout","run","detectChanges","saveState","showSearching","setBrowserSendComponentState","getBrowserSendComponentState","SendTypeComponent","applySavedState","getBrowserSendTypeComponentState","groupingTitle","successfully","refreshTimeout","routeDirection","DebounceNavigationService","navigationStartSub","pairwise","lastNavigation","thisNavigation","navigationSuccessSub","lastNavigationSuccessId","navigationTrigger","toggleUriInput","removeUri","ExcludedDomainsComponent","excludedDomains","existingExcludedDomains","savedDomains","getNeverDomains","uri","showCurrentUris","loadCurrentUris","loadCurrentUrisTimeout","addUri","splice","newExcludedDomains","getNewlyAddedDomians","validDomain","setNeverDomains","trackByFunction","index","item","newDomain","some","oldDomain","uriSet","Set","currentUris","EventType","ExportService","EventService","UserVerificationService","FileDownloadService","exportService","eventService","userVerificationService","fileDownloadService","exportForm","format","secret","formatOptions","checkExportDisabled","DisablePersonalVaultExport","disable","encryptedFormat","warningDialog","verifyUser","getExportData","downloadFile","collectEvent","getExport","getFileName","prefix","collect","User_ClientExportedVault","csv","download","blobData","blobOptions","OrganizationService","VerificationType","ExportScopeCalloutComponent","organizationService","organizationId","hasOrganizations","scopeConfig","scopeIdentifier","requestOTP","disableRequestOTP","sentCode","processChanges","writeValue","registerOnChange","fn","onChange","registerOnTouched","setDisabledState","isDisabled","enable","OTP","MasterPassword","multi","UserVerificationComponent","ExportComponent","FolderView","FolderService","FolderApiServiceAbstraction","folderService","folderApiService","onSavedFolder","onDeletedFolder","folder","save","folderId","FolderAddEditComponent","confirmed","ThemeType","UriMatchType","folderSelected","FoldersComponent","folders$","folderViews$","folders","addFolder","TotpService","AbstractThemingService","saveClearClipboard","saveDefaultUriMatch","updateAutoTotpCopy","updateAddLoginNotification","updateChangedPasswordNotification","updateContextMenuItem","updateShowCardsCurrentTab","updateShowIdentitiesCurrentTab","updateFavicon","updateBadgeCounter","saveTheme","updateAutoFillOnPageLoad","updateAutoFillOnPageLoadDefault","OptionsComponent","totpService","themingService","enableFavicon","enableBadgeCounter","enableAutoFillOnPageLoad","autoFillOnPageLoadDefault","enableAutoTotpCopy","enableContextMenuItem","enableAddLoginNotification","enableChangedPasswordNotification","showCardsCurrentTab","showIdentitiesCurrentTab","showClearClipboard","defaultUriMatch","showGeneral","showAutofill","showDisplay","themeOptions","System","Light","Dark","Nord","SolarizedDark","uriMatchOptions","StartsWith","RegularExpression","Exact","clearClipboardOptions","autoFillOnPageLoadOptions","getEnableAutoFillOnPageLoad","getAutoFillOnPageLoadDefault","getDisableAddLoginNotification","getDisableChangedPasswordNotification","getDisableContextMenuItem","getDontShowCardsCurrentTab","getDontShowIdentitiesCurrentTab","getDisableAutoTotpCopy","getDisableBadgeCounter","theme","getTheme","getDefaultUriMatch","clearClipboard","getClearClipboard","setDisableAddLoginNotification","setDisableChangedPasswordNotification","setDisableContextMenuItem","setDisableAutoTotpCopy","setEnableAutoFillOnPageLoad","setAutoFillOnPageLoadDefault","setDisableBadgeCounter","setDontShowCardsCurrentTab","setDontShowIdentitiesCurrentTab","updateConfiguredTheme","setDefaultUriMatch","setClearClipboard","isPremium","price","refreshPromise","refreshIdentityToken","purchase","manage","PremiumComponent","currencyPipe","thePrice","priceString","goBack","ModalRef","_onCreated","_onClose","_onClosed","_onShow","_onShown","asObservable","onClose","onClosed","onShow","onShown","shown","lastResult","closed","created","onClosedPromise","toPromise","DynamicModalComponent","modalService","cd","focusTrapFactory","modalRef","ngAfterViewInit","loadChildComponent","childComponentType","setComponentParameters","componentRef","instance","focusTrap","focusFirstTabbableElementWhenReady","componentType","componentFactory","resolveComponentFactory","modalContentRef","createComponent","destroy","getFocus","autoFocusEl","ModalInjector","_parentInjector","_additionalTokens","notFoundValue","flags","DeviceType","ModalConfig","ModalService","componentFactoryResolver","applicationRef","injector","modalList","factoryResolvers","modalCount","topModal","openViewRef","viewContainerRef","modalComponentRef","openInternal","insert","hostView","replaceTopModal","allowMultipleModals","registerComponentFactoryResolver","closeAll","modal","attachToDom","createModalComponent","attachView","domElem","rootNodes","appendChild","detachView","pop","setupHandlers","backdrop","modalEl","dialogEl","className","style","zIndex","prepend","modals","closeElement","WeakMap","showPin","masterPassOnRestart","showMasterPassOnRestart","toggleVisibility","pinProtectedKey","encPin","setProtectedPin","setEncryptedPinProtected","SetPinComponent","form","vaultTimeout","custom","hours","CUSTOM_VALUE","exceedsMinimumTimout","customTimeInMinutes","MIN_CUSTOM_MINUTES","MaximumVaultTimeout","vaultTimeoutPolicy","vaultTimeoutPolicyHours","floor","vaultTimeoutPolicyMinutes","vaultTimeouts","validatorChange","getVaultTimeout","current","max","patchValue","every","onTouched","validate","policyError","minTimeoutError","registerOnValidatorChange","VaultTimeoutInputComponent","updateBiometric","updateAutoBiometricsPrompt","changePassword","RateUrls","ChromeExtension","FirefoxExtension","OperaExtension","EdgeExtension","VivaldiExtension","SafariExtension","SettingsComponent","biometric","enableAutoBiometricsPrompt","previousVaultTimeout","showChangeMasterPass","showOnLocked","vaultTimeoutActions","saveVaultTimeout","action","getVaultTimeoutAction","vaultTimeoutAction","newValue","setVaultTimeoutOptions","saveVaultTimeoutAction","option","vaultTimeoutActionSelectRef","updatePin","ref","clearPinProtectedKey","granted","requestPermission","console","submitted","heightAuto","buttonsStyling","titleText","iconHtml","showCancelButton","cancelButtonText","showConfirmButton","allowOutsideClick","setBiometricAwaitingAcceptance","toggleKey","race","dismiss","authenticateBiometric","catch","setBiometricUnlock","setBiometricFingerprintValidated","setDisableAutoBiometricsPrompt","lock","createNewTab","twoStep","share","import","export","help","about","year","getFullYear","versionText","createTextNode","getApplicationVersion","div","innerHTML","html","fingerprint","getFingerprint","innerText","confirmButtonText","rate","deviceType","getDevice","CipherRepromptType","CipherType","OrganizationUserStatusType","SecureNoteType","LoginLinkedId","CardLinkedId","IdentityLinkedId","SyncComponent","lastSync","setLastSync","sync","syncPromise","last","getLastSync","toLocaleDateString","toLocaleTimeString","TabsComponent","showCurrentTab","LinkedMetadata","propertyKey","_i18nKey","i18nKey","linkedFieldOption","linkedFieldOptions","ItemView","CardView","cardholderName","expMonth","expYear","_brand","_number","_subTitle","maskedCode","repeat","maskedNumber","subTitle","count","expiration","exp","formatYear","SymmetricCryptoKey","macKey","keyB64","encKeyB64","macKeyB64","arrayBuffer","AttachmentView","fromJSON","FieldView","newField","showValue","showCount","linkedId","maskedValue","IdentityView","middleName","address1","address2","address3","city","postalCode","country","company","phone","ssn","passportNumber","licenseNumber","_firstName","_lastName","firstName","lastName","fullName","fullAddress","address","fullAddressPart2","addressPart2","CanLaunchWhitelist","LoginUriView","u","_uri","_domain","_hostname","_host","_canLaunch","getHost","hostnameOrUri","hostOrUri","isWebsite","canLaunch","LoginView","l","passwordRevisionDate","totp","autofillOnPageLoad","maskedPassword","hasTotp","PasswordHistoryView","ph","lastUsedDate","SecureNoteView","n","CipherView","favorite","organizationUseTotp","edit","viewPassword","card","secureNote","attachments","fields","passwordHistory","collectionIds","deletedDate","reprompt","None","localData","Login","SecureNote","Card","Identity","hasPasswordHistory","hasAttachments","hasOldAttachments","hasFields","passwordRevisionDisplayDate","isDeleted","linkedFieldValue","linkedFieldI18nKey","view","CipherService","AuditService","CollectionService","PasswordRepromptService","FieldType","cipherService","auditService","collectionService","passwordRepromptService","cloneMode","onSavedCipher","onDeletedCipher","onRestoredCipher","onEditAttachments","onShareCipher","onEditCollections","onGeneratePassword","onGenerateUsername","collections","showCardNumber","showCardCode","cipherType","ownershipOptions","currentDate","allowPersonal","canUseReprompt","cardBrandOptions","cardExpMonthOptions","identityTitleOptions","autofillOnPageLoadOptions","PersonalOwnership","myEmail","getSortFunction","o","enabled","status","Confirmed","writeableCollections","loadCollections","cipherId","loadCipher","Generic","organizationChanged","previousCipherId","Cipher_ClientViewed","restore","encryptCipher","saveCipher","editCollections","deleteCipher","restorePromise","restoreCipher","Cipher_ClientToggledPasswordVisible","toggleCardNumber","Cipher_ClientToggledCardNumberVisible","toggleCardCode","Cipher_ClientToggledCardCodeVisible","toggleUriOptions","loginUriMatchChanged","org","useTotp","checkPassword","checkPasswordPromise","passwordLeaked","matches","repromptChanged","Password","readOnly","softDeleteWithServer","restoreWithServer","addFieldType","fieldType","eventType","addFieldTypeOptions","Hidden","Boolean","addFieldLinkedTypeOption","Linked","thisCipherType","setLinkedFieldOptions","firstChange","resetCipherLinkedFields","addField","removeField","toggleFieldValue","Cipher_ClientToggledHiddenFieldVisible","drop","previousIndex","currentIndex","TrueFalseValueDirective","elementRef","trueValue","falseValue","propagateChange","_","onHostChange","ev","setProperty","AddEditCustomFieldsComponent","showAttachments","collectionId","collection","selectedVault","openAttachmentsInPopup","showAutoFillOnPageLoadOptions","destinationUrl","currentBaseUrl","saveCipherState","allowOwnershipOptions","EncArrayBuffer","encBytes","minimumLength","ENC_TYPE_LENGTH","throwDecryptionError","b64","BaseResponse","getResponseProperty","propertyName","exactName","otherCasePropertyName","ErrorResponse","identityResponse","errorModel","responseErrorModel","HCaptcha_SiteKey","statusCode","messages","lastSep","lastIndexOf","onUploadedAttachment","onDeletedAttachment","onReuploadedAttachment","deletePromises","reuploadPromises","emergencyAccessId","hasUpdatedKey","fileEl","saveCipherAttachment","cipherDomain","attachment","deleteCipherAttachment","downloading","canAccessAttachments","getAttachmentData","fetch","Request","cache","encBuf","fromResponse","decBuf","decryptFromBytes","hasEncKey","reuploadCipherAttachment","admin","saveAttachmentRawWithServer","foundAttachment","a2","saveAttachmentWithServer","attachmentId","deleteAttachmentWithServer","AttachmentsComponent","openedAttachmentsInPopup","activeCipherId","onCipherClicked","onCipherRightClicked","onAddCipher","onAddCipherOptions","ciphers","searchPlaceholder","deleted","deletedFilter","indexedCiphers","doSearch","selectCipher","rightClickCipher","addCipher","addCipherOptions","isSearching","searchCiphers","VaultFilter","selectedCollection","selectedFolder","myVaultOnly","refreshCollectionsAndFolders","resetFilter","selectedCollectionId","selectedFolderId","resetOrganization","selectedOrganizationId","buildFilter","cipherPassesFilter","TreeNode","node","children","ServiceUtils","nodeTree","partIndex","delimiter","end","partName","nestedTraverse","newPartName","getTreeNodeObject","DynamicTreeNode","hasId","fullList","storeCollapsedFilterNodes","collapsedFilterNodes","setCollapsedGroupings","buildCollapsedFilterNodes","getCollapsedGroupings","buildOrganizations","buildNestedFolders","transformation","storedFolders","orgCiphers","oc","nestedFolders","getAllFoldersNested","nestedList","mergeMap","buildCollections","storedCollections","nestedCollections","getAllNested","checkForSingleOrganizationPolicy","SingleOrg","checkForPersonalOwnershipPolicy","nodes","folderCopy","getFolderNested","firstValueFrom","VaultFilterService","vaultFilter","allVaults","myVault","getVaultFilter","setVaultFilter","filterCipherForSelectedVault","FallbackSrcDirective","onError","appFallbackSrc","cardIcons","RuPay","IconComponent","image","fallbackImage","imageEnabled","setLoginIcon","setCardIcon","hostnameUri","launchCipher","ActionButtonsComponent","onView","launchEvent","showView","userHasPremiumAccess","typeI18nKey","aType","protectedFields","showPasswordPrompt","displayTotpCopyButton","getCode","Cipher_ClientCopiedCardCode","CipherRowComponent","viewCipher","EllipsisPipe","limit","completeWords","ellipsis","selectMyVault","selectOrganization","selectAllVaults","openOverlay","VaultSelectComponent","vaultFilterService","overlay","onVaultSelectionChanged","isOpen","vaultFilterDisplay","enforcePersonalOwnwership","overlayPostition","originX","originY","overlayX","overlayY","organizations","handleKeyboardEvent","viewPortHeight","documentElement","clientHeight","innerHeight","positionStrategy","position","flexibleConnectedTo","buttonRef","withFlexibleDimensions","withPush","withViewportMargin","withGrowAfterOpen","withPositions","overlayRef","hasBackdrop","maxHeight","backdropClass","scrollStrategy","scrollStrategies","templatePortal","templateRef","attach","merge","outsidePointerEvents","backdropClick","detachments","dispose","changeVaultSelection","selectFolder","selectCollection","CiphersComponent","searchTypeSearch","showOrganizations","noneFolder","showVaultFilter","preventSelected","getBrowserCipherComponentState","folderNode","collectionNode","getNested","setBrowserCipherComponentState","selectedTimeout","updateLastLaunchedDate","showGroupings","allowSelectNone","onSavedCollections","loadCipherCollections","selectedCollectionIds","saveCollections","saveCollectionsWithServer","CollectionsComponent","AutofillService","fillCipher","CurrentTabComponent","autofillService","pageDetails","isLoading","frameId","webExtSender","details","totpCode","totpTimeout","doAutoFill","doc","fillNewPassword","searchVault","closeOnEsc","getTabFromCurrentWindow","loginCiphers","otherTypes","dontShowCards","dontShowIdentities","getAllDecryptedForUrl","cardCiphers","identityCiphers","sortCiphersByLastUsedThenName","decCipher","PasswordHistoryComponent","onSharedCipher","allCollections","orgs","filterCollections","cipherView","orgName","shareWithServer","canSave","ShareComponent","replaceUrl","selectTrash","VaultFilterComponent","browserStateService","folderCounts","collectionCounts","deletedCount","selectedOrganization","showCollections","noFolderListSize","hasLoadedAllCiphers","allCiphers","showNoFolderCiphers","noFolderCiphers","folderCount","getBrowserGroupingComponentState","replaceState","updateSelectedOrg","loadCollectionsAndFolders","loadCiphers","getCounts","loadFolders","allFolders","filterDeleted","vaultFilterChanged","favoriteCiphers","colId","setBrowserGroupingComponentState","TokenService","tokenService","onEditCipher","onCloneCipher","passwordReprompted","cleanUp","showPremiumRequiredTotp","totpUpdateCode","interval","getTimeInterval","totpTick","totpInterval","setInterval","promptPassword","clone","showPasswordCount","togglePasswordCount","launch","Cipher_ClientCopiedHiddenField","setTextDataOnDrag","dataTransfer","setData","downloadAttachment","clearInterval","half","totpCodeFormatted","intervalSeconds","mod","totpSec","totpDash","totpLow","toggleFieldCount","ColorPasswordCountPipe","ViewCustomFieldsComponent","fillCipherAndSave","ViewComponent","loadPageDetailsTimeout","loadPageDetails","doAutofill","loginUri","routes","redirectTo","pathMatch","component","runGuardsAndResolvers","NoRouteReuseStrategy","shouldDetach","store","handle","shouldAttach","retrieve","shouldReuseRoute","future","curr","AppRoutingModule","useClass","useHash","onSameUrlNavigation","queryShown","optional","queryChildRoute","queryTranslate","direction","axis","to","boxShadow","speed","queryTranslateX","queryTranslateY","inSlideLeft","outSlideRight","inSlideUp","outSlideDown","inSlideDown","routerTransition","fromState","toState","AppComponent","sanitizer","lastActivity","destroy$","clearComponentStates","takeUntil","activeUserId","runOutsideAngular","onmousedown","recordActivity","ontouchstart","onclick","onscroll","onkeypress","bitwardenPopupMainMessageListener","sendResponse","forceWindowReload","isOpera","reloadExtension","messageListener","urlAfterRedirects","complete","getState","outlet","activatedRouteData","activatedRoute","setLastActive","sanitize","enableHtml","trustedHtml","timeOut","iconClasses","cancelText","confirmText","timer","dialogId","getIsAuthenticated","ThemeBuilder","configuredTheme","systemTheme","effectiveTheme","updateSystemTheme","StateVersion","ThemingService","_theme","BehaviorSubject","theme$","monitorThemeChanges","getSystemTheme","monitorConfiguredThemeChanges","monitorSystemThemeChanges","getValue","setTheme","matchMedia","fromEvent","WINDOW","AbstractEncryptService","AccountApiService","FileUploadService","NotificationsService","ProviderService","SettingsService","StateMigrationService","AbstractStorageService","AbstractCachedStorageService","UserVerificationApiServiceAbstraction","AccountFactory","accountConstructor","args","GlobalStateFactory","globalStateConstructor","StateFactory","globalStateFactory","accountFactory","createGlobal","createAccount","EncryptionPair","DataEncryptionPair","TemporaryDataEncryption","AccountData","policies","passwordGenerationHistory","AccountKeys","cryptoSymmetricKey","organizationKeys","providerKeys","privateKey","AccountProfile","environmentUrls","pinProtected","AccountTokens","profile","tokens","WindowState","GlobalState","stateVersion","One","SsoType","OpenIdConnectRedirectBehavior","Saml2BindingType","Saml2NameIdFormat","Saml2SigningBehavior","DeviceRequest","appId","getDeviceString","pushToken","TokenRequest","device","alterIdentityTokenHeaders","headers","setTwoFactor","toIdentityToken","scope","client_id","deviceName","twoFactorToken","twoFactorProvider","twoFactorRemember","ApiTokenRequest","clientSecret","grant_type","client_secret","ApiKeyResponse","apiKey","AttachmentResponse","CardApi","FieldApi","IdentityApi","LoginUriApi","LoginApi","SecureNoteApi","PasswordHistoryResponse","CipherResponse","AttachmentUploadDataResponse","fileUploadType","cipherResponse","cipherMiniResponse","BillingResponse","invoices","transactions","balance","paymentSource","BillingSourceResponse","BillingTransactionResponse","BillingInvoiceResponse","cardBrand","needsVerification","pdfUrl","paid","date","amount","createdDate","refunded","partiallyRefunded","refundedAmount","paymentMethodType","BillingHistoryResponse","hasNoHistory","BillingPaymentResponse","BreachAccountResponse","addedDate","breachDate","dataClasses","isActive","isVerified","logoPath","modifiedDate","pwnCount","SelectionReadOnlyResponse","hidePasswords","CollectionResponse","externalId","CollectionDetailsResponse","CollectionGroupDetailsResponse","groups","DeviceVerificationResponse","isDeviceVerificationSectionEnabled","unknownDeviceVerificationEnabled","GlobalDomainResponse","domains","excluded","DomainsResponse","globalEquivalentDomains","equivalentDomains","d","EmergencyAccessGranteeDetailsResponse","granteeId","waitTimeDays","creationDate","EmergencyAccessGrantorDetailsResponse","grantorId","EmergencyAccessTakeoverResponse","keyEncrypted","EmergencyAccessViewResponse","EventResponse","providerId","groupId","policyId","providerUserId","providerOrganizationId","actingUserId","ipAddress","installationId","GroupResponse","accessAll","GroupDetailsResponse","IdentityCaptchaResponse","IdentityTokenResponse","accessToken","access_token","expiresIn","expires_in","refreshToken","refresh_token","tokenType","token_type","apiUseKeyConnector","IdentityTwoFactorResponse","twoFactorProviders","KeyConnectorUserKeyResponse","ListResponse","dr","continuationToken","SsoConfigApi","configType","keyConnectorEnabled","authority","metadataAddress","redirectBehavior","getClaimsFromUserInfoEndpoint","additionalScopes","additionalUserIdClaimTypes","additionalEmailClaimTypes","additionalNameClaimTypes","acrValues","expectedReturnAcrValue","spNameIdFormat","spOutboundSigningAlgorithm","spSigningBehavior","spMinIncomingSigningAlgorithm","spWantAssertionsSigned","spValidateCertificates","idpEntityId","idpBindingType","idpSingleSignOnServiceUrl","idpSingleLogoutServiceUrl","idpX509PublicCert","idpOutboundSigningAlgorithm","idpAllowUnsolicitedAuthnResponse","idpDisableOutboundLogoutRequests","idpWantAuthnRequestsSigned","OpenIdConnect","openId","Saml2","saml","idpAllowOutboundLogoutRequests","OrganizationSsoResponse","SsoUrls","callbackPath","signedOutCallbackPath","spEntityId","spMetadataUrl","spAcsUrl","OrganizationApiKeyInformationResponse","keyType","OrganizationAutoEnrollStatusResponse","OrganizationConnectionResponse","rawConfig","OrganizationExportResponse","KeysResponse","OrganizationKeysResponse","PlanResponse","product","isAnnual","nameLocalizationKey","descriptionLocalizationKey","canBeUsedByBusiness","baseSeats","baseStorageGb","maxCollections","maxUsers","hasAdditionalSeatsOption","maxAdditionalSeats","hasAdditionalStorageOption","maxAdditionalStorage","hasPremiumAccessOption","trialPeriodDays","hasSelfHost","hasPolicies","hasGroups","hasDirectory","hasEvents","has2fa","hasApi","hasSso","hasResetPassword","usersGetPremium","upgradeSortOrder","displaySortOrder","legacyYear","stripePlanId","stripeSeatPlanId","stripeStoragePlanId","stripePremiumAccessPlanId","basePrice","seatPrice","additionalStoragePricePerGb","premiumAccessOptionPrice","OrganizationResponse","businessName","businessAddress1","businessAddress2","businessAddress3","businessCountry","businessTaxNumber","billingEmail","plan","planType","seats","maxAutoscaleSeats","maxStorageGb","useGroups","useDirectory","useEvents","use2fa","useApi","useResetPassword","hasPublicAndPrivateKeys","OrganizationSponsorshipSyncStatusResponse","lastSyncDate","SubscriptionResponse","storageName","storageGb","license","usingInAppPurchase","subscription","upcomingInvoice","BillingSubscriptionResponse","BillingSubscriptionUpcomingInvoiceResponse","trialEndDate","periodStartDate","periodEndDate","cancelledDate","cancelAtEndDate","cancelled","BillingSubscriptionItemResponse","quantity","sponsoredSubscriptionItem","OrganizationSubscriptionResponse","OrganizationUserBulkPublicKeyResponse","OrganizationUserBulkResponse","PermissionsApi","accessEventLogs","accessImportExport","accessReports","manageAllCollections","manageAssignedCollections","createNewCollections","editAnyCollection","deleteAnyCollection","editAssignedCollections","deleteAssignedCollections","manageCiphers","manageGroups","manageSso","managePolicies","manageUsers","manageResetPassword","manageScim","OrganizationUserResponse","resetPasswordEnrolled","OrganizationUserUserDetailsResponse","twoFactorEnabled","OrganizationUserDetailsResponse","OrganizationUserResetPasswordDetailsReponse","ProfileOrganizationResponse","usePolicies","useSso","useKeyConnector","useScim","selfHost","ssoBound","providerName","familySponsorshipFriendlyName","familySponsorshipAvailable","planProductType","familySponsorshipLastSyncDateString","familySponsorshipLastSyncDate","familySponsorshipValidUntilString","familySponsorshipValidUntil","familySponsorshipToDelete","ProfileProviderOrganizationResponse","ProfileProviderResponse","ProfileResponse","providerOrganizations","premiumPersonally","premiumFromOrganization","culture","securityStamp","PaymentResponse","userProfile","paymentIntentClientSecret","PolicyResponse","PreloginResponse","ProviderOrganizationResponse","userCount","ProviderOrganizationOrganizationDetailsResponse","organizationName","ProviderResponse","ProviderUserBulkPublicKeyResponse","ProviderUserBulkResponse","ProviderUserResponse","ProviderUserUserDetailsResponse","SendFileApi","SendTextApi","SendAccessResponse","creatorIdentifier","SendFileDownloadDataResponse","SendResponse","SendFileUploadDataResponse","SsoPreValidateResponse","FolderResponse","SyncResponse","TaxInfoResponse","taxId","taxIdType","line1","line2","TaxRateResponse","TwoFactorAuthenticatorResponse","TwoFactorDuoResponse","secretKey","integrationKey","TwoFactorEmailResponse","TwoFactorProviderResponse","TwoFactorRecoverResponse","TwoFactorWebAuthnResponse","KeyResponse","migrated","ChallengeResponse","attestation","authenticatorSelection","challenge","fromUrlB64ToArray","excludeCredentials","extensions","pubKeyCredParams","rp","TwoFactorYubiKeyResponse","key1","key2","key3","key4","key5","nfc","UserKeyResponse","HtmlStorageLocation","logoutCallback","customUserAgent","isWebClient","isDesktopClient","IEBrowser","ChromeBrowser","EdgeBrowser","FirefoxBrowser","OperaBrowser","SafariBrowser","UnknownBrowser","VivaldiBrowser","WindowsDesktop","MacOsDesktop","LinuxDesktop","postIdentityToken","Headers","Accept","identityToken","getClientType","qsStringify","getCredentials","method","responseJson","isJsonResponse","json","TwoFactorProviders2","clearTwoFactorToken","doAuthRefresh","getProfile","getUserSubscription","getTaxInfo","putProfile","putTaxInfo","postPrelogin","isDev","postEmailToken","postEmail","postPassword","postSetKeyConnectorKey","postSecurityStamp","getAccountRevisionDate","postPremium","postIapCheck","postReinstatePremium","postCancelPremium","postAccountStorage","postAccountPayment","postAccountLicense","postAccountKeys","postAccountKey","postAccountVerifyEmail","postAccountVerifyEmailToken","postAccountRecoverDelete","postAccountRecoverDeleteToken","postAccountKdf","deleteSsoUser","postUserApiKey","postUserRotateApiKey","postConvertToKeyConnector","getUserBillingHistory","getUserBillingPayment","getSend","postSendAccess","getSendFileDownloadData","getSends","postSend","postFileTypeSend","renewSendFileUploadUrl","fileId","postSendFile","postSendFileLegacy","putSend","putSendRemovePassword","deleteSend","getCipher","getFullCipherDetails","getCipherAdmin","getCiphersOrganization","postCipher","postCipherCreate","postCipherAdmin","putCipher","putCipherAdmin","deleteCipherAdmin","deleteManyCiphers","deleteManyCiphersAdmin","putMoveCiphers","putShareCipher","putShareCiphers","putCipherCollections","putCipherCollectionsAdmin","postPurgeCiphers","postImportCiphers","postImportOrganizationCiphers","putDeleteCipher","putDeleteCipherAdmin","putDeleteManyCiphers","putDeleteManyCiphersAdmin","putRestoreCipher","putRestoreCipherAdmin","putRestoreManyCiphers","postCipherAttachment","postCipherAttachmentLegacy","postCipherAttachmentAdminLegacy","deleteCipherAttachmentAdmin","postShareCipherAttachment","renewAttachmentUploadUrl","postAttachmentFile","getCollectionDetails","getUserCollections","getCollections","getCollectionUsers","postCollection","putCollection","putCollectionUsers","deleteCollection","deleteCollectionUser","getGroupDetails","getGroups","getGroupUsers","postGroup","putGroup","putGroupUsers","deleteGroup","deleteGroupUser","getOrganizationUser","getOrganizationUserGroups","getOrganizationUsers","getOrganizationUserResetPasswordDetails","postOrganizationUserInvite","postOrganizationUserReinvite","postManyOrganizationUserReinvite","postOrganizationUserAccept","postOrganizationUserConfirm","postOrganizationUsersPublicKey","postOrganizationUserBulkConfirm","putOrganizationUser","putOrganizationUserGroups","putOrganizationUserResetPassword","deleteOrganizationUser","deleteManyOrganizationUsers","revokeOrganizationUser","revokeManyOrganizationUsers","restoreOrganizationUser","restoreManyOrganizationUsers","getPlans","postImportDirectory","postPublicImportDirectory","getTaxRates","getSettingsDomains","putSettingsDomains","getSync","getTwoFactorProviders","getTwoFactorOrganizationProviders","getTwoFactorAuthenticator","getTwoFactorEmail","getTwoFactorDuo","getTwoFactorOrganizationDuo","getTwoFactorYubiKey","getTwoFactorWebAuthn","getTwoFactorWebAuthnChallenge","getTwoFactorRecover","putTwoFactorAuthenticator","putTwoFactorEmail","putTwoFactorDuo","putTwoFactorOrganizationDuo","putTwoFactorYubiKey","putTwoFactorWebAuthn","deviceResponse","rawId","getClientExtensionResults","AttestationObject","attestationObject","clientDataJson","clientDataJSON","deleteTwoFactorWebAuthn","putTwoFactorDisable","putTwoFactorOrganizationDisable","postTwoFactorRecover","postTwoFactorEmailSetup","getDeviceVerificationSettings","putDeviceVerificationSettings","getEmergencyAccessTrusted","getEmergencyAccessGranted","getEmergencyAccess","getEmergencyGrantorPolicies","putEmergencyAccess","deleteEmergencyAccess","postEmergencyAccessInvite","postEmergencyAccessReinvite","postEmergencyAccessAccept","postEmergencyAccessConfirm","postEmergencyAccessInitiate","postEmergencyAccessApprove","postEmergencyAccessReject","postEmergencyAccessTakeover","postEmergencyAccessPassword","postEmergencyAccessView","getOrganization","getOrganizationBilling","getOrganizationSubscription","getCloudCommunicationsEnabled","getOrganizationConnection","createOrganizationConnection","updateOrganizationConnection","organizationConnectionId","deleteOrganizationConnection","getOrganizationLicense","getOrganizationTaxInfo","getOrganizationSso","postOrganization","putOrganization","putOrganizationTaxInfo","postOrganizationLicense","postOrganizationLicenseUpdate","postOrganizationApiKey","getOrganizationApiKeyInformation","postOrganizationRotateApiKey","postOrganizationSso","postOrganizationUpgrade","postOrganizationUpdateSubscription","postOrganizationSeat","postOrganizationStorage","postOrganizationPayment","postOrganizationVerifyBank","postOrganizationCancel","postOrganizationReinstate","deleteOrganization","postOrganizationKeys","postProviderSetup","getProvider","putProvider","getProviderUsers","getProviderUser","postProviderUserInvite","postProviderUserReinvite","postManyProviderUserReinvite","postProviderUserBulkConfirm","deleteManyProviderUsers","postProviderUserAccept","postProviderUserConfirm","postProviderUsersPublicKey","putProviderUser","deleteProviderUser","getProviderClients","postProviderAddOrganization","postProviderCreateOrganization","deleteProviderOrganization","getEvents","addEventParameters","getEventsCipher","getEventsOrganization","getEventsOrganizationUser","getEventsProvider","getEventsProviderUser","postEventsCollect","authHeader","getActiveBearerToken","Authorization","getUserPublicKey","getHibpBreach","postBitPayInvoice","postSetupPayment","getUserKeyFromKeyConnector","handleError","postUserKeyToKeyConnector","getKeyConnectorAlive","getOrganizationExport","getToken","tokenNeedsRefresh","nativeFetch","postCreateSponsorship","sponsoredOrgId","getSponsorshipSyncStatus","deleteRevokeSponsorship","sponsoringOrganizationId","deleteRemoveSponsorship","sponsoringOrgId","postPreValidateSponsorshipToken","sponsorshipToken","postRedeemSponsorship","postResendSponsorshipOffer","getRefreshToken","doRefreshToken","getClientId","getClientSecret","doApiTokenRefresh","decodedToken","decodeToken","tokenResponse","setTokens","deviceRequest","tokenRequest","setToken","authed","hasResponse","alterHeaders","requestUrl","requestInit","FormData","tokenError","isTextResponse","Message","typeHeader","storageService","makeAndGetAppId","getAnonymousAppId","existingId","htmlStorageLocation","Local","guid","newGuid","hashBytes","fromBufferToHex","hashStart","hashEnding","breachedAccounts","throttleKey","descriptor","originalMethod","allThrottles","throttles","getThrottles","argsThrottleKey","queue","exec","onFinally","err","AuthResult","requiresCaptcha","LogInStrategy","captchaBypassToken","startLogIn","processTwoFactorResponse","processCaptchaResponse","processTokenResponse","buildDeviceRequest","buildTwoFactor","userProvidedTwoFactor","storedTwoFactorToken","getTwoFactorToken","Remember","saveAccountInformation","accountInformation","addAccount","sub","hasPremiumPersonally","kdfType","setTwoFactorToken","createKeyPairForOldAccount","ApiLogInStrategy","getAndSetKey","setApiKeyClientId","setApiKeyClientSecret","PasswordTokenRequest","fromUtf8ToUrlB64","PasswordLogInStrategy","localHashedPassword","makePreloginKey","SsoTokenRequest","code_verifier","redirect_uri","SsoLogInStrategy","newSsoUser","convertNewSsoUserToKeyConnector","PreloginRequest","logInStrategy","strategy","clearState","Auto","getEverBeenUnlocked","hasKeyInMemory","preloginResponse","startSessionTimeout","clearSessionTimeout","sessionTimeout","sequentialize","cacheKey","caches","getCache","argsCacheKey","AttachmentData","CardData","FieldData","IdentityData","LoginUriData","LoginData","PasswordHistoryData","SecureNoteData","CipherData","Attachment","orgKey","decValue","decryptToBytes","toAttachmentData","toCardData","Field","toFieldData","toIdentityData","LoginUri","toLoginUriData","toLoginData","toPasswordHistoryData","toSecureNoteData","Cipher","model","reduce","promise","decAttachment","decField","decPh","toCipherData","SortedCiphersCache","comparator","sortedCiphersByUrl","timeouts","isCached","addCiphers","Ciphers","resetTimer","getLastUsed","getLastLaunched","getNext","updateLastUsedIndex","lastUsedIndex","lastLaunched","y","valueOf","getNextIndex","CipherBulkDeleteRequest","ids","CipherBulkMoveRequest","CipherBulkRestoreRequest","AttachmentRequest","CipherRequest","lastKnownRevisionDate","attachments2","attachmentRequest","CipherWithIdRequest","CipherBulkShareRequest","CipherCollectionsRequest","CipherCreateRequest","CipherShareRequest","DomainMatchBlacklist","settingsService","fileUploadService","sortedCiphersCache","sortCiphersByLastUsed","getDecryptedCipherCache","getDecryptedCiphers","setDecryptedCipherCache","setDecryptedCiphers","clearIndex","indexCiphers","clearCache","clearDecryptedCiphersState","originalCipher","existingCipher","existingHiddenFields","hiddenFields","ef","matchedField","encryptObjProperty","encryptCipherData","encryptFields","encryptPasswordHistories","encryptAttachments","attachmentsModel","encAttachments","fieldsModel","encFields","encField","encryptField","fieldModel","phModels","encPhs","encPh","encryptPasswordHistory","phModel","getEncryptedCiphers","getLocalData","decCiphers","hasKey","getLocaleSortingFunction","getAllDecryptedForGrouping","groupingId","includeOtherTypes","defaultMatch","eqDomainsPromise","getEquivalentDomains","eqDomains","eqDomain","matchingDomains","domainUrlHost","urlHost","getAllFromApiForOrganization","getLastUsedForUrl","getCipherForUrl","getLastLaunchedForUrl","getNextCipherForUrl","updateLastUsedIndexForUrl","updateLastUsedDate","ciphersLocalData","setLocalData","decryptedCipherCache","cached","saveNeverDomain","upsert","attachmentPromises","shareAttachmentWithServer","encCipher","shareManyWithServer","encCiphers","unencryptedFile","reader","FileReader","readAsArrayBuffer","onload","evt","cData","onerror","filename","encFileName","dataEncKey","encData","encryptToBytes","adminRequest","uploadDataResponse","uploadCipherAttachment","legacyServerAttachmentFileUpload","fd","blob","Blob","filepath","contentType","setEncryptedCiphers","clearEncryptedCiphersState","moveManyWithServer","deleteManyWithServer","deleteAttachment","aLastUsed","bLastUsed","bothNotNull","aName","bName","softDelete","setDeletedDate","softDeleteManyWithServer","clearDeletedDate","restoreManyWithServer","restores","attachmentView","attachmentResponse","theObj","modelProp","lastUsed","autofillOnPageLoadDefault","clearSortedCiphers","CollectionData","CollectionView","Collection","setDecryptedCollections","decryptMany","decCollections","getEncryptedCollections","decryptedCollections","getDecryptedCollections","collectionCopy","setEncryptedCollections","LogLevelType","ConsoleLogService","timersMap","debug","write","Debug","Info","warning","Warning","level","log","warn","EEFLongWordList","BaseEncryptedOrganizationKey","EncryptedOrganizationKey","ProviderEncryptedOrganizationKey","rsaDecrypt","toData","providerKey","getProviderKey","encryptService","platformUtilService","setCryptoMasterKey","storeKey","keyHash","setDecryptedCryptoSymmetricKey","setEncryptedCryptoSymmetricKey","encPrivateKey","setDecryptedPrivateKey","setEncryptedPrivateKey","setOrgKeys","providerOrgs","encOrgKeyData","setDecryptedOrganizationKeys","setEncryptedOrganizationKeys","setProviderKeys","setDecryptedProviderKeys","setEncryptedProviderKeys","keySuffix","inMemoryKey","getCryptoMasterKey","symmetricKey","getKeyFromStorage","retrieveKeyFromStorage","validateKey","clearSecretKeyStore","storedKeyHash","getEncKeyHelper","getPublicKey","inMemoryPublicKey","getPrivateKey","rsaExtractPublicKey","setPublicKey","decryptedPrivateKey","getDecryptedPrivateKey","getEncryptedPrivateKey","keyFingerprint","userFingerprint","hkdfExpand","hashPhrase","getOrgKeys","decryptedOrganizationKeys","getDecryptedOrganizationKeys","getEncryptedOrganizationKeys","encOrgKey","fromData","decOrgKey","orgKeys","getProviderKeys","decryptedProviderKeys","getDecryptedProviderKeys","encProviderKeys","getEncryptedProviderKeys","getCryptoMasterKeyAuto","hasCryptoMasterKeyBiometric","getEncryptedCryptoSymmetricKey","clearKey","clearSecretStorage","clearStoredKey","setCryptoMasterKeyAuto","setCryptoMasterKeyBiometric","clearKeyHash","clearEncKey","memoryOnly","clearKeyPair","keysToClear","clearOrgKeys","clearProviderKeys","clearKeys","salt","pbkdf2","protectedKeyCs","getEncryptedPinProtected","decKey","makeShareKey","shareKey","randomBytes","keyPair","rsaGenerateKeyPair","stretchKey","makeSendKey","keyMaterial","sendKey","hkdf","hashPurpose","iterations","theKey","getKeyForUserEncryption","buildEncKey","plainValue","encValue","privateKeyValue","Rsa2048_OaepSha256_HmacSha256_B64","Rsa2048_OaepSha1_HmacSha256_B64","alg","encString","keyForEnc","encBuffer","randomNumber","min","rval","range","bitsNeeded","ceil","log2","bytesNeeded","mask","pow","byteArray","shouldStoreKey","getBiometricUnlock","getCryptoMasterKeyBiometric","minimumEntropy","entropyPerWord","numWords","hashArr","phrase","hashNumber","remainder","divide","encKeyEnc","getDecryptedCryptoSymmetricKey","decEncKey","encKeyCipher","symmetricCryptoKey","EncryptedObject","EncryptService","logMacFailures","plainBuf","encObj","aesEncrypt","macLen","resolveLegacyKey","fastParams","aesDecryptFastParameters","computedMac","hmacFast","macData","compareFast","logMacFailed","aesDecryptFast","encThing","hmac","aesDecrypt","EventData","EventRequest","checkOnInterval","uploadEvents","uploadImmediately","orgIds","eventCollection","getEventCollection","setEventCollection","req","clearEvents","CardExport","FieldExport","IdentityExport","LoginUriExport","LoginExport","toView","toDomain","SecureNoteExport","CipherExport","values","build","CipherWithIdExport","CollectionExport","CollectionWithIdExport","EventExport","humanReadableMessage","appIcon","appName","userName","userEmail","ip","Folder","FolderExport","FolderWithIdExport","FileUploadType","getEncryptedExport","getDecryptedExport","getPasswordProtectedExport","clearText","encKeyValidation","encText","jsonDoc","encrypted","passwordProtected","encKeyValidation_DO_NOT_EDIT","getOrganizationEncryptedExport","getOrganizationDecryptedExport","getEventExport","padNumber","getMonth","getHours","getMinutes","getSeconds","decFolders","foldersMap","exportCiphers","buildCommonCipher","exportData","exportPromises","decCol","collectionsMap","num","padCharacter","numString","login_uri","login_username","login_password","login_totp","AzureFileUploadService","upload","renewalCallback","azureUploadBlob","azureUploadBlocks","urlObject","toUTCString","searchParams","blobResponse","blockSize","getMaxBlockSize","blockIndex","numBlocks","blocksStaged","renewUrlIfNecessary","blockUrl","blockId","encodedBlockId","blockData","blockHeaders","blockRequest","blockResponse","blockListUrl","blockListXml","expiry","utfBlockId","fromUtf8ToB64","blockIdList","xml","Version","month","day","compareTo","BitwardenFileUploadService","encryptedFileName","encryptedFileData","apiCall","azureFileUploadService","bitwardenFileUploadService","uploadSendFile","uploadData","Direct","Azure","FolderData","FolderRequest","FolderApiService","postFolder","putFolder","deleteFolder","OrganizationUserType","_folders","_folderViews","activeAccountUnlocked$","unlocked","getEncryptedFolders","updateObservables","getAllDecryptedFromState","decryptFolders","setEncryptedFolders","updates","cId","decryptFolderPromises","decryptedFolders","SetKeyConnectorKeyRequest","KeyConnectorUserKeyRequest","setUsesKeyConnector","userNeedsMigration","loggedInUsingSso","getIsExternal","requiredByOrganization","userIsNotUsingKeyConnector","keyConnectorRequest","handleKeyConnectorError","userKeyResponse","keyArr","Admin","Owner","isProviderUser","pubKey","privKey","setPasswordRequest","setConvertAccountRequired","setConvertAccountToKeyConnector","getConvertAccountToKeyConnector","NotificationType","NotificationResponse","contextId","payload","SyncCipherCreate","SyncCipherDelete","SyncCipherUpdate","SyncLoginDelete","SyncCipherNotification","SyncFolderCreate","SyncFolderDelete","SyncFolderUpdate","SyncFolderNotification","SyncVault","SyncCiphers","SyncOrgKeys","SyncSettings","LogOut","UserNotification","SyncSendCreate","SyncSendUpdate","SyncSendDelete","SyncSendNotification","connected","inactive","reconnectTimer","signalrConnection","off","withUrl","accessTokenFactory","skipNegotiation","transport","withHubProtocol","on","processNotification","onclose","reconnect","isAuthedAndUnlocked","updateConnection","reconnectFromActivity","disconnectFromInactivity","notification","isAuthenticated","payloadUserId","UserId","myUserId","syncUpsertCipher","syncDeleteCipher","syncUpsertFolder","syncDeleteFolder","syncUpsertSend","syncDeleteSend","Organization","canAccess","isManager","Manager","isAdmin","isOwner","canAccessEventLogs","canAccessImportExport","canAccessReports","canCreateNewCollections","canEditAnyCollection","canDeleteAnyCollection","canViewAllCollections","canEditAssignedCollections","canDeleteAssignedCollections","canViewAssignedCollections","canManageGroups","canManageSso","canManageScim","canManagePolicies","canManageUsers","canManageUsersPassword","isExemptFromPolicies","canManageBilling","hasProvider","getOrganizations","getByIdentifier","setOrganizations","canManageSponsorships","GeneratedPasswordHistory","PasswordGeneratorPolicyOptions","defaultType","useUppercase","useLowercase","useNumbers","numberCount","useSpecial","specialCount","minNumberWords","capitalize","includeNumber","inEffect","DefaultOptions","minNumber","minUppercase","minLowercase","minSpecial","wordSeparator","generatePassphrase","sanitizePasswordLength","positions","shuffleArray","allCharSet","lowercaseCharSet","uppercaseCharSet","numberCharSet","specialCharSet","positionChars","randomCharIndex","listLength","wordList","wordIndex","appendRandomNumberToRandomWord","getPasswordGenerationOptions","setPasswordGenerationOptions","enforcedOptions","enforcePasswordGeneratorPoliciesOnOptions","getPasswordGeneratorPolicyOptions","PasswordGenerator","currentPolicy","useUpper","useLower","minNumbers","getDecryptedPasswordGenerationHistory","getEncryptedPasswordGenerationHistory","decrypted","decryptHistory","setDecryptedPasswordGenerationHistory","currentHistory","matchesPrevious","unshift","newHistory","encryptHistory","setEncryptedPasswordGenerationHistory","userInputs","globalUserInputs","finalUserInputs","array","j","forGeneration","minUppercaseCalc","minLowercaseCalc","minNumberCalc","minSpecialCalc","PolicyData","Policy","PolicyApiService","getPolicy","getPolicies","getPoliciesByToken","getPoliciesByInvitedUser","getPolicyForOrganization","policyType","policy","mapPoliciesFromToken","putPolicy","ResetPasswordPolicyOptions","autoEnrollEnabled","ProviderUserStatusType","ProviderUserType","decryptedPolicies","getDecryptedPolicies","diskPolicies","getEncryptedPolicies","setDecryptedPolicies","newPassword","toLocaleLowerCase","toLocaleUpperCase","getResetPasswordPolicyOptions","resetPasswordPolicyOptions","ResetPassword","policiesResponse","policyFilter","filteredPolicies","policySet","Accepted","isExcemptFromPolicies","setEncryptedPolicies","Provider","isProviderAdmin","canCreateOrganizations","ProviderAdmin","indexing","immediateSearchLocales","defaultSearchableMinLength","searchableMinLength","locale$","registeredPipeline","lunr","Pipeline","registerFunction","normalizeAccentsPipelineFunction","normalizeSearchQuery","builder","Builder","pipeline","boost","extractor","uriExtractor","fieldExtractor","attachmentExtractor","results","isArray","getIndexForSearch","searchCiphersBasic","ciphersMap","searchResults","soWild","Query","wildcard","LEADING","TRAILING","q","tokenizer","term","sendsMatched","lowPriorityMatched","joined","protocolIndex","queryIndex","searchableFields","metadata","normalize","SendFileData","SendTextData","SendData","SendFile","SendText","Send","cryptoKey","SendRequest","fileLength","setDecryptedSends","fileData","passwordHash","ArrayBuffer","encryptFileData","parseFile","getEncryptedSends","decSends","getDecryptedSends","legacyServerSendFileUpload","setEncryptedSends","Keys","setSettings","getSettingsKey","setEquivalentDomains","setSettingsKey","getSettings","StorageLocation","ProviderData","State","globals","accounts","authenticatedAccounts","accountActivity","partialKeys","secureStorageService","memoryStorageService","stateMigrationService","stateFactory","useAccountCache","activeAccountSubject","activeAccountUnlockedSubject","hasBeenInited","isRecoveredSession","accountDiskCache","needsMigration","migrate","setState","createGlobals","initAccountState","updateState","syncAccountFromDisk","storedActiveUser","pushAccounts","diskAccount","getAccountFromDisk","account","setAccountEnvironmentUrls","scaffoldNewAccountStorage","setActiveUser","clearDecryptedDataForActiveUser","clean","reconcileOptions","defaultInMemoryOptions","deAuthenticateAccount","dynamicallySetActiveUser","removeAccountFromDisk","removeAccountFromMemory","getAccessToken","getTimeoutBasedStorageOptions","getAccount","setAccessToken","saveAccount","getAlwaysShowDock","getGlobals","defaultOnDiskOptions","alwaysShowDock","setAlwaysShowDock","saveGlobals","getApiKeyClientId","apiKeyClientId","getApiKeyClientSecret","apiKeyClientSecret","getAutoConfirmFingerPrints","autoConfirmFingerPrints","setAutoConfirmFingerprints","getBiometricAwaitingAcceptance","biometricAwaitingAcceptance","getBiometricFingerprintValidated","biometricFingerprintValidated","setBiometricText","biometricUnlock","getHasPremiumPersonally","getHasPremiumFromOrganization","setHasPremiumPersonally","hasPremiumFromOrganization","setHasPremiumFromOrganization","defaultOnDiskLocalOptions","collapsedGroupings","convertAccountToKeyConnector","cryptoMasterKey","nextValue","defaultSecureStorageOptions","saveSecureStorageKey","getCryptoMasterKeyB64","setCryptoMasterKeyB64","getDecodedToken","setDecodedToken","decryptedSerialized","fromByteStringToArray","fromBufferToByteString","disableAddLoginNotification","disableAutoTotpCopy","disableBadgeCounter","disableChangedPasswordNotification","disableContextMenuItem","getDisableGa","disableGa","setDisableGa","dontShowCardsCurrentTab","dontShowIdentitiesCurrentTab","setEmail","setEmailVerified","getEnableAlwaysOnTop","accountPreference","enableAlwaysOnTop","globalPreference","setEnableAlwaysOnTop","getEnableBiometric","enableBiometrics","setEnableBiometric","getEnableBrowserIntegration","enableBrowserIntegration","setEnableBrowserIntegration","getEnableBrowserIntegrationFingerprint","enableBrowserIntegrationFingerprint","setEnableBrowserIntegrationFingerprint","getEnableCloseToTray","enableCloseToTray","setEnableCloseToTray","getEnableFullWidth","enableFullWidth","setEnableFullWidth","getEnableGravitars","enableGravitars","setEnableGravitars","getEnableMinimizeToTray","enableMinimizeToTray","setEnableMinimizeToTray","getEnableStartToTray","enableStartToTray","setEnableStartToTray","getEnableTray","enableTray","setEnableTray","defaultOnDiskMemoryOptions","getEntityId","entityId","setEntityId","getEntityType","entityType","setEntityType","getGlobalEnvironmentUrls","everBeenUnlocked","setForcePasswordReset","getInstalledVersion","installedVersion","setInstalledVersion","getLastActive","getLocale","setLocale","getMainWindowSize","mainWindowSize","setMainWindowSize","getMinimizeOnCopyToClipboard","minimizeOnCopyToClipboard","setMinimizeOnCopyToClipboard","neverDomains","getNoAutoPromptBiometrics","noAutoPromptBiometrics","setNoAutoPromptBiometrics","getNoAutoPromptBiometricsText","noAutoPromptBiometricsText","setNoAutoPromptBiometricsText","getOpenAtLogin","openAtLogin","setOpenAtLogin","organizationInvitation","setOrganizationInvitation","passwordGenerationOptions","getUsernameGenerationOptions","usernameGenerationOptions","setUsernameGenerationOptions","publicKeySerialized","setRefreshToken","rememberedEmail","getSecurityStamp","setSecurityStamp","getSsoOrgIdentifier","ssoOrganizationIdentifier","setSsoOrganizationIdentifier","ssoState","setVaultTimeout","accountVaultTimeoutAction","globalVaultTimeoutAction","setVaultTimeoutAction","getStateVersion","setStateVersion","getWindow","setWindow","useMemory","storageLocation","getGlobalsFromMemory","useDisk","getGlobalsFromDisk","saveGlobalsToMemory","saveGlobalsToDisk","useSecureStorage","getAccountFromMemory","getUserIdFromMemory","cachedAccount","Memory","Both","Disk","saveAccountToMemory","saveAccountToDisk","deepClone","scaffoldNewAccountLocalStorage","scaffoldNewAccountSessionStorage","scaffoldNewAccountMemoryStorage","storedAccount","pruneInMemoryAccounts","requestedOptions","defaultOptions","Session","getActiveUserIdFromStorage","removeAccountFromLocalStorage","resetAccount","removeAccountFromSessionStorage","removeAccountFromSecureStorage","persistentAccountInformation","timeoutAction","stateUpdater","updatedState","withPrototype","converter","originalResult","getOwnPropertyDescriptors","withPrototypeForArrayMembers","memberConstructor","memberConverter","withPrototypeForObjectValues","valuesConstructor","valuesConverter","entries","withPrototypeForMap","decoded","fromUrlB64ToUtf8","clientIdClientSecret","setClientId","setClientSecret","clearToken","storedToken","getTokenExpirationDate","setUTCSeconds","tokenSecondsRemaining","offsetSeconds","msRemaining","email_verified","getName","getIssuer","iss","amr","v1Keys","autoConfirmFingerprints","enableBiometric","enableGravatars","encOrgKeys","encPrivate","lastActive","ssoIdentifier","stamp","usesConnector","v1KeyPrefixes","currentStateVersion","getCurrentStateVersion","Latest","migrateStateFrom1To2","Two","migrateStateFrom2To3","Three","migrateStateFrom3To4","Four","getAuthenticatedAccounts","migratedAccount","migrateAccountFrom4To5","setCurrentStateVersion","Five","migrateAccountFrom5To6","Six","clearV1Keys","clearingUserId","keyPrefix","defaultAccount","accountSettings","cryptoMasterKeyAuto","cryptoMasterKeyB64","cryptoMasterKeyBiometric","legacyEtmKey","authenticationStatus","authenticatedUserIds","encryptedOrgKeys","newVersion","OrganizationData","providerService","forceSync","allowThrowOnError","syncStarted","syncCompleted","needsSync","needsSyncing","syncProfile","syncFolders","syncCollections","syncCiphers","syncSends","syncSettings","syncPolicies","isEdit","localFolder","remoteFolder","shouldUpdate","localCipher","checkCollections","remoteCipher","localSend","remoteSend","B32Chars","SteamChars","period","digits","keyB32","isOtpAuth","isSteamAuth","getQueryParams","digitParams","periodParam","algParam","epoch","timeHex","leftPad","decToHex","timeBytes","fromHexToArray","keyBytes","b32ToBytes","sign","offset","otp","fullCode","trunc","b32ToHex","cleanedInput","bits","hex","byteIndex","chunk","signature","UserVerificationApiService","postAccountVerifyOTP","postAccountRequestOTP","VerifyOTPRequest","userVerificationApiService","buildRequest","verification","requestClass","alreadyHashed","validateInput","AnonAddyForwarder","generate","anonaddy","redirect","DuckDuckGoForwarder","FastmailForwarder","accountId","getAccountId","using","methodCalls","emailPrefix","fastmail","methodResponses","notCreated","primaryAccounts","FirefoxRelayForwarder","generated_for","full_address","ForwarderOptions","FastmailForwarderOptions","AnonAddyForwarderOptions","SimpleLoginForwarder","Authentication","note","alias","wordCapitalize","wordIncludeNumber","forwardedService","forwardedAnonAddyDomain","generateCatchall","generateSubaddress","generateForwarded","generateWord","word","zeroPad","atIndex","emailBeginning","emailEnding","subaddressString","randomString","catchallDomain","startString","forwarder","forwarderOptions","forwardedSimpleLoginApiKey","forwardedAnonAddyApiToken","forwardedFirefoxApiToken","forwardedFastmailApiToken","forwardedDuckDuckGoToken","charSet","lockedCallback","loggedOutCallback","startCheck","checkVaultTimeout","isViewOpen","shouldLock","executeTimeoutAction","allowSoftLock","currentAction","vaultTimeoutSeconds","DecryptParameters","WebCryptoFunctionService","crypto","subtle","algorithm","wcLen","passwordBuf","toBuf","pbkdf2Params","toWebCryptoAlgorithm","impKey","importKey","deriveBits","ikm","outputByteSize","hkdfParams","prk","hashLen","infoBuf","infoArr","runningOkmLength","previousT","okm","md","valueBytes","toByteString","digest","valueBuf","signingAlgorithm","mac1","mac2","arr1","arr2","getBytes","rand","Uint32Array","putInt32","meta","encKeyByteString","macKeyByteString","parameters","dataBuffer","decipher","finish","rsaParams","impPrivateKey","jwkPrivateKey","exportKey","jwkPublicKeyParams","kty","ext","impPublicKey","modulusLength","publicExponent","generateKey","getRandomValues","buf","subscribers","messageCallback","MEMORY_STORAGE","SECURE_STORAGE","STATE_FACTORY","STATE_SERVICE_USE_CACHE","LOGOUT_CALLBACK","LOCKED_CALLBACK","LOCALES_DIRECTORY","SYSTEM_LANGUAGE","LOG_MAC_FAILURES","JslibServicesModule","useFactory","deps","language","deleteAccount","accountApiService","verificationRequest","controlErrors","keyError","ContainerService","attachToGlobal","SystemService","reloadCallback","reloadInterval","clearClipboardTimeout","clearClipboardTimeoutFunction","startProcessReload","cancelProcessReload","executeProcessReload","inactiveMoreThanSeconds","seconds","doRefresh","biometricLockedFingerprintValidated","clipboardValue","timeoutMs","clearSeconds","clipboardValueNow","readFromClipboard","clearing","clearPendingClipboard","SafariApp","resolveNow","messageId","MAX_SAFE_INTEGER","sendNativeMessage","responseData","BrowserComponentState","BrowserGroupingsComponentState","BrowserSendComponentState","AccountSettings","Account","groupings","AutofillScript","documentUUID","script","properties","autosubmit","AutoFillConstants","UsernameFieldNames","PasswordFieldIgnoreList","ExcludedAutofillTypes","CreditCardAutoFillConstants","CardAttributes","CardAttributesExtended","CardHolderFieldNames","CardHolderFieldNameValues","CardNumberFieldNames","CardNumberFieldNameValues","CardExpiryFieldNames","CardExpiryFieldNameValues","ExpiryMonthFieldNames","ExpiryYearFieldNames","CVVFieldNames","CardBrandFieldNames","MonthAbbr","YearAbbrShort","YearAbbrLong","IdentityAutoFillConstants","IdentityAttributes","FullNameFieldNames","FullNameFieldNameValues","TitleFieldNames","FirstnameFieldNames","MiddlenameFieldNames","LastnameFieldNames","EmailFieldNames","AddressFieldNames","AddressFieldNameValues","Address1FieldNames","Address2FieldNames","Address3FieldNames","PostalCodeFieldNames","CityFieldNames","StateFieldNames","CountryFieldNames","PhoneFieldNames","UserNameFieldNames","CompanyFieldNames","IsoCountries","afghanistan","albania","algeria","andorra","angola","anguilla","antarctica","argentina","armenia","aruba","australia","austria","azerbaijan","bahamas","bahrain","bangladesh","barbados","belarus","belgium","belize","benin","bermuda","bhutan","bolivia","botswana","brazil","bulgaria","burundi","cambodia","cameroon","canada","chad","chile","china","colombia","comoros","congo","croatia","cuba","cyprus","denmark","djibouti","dominica","ecuador","egypt","eritrea","estonia","ethiopia","fiji","finland","france","gabon","gambia","georgia","germany","ghana","gibraltar","greece","greenland","grenada","guadeloupe","guam","guatemala","guernsey","guinea","guyana","haiti","honduras","hungary","iceland","india","indonesia","iraq","ireland","israel","italy","jamaica","japan","jersey","jordan","kazakhstan","kenya","kiribati","kuwait","kyrgyzstan","latvia","lebanon","lesotho","liberia","liechtenstein","lithuania","luxembourg","macao","macedonia","madagascar","malawi","malaysia","maldives","mali","malta","martinique","mauritania","mauritius","mayotte","mexico","moldova","monaco","mongolia","montenegro","montserrat","morocco","mozambique","myanmar","namibia","nauru","nepal","netherlands","nicaragua","niger","nigeria","niue","norway","oman","pakistan","palau","panama","paraguay","peru","philippines","pitcairn","poland","portugal","qatar","reunion","romania","rwanda","samoa","senegal","serbia","seychelles","singapore","slovakia","slovenia","somalia","spain","sudan","suriname","swaziland","sweden","switzerland","taiwan","tajikistan","tanzania","thailand","togo","tokelau","tonga","tunisia","turkey","turkmenistan","tuvalu","uganda","ukraine","uruguay","uzbekistan","vanuatu","venezuela","vietnam","yemen","zambia","zimbabwe","IsoStates","alabama","alaska","arizona","arkansas","california","colorado","connecticut","delaware","florida","hawaii","idaho","illinois","indiana","iowa","kansas","kentucky","louisiana","maine","maryland","massachusetts","michigan","minnesota","mississippi","missouri","montana","nebraska","nevada","ohio","oklahoma","oregon","pennsylvania","tennessee","texas","utah","vermont","virginia","washington","wisconsin","wyoming","IsoProvinces","alberta","manitoba","ontario","quebec","saskatchewan","getFormsWithPasswordFields","formData","passwordFields","loadPasswordFields","formKey","forms","formPasswordFields","pf","uf","findUsernameField","passwords","totpPromise","didAutofill","pd","fillScript","generateFillScript","skipUsernameOnlyFill","onlyEmptyFields","onlyVisibleFields","delay_between_operations","skipLastUsed","Cipher_ClientAutofilled","doAutoFillOnTab","fromCommand","lastLaunchedCipher","doAutoFillActiveTab","getActiveTab","filledFields","fieldNames","hasValue","opid","viewable","matchingIndex","findMatchingFieldIndex","matchingField","fillByOpid","generateLoginFillScript","generateCardFillScript","generateIdentityFillScript","usernames","setFillScriptForFocus","passwordFieldsForForm","passField","elementNumber","fieldIsFuzzyMatch","fillFields","forCustomFieldsOnly","isExcludedType","attr","isFieldMatch","makeScriptAction","selectInfo","siOptions","fieldAttrsContain","maxLength","colonIndex","fullMonth","fullYear","partYear","makeScriptActionWithValue","containsVal","doesContain","filledState","stateLower","isoState","filledCountry","countryLower","isoCountry","excludedTypes","containsOptions","checkValueContains","cipherData","dataProp","fieldProp","dataValue","doFill","canBeHidden","canBeReadOnly","mustBeEmpty","isPassword","valueIsLikePassword","cleanedValue","readonly","htmlID","htmlName","placeholder","autoCompleteType","passwordField","withoutForm","usernameField","names","fieldPropertyIsPrefixMatch","fieldPropertyIsMatch","property","separator","sepIndex","fieldVal","regexParts","csvParts","csvVals","fuzzyMatch","lastField","lastPasswordField","ClientType","BrowserCryptoService","BrowserMessagingService","BrowserMessagingPrivateModeBackgroundService","DialogPromiseExpiration","BrowserPlatformUtilsService","clipboardWriteCallback","biometricCallback","showDialogResolves","passwordDialogResolves","deviceCache","opr","addons","Browser","isEdge","isVivaldi","isIE","isMacAppStore","isPopupOpen","sidebarView","sidebarViewName","lockTimeout","PublicKeyCredential","bodyIsHtml","clearMs","sendMessageToApp","clipboard","writeText","clipboardData","queryCommandSupported","textarea","textContent","execCommand","removeChild","readText","resolveDialogPromise","resolvePasswordDialogPromise","canceled","resolveObj","tryResolve","getBrowserInfo","sidebarAction","getFromSessionMemory","getBypassCache","setInSessionMemory","SyncedItemMetadata","keyValuePair","getBuilder","initializeAsArray","initializer","ctor","SessionSyncer","behaviorSubject","metaData","ignoreNextUpdate","manifest_version","observe","listenForUpdates","updateSession","updateMessageCommand","updateFromMessage","sessionKey","buildFromKeyValuePair","sessionSync","buildOptions","__syncedItemMetadata","__sessionSyncers","buildSyncer","syncer","systemLanguage","localesDirectory","getLocalesJson","_locale","ReplaySubject","supportedTranslationLocales","localeNames","defaultMessages","localeMessages","Intl","Collator","numeric","sensitivity","loadMessages","translate","messagesObj","formattedLocale","locales","placeholders","placeProp","content","replaceToken","replaceContent","getMessage","checkSafari","CommandsBackground","main","processCommand","commandToRetry","shortcut","commands","onCommand","generatePasswordToClipboard","autoFillLogin","openPopup","getTabFromCurrentWindowId","retryMessage","tabSendMessageData","collectPageDetailsForContentScript","ContextMenusBackground","noopCommandSuffix","contextMenus","onClicked","menuItemId","getClickedElement","parentMenuItemId","cipherAction","startAutofillPage","Cipher_ClientCopiedPassword","totpValue","loginToAutoFill","IdleBackground","notificationsService","idleTimer","idleState","idle","idleHandler","newState","onStateChanged","setDetectionInterval","pollIdle","handler","queryState","NativeMessagingBackground","runtimeBackground","resolver","secureSetupResolve","onAdded","connect","port","connecting","connectedCallback","disconnect","sharedSecret","validatingFingerprint","showFingerprintDialog","showWrongUserDialog","onDisconnect","timestamp","encryptMessage","secureCommunication","getResponse","rawMessage","abs","processMessage","sendUnencrypted","NotificationQueueMessageType","NotificationBackground","notificationQueue","cleanupNotificationQueue","getDataForTab","responseCommand","addLogin","changedPassword","removeTabFromNotificationQueue","saveOrUpdateCredentials","saveNever","checkNotificationQueue","doNotificationQueueCheck","currentTab","expires","tabDomain","AddLogin","typeData","isVaultLocked","wasVaultLocked","ChangePassword","loginInfo","loginDomain","normalizedUsername","disabledAddLogin","allowPersonalOwnership","pushAddLoginToQueue","usernameMatches","pushChangePasswordToQueue","changeData","currentPassword","passwordMatches","queueMessage","changePasswordMessage","getDecryptedCipherById","updateCipher","createNewCipher","addLoginMessage","loginModel","newCipher","RuntimeBackground","systemService","pageDetailsToAutoFill","onInstalledReason","lockedVaultPendingNotifications","onInstalled","reason","checkOnInstalled","backgroundMessageListener","isPrivateMode","bitwardenBackgroundMessageListener","closeLoginTab","focusSpecifiedTab","setIcon","refreshBadgeAndMenu","logout","reseedStorage","autofillTimeout","autofillPage","referrer","tabToAutoFill","factory","cachedServices","opts","alwaysInitializeNewService","doNotStoreInitializedService","cryptoFunctionServiceFactory","cryptoFunctionServiceOptions","logServiceFactory","logServiceOptions","encryptServiceFactory","encryptServiceOptions","MemoryStorageService","AbstractChromeStorageService","chromeStorageApi","keyedObj","BrowserLocalStorageService","local","BrowserMemoryStorageService","session","LocalBackedSessionStorageService","keyGenerationService","localStorage","sessionStorage","getLocalSession","getSessionEncKey","sessionEncKey","localSession","setLocalSession","sessionJson","setSessionEncKey","setEncryptedLocalSession","setDecryptedLocalSession","jsonSession","encSession","storedKey","makeEphemeralKey","KeyGenerationService","numBytes","diskStorageServiceFactory","secureStorageServiceFactory","memoryStorageServiceFactory","keyGenerationServiceFactory","stateMigrationServiceFactory","stateMigrationServiceOptions","stateServiceFactory","stateServiceOptions","TabsBackground","notificationBackground","onFocusChanged","focusedWindowId","onActivated","activeInfo","onReplaced","addedTabId","removedTabId","onReplacedRan","onUpdated","changeInfo","onUpdatedRan","WebRequestBackground","pendingAuthRequests","webRequest","onAuthRequired","requestId","resolveAuthCredentials","onCompleted","completeAuthRequest","onErrorOccurred","authCredentials","MainBackground","backgroundWindow","menuOptionsLoaded","services","factoryOptions","nativeMessagingBackground","that","backgroundMessagingService","commandsBackground","tabsBackground","contextMenusBackground","idleBackground","webRequestBackground","bootstrap","getPrivateModeWindows","actionSetIcon","browserAction","onWindowCreated","suffix","forLocked","menuDisabled","contextMenusRemoveAll","buildContextMenu","loadMenuAndUpdateBadgeForNoAccessState","contextMenuReady","buildingContextMenu","contextMenusCreate","contexts","parentId","contextMenuEnabled","loadMenuAndUpdateBadge","actionSetBadgeBackgroundColor","loadLoginContextMenuOptions","theText","loadNoLoginsContextMenuOptions","sidebarActionSetBadgeText","browserActionSetBadgeText","getActiveTabs","loadContextMenuOptions","noLoginsMessage","idSuffix","sanitizeContextMenuTitle","override","syncInternal","lastSyncAgo","scheduleNextSync","syncTimeout","removeAll","theAction","setBadgeBackgroundColor","setBadgeText","setTitle","FileDownloadBuilder","_request","fileType","downloadMethod","fileNameLower","endsWith","BrowserFileDownloadService","msSaveOrOpenBlob","msSaveBlob","createObjectURL","BrowserMessagingPrivateModePopupService","InitService","screen","availHeight","htmlEl","platform","screenLeft","screenTop","LockGuardService","PasswordRepromptComponent","PopupSearchService","mainSearchService","consoleLogService","UnauthGuardService","mainBackground","localBgService","createLocalBgService","bitwardenMain","getBgService","service","ServicesModule","initService","AppModule","positionClass","bootstrapModule","preserveWhitespaces","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","O","chunkIds","notFulfilled","Infinity","fulfilled","getter","__esModule","definition","defineProperty","enumerable","globalThis","Function","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}